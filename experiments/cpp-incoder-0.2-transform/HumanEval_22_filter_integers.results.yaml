language: cpp
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto i : values) {\n        if (std::holds_alternative<long>(i))\
    \ {\n            out.push_back(std::get<long>(i));\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjdvpaimv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjdvpaimv.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(i))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpjdvpaimv.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjdvpaimv.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(i)) {\n      |\
    \                                           ^\n/tmp/tmpjdvpaimv.cpp:12:43: error:\
    \ no matching function for call to \u2018get<long int>(std::any&)\u2019\n   12\
    \ |             out.push_back(std::get<long>(i));\n      |                   \
    \                        ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjdvpaimv.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get(std::pair<_Tp1, _Tp2>&& "
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu_rq76d9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpu_rq76d9.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpu_rq76d9.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu_rq76d9.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchb7mruq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpchb7mruq.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpchb7mruq.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpchb7mruq.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxy3rh1q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqxy3rh1q.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqxy3rh1q.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqxy3rh1q.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkwpgjoav.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpkwpgjoav.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpkwpgjoav.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpkwpgjoav.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            out.push_back(value.as<long>());\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzs4c75xi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpzs4c75xi.cpp:12:33: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                 ^~\n/tmp/tmpzs4c75xi.cpp:12:36: error:\
    \ expected primary-expression before \u2018long\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                    ^~~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk4v9yg91.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk4v9yg91.cpp:12:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   12 |             out.push_back(v);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk4v9yg91.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto item : std::get<std::vector<long>>(value)) {\n     \
    \           if(std::holds_alternative<long>(item)) {\n                    result.push_back(std::get<long>(item));\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0dc18iv9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0dc18iv9.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp0dc18iv9.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0dc18iv9.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmp0dc18iv9.cpp:12:62:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             for(auto item : std::get<std::vector<long>>(value))\
    \ {\n      |                                                              ^\n\
    In file included from /usr/include/c++/9/algorithm:60,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp0dc18iv9.cpp:2:\n/usr/include/c++/9/utility:219:5: note: candidate:\
    \ \u2018template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename\
    \ std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned in"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(int)) {\n   \
    \         out.push_back((long)v.as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6xe6d0j0.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6xe6d0j0.cpp:12:35: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back((long)v.as<int>());\n\
    \      |                                   ^~\n/tmp/tmp6xe6d0j0.cpp:12:38: error:\
    \ expected primary-expression before \u2018int\u2019\n   12 |             out.push_back((long)v.as<int>());\n\
    \      |                                      ^~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: add support for std::map<std::string,std::string>\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: add support for std::vector<std::map<std::string,std::string>>\n     \
    \   } else {\n            throw std::runtime_error(\"Unsupported type\");\n  \
    \      }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6bsc468k.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp6bsc468k.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp6bsc468k.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp6bsc468k.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp6bsc468k.cpp:13:57:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<uint64_t>(value)) {\n     \
    \ |                                                         ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp6bsc468k.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp6bsc468k.cpp:13:57:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                         ^\n/tmp/tmp6bsc468k.cpp:15:55:\
    \ error"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for (auto val : std::get<std::vector<long>>(value)) {\n     \
    \           result.push_back(val);\n            }\n        } else if (std::holds_alternative<std::vector<std::map<long,long>>>(value))\
    \ {\n            for (auto val : std::get<std::vector<std::map<long,long>>>(value))\
    \ {\n                result.push_back(std::get<long>(val));\n            }\n \
    \       } else if (std::holds_alternative<std::map<long,long>>(value)) {\n   \
    \         for (auto val : std::get<std::map<long,long>>(value)) {\n          \
    \      result.push_back(std::get<long>(val));\n            }\n        } else if\
    \ (std::holds_alternative<std::string>(value)) {\n            result.push_back(std::get<std::string>(value));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            for (auto val : std::get<std::vector<std::any>>(value)) {\n     \
    \           result.push_back(filter_integers(val));\n            }\n        }\
    \ else {\n            result.push_back(std::any_cast<long>(value));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmptrolt2m8.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmptrolt2m8.cpp:11:60: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if (std::holds_alternative<std::vector<long>>(value)) {\n  \
    \    |                                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmptrolt2m8.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmptrolt2m8.cpp:11:60:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                            ^\n/tmp/tmptrolt2m8.cpp:12:62:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             for (auto val : std::get<std::vector<long>>(value))\
    \ {\n      |                                                              ^\n\
    In file included from /usr/include/c++/9/algorithm:60,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmptrolt2m8.cpp:2:\n/usr/include/c++/9/utility:219:5: note: candidate:\
    \ \u2018template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename\
    \ std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigne"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpja36o7w7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpja36o7w7.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpja36o7w7.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n/tmp/tmpja36o7w7.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |   "
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0n0nu0ii.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0n0nu0ii.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp0n0nu0ii.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0n0nu0ii.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp0n0nu0ii.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp0n0nu0ii.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0n0nu0ii.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmp0n0nu0ii.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxy3rh1q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqxy3rh1q.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqxy3rh1q.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqxy3rh1q.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_z4fu1zu.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_z4fu1zu.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(v))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp_z4fu1zu.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_z4fu1zu.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(v)) {\n      |\
    \                                           ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (v.type() == typeid(int)) {\n\
    \            out.push_back((long)v.as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpa52z8tl3.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpa52z8tl3.cpp:12:35: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back((long)v.as<int>());\n\
    \      |                                   ^~\n/tmp/tmpa52z8tl3.cpp:12:38: error:\
    \ expected primary-expression before \u2018int\u2019\n   12 |             out.push_back((long)v.as<int>());\n\
    \      |                                      ^~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto item : std::get<std::vector<long>>(value)) {\n     \
    \           if(std::holds_alternative<long>(item)) {\n                    result.push_back(std::get<long>(item));\n\
    \                }\n            }\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0dc18iv9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp0dc18iv9.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp0dc18iv9.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0dc18iv9.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmp0dc18iv9.cpp:12:62:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             for(auto item : std::get<std::vector<long>>(value))\
    \ {\n      |                                                              ^\n\
    In file included from /usr/include/c++/9/algorithm:60,\n                 from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n                 from\
    \ /tmp/tmp0dc18iv9.cpp:2:\n/usr/include/c++/9/utility:219:5: note: candidate:\
    \ \u2018template<long unsigned int _Int, class _Tp1, class _Tp2> constexpr typename\
    \ std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned in"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto &v : values) {\n        if (std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_z4fu1zu.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_z4fu1zu.cpp:11:43: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(v))\
    \ {\n      |                                           ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp_z4fu1zu.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_z4fu1zu.cpp:11:43:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(v)) {\n      |\
    \                                           ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchb7mruq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpchb7mruq.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpchb7mruq.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpchb7mruq.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            auto vec = std::get<std::vector<long>>(v);\n            for(auto\
    \ i: vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(v))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(v);\n\
    \            for(auto i: vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(v))\
    \ {\n            auto map = std::get<std::map<long,long>>(v);\n            for(auto\
    \ i: map) {\n                result.push_back(i.first);\n            }\n     \
    \   }\n        else if(std::holds_alternative<std::set<long>>(v)) {\n        \
    \    auto set = std::get<std::set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::unordered_set<long>>(v)) {\n            auto\
    \ set = std::get<std::unordered_set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::string>(v)) {\n            result.push_back(std::get<std::string>(v));\n\
    \        }\n        else if(std::holds_alternative<bool>(v)) {\n            result.push_back(std::get<bool>(v));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(v))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(v);\n\
    \            for(auto i: vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(v))\
    \ {\n            auto map = std::get<std::map<long,long>>(v);\n            for(auto\
    \ i: map) {\n                result.push_back(i.first);\n            }\n     \
    \   }\n        else if(std::holds_alternative<std::set<long>>(v)) {\n        \
    \    auto set = std::get<std::set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::unordered_set<long>>(v)) {\n            auto\
    \ set = std::get<std::unordered_set<long>>(v);\n            for(auto i: set) {\n\
    \                result.push_back(i);\n            }\n        }\n        else\
    \ if(std::holds_alternative<std::vector<std::pair<long,long>>>(v)) {\n       \
    \     auto vec = std::get<std::vector<std::\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxee58wna.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpxee58wna.cpp:11:55: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(v)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpxee58wna.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxee58wna.cpp:11:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n      |                                                       ^\n/tmp/tmpxee58wna.cpp:12:53:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             auto vec = std::get<std::vector<long>>(v);\n\
    \      |                                                     ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpxee58wna.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> cons"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(v)) {\n         \
    \   out.push_back(std::any_cast<std::vector<long>>(v));\n        } else {\n  \
    \          throw std::runtime_error(\"Unsupported type\");\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpr0s_h6b7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpr0s_h6b7.cpp:11:45: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(v))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpr0s_h6b7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr0s_h6b7.cpp:11:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(v)) {\n     \
    \ |                                             ^\n/tmp/tmpr0s_h6b7.cpp:13:51:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(v)) {\n      |    \
    \                                               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpr0s_h6b7.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr0s_h6b7.cpp:13:51:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(v)) {\n\
    \      |                                                   ^\n/tmp/tmpr0s_h6b7.cpp:15:56:\
    \ error: no matching function for call to \u2018hold"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it : values) {\n        if (std::holds_alternative<long>(it))\
    \ {\n            out.push_back(std::any_cast<long>(it));\n        }\n    }\n \
    \   return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8u3hl_gg.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8u3hl_gg.cpp:11:44: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(it))\
    \ {\n      |                                            ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp8u3hl_gg.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8u3hl_gg.cpp:11:44:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(it)) {\n      |\
    \                                            ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpl0etqoul.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpl0etqoul.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpl0etqoul.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpl0etqoul.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmpl0etqoul.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpl0etqoul.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            for(auto val : std::get<std::vector<long>>(value)) {\n      \
    \          result.push_back(val);\n            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            for(auto val : std::get<std::vector<std::pair<long,long>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            for(auto val : std::get<std::map<long,long>>(value)) {\n    \
    \            result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            for(auto val : std::get<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second);\n            }\n       \
    \ }\n        else if(std::holds_alternative<std::set<long>>(value)) {\n      \
    \      for(auto val : std::get<std::set<long>>(value)) {\n                result.push_back(val);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,long>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,long>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second);\n            }\n       \
    \ }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,std::pair<long,long>>>>>(value))\
    \ {\n            for(auto val : std::get<std::set<std::pair<long,std::pair<long,std::pair<long,long>>>>>(value))\
    \ {\n                result.push_back(val.first);\n                result.push_back(val.second.first);\n\
    \                result.push_back(val.second.second.first);\n                result.push_back(val.second.second.second);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpezugjiey.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpezugjiey.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpezugjiey.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpezugjiey.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpezugjiey.cpp:12:61:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             for(auto val : std::get<std::vector<long>>(value))\
    \ {\n      |                                                             ^\nIn\
    \ file included from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpezugjiey.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int "
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxy3rh1q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqxy3rh1q.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqxy3rh1q.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqxy3rh1q.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            result.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  result.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if (std::holds_alternative<std::vector<long>>(value)) {\n    \
    \        result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type\");\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk957oese.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk957oese.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if (std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk957oese.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk957oese.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<int64_t>(value)) {\n\
    \      |                                                  ^\n/tmp/tmpk957oese.cpp:13:58:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if (std::holds_alternative<uint64_t>(value)) {\n    \
    \  |                                                          ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk957oese.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk957oese.cpp:13:58:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if (std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                          ^\n/tmp/tmpk957oese.cpp:15:5"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdwpuz0bi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdwpuz0bi.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpdwpuz0bi.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdwpuz0bi.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(v)); // TODO:\
    \ handle lists\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzcaemvnd.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpzcaemvnd.cpp:11:45: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(v))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpzcaemvnd.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzcaemvnd.cpp:11:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(v)) {\n     \
    \ |                                             ^\n/tmp/tmpzcaemvnd.cpp:13:51:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(v)) {\n      |    \
    \                                               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpzcaemvnd.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzcaemvnd.cpp:13:51:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(v)) {\n\
    \      |                                                   ^\n/tmp/tmpzcaemvnd.cpp:15:56:\
    \ error: no matching function for call to \u2018hold"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<long>>(value).begin(),\
    \ std::get<std::vector<long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::map<long,long>>(value).begin(),\
    \ std::get<std::map<long,long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::set<long>>(value).begin(),\
    \ std::get<std::set<long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::unordered_set<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::unordered_set<long>>(value).begin(),\
    \ std::get<std::unordered_set<long>>(value).end());\n        } else if(std::holds_alternative<std::unordered_map<long,long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::unordered_map<long,long>>(value).begin(),\
    \ std::get<std::unordered_map<long,long>>(value).end());\n        } else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::vector<std::pair<long,long>>>(value).begin(),\
    \ std::get<std::vector<std::pair<long,long>>>(value).end());\n        } else if(std::holds_alternative<std::list<long>>(value))\
    \ {\n            out.insert(out.end(), std::get<std::list<long>>(value).begin(),\
    \ std::get<std::list<long>>\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpik6arz23.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpik6arz23.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpik6arz23.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpik6arz23.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpik6arz23.cpp:12:68:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             out.insert(out.end(), std::get<std::vector<long>>(value).begin(),\
    \ std::get<std::vector<long>>(value).end());\n      |                        \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpik6arz23.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(v)->size());\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(v));\n   \
    \     }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu1lf42tm.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpu1lf42tm.cpp:11:55: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(v)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpu1lf42tm.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu1lf42tm.cpp:11:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n      |                                                       ^\n/tmp/tmpu1lf42tm.cpp:12:65:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             out.emplace_back(std::any_cast<std::vector<long>>(v)->size());\n\
    \      |                                                                 ^~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            auto map = std::get<std::map<long,long>>(value);\n          \
    \  for(auto i : map) {\n                result.push_back(i.first);\n         \
    \   }\n        }\n        else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            auto set = std::get<std::set<long>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::string>(value)) {\n            result.push_back(std::stoi(value));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::any>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::any>>(value);\n        \
    \    for(auto i : vec) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::any>>(value))\
    \ {\n            auto set = std::get<std::set<std::any>>(value);\n           \
    \ for(auto i : set) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<std::any,std::any>>(value))\
    \ {\n            auto map = std::get<std::map<std::any,std::any>>(value);\n  \
    \          for(auto i : map) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::any>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::any>>(value);\n        \
    \    for(auto i : vec) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::any>>(value))\
    \ {\n            auto set = std::get<std::set<std::any>>(value);\n           \
    \ for(auto i : set) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<std::any,std::any>>(value))\
    \ {\n            auto map = std::get<std::map<std::any,std::any>>(value);\n  \
    \          for(auto i : map) {\n                result.push_back(filter_integers(i));\n\
    \            }\n        }\n\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn2cyd_ze.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpn2cyd_ze.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpn2cyd_ze.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn2cyd_ze.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpn2cyd_ze.cpp:12:57:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             auto vec = std::get<std::vector<long>>(value);\n\
    \      |                                                         ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpn2cyd_ze.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, clas"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::map<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::map<long,long>>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::vector<std::any>>(value)->at(0));\n\
    \        } else if (std::holds_alternative<std::vector<std::any>>(value)) {\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp22py25q_.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp22py25q_.cpp:11:60: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if (std::holds_alternative<std::vector<long>>(value)) {\n  \
    \    |                                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp22py25q_.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp22py25q_.cpp:11:60:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                            ^\n/tmp/tmp22py25q_.cpp:12:69:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \      |                                                                     ^~\n\
    /tmp/tmp22py25q_.cpp:13:82: error: no matching function for call to \u2018holds_alternative<std::vector<std::map<long\
    \ int, long int, std::less<long int>, std::allocator<std::pair<const long int,\
    \ long int> > >, std::allocator<std::map<long int, long int, std::less<long int>,\
    \ std::allocator<std::pair<const long int, long int> > > > > >(std::any&)\u2019\
    \n   13 |         } else if (std::holds_alternative<std::vector<std::map<long,long>>>(value))\
    \ {\n      |                                                                 \
    \                 ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmp22py25q"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::get<long>(value));\n        }\n    }\n   \
    \ return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzh00mtz6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpzh00mtz6.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpzh00mtz6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzh00mtz6.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n/tmp/tmpzh00mtz6.cpp:12:47:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             out.push_back(std::get<long>(value));\n      |         \
    \                                      ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzh00mtz6.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get("
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unsupported type\");\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqfbm8coa.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqfbm8coa.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqfbm8coa.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqfbm8coa.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmpqfbm8coa.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpqfbm8coa.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqfbm8coa.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmpqfbm8coa.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk4v9yg91.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk4v9yg91.cpp:12:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   12 |             out.push_back(v);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk4v9yg91.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchb7mruq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpchb7mruq.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpchb7mruq.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpchb7mruq.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphaa9gvu_.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphaa9gvu_.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmphaa9gvu_.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphaa9gvu_.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxy3rh1q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqxy3rh1q.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqxy3rh1q.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqxy3rh1q.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unsupported type\");\n      \
    \  }\n    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppuc4tick.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmppuc4tick.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmppuc4tick.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmppuc4tick.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmppuc4tick.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmppuc4tick.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmppuc4tick.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmppuc4tick.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        } else if\
    \ (std::holds_alternative<std::map<long,long>>(value)) {\n            auto map\
    \ = std::any_cast<std::map<long,long>>(value);\n            for (auto it = map.begin();\
    \ it != map.end(); ++it) {\n                out.push_back(it->first);\n      \
    \      }\n        } else if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::any_cast<std::vector<long>>(value);\n       \
    \     for (auto it = vec.begin(); it != vec.end(); ++it) {\n                out.push_back(*it);\n\
    \            }\n        } else {\n            out.push_back(0);\n        }\n \
    \   }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpjxs76pxm.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpjxs76pxm.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpjxs76pxm.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjxs76pxm.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n/tmp/tmpjxs76pxm.cpp:13:69:\
    \ error: no matching function for call to \u2018holds_alternative<std::map<long\
    \ int, long int, std::less<long int>, std::allocator<std::pair<const long int,\
    \ long int> > > >(std::any&)\u2019\n   13 |         } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n      |                                                                 \
    \    ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpjxs76pxm.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpjxs76pxm.cpp:13:69:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if (std::holds_alternative<std:"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (value.type() == typeid(long))\
    \ {\n            out.push_back(value.as<long>());\n        }\n    }\n    return\
    \ out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxwolyqbm.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpxwolyqbm.cpp:12:33: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                 ^~\n/tmp/tmpxwolyqbm.cpp:12:36: error:\
    \ expected primary-expression before \u2018long\u2019\n   12 |             out.push_back(value.as<long>());\n\
    \      |                                    ^~~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            result.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<int32_t>(value)) {\n            result.push_back(std::any_cast<int32_t>(value));\n\
    \        } else if(std::holds_alternative<uint32_t>(value)) {\n            result.push_back(std::any_cast<uint32_t>(value));\n\
    \        } else if(std::holds_alternative<int16_t>(value)) {\n            result.push_back(std::any_cast<int16_t>(value));\n\
    \        } else if(std::holds_alternative<uint16_t>(value)) {\n            result.push_back(std::any_cast<uint16_t>(value));\n\
    \        } else if(std::holds_alternative<int8_t>(value)) {\n            result.push_back(std::any_cast<int8_t>(value));\n\
    \        } else if(std::holds_alternative<uint8_t>(value)) {\n            result.push_back(std::any_cast<uint8_t>(value));\n\
    \        } else if(std::holds_alternative<bool>(value)) {\n            result.push_back(std::any_cast<bool>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type for filter_integers:\
    \ \" + std::to_string(value.get_type()));\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7khexjy.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp_7khexjy.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp_7khexjy.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_7khexjy.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp_7khexjy.cpp:13:57:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<uint64_t>(value)) {\n     \
    \ |                                                         ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp_7khexjy.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_7khexjy.cpp:13:57:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                         ^\n/tmp/tmp_7khexjy.cpp:15:56:\
    \ error"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        if (val && val->is_int()) {\n \
    \           out.push_back(val->as<int>());\n        }\n    }\n    return out;\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeq22vqqz.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpeq22vqqz.cpp:11:23: error: base operand of \u2018->\u2019 has non-pointer\
    \ type \u2018std::any\u2019\n   11 |         if (val && val->is_int()) {\n   \
    \   |                       ^~\n/tmp/tmpeq22vqqz.cpp:12:30: error: base operand\
    \ of \u2018->\u2019 has non-pointer type \u2018std::any\u2019\n   12 |       \
    \      out.push_back(val->as<int>());\n      |                              ^~\n\
    /tmp/tmpeq22vqqz.cpp:12:35: error: expected primary-expression before \u2018int\u2019\
    \n   12 |             out.push_back(val->as<int>());\n      |                \
    \                   ^~~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<int32_t>(value)) {\n            out.push_back(std::any_cast<int32_t>(value));\n\
    \        } else if (std::holds_alternative<uint32_t>(value)) {\n            out.push_back(std::any_cast<uint32_t>(value));\n\
    \        } else if (std::holds_alternative<int16_t>(value)) {\n            out.push_back(std::any_cast<int16_t>(value));\n\
    \        } else if (std::holds_alternative<uint16_t>(value)) {\n            out.push_back(std::any_cast<uint16_t>(value));\n\
    \        } else if (std::holds_alternative<int8_t>(value)) {\n            out.push_back(std::any_cast<int8_t>(value));\n\
    \        } else if (std::holds_alternative<uint8_t>(value)) {\n            out.push_back(std::any_cast<uint8_t>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            out.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  out.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if (std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unsupported type\");\n        }\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpufjolq7c.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpufjolq7c.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if (std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpufjolq7c.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpufjolq7c.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<int64_t>(value)) {\n\
    \      |                                                  ^\n/tmp/tmpufjolq7c.cpp:13:58:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if (std::holds_alternative<uint64_t>(value)) {\n    \
    \  |                                                          ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpufjolq7c.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpufjolq7c.cpp:13:58:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if (std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                          ^\n/tmp/tmpufjolq7c.cpp:15:5"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(v.type() == typeid(long)) {\n\
    \            out.push_back(v);\n        }\n    }\n    return out;\n}\nint main()\
    \ {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpv_398ie5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpv_398ie5.cpp:12:28: error: no matching function for call to \u2018\
    std::vector<long int>::push_back(std::any&)\u2019\n   12 |             out.push_back(v);\n\
    \      |                            ^\nIn file included from /usr/include/c++/9/vector:67,\n\
    \                 from /usr/include/c++/9/functional:62,\n                 from\
    \ /usr/include/c++/9/pstl/glue_algorithm_defs.h:13,\n                 from /usr/include/c++/9/algorithm:71,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpv_398ie5.cpp:2:\n/usr/include/c++/9/bits/stl_vector.h:1184:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(const value_type&)\
    \ [with _Tp = long int; _Alloc = std::allocator<long int>; std::vector<_Tp, _Alloc>::value_type\
    \ = long int]\u2019\n 1184 |       push_back(const value_type& __x)\n      | \
    \      ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1184:35: note:   no known\
    \ conversion for argument 1 from \u2018std::any\u2019 to \u2018const value_type&\u2019\
    \ {aka \u2018const long int&\u2019}\n 1184 |       push_back(const value_type&\
    \ __x)\n      |                 ~~~~~~~~~~~~~~~~~~^~~\n/usr/include/c++/9/bits/stl_vector.h:1200:7:\
    \ note: candidate: \u2018void std::vector<_Tp, _Alloc>::push_back(std::vector<_Tp,\
    \ _Alloc>::value_type&&) [with _Tp = long int; _Alloc = std::allocator<long int>;\
    \ std::vector<_Tp, _Alloc>::value_type = long int]\u2019\n 1200 |       push_back(value_type&&\
    \ __x)\n      |       ^~~~~~~~~\n/usr/include/c++/9/bits/stl_vector.h:1200:30:\
    \ note:   no known conversion for argument 1 from \u2018std::any\u2019 to \u2018\
    std::vector<long int>::value_type&&\u2019 {aka \u2018long int&&\u2019}\n 1200\
    \ |       push_back(value_type&& __x)\n      |                 ~~~~~~~~~~~~~^~~\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxy3rh1q.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpqxy3rh1q.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpqxy3rh1q.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpqxy3rh1q.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<long>(value)) {\n            result.push_back(std::get<long>(value));\n\
    \        }\n        else {\n            throw std::runtime_error(\"Invalid value\
    \ type\");\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpm_7iy1jp.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpm_7iy1jp.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpm_7iy1jp.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpm_7iy1jp.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpm_7iy1jp.cpp:12:57:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             auto vec = std::get<std::vector<long>>(value);\n\
    \      |                                                         ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpm_7iy1jp.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, clas"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphgxt2kru.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphgxt2kru.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphgxt2kru.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n/tmp/tmphgxt2kru.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphgxt2kru.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     ge"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        auto pyval = py::cast(val);\n \
    \       if (pyval.is(py::int_)) {\n            out.push_back(pyval.ptr());\n \
    \       }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp7sv67vpv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp7sv67vpv.cpp:11:22: error: \u2018py\u2019 has not been declared\n \
    \  11 |         auto pyval = py::cast(val);\n      |                      ^~\n\
    /tmp/tmp7sv67vpv.cpp:12:22: error: \u2018py\u2019 has not been declared\n   12\
    \ |         if (pyval.is(py::int_)) {\n      |                      ^~\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if (std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if (std::holds_alternative<double>(value)) {\n            out.push_back(std::any_cast<double>(value));\n\
    \        } else if (std::holds_alternative<bool>(value)) {\n            out.push_back(std::any_cast<bool>(value));\n\
    \        } else if (std::holds_alternative<std::string>(value)) {\n          \
    \  out.push_back(std::any_cast<std::string>(value));\n        } else if (std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if (std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unknown type\");\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsze2c_x1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpsze2c_x1.cpp:11:50: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if (std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                  ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpsze2c_x1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsze2c_x1.cpp:11:50:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<int64_t>(value)) {\n\
    \      |                                                  ^\n/tmp/tmpsze2c_x1.cpp:13:58:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if (std::holds_alternative<uint64_t>(value)) {\n    \
    \  |                                                          ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpsze2c_x1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpsze2c_x1.cpp:13:58:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if (std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                          ^\n/tmp/tmpsze2c_x1.cpp:15:5"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprj62ervr.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmprj62ervr.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmprj62ervr.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprj62ervr.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(v.type() == typeid(int)) {\n\
    \            result.push_back((long)v.as<int>());\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphl2yft9l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphl2yft9l.cpp:12:38: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             result.push_back((long)v.as<int>());\n\
    \      |                                      ^~\n/tmp/tmphl2yft9l.cpp:12:41:\
    \ error: expected primary-expression before \u2018int\u2019\n   12 |         \
    \    result.push_back((long)v.as<int>());\n      |                           \
    \              ^~~\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(v)->at(0));\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(v));\n   \
    \     }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprnehmlvy.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmprnehmlvy.cpp:11:55: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(v)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmprnehmlvy.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprnehmlvy.cpp:11:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n      |                                                       ^\n/tmp/tmprnehmlvy.cpp:12:65:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             out.emplace_back(std::any_cast<std::vector<long>>(v)->at(0));\n\
    \      |                                                                 ^~\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto it = values.begin(); it != values.end(); ++it) {\n      \
    \  if(std::holds_alternative<long>(*it)) {\n            out.push_back(std::get<long>(*it));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpmwr_c8bp.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpmwr_c8bp.cpp:11:44: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(*it))\
    \ {\n      |                                            ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpmwr_c8bp.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmwr_c8bp.cpp:11:44:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(*it)) {\n      |\
    \                                            ^\n/tmp/tmpmwr_c8bp.cpp:12:45: error:\
    \ no matching function for call to \u2018get<long int>(std::any&)\u2019\n   12\
    \ |             out.push_back(std::get<long>(*it));\n      |                 \
    \                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpmwr_c8bp.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |     get(std::pair<_Tp1, "
  stdout: ''
  timestamp: 1660108411
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto it = values.begin(); it != values.end(); ++it) {\n     \
    \   auto val = std::any_cast<long>(*it);\n        if (val != std::any_cast<long>(-1))\
    \ {\n            out.push_back(val);\n        }\n    }\n    return out;\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::bad_any_cast'\n  what():\
    \  bad any_cast\n"
  stdout: ''
  timestamp: 1660108412
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            out.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<uint64_t>(value)) {\n            out.push_back(std::any_cast<uint64_t>(value));\n\
    \        } else if(std::holds_alternative<double>(value)) {\n            out.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ out.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::map<long,long>>(value));\n \
    \       } else if(std::holds_alternative<std::vector<long>>(value)) {\n      \
    \      out.push_back(std::any_cast<std::vector<long>>(value));\n        } else\
    \ {\n            throw std::runtime_error(\"Unsupported type\");\n        }\n\
    \    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3aky6t3t.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp3aky6t3t.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp3aky6t3t.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3aky6t3t.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp3aky6t3t.cpp:13:57:\
    \ error: no matching function for call to \u2018holds_alternative<uint64_t>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<uint64_t>(value)) {\n     \
    \ |                                                         ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp3aky6t3t.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3aky6t3t.cpp:13:57:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<uint64_t>(value))\
    \ {\n      |                                                         ^\n/tmp/tmp3aky6t3t.cpp:15:55:\
    \ error"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            auto vec = std::get<std::vector<long>>(value);\n            for(auto\
    \ i : vec) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            auto map = std::get<std::map<long,long>>(value);\n          \
    \  for(auto i : map) {\n                result.push_back(i.first);\n         \
    \   }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<long,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::vector<std::pair<std::string,long>>>(value))\
    \ {\n            auto vec = std::get<std::vector<std::pair<std::string,long>>>(value);\n\
    \            for(auto i : vec) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<long>>(value))\
    \ {\n            auto set = std::get<std::set<long>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::set<std::string>>(value)) {\n   \
    \         auto set = std::get<std::set<std::string>>(value);\n            for(auto\
    \ i : set) {\n                result.push_back(i);\n            }\n        }\n\
    \        else if(std::holds_alternative<std::set<std::pair<long,long>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<long,long>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<std::string,long>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<std::string,long>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::pair<std::string,std::string>>>(value))\
    \ {\n            auto set = std::get<std::set<std::pair<std::string,std::string>>>(value);\n\
    \            for(auto i : set) {\n                result.push_back(i.first);\n\
    \            }\n        }\n        else if(std::holds_alternative<std::set<std::\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpur2wwdi5.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpur2wwdi5.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpur2wwdi5.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpur2wwdi5.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpur2wwdi5.cpp:12:57:\
    \ error: no matching function for call to \u2018get<std::vector<long int, std::allocator<long\
    \ int> > >(std::any&)\u2019\n   12 |             auto vec = std::get<std::vector<long>>(value);\n\
    \      |                                                         ^\nIn file included\
    \ from /usr/include/c++/9/algorithm:60,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpur2wwdi5.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, clas"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unsupported type\");\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzcl87c_e.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpzcl87c_e.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpzcl87c_e.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzcl87c_e.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmpzcl87c_e.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpzcl87c_e.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpzcl87c_e.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmpzcl87c_e.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)[0]);\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<\n}\nint\
    \ main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi51tx7z7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpi51tx7z7.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpi51tx7z7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpi51tx7z7.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpi51tx7z7.cpp:14:80:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<std::pair<long\
    \ int, long int>, std::allocator<std::pair<long int, long int> > > >(std::any&)\u2019\
    \n   14 |         else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n      |                                                                 \
    \               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpi51tx7z7.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpi51tx7z7.cpp:14:80:\
    \ note:   \u2018std::any\u2019 is not derive"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,long>>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,long>>>>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,long>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value)[0]);\n\
    \        } else if (std::holds_alternative<std::vector<std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,std::pair<long,long>>>>>&>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,std::pair<long,std::pair<long,std::\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeoqkdy3y.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpeoqkdy3y.cpp:11:60: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if (std::holds_alternative<std::vector<long>>(value)) {\n  \
    \    |                                                            ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpeoqkdy3y.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpeoqkdy3y.cpp:11:60:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                            ^\n/tmp/tmpeoqkdy3y.cpp:13:83:\
    \ error: no matching function for call to \u2018holds_alternative<std::vector<std::pair<long\
    \ int, long int>, std::allocator<std::pair<long int, long int> > > >(std::any&)\u2019\
    \n   13 |         } else if (std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n      |                                                                 \
    \                  ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpeoqkdy3y.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpeoqkdy3y.cpp:13:83:\
    \ note:   \u2018std::any\u2019 is "
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpja36o7w7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpja36o7w7.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpja36o7w7.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n/tmp/tmpja36o7w7.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |   "
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1myr192y.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1myr192y.cpp:11:45: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(v))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp1myr192y.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1myr192y.cpp:11:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(v)) {\n     \
    \ |                                             ^\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpn00ppbfk.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpn00ppbfk.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpn00ppbfk.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpn00ppbfk.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpn00ppbfk.cpp:12:66:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             out.push_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \      |                                                                  ^~\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)[0]);\n\
    \        } else {\n            out.emplace_back(std::any_cast<long>(value));\n\
    \        }\n    }\n    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpu_rq76d9.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpu_rq76d9.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpu_rq76d9.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpu_rq76d9.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::pair<long,long>>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::map<long,long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::set<long>>(value)) {\n\
    \            out.emplace_back(std::any_cast<std::set<long>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::string>>(value))\
    \ {\n            out.emplace_back(std::any_cast<std::vector<std::string>>(value)->at(0));\n\
    \        }\n        else if(std::holds_alternative<std::vector<std::tuple<long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long,long\n\
    }\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmadt0951.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpmadt0951.cpp:11:59: error: no matching function for call to \u2018\
    holds_alternative<std::vector<long int, std::allocator<long int> > >(std::any&)\u2019\
    \n   11 |         if(std::holds_alternative<std::vector<long>>(value)) {\n   \
    \   |                                                           ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpmadt0951.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpmadt0951.cpp:11:59:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n      |                                                           ^\n/tmp/tmpmadt0951.cpp:12:69:\
    \ error: base operand of \u2018->\u2019 has non-pointer type \u2018std::vector<long\
    \ int>\u2019\n   12 |             out.emplace_back(std::any_cast<std::vector<long>>(value)->at(0));\n\
    \      |                                                                     ^~\n\
    /tmp/tmpmadt0951.cpp:14:80: error: no matching function for call to \u2018holds_alternative<std::vector<std::pair<long\
    \ int, long int>, std::allocator<std::pair<long int, long int> > > >(std::any&)\u2019\
    \n   14 |         else if(std::holds_alternative<std::vector<std::pair<long,long>>>(value))\
    \ {\n      |                                                                 \
    \               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpmadt0951.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1tf_r2j1.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1tf_r2j1.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1tf_r2j1.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1tf_r2j1.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\n\
    \        } else if(std::holds_alternative<std::vector<long>>(value)) {\n     \
    \       result.push_back(std::any_cast<std::vector<long>>(value));\n        }\
    \ else {\n            throw std::runtime_error(\"Unknown type\");\n        }\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8oi750h2.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp8oi750h2.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp8oi750h2.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8oi750h2.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp8oi750h2.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp8oi750h2.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp8oi750h2.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmp8oi750h2.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            out.push_back(std::any_cast<long>(value));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp1obdca0m.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp1obdca0m.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp1obdca0m.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp1obdca0m.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for (auto val : values) {\n        if (std::holds_alternative<long>(val))\
    \ {\n            out.push_back(std::any_cast<long>(val));\n        }\n    }\n\
    \    return out;\n}\nint main() {\n    auto candidate = filter_integers;\n   \
    \ assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n   \
    \ assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphlg3ws4b.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphlg3ws4b.cpp:11:45: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(val))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmphlg3ws4b.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphlg3ws4b.cpp:11:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(val)) {\n     \
    \ |                                             ^\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchb7mruq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpchb7mruq.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpchb7mruq.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpchb7mruq.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdwpuz0bi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdwpuz0bi.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpdwpuz0bi.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdwpuz0bi.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdwpuz0bi.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpdwpuz0bi.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpdwpuz0bi.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpdwpuz0bi.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto &v : values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphaa9gvu_.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmphaa9gvu_.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmphaa9gvu_.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmphaa9gvu_.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::get<long>(value));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpja36o7w7.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpja36o7w7.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpja36o7w7.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n/tmp/tmpja36o7w7.cpp:12:50:\
    \ error: no matching function for call to \u2018get<long int>(std::any&)\u2019\
    \n   12 |             result.push_back(std::get<long>(value));\n      |      \
    \                                            ^\nIn file included from /usr/include/c++/9/algorithm:60,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpja36o7w7.cpp:2:\n/usr/include/c++/9/utility:219:5:\
    \ note: candidate: \u2018template<long unsigned int _Int, class _Tp1, class _Tp2>\
    \ constexpr typename std::tuple_element<_Int, std::pair<_Tp1, _Tp2> >::type& std::get(std::pair<_Tp1,\
    \ _Tp2>&)\u2019\n  219 |     get(std::pair<_Tp1, _Tp2>& __in) noexcept\n     \
    \ |     ^~~\n/usr/include/c++/9/utility:219:5: note:   template argument deduction/substitution\
    \ failed:\n/usr/include/c++/9/utility:224:5: note: candidate: \u2018template<long\
    \ unsigned int _Int, class _Tp1, class _Tp2> constexpr typename std::tuple_element<_Int,\
    \ std::pair<_Tp1, _Tp2> >::type&& std::get(std::pair<_Tp1, _Tp2>&&)\u2019\n  224\
    \ |   "
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<int64_t>(value))\
    \ {\n            result.push_back(std::any_cast<int64_t>(value));\n        } else\
    \ if(std::holds_alternative<double>(value)) {\n            result.push_back(std::any_cast<double>(value));\n\
    \        } else if(std::holds_alternative<std::string>(value)) {\n           \
    \ result.push_back(std::any_cast<std::string>(value));\n        } else if(std::holds_alternative<std::map<long,long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::map<long,long>>(value));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(value))\
    \ {\n            result.push_back(std::any_cast<std::vector<long>>(value)); //\
    \ TODO: handle vectors\n        } else {\n            throw std::runtime_error(\"\
    Unknown type\");\n        }\n    }\n    return result;\n}\nint main() {\n    auto\
    \ candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp49tadcm4.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmp49tadcm4.cpp:11:49: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(value))\
    \ {\n      |                                                 ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmp49tadcm4.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp49tadcm4.cpp:11:49:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(value)) {\n \
    \     |                                                 ^\n/tmp/tmp49tadcm4.cpp:13:55:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(value)) {\n      |\
    \                                                       ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmp49tadcm4.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp49tadcm4.cpp:13:55:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(value))\
    \ {\n      |                                                       ^\n/tmp/tmp49tadcm4.cpp:15:60:\
    \ error: no match"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for (auto value : values) {\n        if (std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpchb7mruq.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpchb7mruq.cpp:11:47: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if (std::holds_alternative<long>(value))\
    \ {\n      |                                               ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpchb7mruq.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpchb7mruq.cpp:11:47:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if (std::holds_alternative<long>(value)) {\n   \
    \   |                                               ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            result.push_back(std::any_cast<long>(v));\n        }\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpishjeu5l.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpishjeu5l.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpishjeu5l.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpishjeu5l.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<int64_t>(v))\
    \ {\n            out.push_back(std::any_cast<int64_t>(v));\n        } else if(std::holds_alternative<double>(v))\
    \ {\n            out.push_back(std::any_cast<double>(v));\n        } else if(std::holds_alternative<std::string>(v))\
    \ {\n            out.push_back(std::any_cast<std::string>(v));\n        } else\
    \ if(std::holds_alternative<std::map<long,long>>(v)) {\n            out.push_back(std::any_cast<std::map<long,long>>(v));\
    \ // TODO: handle maps\n        } else if(std::holds_alternative<std::vector<long>>(v))\
    \ {\n            out.push_back(std::any_cast<std::vector<long>>(v)); // TODO:\
    \ handle vectors\n        } else {\n            throw std::runtime_error(\"Unsupported\
    \ type\");\n        }\n    }\n    return out;\n}\nint main() {\n    auto candidate\
    \ = filter_integers;\n    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpr57vm75d.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpr57vm75d.cpp:11:45: error: no matching function for call to \u2018\
    holds_alternative<int64_t>(std::any&)\u2019\n   11 |         if(std::holds_alternative<int64_t>(v))\
    \ {\n      |                                             ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpr57vm75d.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr57vm75d.cpp:11:45:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<int64_t>(v)) {\n     \
    \ |                                             ^\n/tmp/tmpr57vm75d.cpp:13:51:\
    \ error: no matching function for call to \u2018holds_alternative<double>(std::any&)\u2019\
    \n   13 |         } else if(std::holds_alternative<double>(v)) {\n      |    \
    \                                               ^\nIn file included from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n\
    \                 from /tmp/tmpr57vm75d.cpp:2:\n/usr/include/c++/9/variant:1057:5:\
    \ note: candidate: \u2018template<class _Tp, class ... _Types> constexpr bool\
    \ std::holds_alternative(const std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const\
    \ variant<_Types...>& __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr57vm75d.cpp:13:51:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   13 |         } else if(std::holds_alternative<double>(v)) {\n\
    \      |                                                   ^\n/tmp/tmpr57vm75d.cpp:15:56:\
    \ error: no matching function for call to \u2018hold"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(v.type() == typeid(long)) {\n  \
    \          out.push_back(v.as<long>());\n        }\n    }\n    return out;\n}\n\
    int main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpadikmovv.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpadikmovv.cpp:12:29: error: \u2018class std::any\u2019 has no member\
    \ named \u2018as\u2019\n   12 |             out.push_back(v.as<long>());\n   \
    \   |                             ^~\n/tmp/tmpadikmovv.cpp:12:32: error: expected\
    \ primary-expression before \u2018long\u2019\n   12 |             out.push_back(v.as<long>());\n\
    \      |                                ^~~~\n"
  stdout: ''
  timestamp: 1660108411
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ out;\n    for(auto v: values) {\n        if(std::holds_alternative<long>(v))\
    \ {\n            out.push_back(std::any_cast<long>(v));\n        }\n    }\n  \
    \  return out;\n}\nint main() {\n    auto candidate = filter_integers;\n    assert(candidate((std::vector<std::any>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<std::any>({4,\
    \ std::map<long,long>(), std::vector<long>(), 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4,\
    \ (long)9})));\n    assert(candidate((std::vector<std::any>({3, \"c\", 3, 3, \"\
    a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpar7uyhw6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpar7uyhw6.cpp:11:42: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(v))\
    \ {\n      |                                          ^\nIn file included from\
    \ /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n                 from\
    \ /tmp/tmpar7uyhw6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpar7uyhw6.cpp:11:42:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(v)) {\n      | \
    \                                         ^\n"
  stdout: ''
  timestamp: 1660108410
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Filter given list of any\
    \ python values only for integers\n// >>> filter_integers((std::vector<std::any>({(std::string)\"\
    a\", (std::string)3.14, (std::string)5})))\n// (std::vector<long>({(long)5}))\n\
    // >>> filter_integers((std::vector<std::any>({1, 2, 3, \"abc\", std::map<long,long>(),\
    \ std::vector<long>()})))\n// (std::vector<long>({(long)1, (long)2, (long)3}))\n\
    std::vector<long> filter_integers(std::vector<std::any> values) {\n    std::vector<long>\
    \ result;\n    for(auto value : values) {\n        if(std::holds_alternative<long>(value))\
    \ {\n            result.push_back(std::any_cast<long>(value));\n        }\n  \
    \  }\n    return result;\n}\nint main() {\n    auto candidate = filter_integers;\n\
    \    assert(candidate((std::vector<std::any>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<std::any>({4, std::map<long,long>(), std::vector<long>(),\
    \ 23.2, 9, \"adasd\"}))) == (std::vector<long>({(long)4, (long)9})));\n    assert(candidate((std::vector<std::any>({3,\
    \ \"c\", 3, 3, \"a\", \"b\"}))) == (std::vector<long>({(long)3, (long)3, (long)3})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpk0xre1e6.cpp: In function \u2018std::vector<long int> filter_integers(std::vector<std::any>)\u2019\
    :\n/tmp/tmpk0xre1e6.cpp:11:46: error: no matching function for call to \u2018\
    holds_alternative<long int>(std::any&)\u2019\n   11 |         if(std::holds_alternative<long>(value))\
    \ {\n      |                                              ^\nIn file included\
    \ from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:133,\n              \
    \   from /tmp/tmpk0xre1e6.cpp:2:\n/usr/include/c++/9/variant:1057:5: note: candidate:\
    \ \u2018template<class _Tp, class ... _Types> constexpr bool std::holds_alternative(const\
    \ std::variant<_Types ...>&)\u2019\n 1057 |     holds_alternative(const variant<_Types...>&\
    \ __v) noexcept\n      |     ^~~~~~~~~~~~~~~~~\n/usr/include/c++/9/variant:1057:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk0xre1e6.cpp:11:46:\
    \ note:   \u2018std::any\u2019 is not derived from \u2018const std::variant<_Types\
    \ ...>\u2019\n   11 |         if(std::holds_alternative<long>(value)) {\n    \
    \  |                                              ^\n"
  stdout: ''
  timestamp: 1660108409

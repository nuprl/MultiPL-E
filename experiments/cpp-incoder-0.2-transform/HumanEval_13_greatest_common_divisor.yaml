name: HumanEval_13_greatest_common_divisor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a greatest common\
  \ divisor of two integers a and b\n// >>> greatest_common_divisor((3), (5))\n//\
  \ (1)\n// >>> greatest_common_divisor((25), (15))\n// (5)\nlong greatest_common_divisor(long\
  \ a, long b) {\n"
tests: "}\nint main() {\n    auto candidate = greatest_common_divisor;\n    assert(candidate((3),\
  \ (7)) == (1));\n    assert(candidate((10), (15)) == (5));\n    assert(candidate((49),\
  \ (14)) == (7));\n    assert(candidate((144), (60)) == (12));\n}\n"
completions: ["    long gcd;\n    while (b != 0) {\n        gcd = b;\n        b =\
    \ a % b;\n        a = gcd;\n    }\n    return a;", "    if (b == 0)\n        return\
    \ a;\n    return greatest_common_divisor(b, a % b);", "    if (b == 0)\n     \
    \   return a;\n    return greatest_common_divisor(b, a % b);", "    long long\
    \ gcd = 1;\n    while (a != 0) {\n        if (a > b) {\n            a %= b;\n\
    \        } else {\n            b %= a;\n        }\n        gcd = (gcd > a) ? gcd\
    \ : a;\n    }\n    return gcd;", "    long gcd = 0;\n    while (b != 0) {\n  \
    \      long r = a % b;\n        a = b;\n        b = r;\n    }\n    return a;",
  "    long gcd = 0;\n    while (b) {\n        long r = a % b;\n        a = b;\n \
    \       b = r;\n    }\n    return a;", "    long gcd = 0;\n    while (b != 0)\
    \ {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    return\
    \ a;", "    long long gcd = 1;\n    while (b != 0) {\n        if (a > b) {\n \
    \           gcd = b;\n            b = a % b;\n        } else {\n            a\
    \ = b;\n            b = a % b;\n        }\n    }\n    return gcd;", "    long\
    \ gcd = 0;\n    while (b != 0) {\n        long r = a % b;\n        a = b;\n  \
    \      b = r;\n    }\n    return a;", "    long greatest = 0;\n    while (a !=\
    \ 0) {\n        long remainder = a % b;\n        a = b;\n        b = remainder;\n\
    \        greatest = greatest > remainder ? greatest : remainder;\n    }\n    return\
    \ greatest;", "    long gcd = 0;\n    while (b) {\n        long r = a % b;\n \
    \       a = b;\n        b = r;\n    }\n    return a;", "    if (b == 0)\n    \
    \    return a;\n    return greatest_common_divisor(b, a % b);", "    long long\
    \ gcd = 1;\n    while (b != 0) {\n        long long mod = a % b;\n        a =\
    \ b;\n        b = mod;\n        gcd = (gcd > mod) ? gcd : mod;\n    }\n    return\
    \ gcd;", "    if (b == 0)\n        return a;\n    long r = a % b;\n    if (r ==\
    \ 0)\n        return b;\n    return greatest_common_divisor(b, r);", "    long\
    \ gcd;\n    while (a != 0) {\n        gcd = b;\n        b = a % b;\n        a\
    \ = gcd;\n    }\n    return b;", "    long gcd = 0;\n    while (b != 0) {\n  \
    \      long r = a % b;\n        a = b;\n        b = r;\n    }\n    return a;",
  "    long gcd = 0;\n    while (b) {\n        long r = a % b;\n        a = b;\n \
    \       b = r;\n    }\n    return a;", "    long gcd = 0;\n    while (a != 0)\
    \ {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    return\
    \ b;", "    long gcd = 0;\n    while (a != 0) {\n        long r = a % b;\n   \
    \     a = b;\n        b = r;\n    }\n    return b;", "    long gcd;\n    while\
    \ (b) {\n        gcd = (a % b);\n        a = b;\n        b = gcd;\n    }\n   \
    \ return a;"]
stop_tokens:
- "\n}"

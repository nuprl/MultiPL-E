language: cpp
name: HumanEval_102_choose_num
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\nint main() {\n    auto candidate =\
    \ choose_num;\n    assert(candidate((12), (15)) == (14));\n    assert(candidate((13),\
    \ (12)) == (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjsf1r0sp.cpp: In function 'int main()':\n/tmp/tmpjsf1r0sp.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjsf1r0sp.cpp:2:\n/tmp/tmpjsf1r0sp.cpp:27:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid+1;\n\
    \        } else {\n            y = mid;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = choose_num;\n    assert(candidate((12), (15))\
    \ == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpobdfc9va.cpp: In function 'int main()':\n/tmp/tmpobdfc9va.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpobdfc9va.cpp:2:\n/tmp/tmpobdfc9va.cpp:31:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    if (x > 0 && y > 0) {\n        long mid = (x +\
    \ y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n  \
    \  }\n    return ans;\n}\nint main() {\n    auto candidate = choose_num;\n   \
    \ assert(candidate((12), (15)) == (14));\n    assert(candidate((13), (12)) ==\
    \ (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf4tyssk1.cpp: In function 'int main()':\n/tmp/tmpf4tyssk1.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf4tyssk1.cpp:2:\n/tmp/tmpf4tyssk1.cpp:28:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans =\
    \ choose_num(mid + 1, y);\n        }\n    } else {\n        long mid = y + (x\
    \ - y) / 2;\n        ans = choose_num(y, mid);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid + 1);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = choose_num;\n    assert(candidate((12), (15))\
    \ == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwhag42jc.cpp: In function 'int main()':\n/tmp/tmpwhag42jc.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwhag42jc.cpp:2:\n/tmp/tmpwhag42jc.cpp:30:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n\
    \    if (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long y_odd\
    \ = y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even = x %\
    \ 2 == 0;\n            long y_even = y % 2 == 0;\n            if (x_even && y_even)\
    \ {\n                long x_odd = x % 2 == 1;\n                long y_odd = y\
    \ % 2 == 1;\n                if (x_odd && y_odd) {\n                    long x_even\
    \ = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n             \
    \       if (x_even && y_even) {\n                        long x_odd = x % 2 ==\
    \ 1;\n                        long y_odd = y % 2 == 1;\n                     \
    \   if (x_odd && y_odd) {\n                            long x_even = x % 2 ==\
    \ 0;\n                            long y_even = y % 2 == 0;\n                \
    \            if (x_even && y_even) {\n                                long x_odd\
    \ = x % 2 == 1;\n                                long y_odd = y % 2 == 1;\n  \
    \                              if (x_odd && y_odd) {\n                       \
    \             long x_even = x % 2 == 0;\n                                    long\
    \ y_even = y % 2 == 0;\n                                    if (x_even && y_even)\
    \ {\n                                        long x_odd = x % 2 == 1;\n      \
    \                                  long y_odd = y % 2 == 1;\n                \
    \                        if (x_odd && y_odd) {\n                             \
    \               long x_even = x % 2 == 0;\n                                  \
    \          long y_even = y % 2 == 0;\n                                       \
    \     if (x_even && y_even) {\n                                              \
    \  long x_odd = x % 2 == 1;\n                                                long\
    \ y_odd = y % 2 == 1;\n                                                if (x_odd\
    \ && y_odd) {\n                                                    long x_even\
    \ = x % 2 == 0;\n                                                    long y_even\
    \ = y % 2 == 0;\n                                                    if (x_even\
    \ && y_even) {\n                                                        long x_odd\
    \ = x % 2 == 1;\n                                                        long\
    \ y_odd = y % 2 == 1;\n                                                      \
    \  if (x_odd && y_odd) {\n                                                   \
    \         long x_even = x % 2 == 0;\n                                        \
    \                    long y_even = y % 2 == 0;\n                             \
    \                               if (x_even && y_even) {\n                    \
    \                                            long x_odd = x % 2 == 1;\n      \
    \                                                          long y_odd = y % 2\
    \ == 1;\n                                                                if (x_odd\
    \ && y_odd) {\n                                                              \
    \      long x_even = x % 2 == 0;\n                                           \
    \                         long y_even = y % 2 == 0;\n                        \
    \                                            if (x_even && y_even) {\n       \
    \                                                                 long x_odd =\
    \ x % 2 == 1;\n                                                              \
    \          long y_od\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjgon3he5.cpp: In function 'long int choose_num(long int, long int)':\n\
    /tmp/tmpjgon3he5.cpp:66:1: error: expected initializer before '}' token\n }\n\
    \ ^\n/tmp/tmpjgon3he5.cpp:67:12: error: a function-definition is not allowed here\
    \ before '{' token\n int main() {\n            ^\n/tmp/tmpjgon3he5.cpp:77:1: error:\
    \ expected '}' at end of input\n }\n ^\n/tmp/tmpjgon3he5.cpp:77:1: error: expected\
    \ '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of\
    \ input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1:\
    \ error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected\
    \ '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of\
    \ input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1:\
    \ error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected\
    \ '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of\
    \ input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1:\
    \ error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected\
    \ '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of\
    \ input\n/tmp/tmpjgon3he5.cpp:77:1: error: expected '}' at end of input\n/tmp/tmpjgon3he5.cpp:77:1:\
    \ error: expected '}' at end of input\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y)\
    \ {\n        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        mid++;\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = choose_num;\n    assert(candidate((12), (15)) == (14));\n    assert(candidate((13),\
    \ (12)) == (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvknzhycf.cpp: In function 'int main()':\n/tmp/tmpvknzhycf.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvknzhycf.cpp:2:\n/tmp/tmpvknzhycf.cpp:30:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1emu7du.cpp: In function 'int main()':\n/tmp/tmpl1emu7du.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl1emu7du.cpp:2:\n/tmp/tmpl1emu7du.cpp:23:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans\
    \ = mid;\n    } else if (mid <= y) {\n        ans = x;\n    } else {\n       \
    \ ans = y;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = choose_num;\n\
    \    assert(candidate((12), (15)) == (14));\n    assert(candidate((13), (12))\
    \ == (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb2saznrd.cpp: In function 'int main()':\n/tmp/tmpb2saznrd.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb2saznrd.cpp:2:\n/tmp/tmpb2saznrd.cpp:25:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long mid = (x + y) / 2;\n    while (x <= y) {\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        mid = (mid + y) / 2;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = choose_num;\n    assert(candidate((12), (15)) == (14));\n\
    \    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33), (12354))\
    \ == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiw8ay_ng.cpp: In function 'int main()':\n/tmp/tmpiw8ay_ng.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiw8ay_ng.cpp:2:\n/tmp/tmpiw8ay_ng.cpp:30:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;\n}\nint main() {\n    auto candidate =\
    \ choose_num;\n    assert(candidate((12), (15)) == (14));\n    assert(candidate((13),\
    \ (12)) == (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjsf1r0sp.cpp: In function 'int main()':\n/tmp/tmpjsf1r0sp.cpp:26:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjsf1r0sp.cpp:2:\n/tmp/tmpjsf1r0sp.cpp:27:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(mid, y);\n        if (ans == -1) {\n            ans =\
    \ mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n       \
    \ ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = choose_num;\n\
    \    assert(candidate((12), (15)) == (14));\n    assert(candidate((13), (12))\
    \ == (-1));\n    assert(candidate((33), (12354)) == (12354));\n    assert(candidate((5234),\
    \ (5233)) == (-1));\n    assert(candidate((6), (29)) == (28));\n    assert(candidate((27),\
    \ (10)) == (-1));\n    assert(candidate((7), (7)) == (-1));\n    assert(candidate((546),\
    \ (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_le1dgpm.cpp: In function 'int main()':\n/tmp/tmp_le1dgpm.cpp:29:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_le1dgpm.cpp:2:\n/tmp/tmp_le1dgpm.cpp:30:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    long ans = -1;\n    while (x <= y) {\n        if (x % 2 == 0) {\n \
    \           ans = x;\n            break;\n        }\n        x += 2;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2co3wp1n.cpp: In function 'int main()':\n/tmp/tmp2co3wp1n.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2co3wp1n.cpp:2:\n/tmp/tmp2co3wp1n.cpp:29:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x <= y) {\n        if ((x % 2) == 0) {\n\
    \            ans = x;\n            break;\n        }\n        x++;\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2oyx6kpb.cpp: In function 'int main()':\n/tmp/tmp2oyx6kpb.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2oyx6kpb.cpp:2:\n/tmp/tmp2oyx6kpb.cpp:29:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    long mid = (x + y) / 2;\n    long diff = x - mid;\n   \
    \ if (diff > y) {\n        diff = y - mid;\n        ans = mid;\n    }\n    if\
    \ (diff > 0 && diff < y) {\n        ans = mid;\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = choose_num;\n    assert(candidate((12), (15))\
    \ == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwh2t4uvm.cpp: In function 'int main()':\n/tmp/tmpwh2t4uvm.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwh2t4uvm.cpp:2:\n/tmp/tmpwh2t4uvm.cpp:26:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1emu7du.cpp: In function 'int main()':\n/tmp/tmpl1emu7du.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl1emu7du.cpp:2:\n/tmp/tmpl1emu7du.cpp:23:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1emu7du.cpp: In function 'int main()':\n/tmp/tmpl1emu7du.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl1emu7du.cpp:2:\n/tmp/tmpl1emu7du.cpp:23:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid%2 == 0) {\n            ans = mid;\n            x = mid+1;\n \
    \       } else {\n            y = mid;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = choose_num;\n    assert(candidate((12), (15))\
    \ == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4q4xqu4.cpp: In function 'int main()':\n/tmp/tmph4q4xqu4.cpp:30:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph4q4xqu4.cpp:2:\n/tmp/tmph4q4xqu4.cpp:31:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x+y)/2;\n  \
    \      if (mid%2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        if (mid%2 == 1) {\n            y = mid;\n        }\n        else\
    \ {\n            x = mid;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = choose_num;\n    assert(candidate((12), (15)) == (14));\n\
    \    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33), (12354))\
    \ == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8ms7_tvn.cpp: In function 'int main()':\n/tmp/tmp8ms7_tvn.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8ms7_tvn.cpp:2:\n/tmp/tmp8ms7_tvn.cpp:35:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  long ans = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x + y)/2;\n\
    \        if (mid%2 == 0) {\n            ans = mid;\n            break;\n     \
    \   }\n        if (mid%2 != 0) {\n            y = mid;\n        }\n        else\
    \ {\n            x = mid;\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = choose_num;\n    assert(candidate((12), (15)) == (14));\n\
    \    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33), (12354))\
    \ == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzswmce6t.cpp: In function 'int main()':\n/tmp/tmpzswmce6t.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzswmce6t.cpp:2:\n/tmp/tmpzswmce6t.cpp:35:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two\
    \ positive numbers x and y and returns the\n// biggest even integer number that\
    \ is in the range [x, y] inclusive. If \n// there's no such number, then the function\
    \ should return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n\
    // >>> choose_num((13), (12))\n// (-1)\nlong choose_num(long x, long y) {\n  \
    \  if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);\n}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
    \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
    \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
    \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
    \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl1emu7du.cpp: In function 'int main()':\n/tmp/tmpl1emu7du.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = choose_num;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl1emu7du.cpp:2:\n/tmp/tmpl1emu7du.cpp:23:32: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((12), (15))\
    \ == (14));\n                                ^\n"
  stdout: ''

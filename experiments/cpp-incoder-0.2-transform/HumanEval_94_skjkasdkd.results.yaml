language: cpp
name: HumanEval_94_skjkasdkd
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long a = m;\n    long b = m;\n    long c = m;\n    long d = m;\n    long\
    \ e = m;\n    long f = m;\n    long g = m;\n    long h = m;\n    long i = m;\n\
    \    long j = m;\n    long k = m;\n    long l = m;\n    long m = m;\n    long\
    \ n = m;\n    long o = m;\n    long p = m;\n    long q = m;\n    long r = m;\n\
    \    long s = m;\n    long t = m;\n    long u = m;\n    long v = m;\n    long\
    \ w = m;\n    long x = m;\n    long y = m;\n    long z = m;\n    long a = m;\n\
    \    long b = m;\n    long c = m;\n    long d = m;\n    long e = m;\n    long\
    \ f = m;\n    long g = m;\n    long h = m;\n    long i = m;\n    long j = m;\n\
    \    long k = m;\n    long l = m;\n    long m = m;\n    long n = m;\n    long\
    \ o = m;\n    long p = m;\n    long q = m;\n    long r = m;\n    long s = m;\n\
    \    long t = m;\n    long u = m;\n    long v = m;\n    long w = m;\n    long\
    \ x = m;\n    long y = m;\n    long z = m;\n    long a = m;\n    long b = m;\n\
    \    long c = m;\n    long d = m;\n    long e = m;\n    long f = m;\n    long\
    \ g = m;\n    long h = m;\n    long i = m;\n    long j = m;\n    long k = m;\n\
    \    long l = m;\n    long m = m;\n    long n = m;\n    long o = m;\n    long\
    \ p = m;\n    long q = m;\n    long r = m;\n    long s = m;\n    long t = m;\n\
    \    long u = m;\n    long v = m;\n    long w = m;\n    long x = m;\n    long\
    \ y = m;\n    long z = m;\n    long a = m;\n    long b = m;\n    long c = m;\n\
    \    long d = m;\n    long e = m;\n    long f = m;\n    long g = m;\n    long\
    \ h = m;\n    long i = m;\n    long j = m;\n    long k = m;\n    long l = m;\n\
    \    long m = m;\n    long n = m;\n    long o = m;\n    long p = m;\n    long\
    \ q = m;\n    long r = m;\n    long s = m;\n    long t = m;\n    \n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoj6jf56a.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpoj6jf56a.cpp:34:10: error: redeclaration of 'long int m'\n\
    \     long m = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:21:10: error: 'long int m'\
    \ previously declared here\n     long m = lst.front();\n          ^\n/tmp/tmpoj6jf56a.cpp:35:10:\
    \ error: redeclaration of 'long int n'\n     long n = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:20:10:\
    \ error: 'long int n' previously declared here\n     long n = lst.size();\n  \
    \        ^\n/tmp/tmpoj6jf56a.cpp:48:10: error: redeclaration of 'long int a'\n\
    \     long a = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:22:10: error: 'long int a'\
    \ previously declared here\n     long a = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:49:10:\
    \ error: redeclaration of 'long int b'\n     long b = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:23:10:\
    \ error: 'long int b' previously declared here\n     long b = m;\n          ^\n\
    /tmp/tmpoj6jf56a.cpp:50:10: error: redeclaration of 'long int c'\n     long c\
    \ = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:24:10: error: 'long int c' previously\
    \ declared here\n     long c = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:51:10: error:\
    \ redeclaration of 'long int d'\n     long d = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:25:10:\
    \ error: 'long int d' previously declared here\n     long d = m;\n          ^\n\
    /tmp/tmpoj6jf56a.cpp:52:10: error: redeclaration of 'long int e'\n     long e\
    \ = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:26:10: error: 'long int e' previously\
    \ declared here\n     long e = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:53:10: error:\
    \ redeclaration of 'long int f'\n     long f = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:27:10:\
    \ error: 'long int f' previously declared here\n     long f = m;\n          ^\n\
    /tmp/tmpoj6jf56a.cpp:54:10: error: redeclaration of 'long int g'\n     long g\
    \ = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:28:10: error: 'long int g' previously\
    \ declared here\n     long g = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:55:10: error:\
    \ redeclaration of 'long int h'\n     long h = m;\n          ^\n/tmp/tmpoj6jf56a.cpp:29:10:\
    \ error: 'long int h' previously declared here\n     long h = m;\n  "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    for (auto it : lst) {\n        cur = it;\n        cnt = 0;\n     \
    \   while (cur != 0) {\n            cnt += cur % 10;\n            cur /= 10;\n\
    \        }\n        if (cnt > max) {\n            max = cnt;\n            ans\
    \ = cur;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3sqohbic.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp3sqohbic.cpp:23:15: error: 'it' does not name a type\n    \
    \ for (auto it : lst) {\n               ^\n/tmp/tmp3sqohbic.cpp:35:5: error: expected\
    \ ';' before 'return'\n     return ans;\n     ^\n/tmp/tmp3sqohbic.cpp:35:5: error:\
    \ expected primary-expression before 'return'\n/tmp/tmp3sqohbic.cpp:35:5: error:\
    \ expected ';' before 'return'\n/tmp/tmp3sqohbic.cpp:35:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmp3sqohbic.cpp:35:5: error: expected ')' before 'return'\n\
    /tmp/tmp3sqohbic.cpp: In function 'int main()':\n/tmp/tmp3sqohbic.cpp:38:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n       \
    \   ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n          \
    \       from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n  \
    \               from /tmp/tmp3sqohbic.cpp:2:\n/tmp/tmp3sqohbic.cpp:39:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp3sqohbic.cpp:39:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp3sqohbic.cpp:39:246:\
    \ warning: extended initializer lists only a"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        if (lst[i] > max) {\n            max = lst[i];\n        }\n\
    \    }\n    for (long i = 0; i < lst.size(); i++) {\n        if (lst[i] > max)\
    \ {\n            ans += (long)lst[i] % max;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiw8s_0tn.cpp: In function 'int main()':\n/tmp/tmpiw8s_0tn.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiw8s_0tn.cpp:2:\n/tmp/tmpiw8s_0tn.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpiw8s_0tn.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpiw8s_0tn.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpiw8s_0tn.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpiw8s_0tn.cpp:35:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpiw8s_0tn.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long cur = 0;\n    for (long\
    \ i : lst) {\n        cur = i;\n        while (cur > 0) {\n            if (cur\
    \ % 2 == 0) {\n                cur /= 2;\n            } else {\n             \
    \   cur = 3 * cur + 1;\n            }\n        }\n        if (cur > max) {\n \
    \           max = cur;\n            ans = i;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvhsx6im7.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpvhsx6im7.cpp:22:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpvhsx6im7.cpp:\
    \ In function 'int main()':\n/tmp/tmpvhsx6im7.cpp:39:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = skjkasdkd;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvhsx6im7.cpp:2:\n/tmp/tmpvhsx6im7.cpp:40:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpvhsx6im7.cpp:40:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpvhsx6im7.cpp:40:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvhsx6im7.cpp:40:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvhsx6im7.cpp:40:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/incl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max = 0;\n    for (long\
    \ i = 0; i < n; i++) {\n        long cur = lst[i];\n        if (cur > max) {\n\
    \            max = cur;\n        }\n    }\n    for (long i = 0; i < n; i++) {\n\
    \        long cur = lst[i];\n        if (cur == max) {\n            long sum =\
    \ 0;\n            while (cur > 0) {\n                sum += cur % 10;\n      \
    \          cur /= 10;\n            }\n            ans += sum;\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzh_337i8.cpp: In function 'int main()':\n/tmp/tmpzh_337i8.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzh_337i8.cpp:2:\n/tmp/tmpzh_337i8.cpp:42:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpzh_337i8.cpp:42:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpzh_337i8.cpp:42:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpzh_337i8.cpp:42:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpzh_337i8.cpp:42:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpzh_337i8.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long max_prime_digit_sum = 0;\n    long prime_digit_sum = 0;\n   \
    \ long prime_digit = 0;\n    long prime_digit_sum = 0;\n    long prime_digit_sum2\
    \ = 0;\n    long prime_digit_sum3 = 0;\n    long prime_digit_sum4 = 0;\n    long\
    \ prime_digit_sum5 = 0;\n    long prime_digit_sum6 = 0;\n    long prime_digit_sum7\
    \ = 0;\n    long prime_digit_sum8 = 0;\n    long prime_digit_sum9 = 0;\n    long\
    \ prime_digit_sum10 = 0;\n    long prime_digit_sum11 = 0;\n    long prime_digit_sum12\
    \ = 0;\n    long prime_digit_sum13 = 0;\n    long prime_digit_sum14 = 0;\n   \
    \ long prime_digit_sum15 = 0;\n    long prime_digit_sum16 = 0;\n    long prime_digit_sum17\
    \ = 0;\n    long prime_digit_sum18 = 0;\n    long prime_digit_sum19 = 0;\n   \
    \ long prime_digit_sum20 = 0;\n    long prime_digit_sum21 = 0;\n    long prime_digit_sum22\
    \ = 0;\n    long prime_digit_sum23 = 0;\n    long prime_digit_sum24 = 0;\n   \
    \ long prime_digit_sum25 = 0;\n    long prime_digit_sum26 = 0;\n    long prime_digit_sum27\
    \ = 0;\n    long prime_digit_sum28 = 0;\n    long prime_digit_sum29 = 0;\n   \
    \ long prime_digit_sum30 = 0;\n    long prime_digit_sum31 = 0;\n    long prime_digit_sum32\
    \ = 0;\n    long prime_digit_sum33 = 0;\n    long prime_digit_sum34 = 0;\n   \
    \ long prime_digit_sum35 = 0;\n    long prime_digit_sum36 = 0;\n    long prime_digit_sum37\
    \ = 0;\n    long prime_digit_sum38 = 0;\n    long prime_digit_sum39 = 0;\n   \
    \ long prime_digit_sum40 = 0;\n    long prime_digit_sum41 = 0;\n    long prime_digit_sum42\
    \ = 0;\n    long prime_digit_sum43 = 0;\n    long prime_digit_sum44 = 0;\n   \
    \ long prime_digit_sum45 = 0;\n    long prime_digit_sum46 = 0;\n    long prime_digit_sum47\
    \ = 0;\n    long prime_digit_sum48 = 0;\n    long prime_digit_sum49 = 0;\n   \
    \ long prime_digit_sum50 = 0;\n    long prime_digit_sum51 = 0;\n    long prime_digit_sum52\
    \ = 0;\n    long prime_digit_sum\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk7d3nqsc.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpk7d3nqsc.cpp:25:10: error: redeclaration of 'long int prime_digit_sum'\n\
    \     long prime_digit_sum = 0;\n          ^\n/tmp/tmpk7d3nqsc.cpp:23:10: error:\
    \ 'long int prime_digit_sum' previously declared here\n     long prime_digit_sum\
    \ = 0;\n          ^\n/tmp/tmpk7d3nqsc.cpp:78:1: error: expected initializer before\
    \ '}' token\n }\n ^\n/tmp/tmpk7d3nqsc.cpp: In function 'int main()':\n/tmp/tmpk7d3nqsc.cpp:80:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpk7d3nqsc.cpp:2:\n/tmp/tmpk7d3nqsc.cpp:81:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpk7d3nqsc.cpp:81:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpk7d3nqsc.cpp:81:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpk7d3nqsc.cpp:81:246: error: no matching function\
    \ for call to 'std::vector<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            ans += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    ans += i;\n        }\n        if (i % 7 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 11 == 0) {\n            ans += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            ans += i;\n        }\n        if (i % 17\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 23 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 31 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            ans += i;\n        }\n        if (i % 41 == 0) {\n \
    \           ans += i;\n        }\n        if (i % 43 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            ans += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            ans += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            ans += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            ans += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  ans += i;\n        }\n        if (i % 71 == 0) {\n            ans += i;\n \
    \       }\n        if (i % 73 == 0) {\n            ans += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            ans += i;\n        }\n        if (i % 83\
    \ == 0) {\n            ans += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        ans += i;\n        }\n        if (i % 97 == 0) {\n            ans +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            ans += i;\n        }\n\
    \        if (i % 109 == 0) {\n            ans += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            ans += i;\n        }\n        if (i % 127 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 131 == 0) {\n            ans\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            ans += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            ans += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            ans += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            ans += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      ans += i;\n        }\n        if (i % 161 == 0) {\n            ans += i;\n\
    \        }\n        if (i % 167 == 0) {\n            ans += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            ans += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            ans += i;\n        }\n        if (i % 181 == 0) {\n\
    \            ans += i;\n        }\n        if (i % 185 == 0) {\n            an\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc8hvlrj6.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpc8hvlrj6.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpc8hvlrj6.cpp:143:13:\
    \ error: 'an' was not declared in this scope\n             an\n             ^\n\
    /tmp/tmpc8hvlrj6.cpp:144:1: error: expected ';' before '}' token\n }\n ^\n/tmp/tmpc8hvlrj6.cpp:145:12:\
    \ error: a function-definition is not allowed here before '{' token\n int main()\
    \ {\n            ^\n/tmp/tmpc8hvlrj6.cpp:156:1: error: expected '}' at end of\
    \ input\n }\n ^\n/tmp/tmpc8hvlrj6.cpp:156:1: error: expected '}' at end of input\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long max = 0;\n    long sum = 0;\n    for (long i : lst) {\n   \
    \     if (i % 2 == 0) {\n            sum += i;\n        }\n        if (i % 3 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 5 == 0) {\n        \
    \    sum += i;\n        }\n        if (i % 7 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 11 == 0) {\n            sum += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            sum += i;\n        }\n        if (i % 17\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 23 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 31 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            sum += i;\n        }\n        if (i % 41 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 43 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            sum += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 71 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 73 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            sum += i;\n        }\n        if (i % 83\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 97 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 109 == 0) {\n            sum += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            sum += i;\n        }\n        if (i % 127 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 131 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            sum += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 161 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 167 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            sum += i;\n        }\n        if (i % 181 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 187 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 191 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 197 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 201 == 0) {\n            sum += i;\n        }\n        if (\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8v3pf25.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpb8v3pf25.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpb8v3pf25.cpp:155:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmpb8v3pf25.cpp:155:1:\
    \ error: expected ')' before '}' token\n/tmp/tmpb8v3pf25.cpp:155:1: error: expected\
    \ primary-expression before '}' token\n/tmp/tmpb8v3pf25.cpp:155:1: error: expected\
    \ ';' before '}' token\n/tmp/tmpb8v3pf25.cpp:156:12: error: a function-definition\
    \ is not allowed here before '{' token\n int main() {\n            ^\n/tmp/tmpb8v3pf25.cpp:167:1:\
    \ error: expected '}' at end of input\n }\n ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0;\n    long\
    \ prime = 0;\n    long sum = 0;\n    long primeSum = 0;\n    long primeCount =\
    \ 0;\n    long primeSumCount = 0;\n    long primeCount2 = 0;\n    long primeSumCount2\
    \ = 0;\n    long primeCount3 = 0;\n    long primeSumCount3 = 0;\n    long primeCount4\
    \ = 0;\n    long primeSumCount4 = 0;\n    long primeCount5 = 0;\n    long primeSumCount5\
    \ = 0;\n    long primeCount6 = 0;\n    long primeSumCount6 = 0;\n    long primeCount7\
    \ = 0;\n    long primeSumCount7 = 0;\n    long primeCount8 = 0;\n    long primeSumCount8\
    \ = 0;\n    long primeCount9 = 0;\n    long primeSumCount9 = 0;\n    long primeCount10\
    \ = 0;\n    long primeSumCount10 = 0;\n    long primeCount11 = 0;\n    long primeSumCount11\
    \ = 0;\n    long primeCount12 = 0;\n    long primeSumCount12 = 0;\n    long primeCount13\
    \ = 0;\n    long primeSumCount13 = 0;\n    long primeCount14 = 0;\n    long primeSumCount14\
    \ = 0;\n    long primeCount15 = 0;\n    long primeSumCount15 = 0;\n    long primeCount16\
    \ = 0;\n    long primeSumCount16 = 0;\n    long primeCount17 = 0;\n    long primeSumCount17\
    \ = 0;\n    long primeCount18 = 0;\n    long primeSumCount18 = 0;\n    long primeCount19\
    \ = 0;\n    long primeSumCount19 = 0;\n    long primeCount20 = 0;\n    long primeSumCount20\
    \ = 0;\n    long primeCount21 = 0;\n    long primeSumCount21 = 0;\n    long primeCount22\
    \ = 0;\n    long primeSumCount22 = 0;\n    long primeCount23 = 0;\n    long primeSumCount23\
    \ = 0;\n    long primeCount24 = 0;\n    long primeSumCount24 = 0;\n    long primeCount25\
    \ = 0;\n    long primeSumCount25 = 0;\n    long primeCount26 = 0;\n    long primeSumCount26\
    \ = 0;\n    long primeCount27 = 0;\n    long primeSumCount27 = 0;\n    long primeCount28\
    \ = 0;\n    long primeSumCount28 = 0;\n    long primeCount29 = 0;\n    long primeSumCount29\
    \ = 0;\n    long primeCount30 = 0;\n    long primeSumCount30 = 0;\n    long primeCount31\
    \ = 0;\n    long primeSumCount31 = 0;\n    long primeCount32 = 0;\n    long primeSumCount32\
    \ = 0;\n    long primeCount33 = 0;\n    \n}\nint main() {\n    auto candidate\
    \ = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz5hg5e6x.cpp: In function 'int main()':\n/tmp/tmpz5hg5e6x.cpp:92:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz5hg5e6x.cpp:2:\n/tmp/tmpz5hg5e6x.cpp:93:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpz5hg5e6x.cpp:93:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpz5hg5e6x.cpp:93:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpz5hg5e6x.cpp:93:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpz5hg5e6x.cpp:93:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpz5hg5e6x.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 1, max_prime_digit\
    \ = 0;\n    long prime_digit = 0;\n    long prime_digits = 0;\n    long prime_sum\
    \ = 0;\n    long prime_sum2 = 0;\n    long prime_sum3 = 0;\n    long prime_sum4\
    \ = 0;\n    long prime_sum5 = 0;\n    long prime_sum6 = 0;\n    long prime_sum7\
    \ = 0;\n    long prime_sum8 = 0;\n    long prime_sum9 = 0;\n    long prime_sum10\
    \ = 0;\n    long prime_sum11 = 0;\n    long prime_sum12 = 0;\n    long prime_sum13\
    \ = 0;\n    long prime_sum14 = 0;\n    long prime_sum15 = 0;\n    long prime_sum16\
    \ = 0;\n    long prime_sum17 = 0;\n    long prime_sum18 = 0;\n    long prime_sum19\
    \ = 0;\n    long prime_sum20 = 0;\n    long prime_sum21 = 0;\n    long prime_sum22\
    \ = 0;\n    long prime_sum23 = 0;\n    long prime_sum24 = 0;\n    long prime_sum25\
    \ = 0;\n    long prime_sum26 = 0;\n    long prime_sum27 = 0;\n    long prime_sum28\
    \ = 0;\n    long prime_sum29 = 0;\n    long prime_sum30 = 0;\n    long prime_sum31\
    \ = 0;\n    long prime_sum32 = 0;\n    long prime_sum33 = 0;\n    long prime_sum34\
    \ = 0;\n    long prime_sum35 = 0;\n    long prime_sum36 = 0;\n    long prime_sum37\
    \ = 0;\n    long prime_sum38 = 0;\n    long prime_sum39 = 0;\n    long prime_sum40\
    \ = 0;\n    long prime_sum41 = 0;\n    long prime_sum42 = 0;\n    long prime_sum43\
    \ = 0;\n    long prime_sum44 = 0;\n    long prime_sum45 = 0;\n    long prime_sum46\
    \ = 0;\n    long prime_sum47 = 0;\n    long prime_sum48 = 0;\n    long prime_sum49\
    \ = 0;\n    long prime_sum50 = 0;\n    long prime_sum51 = 0;\n    long prime_sum52\
    \ = 0;\n    long prime_sum53 = 0;\n    long prime_sum54 = 0;\n    long prime_sum55\
    \ = 0;\n    long prime_sum56 = 0;\n    long prime_sum57 = 0;\n    long prime_sum58\
    \ = 0;\n    long prime_sum59 = 0;\n    long prime_sum60 = 0;\n\n}\nint main()\
    \ {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgecj0lkz.cpp: In function 'int main()':\n/tmp/tmpgecj0lkz.cpp:86:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgecj0lkz.cpp:2:\n/tmp/tmpgecj0lkz.cpp:87:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpgecj0lkz.cpp:87:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpgecj0lkz.cpp:87:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpgecj0lkz.cpp:87:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpgecj0lkz.cpp:87:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpgecj0lkz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    long prime = 0;\n    long\
    \ sum = 0;\n    long temp = 0;\n    long count = 0;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 0;\n    long q = 0;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 0;\n    long q = 0;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 0;\n\
    \    long q = 0;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = \n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplbuvn66e.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmplbuvn66e.cpp:51:10: error: redeclaration of 'long int i'\n\
    \     long i = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:25:10: error: 'long int i'\
    \ previously declared here\n     long i = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:52:10:\
    \ error: redeclaration of 'long int j'\n     long j = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:26:10:\
    \ error: 'long int j' previously declared here\n     long j = 1;\n          ^\n\
    /tmp/tmplbuvn66e.cpp:53:10: error: redeclaration of 'long int k'\n     long k\
    \ = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:27:10: error: 'long int k' previously\
    \ declared here\n     long k = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:54:10: error:\
    \ redeclaration of 'long int l'\n     long l = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:28:10:\
    \ error: 'long int l' previously declared here\n     long l = 1;\n          ^\n\
    /tmp/tmplbuvn66e.cpp:55:10: error: redeclaration of 'long int m'\n     long m\
    \ = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:29:10: error: 'long int m' previously\
    \ declared here\n     long m = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:56:10: error:\
    \ redeclaration of 'long int n'\n     long n = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:30:10:\
    \ error: 'long int n' previously declared here\n     long n = 1;\n          ^\n\
    /tmp/tmplbuvn66e.cpp:57:10: error: redeclaration of 'long int o'\n     long o\
    \ = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:31:10: error: 'long int o' previously\
    \ declared here\n     long o = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:58:10: error:\
    \ redeclaration of 'long int p'\n     long p = 0;\n          ^\n/tmp/tmplbuvn66e.cpp:32:10:\
    \ error: 'long int p' previously declared here\n     long p = 0;\n          ^\n\
    /tmp/tmplbuvn66e.cpp:59:10: error: redeclaration of 'long int q'\n     long q\
    \ = 0;\n          ^\n/tmp/tmplbuvn66e.cpp:33:10: error: 'long int q' previously\
    \ declared here\n     long q = 0;\n          ^\n/tmp/tmplbuvn66e.cpp:60:10: error:\
    \ redeclaration of 'long int r'\n     long r = 1;\n          ^\n/tmp/tmplbuvn66e.cpp:34:10:\
    \ error: 'long int r' previously declared here\n     long r = 1;\n          ^\n\
    /tmp/tmpl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i > max) {\n            max = i;\n        }\n    }\n    for (long i\
    \ : lst) {\n        if (i == max) {\n            ans += i;\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0j4fbcbs.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmp0j4fbcbs.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmp0j4fbcbs.cpp:26:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmp0j4fbcbs.cpp: In function 'int main()':\n\
    /tmp/tmp0j4fbcbs.cpp:34:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0j4fbcbs.cpp:2:\n/tmp/tmp0j4fbcbs.cpp:35:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmp0j4fbcbs.cpp:35:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp0j4fbcbs.cpp:35:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp0j4fbcbs.cpp:35:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long max_prime_digit\
    \ = 0;\n    long max_prime_digit_sum = 0;\n    long max_prime_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum = 0;\n    long\
    \ max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n    long max_prime\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7kfkalt.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpl7kfkalt.cpp:34:10: error: redeclaration of 'long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\n\
    \     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:33:10: error: 'long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\
    \ previously declared here\n     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:39:10: error: redeclaration of 'long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\n\
    \     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:38:10: error: 'long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\
    \ previously declared here\n     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:40:10: error: redeclaration of 'long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\n\
    \     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:38:10: error: 'long int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit'\
    \ previously declared here\n     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:42:10: error: redeclaration of 'long\
    \ int max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum'\n\
    \     long max_prime_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum_digit_sum\
    \ = 0;\n          ^\n/tmp/tmpl7kfkalt.cpp:41:10: error: 'long in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0;\n    long\
    \ max_prime_digit = 0;\n    long prime_digit = 0;\n    long prime_digit_sum =\
    \ 0;\n    long prime_digit_sum2 = 0;\n    long prime_digit_sum3 = 0;\n    long\
    \ prime_digit_sum4 = 0;\n    long prime_digit_sum5 = 0;\n    long prime_digit_sum6\
    \ = 0;\n    long prime_digit_sum7 = 0;\n    long prime_digit_sum8 = 0;\n    long\
    \ prime_digit_sum9 = 0;\n    long prime_digit_sum10 = 0;\n    long prime_digit_sum11\
    \ = 0;\n    long prime_digit_sum12 = 0;\n    long prime_digit_sum13 = 0;\n   \
    \ long prime_digit_sum14 = 0;\n    long prime_digit_sum15 = 0;\n    long prime_digit_sum16\
    \ = 0;\n    long prime_digit_sum17 = 0;\n    long prime_digit_sum18 = 0;\n   \
    \ long prime_digit_sum19 = 0;\n    long prime_digit_sum20 = 0;\n    long prime_digit_sum21\
    \ = 0;\n    long prime_digit_sum22 = 0;\n    long prime_digit_sum23 = 0;\n   \
    \ long prime_digit_sum24 = 0;\n    long prime_digit_sum25 = 0;\n    long prime_digit_sum26\
    \ = 0;\n    long prime_digit_sum27 = 0;\n    long prime_digit_sum28 = 0;\n   \
    \ long prime_digit_sum29 = 0;\n    long prime_digit_sum30 = 0;\n    long prime_digit_sum31\
    \ = 0;\n    long prime_digit_sum32 = 0;\n    long prime_digit_sum33 = 0;\n   \
    \ long prime_digit_sum34 = 0;\n    long prime_digit_sum35 = 0;\n    long prime_digit_sum36\
    \ = 0;\n    long prime_digit_sum37 = 0;\n    long prime_digit_sum38 = 0;\n   \
    \ long prime_digit_sum39 = 0;\n    long prime_digit_sum40 = 0;\n    long prime_digit_sum41\
    \ = 0;\n    long prime_digit_sum42 = 0;\n    long prime_digit_sum43 = 0;\n   \
    \ long prime_digit_sum44 = 0;\n    long prime_digit_sum45 = 0;\n    long prime_digit_sum46\
    \ = 0;\n    long prime_digit_sum47 = 0;\n    long prime_digit_sum48 = 0;\n   \
    \ long prime_digit_sum49 = 0;\n    long prime_digit_sum50 = 0;\n    long prime_digit_sum51\
    \ = 0;\n    long prime_digit_sum52 = 0;\n    long prime_digit_sum53 = 0;\n   \
    \ long prime_digit_sum54 = 0;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw3g5oc4p.cpp: In function 'int main()':\n/tmp/tmpw3g5oc4p.cpp:79:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw3g5oc4p.cpp:2:\n/tmp/tmpw3g5oc4p.cpp:80:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpw3g5oc4p.cpp:80:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpw3g5oc4p.cpp:80:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpw3g5oc4p.cpp:80:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpw3g5oc4p.cpp:80:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpw3g5oc4p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max_prime = 0;\n    long prime_sum = 0;\n\
    \    long prime_digit = 0;\n    long prime_digit2 = 0;\n    long prime_digit3\
    \ = 0;\n    long prime_digit4 = 0;\n    long prime_digit5 = 0;\n    long prime_digit6\
    \ = 0;\n    long prime_digit7 = 0;\n    long prime_digit8 = 0;\n    long prime_digit9\
    \ = 0;\n    long prime_digit10 = 0;\n    long prime_digit11 = 0;\n    long prime_digit12\
    \ = 0;\n    long prime_digit13 = 0;\n    long prime_digit14 = 0;\n    long prime_digit15\
    \ = 0;\n    long prime_digit16 = 0;\n    long prime_digit17 = 0;\n    long prime_digit18\
    \ = 0;\n    long prime_digit19 = 0;\n    long prime_digit20 = 0;\n    long prime_digit21\
    \ = 0;\n    long prime_digit22 = 0;\n    long prime_digit23 = 0;\n    long prime_digit24\
    \ = 0;\n    long prime_digit25 = 0;\n    long prime_digit26 = 0;\n    long prime_digit27\
    \ = 0;\n    long prime_digit28 = 0;\n    long prime_digit29 = 0;\n    long prime_digit30\
    \ = 0;\n    long prime_digit31 = 0;\n    long prime_digit32 = 0;\n    long prime_digit33\
    \ = 0;\n    long prime_digit34 = 0;\n    long prime_digit35 = 0;\n    long prime_digit36\
    \ = 0;\n    long prime_digit37 = 0;\n    long prime_digit38 = 0;\n    long prime_digit39\
    \ = 0;\n    long prime_digit40 = 0;\n    long prime_digit41 = 0;\n    long prime_digit42\
    \ = 0;\n    long prime_digit43 = 0;\n    long prime_digit44 = 0;\n    long prime_digit45\
    \ = 0;\n    long prime_digit46 = 0;\n    long prime_digit47 = 0;\n    long prime_digit48\
    \ = 0;\n    long prime_digit49 = 0;\n    long prime_digit50 = 0;\n    long prime_digit51\
    \ = 0;\n    long prime_digit52 = 0;\n    long prime_digit53 = 0;\n    long prime_digit54\
    \ = 0;\n    long prime_digit55 = 0;\n    long prime_digit56 = 0;\n    long prime_digit57\
    \ = 0;\n    long prime_digit58 = 0;\n    long prime_digit59 = 0;\n    long prime_digit60\
    \ = 0;\n    long prime_digit61 = 0;\n    long prime_digit62 = 0;\n    long prime\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpougbuwms.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpougbuwms.cpp:85:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmpougbuwms.cpp: In function 'int main()':\n/tmp/tmpougbuwms.cpp:87:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpougbuwms.cpp:2:\n/tmp/tmpougbuwms.cpp:88:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpougbuwms.cpp:88:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpougbuwms.cpp:88:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpougbuwms.cpp:88:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpougbuwms.cpp:88:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long maxPrime = 0, maxPrimeDigit\
    \ = 0;\n    long primes[10] = {0};\n    long primesCount[10] = {0};\n    long\
    \ primesSum[10] = {0};\n    long primesSumDigit[10] = {0};\n    long primesSumDigitCount[10]\
    \ = {0};\n    long primesSumDigitSum[10] = {0};\n    long primesSumDigitSumCount[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigitSumCountSum[10]\
    \ = {0};\n    long primesSumDigitSumCountSum[10] = {0};\n    long primesSumDigit\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqs6brdup.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpqs6brdup.cpp:29:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' previously declared here\n     long primesSumDigitSumCountSum[10] = {0};\n\
    \          ^\n/tmp/tmpqs6brdup.cpp:30:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' previously declared here\n     long primesSumDigitSumCountSum[10] = {0};\n\
    \          ^\n/tmp/tmpqs6brdup.cpp:31:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' previously declared here\n     long primesSumDigitSumCountSum[10] = {0};\n\
    \          ^\n/tmp/tmpqs6brdup.cpp:32:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' previously declared here\n     long primesSumDigitSumCountSum[10] = {0};\n\
    \          ^\n/tmp/tmpqs6brdup.cpp:33:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' previously declared here\n     long primesSumDigitSumCountSum[10] = {0};\n\
    \          ^\n/tmp/tmpqs6brdup.cpp:34:38: error: redeclaration of 'long int primesSumDigitSumCountSum\
    \ [10]'\n     long primesSumDigitSumCountSum[10] = {0};\n                    \
    \                  ^\n/tmp/tmpqs6brdup.cpp:28:10: error: 'long int primesSumDigitSumCountSum\
    \ [10]' p"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, n = lst.size();\n    long max_prime = 0, max_prime_digit\
    \ = 0, max_prime_digit_sum = 0;\n    long prime_digit_sum = 0;\n    long prime_digit\
    \ = 0;\n    long prime_digit_sum2 = 0;\n    long prime_digit_sum3 = 0;\n    long\
    \ prime_digit_sum4 = 0;\n    long prime_digit_sum5 = 0;\n    long prime_digit_sum6\
    \ = 0;\n    long prime_digit_sum7 = 0;\n    long prime_digit_sum8 = 0;\n    long\
    \ prime_digit_sum9 = 0;\n    long prime_digit_sum10 = 0;\n    long prime_digit_sum11\
    \ = 0;\n    long prime_digit_sum12 = 0;\n    long prime_digit_sum13 = 0;\n   \
    \ long prime_digit_sum14 = 0;\n    long prime_digit_sum15 = 0;\n    long prime_digit_sum16\
    \ = 0;\n    long prime_digit_sum17 = 0;\n    long prime_digit_sum18 = 0;\n   \
    \ long prime_digit_sum19 = 0;\n    long prime_digit_sum20 = 0;\n    long prime_digit_sum21\
    \ = 0;\n    long prime_digit_sum22 = 0;\n    long prime_digit_sum23 = 0;\n   \
    \ long prime_digit_sum24 = 0;\n    long prime_digit_sum25 = 0;\n    long prime_digit_sum26\
    \ = 0;\n    long prime_digit_sum27 = 0;\n    long prime_digit_sum28 = 0;\n   \
    \ long prime_digit_sum29 = 0;\n    long prime_digit_sum30 = 0;\n    long prime_digit_sum31\
    \ = 0;\n    long prime_digit_sum32 = 0;\n    long prime_digit_sum33 = 0;\n   \
    \ long prime_digit_sum34 = 0;\n    long prime_digit_sum35 = 0;\n    long prime_digit_sum36\
    \ = 0;\n    long prime_digit_sum37 = 0;\n    long prime_digit_sum38 = 0;\n   \
    \ long prime_digit_sum39 = 0;\n    long prime_digit_sum40 = 0;\n    long prime_digit_sum41\
    \ = 0;\n    long prime_digit_sum42 = 0;\n    long prime_digit_sum43 = 0;\n   \
    \ long prime_digit_sum44 = 0;\n    long prime_digit_sum45 = 0;\n    long prime_digit_sum46\
    \ = 0;\n    long prime_digit_sum47 = 0;\n    long prime_digit_sum48 = 0;\n   \
    \ long prime_digit_sum49 = 0;\n    long prime_digit_sum50 = 0;\n    long prime_digit_sum51\
    \ = 0;\n    long prime_digit_sum52 = 0;\n    long prime_digit_sum53 = 0;\n   \
    \ long prime_digit_\n}\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppejk2nn2.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmppejk2nn2.cpp:76:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmppejk2nn2.cpp: In function 'int main()':\n/tmp/tmppejk2nn2.cpp:78:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppejk2nn2.cpp:2:\n/tmp/tmppejk2nn2.cpp:79:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmppejk2nn2.cpp:79:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmppejk2nn2.cpp:79:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmppejk2nn2.cpp:79:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmppejk2nn2.cpp:79:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0, prime = 0, sum = 0;\n    for (long i : lst) {\n  \
    \      if (i % 2 == 0) {\n            sum += i;\n        }\n        if (i % 3\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 5 == 0) {\n     \
    \       sum += i;\n        }\n        if (i % 7 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 11 == 0) {\n            sum += i;\n        }\n   \
    \     if (i % 13 == 0) {\n            sum += i;\n        }\n        if (i % 17\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 19 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 23 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 29 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 31 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 37 == 0) {\n            sum += i;\n        }\n        if (i % 41 == 0) {\n \
    \           sum += i;\n        }\n        if (i % 43 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 47 == 0) {\n            sum += i;\n      \
    \  }\n        if (i % 53 == 0) {\n            sum += i;\n        }\n        if\
    \ (i % 59 == 0) {\n            sum += i;\n        }\n        if (i % 61 == 0)\
    \ {\n            sum += i;\n        }\n        if (i % 67 == 0) {\n          \
    \  sum += i;\n        }\n        if (i % 71 == 0) {\n            sum += i;\n \
    \       }\n        if (i % 73 == 0) {\n            sum += i;\n        }\n    \
    \    if (i % 79 == 0) {\n            sum += i;\n        }\n        if (i % 83\
    \ == 0) {\n            sum += i;\n        }\n        if (i % 89 == 0) {\n    \
    \        sum += i;\n        }\n        if (i % 97 == 0) {\n            sum +=\
    \ i;\n        }\n        if (i % 103 == 0) {\n            sum += i;\n        }\n\
    \        if (i % 109 == 0) {\n            sum += i;\n        }\n        if (i\
    \ % 113 == 0) {\n            sum += i;\n        }\n        if (i % 127 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 131 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 137 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 141 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 147 == 0) {\n            sum += i;\n        }\n        if (i % 151 ==\
    \ 0) {\n            sum += i;\n        }\n        if (i % 157 == 0) {\n      \
    \      sum += i;\n        }\n        if (i % 161 == 0) {\n            sum += i;\n\
    \        }\n        if (i % 167 == 0) {\n            sum += i;\n        }\n  \
    \      if (i % 171 == 0) {\n            sum += i;\n        }\n        if (i %\
    \ 177 == 0) {\n            sum += i;\n        }\n        if (i % 181 == 0) {\n\
    \            sum += i;\n        }\n        if (i % 187 == 0) {\n            sum\
    \ += i;\n        }\n        if (i % 191 == 0) {\n            sum += i;\n     \
    \   }\n        if (i % 197 == 0) {\n            sum += i;\n        }\n       \
    \ if (i % 201 == 0) {\n            sum += i;\n        }\n        if (\n}\nint\
    \ main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmbrce5q5.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpmbrce5q5.cpp:20:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpmbrce5q5.cpp:154:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmpmbrce5q5.cpp:154:1:\
    \ error: expected ')' before '}' token\n/tmp/tmpmbrce5q5.cpp:154:1: error: expected\
    \ primary-expression before '}' token\n/tmp/tmpmbrce5q5.cpp:154:1: error: expected\
    \ ';' before '}' token\n/tmp/tmpmbrce5q5.cpp:155:12: error: a function-definition\
    \ is not allowed here before '{' token\n int main() {\n            ^\n/tmp/tmpmbrce5q5.cpp:166:1:\
    \ error: expected '}' at end of input\n }\n ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i : lst) {\n   \
    \     if (i == 0) {\n            continue;\n        }\n        long m = i;\n \
    \       for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n     \
    \           m = i;\n                break;\n            }\n        }\n       \
    \ if (m > max) {\n            max = m;\n        }\n    }\n    for (long i : lst)\
    \ {\n        if (i == 0) {\n            continue;\n        }\n        long m =\
    \ i;\n        for (long j = 1; j <= i; j++) {\n            if (i % j == 0) {\n\
    \                m = i;\n                break;\n            }\n        }\n  \
    \      if (m == max) {\n            ans += i;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = skjkasdkd;\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp5yhf5s2.cpp: In function 'long int skjkasdkd(std::vector<long\
    \ int>)':\n/tmp/tmpp5yhf5s2.cpp:21:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : lst) {\n                   ^\n/tmp/tmpp5yhf5s2.cpp:36:19:\
    \ error: range-based 'for' loops are not allowed in C++98 mode\n     for (long\
    \ i : lst) {\n                   ^\n/tmp/tmpp5yhf5s2.cpp: In function 'int main()':\n\
    /tmp/tmpp5yhf5s2.cpp:54:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = skjkasdkd;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp5yhf5s2.cpp:2:\n/tmp/tmpp5yhf5s2.cpp:55:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmpp5yhf5s2.cpp:55:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpp5yhf5s2.cpp:55:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpp5yhf5s2.cpp:55:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of\
    \ integers.\n// You need to find the largest prime value and return the sum of\
    \ its digits.\n// Examples:\n// >>> skjkasdkd((std::vector<long>({(long)0, (long)3,\
    \ (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5,\
    \ (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32,\
    \ (long)324, (long)4, (long)3})))\n// (10)\n// >>> skjkasdkd((std::vector<long>({(long)1,\
    \ (long)0, (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1})))\n\
    // (25)\n// >>> skjkasdkd((std::vector<long>({(long)1, (long)3, (long)1, (long)32,\
    \ (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23, (long)2323,\
    \ (long)32, (long)30, (long)1, (long)9, (long)3})))\n// (13)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)724, (long)32, (long)71, (long)99, (long)32, (long)6, (long)0, (long)5,\
    \ (long)91, (long)83, (long)0, (long)5, (long)6})))\n// (11)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21})))\n// (3)\n// >>> skjkasdkd((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7})))\n// (7)\nlong skjkasdkd(std::vector<long>\
    \ lst) {\n    long ans = 0;\n    long max = 0;\n    for (long i = 0; i < lst.size();\
    \ i++) {\n        long curr = lst[i];\n        if (curr > max) {\n           \
    \ max = curr;\n        }\n    }\n    for (long i = 0; i < lst.size(); i++) {\n\
    \        long curr = lst[i];\n        if (curr == max) {\n            long sum\
    \ = 0;\n            while (curr > 0) {\n                sum += (curr % 10);\n\
    \                curr /= 10;\n            }\n            ans += sum;\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = skjkasdkd;\n\
    \    assert(candidate((std::vector<long>({(long)0, (long)3, (long)2, (long)1,\
    \ (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2, (long)181,\
    \ (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324, (long)4,\
    \ (long)3}))) == (10));\n    assert(candidate((std::vector<long>({(long)1, (long)0,\
    \ (long)1, (long)8, (long)2, (long)4597, (long)2, (long)1, (long)3, (long)40,\
    \ (long)1, (long)2, (long)1, (long)2, (long)4, (long)2, (long)5, (long)1}))) ==\
    \ (25));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)1,\
    \ (long)32, (long)5107, (long)34, (long)83278, (long)109, (long)163, (long)23,\
    \ (long)2323, (long)32, (long)30, (long)1, (long)9, (long)3}))) == (13));\n  \
    \  assert(candidate((std::vector<long>({(long)0, (long)724, (long)32, (long)71,\
    \ (long)99, (long)32, (long)6, (long)0, (long)5, (long)91, (long)83, (long)0,\
    \ (long)5, (long)6}))) == (11));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)81, (long)12, (long)3, (long)1, (long)21}))) == (3));\n    assert(candidate((std::vector<long>({(long)0,\
    \ (long)8, (long)1, (long)2, (long)1, (long)7}))) == (7));\n    assert(candidate((std::vector<long>({(long)8191})))\
    \ == (19));\n    assert(candidate((std::vector<long>({(long)8191, (long)123456,\
    \ (long)127, (long)7}))) == (19));\n    assert(candidate((std::vector<long>({(long)127,\
    \ (long)97, (long)8192}))) == (10));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps_dl65sw.cpp: In function 'int main()':\n/tmp/tmps_dl65sw.cpp:41:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = skjkasdkd;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmps_dl65sw.cpp:2:\n/tmp/tmps_dl65sw.cpp:42:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)0, (long)3, (long)2,\
    \ (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5, (long)5, (long)2,\
    \ (long)181, (long)32, (long)4, (long)32, (long)3, (long)2, (long)32, (long)324,\
    \ (long)4, (long)3}))) == (10));\n                                        ^\n\
    /tmp/tmps_dl65sw.cpp:42:246: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)0,\
    \ (long)3, (long)2, (long)1, (long)3, (long)5, (long)7, (long)4, (long)5, (long)5,\
    \ (long)5, (long)2, (long)181, (long)32, (long)4, (long)32, (long)3, (long)2,\
    \ (long)32, (long)324, (long)4, (long)3}))) == (10));\n                      \
    \                                                                            \
    \                                                                            \
    \                                                                        ^\n/tmp/tmps_dl65sw.cpp:42:246:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmps_dl65sw.cpp:42:246: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmps_dl65sw.cpp:42:246: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmps_dl65sw.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template"
  stdout: ''

language: cpp
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.push_back(string);\n  for (size_t i = 1; i < string.size();\
    \ i++) {\n    prefixes.push_back(string(i, string[i]));\n  }\n  return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprw3fr_jh.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmprw3fr_jh.cpp:10:43: error: no match for\
    \ call to '(std::string {aka std::basic_string<char>}) (size_t&, char&)'\n   \
    \  prefixes.push_back(string(i, string[i]));\n                               \
    \            ^\n/tmp/tmprw3fr_jh.cpp: In function 'int main()':\n/tmp/tmprw3fr_jh.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprw3fr_jh.cpp:2:\n/tmp/tmprw3fr_jh.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmprw3fr_jh.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmprw3fr_jh.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmprw3fr_jh.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprw3fr_jh.cpp:17:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmprw3fr_jh.cpp:17:186: not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (size_t i = 0; i < string.size();\
    \ ++i) {\n        if (string[i] == string[0]) {\n            prefix = prefix +\
    \ string[i];\n        } else {\n            prefixes.push_back(prefix);\n    \
    \        prefix = string[i];\n        }\n    }\n    prefixes.push_back(prefix);\n\
    \    return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n \
    \   assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9b2vensi.cpp: In function 'int main()':\n/tmp/tmp9b2vensi.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9b2vensi.cpp:2:\n/tmp/tmp9b2vensi.cpp:22:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp9b2vensi.cpp:23:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp9b2vensi.cpp:23:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp9b2vensi.cpp:23:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9b2vensi.cpp:23:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp9b2vensi.cpp:23:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp9b2vensi.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.reserve(string.size());\n  for (size_t i = 0; i < string.size();\
    \ ++i) {\n    prefixes.push_back(string.substr(0, i));\n  }\n  return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7w867_25.cpp: In function 'int main()':\n/tmp/tmp7w867_25.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/tmp/tmp7w867_25.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp7w867_25.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp7w867_25.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp7w867_25.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7w867_25.cpp:17:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp7w867_25.cpp:17:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.push_back(string);\n  for (size_t i = 1; i < string.size();\
    \ ++i) {\n    prefixes.push_back(string(string.begin(), string.begin() + i));\n\
    \  }\n  return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphi_rf5d7.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmphi_rf5d7.cpp:10:65: error: no match for\
    \ call to '(std::string {aka std::basic_string<char>}) (std::basic_string<char>::iterator,\
    \ __gnu_cxx::__normal_iterator<char*, std::basic_string<char> >)'\n     prefixes.push_back(string(string.begin(),\
    \ string.begin() + i));\n                                                    \
    \             ^\n/tmp/tmphi_rf5d7.cpp: In function 'int main()':\n/tmp/tmphi_rf5d7.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmphi_rf5d7.cpp:2:\n/tmp/tmphi_rf5d7.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmphi_rf5d7.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmphi_rf5d7.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmphi_rf5d7.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmphi_rf5d7.cpp:17:186: error: no matching function\
    \ f"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (size_t i = 0; i < string.length();\
    \ ++i) {\n        prefix = prefix + string[i];\n        prefixes.push_back(prefix);\n\
    \    }\n    return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6enipm8p.cpp: In function 'int main()':\n/tmp/tmp6enipm8p.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6enipm8p.cpp:2:\n/tmp/tmp6enipm8p.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp6enipm8p.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp6enipm8p.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp6enipm8p.cpp:18:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6enipm8p.cpp:18:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp6enipm8p.cpp:18:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp6enipm8p.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (auto c : string) {\n   \
    \     prefix = prefix + c;\n        prefixes.push_back(prefix);\n    }\n    return\
    \ prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) ==\
    \ (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\", (std::string)\"\
    asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"asdfgh\"\
    })));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4_2aooi.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmpj4_2aooi.cpp:9:15: error: 'c' does not\
    \ name a type\n     for (auto c : string) {\n               ^\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected ';' before 'return'\n     return prefixes;\n     ^\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpj4_2aooi.cpp: In function 'int main()':\n/tmp/tmpj4_2aooi.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj4_2aooi.cpp:2:\n/tmp/tmpj4_2aooi.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpj4_2aooi.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpj4_2aooi.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpj4_2aooi.cpp:18:186:\
    \ warning: extended in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  for (size_t i = 0; i < string.length(); ++i) {\n    prefixes.push_back(string.substr(0,\
    \ i));\n  }\n  return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp54u5qjn_.cpp: In function 'int main()':\n/tmp/tmp54u5qjn_.cpp:14:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp54u5qjn_.cpp:2:\n/tmp/tmp54u5qjn_.cpp:15:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp54u5qjn_.cpp:16:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp54u5qjn_.cpp:16:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp54u5qjn_.cpp:16:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp54u5qjn_.cpp:16:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp54u5qjn_.cpp:16:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp54u5qjn_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (size_t i = 0; i < string.size();\
    \ ++i) {\n        prefix += string[i];\n        prefixes.push_back(prefix);\n\
    \    }\n    return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpja3exxyz.cpp: In function 'int main()':\n/tmp/tmpja3exxyz.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpja3exxyz.cpp:2:\n/tmp/tmpja3exxyz.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpja3exxyz.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpja3exxyz.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpja3exxyz.cpp:18:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpja3exxyz.cpp:18:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmpja3exxyz.cpp:18:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpja3exxyz.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.push_back(string);\n  while (string.size() > 1) {\n  \
    \  string prefix = string.substr(0, string.size() - 1);\n    prefixes.push_back(prefix);\n\
    \    string = string.substr(string.size() - 1);\n  }\n  return prefixes;\n}\n\
    int main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"))\
    \ == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj2dvj8vb.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmpj2dvj8vb.cpp:10:12: error: expected ';'\
    \ before 'prefix'\n     string prefix = string.substr(0, string.size() - 1);\n\
    \            ^\n/tmp/tmpj2dvj8vb.cpp:11:24: error: 'prefix' was not declared in\
    \ this scope\n     prefixes.push_back(prefix);\n                        ^\n/tmp/tmpj2dvj8vb.cpp:\
    \ In function 'int main()':\n/tmp/tmpj2dvj8vb.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = all_prefixes;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj2dvj8vb.cpp:2:\n/tmp/tmpj2dvj8vb.cpp:18:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpj2dvj8vb.cpp:19:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpj2dvj8vb.cpp:19:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpj2dvj8vb.cpp:19:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpj2dvj8vb.cpp:19:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-en"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    prefixes.reserve(string.size());\n    for (auto it = string.begin();\
    \ it != string.end(); ++it) {\n        prefixes.push_back(*it);\n    }\n    return\
    \ prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) ==\
    \ (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\", (std::string)\"\
    asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"asdfgh\"\
    })));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmparbsf_sv.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmparbsf_sv.cpp:9:15: error: 'it' does not\
    \ name a type\n     for (auto it = string.begin(); it != string.end(); ++it) {\n\
    \               ^\n/tmp/tmparbsf_sv.cpp:9:36: error: expected ';' before 'it'\n\
    \     for (auto it = string.begin(); it != string.end(); ++it) {\n           \
    \                         ^\n/tmp/tmparbsf_sv.cpp:9:36: error: 'it' was not declared\
    \ in this scope\n/tmp/tmparbsf_sv.cpp: In function 'int main()':\n/tmp/tmparbsf_sv.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmparbsf_sv.cpp:2:\n/tmp/tmparbsf_sv.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmparbsf_sv.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmparbsf_sv.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmparbsf_sv.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmparbsf_sv.cpp:17"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.reserve(string.size());\n  for (size_t i = 0; i < string.size();\
    \ ++i) {\n    for (size_t j = i; j < string.size(); ++j) {\n      prefixes.push_back(string.substr(i,\
    \ j));\n    }\n  }\n  return prefixes;\n}\nint main() {\n    auto candidate =\
    \ all_prefixes;\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdyh22qah.cpp: In function 'int main()':\n/tmp/tmpdyh22qah.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdyh22qah.cpp:2:\n/tmp/tmpdyh22qah.cpp:18:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpdyh22qah.cpp:19:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpdyh22qah.cpp:19:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpdyh22qah.cpp:19:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdyh22qah.cpp:19:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmpdyh22qah.cpp:19:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdyh22qah.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  for (size_t i = 0; i < string.length(); ++i) {\n    std::string\
    \ prefix = \"\";\n    for (size_t j = 0; j < i; ++j) {\n      prefix += string[j];\n\
    \    }\n    prefixes.push_back(prefix);\n  }\n  return prefixes;\n}\nint main()\
    \ {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\")) == (std::vector<std::string>()));\n\
    \    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl6tc4z4_.cpp: In function 'int main()':\n/tmp/tmpl6tc4z4_.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpl6tc4z4_.cpp:2:\n/tmp/tmpl6tc4z4_.cpp:19:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpl6tc4z4_.cpp:20:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpl6tc4z4_.cpp:20:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpl6tc4z4_.cpp:20:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpl6tc4z4_.cpp:20:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmpl6tc4z4_.cpp:20:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpl6tc4z4_.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.reserve(string.size());\n  for (size_t i = 0; i < string.size();\
    \ ++i) {\n    prefixes.push_back(string.substr(0, i));\n  }\n  return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7w867_25.cpp: In function 'int main()':\n/tmp/tmp7w867_25.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/tmp/tmp7w867_25.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp7w867_25.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp7w867_25.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp7w867_25.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7w867_25.cpp:17:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp7w867_25.cpp:17:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    prefixes.push_back(string);\n    \n    for (size_t i = 1; i <\
    \ string.size(); i++) {\n        prefixes.push_back(string.substr(0, i));\n  \
    \  }\n    return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdfcy16d9.cpp: In function 'int main()':\n/tmp/tmpdfcy16d9.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdfcy16d9.cpp:2:\n/tmp/tmpdfcy16d9.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpdfcy16d9.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpdfcy16d9.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpdfcy16d9.cpp:18:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpdfcy16d9.cpp:18:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmpdfcy16d9.cpp:18:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpdfcy16d9.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.push_back(string);\n  for (size_t i = 1; i < string.size();\
    \ ++i) {\n    prefixes.push_back(string.substr(0, i));\n  }\n  return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn_d2wbzg.cpp: In function 'int main()':\n/tmp/tmpn_d2wbzg.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn_d2wbzg.cpp:2:\n/tmp/tmpn_d2wbzg.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpn_d2wbzg.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpn_d2wbzg.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpn_d2wbzg.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpn_d2wbzg.cpp:17:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmpn_d2wbzg.cpp:17:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpn_d2wbzg.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  for (int i = 0; i < string.length(); ++i) {\n    for (int j = i;\
    \ j < string.length(); ++j) {\n      prefixes.push_back(string.substr(i, j));\n\
    \    }\n  }\n  return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4zbv73_a.cpp: In function 'int main()':\n/tmp/tmp4zbv73_a.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp4zbv73_a.cpp:2:\n/tmp/tmp4zbv73_a.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp4zbv73_a.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp4zbv73_a.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp4zbv73_a.cpp:18:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp4zbv73_a.cpp:18:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp4zbv73_a.cpp:18:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp4zbv73_a.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (size_t i = 0; i < string.length();\
    \ i++) {\n        prefix = prefix + string[i];\n        prefixes.push_back(prefix);\n\
    \    }\n    return prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n\
    \    assert(candidate((\"\")) == (std::vector<std::string>()));\n    assert(candidate((\"\
    asdfgh\")) == (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\"\
    , (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"\
    asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6dy5nra1.cpp: In function 'int main()':\n/tmp/tmp6dy5nra1.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6dy5nra1.cpp:2:\n/tmp/tmp6dy5nra1.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp6dy5nra1.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp6dy5nra1.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp6dy5nra1.cpp:18:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp6dy5nra1.cpp:18:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp6dy5nra1.cpp:18:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp6dy5nra1.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (auto c : string) {\n   \
    \     prefix += c;\n        prefixes.push_back(prefix);\n    }\n    return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi9lac7ks.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmpi9lac7ks.cpp:9:15: error: 'c' does not\
    \ name a type\n     for (auto c : string) {\n               ^\n/tmp/tmpi9lac7ks.cpp:13:5:\
    \ error: expected ';' before 'return'\n     return prefixes;\n     ^\n/tmp/tmpi9lac7ks.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpi9lac7ks.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpi9lac7ks.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpi9lac7ks.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpi9lac7ks.cpp: In function 'int main()':\n/tmp/tmpi9lac7ks.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi9lac7ks.cpp:2:\n/tmp/tmpi9lac7ks.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpi9lac7ks.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpi9lac7ks.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpi9lac7ks.cpp:18:186:\
    \ warning: extended in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n    std::vector<std::string>\
    \ prefixes;\n    std::string prefix = \"\";\n    for (auto c : string) {\n   \
    \     prefix = prefix + c;\n        prefixes.push_back(prefix);\n    }\n    return\
    \ prefixes;\n}\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\
    \")) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) ==\
    \ (std::vector<std::string>({(std::string)\"a\", (std::string)\"as\", (std::string)\"\
    asd\", (std::string)\"asdf\", (std::string)\"asdfg\", (std::string)\"asdfgh\"\
    })));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj4_2aooi.cpp: In function 'std::vector<std::basic_string<char>\
    \ > all_prefixes(std::string)':\n/tmp/tmpj4_2aooi.cpp:9:15: error: 'c' does not\
    \ name a type\n     for (auto c : string) {\n               ^\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected ';' before 'return'\n     return prefixes;\n     ^\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpj4_2aooi.cpp:13:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpj4_2aooi.cpp: In function 'int main()':\n/tmp/tmpj4_2aooi.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpj4_2aooi.cpp:2:\n/tmp/tmpj4_2aooi.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmpj4_2aooi.cpp:18:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmpj4_2aooi.cpp:18:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmpj4_2aooi.cpp:18:186:\
    \ warning: extended in"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return list of all prefixes\
    \ from shortest to longest of the input string\n// >>> all_prefixes((\"abc\"))\n\
    // (std::vector<std::string>({(std::string)\"a\", (std::string)\"ab\", (std::string)\"\
    abc\"}))\nstd::vector<std::string> all_prefixes(std::string string) {\n  std::vector<std::string>\
    \ prefixes;\n  prefixes.reserve(string.size());\n  for (size_t i = 0; i < string.size();\
    \ ++i) {\n    prefixes.push_back(string.substr(0, i));\n  }\n  return prefixes;\n\
    }\nint main() {\n    auto candidate = all_prefixes;\n    assert(candidate((\"\"\
    )) == (std::vector<std::string>()));\n    assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n    assert(candidate((\"WWW\")) == (std::vector<std::string>({(std::string)\"\
    W\", (std::string)\"WW\", (std::string)\"WWW\"})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7w867_25.cpp: In function 'int main()':\n/tmp/tmp7w867_25.cpp:15:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = all_prefixes;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/tmp/tmp7w867_25.cpp:16:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (std::vector<std::string>()));\n                          ^\n/tmp/tmp7w867_25.cpp:17:62:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                        ^\n/tmp/tmp7w867_25.cpp:17:186: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((\"asdfgh\")) == (std::vector<std::string>({(std::string)\"\
    a\", (std::string)\"as\", (std::string)\"asd\", (std::string)\"asdf\", (std::string)\"\
    asdfg\", (std::string)\"asdfgh\"})));\n                                      \
    \                                                                            \
    \                                                                        ^\n/tmp/tmp7w867_25.cpp:17:186:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp7w867_25.cpp:17:186: error: no matching function\
    \ for call to 'std::vector<std::basic_string<char> >::vector(<brace-enclosed initializer\
    \ list>)'\n/tmp/tmp7w867_25.cpp:17:186: note: candidates are:\nIn file included\
    \ from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmp7w867_25.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ not"
  stdout: ''

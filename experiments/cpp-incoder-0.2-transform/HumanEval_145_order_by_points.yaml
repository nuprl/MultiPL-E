name: HumanEval_145_order_by_points
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function which sorts\
  \ the given list of integers\n// in ascending order according to the sum of their\
  \ digits.\n// Note: if there are several items with similar sum of their digits,\n\
  // order them based on their index in original list.\n// For example:\n// >>> order_by_points((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12})))\n// (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11}))\n// >>> order_by_points((std::vector<long>()))\n\
  // (std::vector<long>())\nstd::vector<long> order_by_points(std::vector<long> nums)\
  \ {\n"
tests: "}\nint main() {\n    auto candidate = order_by_points;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)11, (long)-1, (long)-11, (long)-12}))) == (std::vector<long>({(long)-1,\
  \ (long)-11, (long)1, (long)-12, (long)11})));\n    assert(candidate((std::vector<long>({(long)1234,\
  \ (long)423, (long)463, (long)145, (long)2, (long)423, (long)423, (long)53, (long)6,\
  \ (long)37, (long)3457, (long)3, (long)56, (long)0, (long)46}))) == (std::vector<long>({(long)0,\
  \ (long)2, (long)3, (long)6, (long)53, (long)423, (long)423, (long)423, (long)1234,\
  \ (long)145, (long)37, (long)46, (long)56, (long)463, (long)3457})));\n    assert(candidate((std::vector<long>()))\
  \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)-11, (long)-32, (long)43, (long)54, (long)-98, (long)2, (long)-3}))) ==\
  \ (std::vector<long>({(long)-3, (long)-32, (long)-98, (long)-11, (long)1, (long)2,\
  \ (long)43, (long)54})));\n    assert(candidate((std::vector<long>({(long)1, (long)2,\
  \ (long)3, (long)4, (long)5, (long)6, (long)7, (long)8, (long)9, (long)10, (long)11})))\
  \ == (std::vector<long>({(long)1, (long)10, (long)2, (long)11, (long)3, (long)4,\
  \ (long)5, (long)6, (long)7, (long)8, (long)9})));\n    assert(candidate((std::vector<long>({(long)0,\
  \ (long)6, (long)6, (long)-76, (long)-21, (long)23, (long)4}))) == (std::vector<long>({(long)-76,\
  \ (long)-21, (long)0, (long)4, (long)23, (long)6, (long)6})));\n}\n"
completions: ["    // Write your code here\n    long long sum = 0;\n    for(long long\
    \ i : nums){\n        sum += i;\n    }\n    std::vector<long> result;\n    for(long\
    \ long i : nums){\n        if(sum == i){\n            result.push_back(i);\n \
    \       }\n    }\n    for(long long i : nums){\n        if(sum < i){\n       \
    \     result.push_back(i);\n        }\n    }\n    for(long long i : nums){\n \
    \       if(sum > i){\n            result.push_back(i);\n        }\n    }\n   \
    \ return result;", "    // Write your code here\n    long sum = 0;\n    long temp\
    \ = 0;\n    long index = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long\
    \ temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n\
    \    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11\
    \ = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n   \
    \ long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n   \
    \ long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n    long temp81\
    \ = 0;\n    long temp82 = 0;\n    long temp83 = 0;\n    long temp84", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   long maxSum = sum;\n    long maxSumIndex = 0;\n    for (long i = 0; i < nums2.size();\
    \ i++) {\n        long sum2 = sum - nums2[i];\n        if (sum2 > maxSum) {\n\
    \            maxSum = sum2;\n            maxSumIndex = i;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for (long i = 0; i < nums2.size(); i++) {\n \
    \       if (i == maxSumIndex) {\n            ans.push_back(nums2[i]);\n      \
    \  }\n    }\n    return ans;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return std::abs(a - b) < 10;\n    });\n    return nums_copy;",
  "    // Write your code here\n    long sum = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long index = 0;\n    long sum2 = 0;\n    long max2 = 0;\n    long\
    \ min2 = 0;\n    long index2 = 0;\n    long sum3 = 0;\n    long max3 = 0;\n  \
    \  long min3 = 0;\n    long index3 = 0;\n    long sum4 = 0;\n    long max4 = 0;\n\
    \    long min4 = 0;\n    long index4 = 0;\n    long sum5 = 0;\n    long max5 =\
    \ 0;\n    long min5 = 0;\n    long index5 = 0;\n    long sum6 = 0;\n    long max6\
    \ = 0;\n    long min6 = 0;\n    long index6 = 0;\n    long sum7 = 0;\n    long\
    \ max7 = 0;\n    long min7 = 0;\n    long index7 = 0;\n    long sum8 = 0;\n  \
    \  long max8 = 0;\n    long min8 = 0;\n    long index8 = 0;\n    long sum9 = 0;\n\
    \    long max9 = 0;\n    long min9 = 0;\n    long index9 = 0;\n    long sum10\
    \ = 0;\n    long max10 = 0;\n    long min10 = 0;\n    long index10 = 0;\n    long\
    \ sum11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n    long index11 = 0;\n\
    \    long sum12 = 0;\n    long max12 = 0;\n    long min12 = 0;\n    long index12\
    \ = 0;\n    long sum13 = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long\
    \ index13 = 0;\n    long sum14 = 0;\n    long max14 = 0;\n    long min14 = 0;\n\
    \    long index14 = 0;\n    long sum15 = 0;\n    long max15 = 0;\n    long min15\
    \ = 0;\n    long index15 = 0;\n    long sum16 = 0;\n    long max16 = 0;\n    long\
    \ min16 = 0;\n    long index16 = 0;\n    long sum17 = 0;\n    long max17 = 0;\n\
    \    long min17 = 0;\n    long index17 = 0;\n    long sum18 = 0;\n    long max18\
    \ = 0;\n    long min18 = 0;\n    long index18 = 0;\n    long sum19 = 0;\n    long\
    \ max19 = 0;\n    long min19 = 0;\n    long index19 = 0;\n    long sum20 = 0;\n\
    \    long max20 = 0;\n    long min20 = 0;\n    long index20 = 0;\n    long sum21\
    \ = 0;\n    long max21 = 0;\n    long min21 = 0;\n    long index21 = 0;\n    long\
    \ sum22 = 0;\n    long max22 = 0;\n    long min22 = 0;\n    long index22 = 0;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return (a+b<0);});\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    std::vector<long> nums_copy;\n    nums_copy.insert(nums_copy.end(), nums.begin(),\
    \ nums.end());\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){return a+b<0;});\n    return nums_copy;", "    // Write your code here.\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums) {\n        if (sum == i) {\n            result.push_back(i);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::accumulate(std::begin(nums_copy),\
    \ std::end(nums_copy), 0) > std::accumulate(std::begin(nums_copy), std::end(nums_copy),\
    \ 0);\n    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    long long sum = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    for (long long i : nums) {\n        sum += i;\n        if\
    \ (sum > max) {\n            max = sum;\n        }\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    std::vector<long> ans;\n    for\
    \ (long long i : nums) {\n        if (sum - i == max) {\n            ans.push_back(i);\n\
    \        }\n    }\n    ans.push_back(min);\n    ans.push_back(max);\n    return\
    \ ans;", "    std::vector<long> result;\n    long long sum = 0;\n    for (auto\
    \ num : nums) {\n        sum += num;\n        result.push_back(sum);\n    }\n\
    \    std::sort(result.begin(), result.end());\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::vector<long> nums_sorted_by_sum;\n    long sum =\
    \ 0;\n    for (long num : nums_copy) {\n        sum += num;\n        nums_sorted_by_sum.push_back(sum);\n\
    \    }\n    std::sort(nums_sorted_by_sum.begin(), nums_sorted_by_sum.end());\n\
    \    return nums_sorted_by_sum;", "    std::vector<long> nums_copy = nums;\n \
    \   std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return a+b<0;});\n\
    \    return nums_copy;", "    // Write your code here\n    long sum = 0;\n   \
    \ long temp = 0;\n    long index = 0;\n    std::vector<long> result;\n    for\
    \ (auto i : nums) {\n        sum += i;\n    }\n    for (auto i : nums) {\n   \
    \     if (sum > 0) {\n            temp = sum % 10;\n            sum = (sum - temp)\
    \ / 10;\n            while (sum > 0) {\n                result.push_back(temp);\n\
    \                sum -= temp;\n                temp = 0;\n            }\n    \
    \    }\n    }\n    for (auto i : result) {\n        nums.insert(nums.begin() +\
    \ index, i);\n        index++;\n    }\n    return nums;", "    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    long sum =\
    \ 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n    long min_sum\
    \ = sum;\n    long min_idx = -1;\n    for (long i = 0; i < nums_copy.size(); i++)\
    \ {\n        long num = nums_copy[i];\n        sum += num;\n        if (sum <\
    \ min_sum) {\n            min_sum = sum;\n            min_idx = i;\n        }\n\
    \    }\n    std::vector<long> result;\n    for (long i = 0; i < nums_copy.size();\
    \ i++) {\n        long num = nums_copy[i];\n        sum += num;\n        if (sum\
    \ == min_sum) {\n            result.push_back(num);\n        }\n    }\n    return\
    \ result;", "    // Write your code here\n    long sum = 0;\n    long temp = 0;\n\
    \    long index = 0;\n    long count = 0;\n    long sumOfDigits = 0;\n    long\
    \ sumOfDigitsOfPoints = 0;\n    long max = 0;\n    long min = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp", "    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b){return sum - a - b < 0;});\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums_copy;\n    nums_copy.assign(nums.begin(),\
    \ nums.end());\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){\n        return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;",
  "    // Write your code here\n    long long sum = 0;\n    std::vector<long> ans;\n\
    \    for (long long i : nums) {\n        sum += i;\n        ans.push_back(i);\n\
    \    }\n    std::sort(ans.begin(), ans.end(), [sum](long long a, long long b)\
    \ -> bool {\n        return sum - a < sum - b;\n    });\n    return ans;", " \
    \   std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long i :\
    \ nums_copy) {\n        sum += i;\n    }\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [&sum](long a, long b) {\n        return sum - a + b < sum - a + b;\n    });\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for(long i=0;i<nums.size();i++){\n        long sum=0;\n        for(long j=0;j<nums.size();j++){\n\
    \            if(nums[j]>0){\n                sum+=nums[j];\n            }\n  \
    \      }\n        if(sum==0){\n            nums2.push_back(nums[i]);\n       \
    \ }\n    }\n    for(long i=0;i<nums2.size();i++){\n        for(long j=i+1;j<nums2.size();j++){\n\
    \            if(nums2[i]>nums2[j]){\n                long temp=nums2[i];\n   \
    \             nums2[i]=nums2[j];\n                nums2[j]=temp;\n           \
    \ }\n        }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if\
    \ (sum > 0) {\n            nums2.push_back(i);\n        }\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b) { return a + b < b + a; });\n    return nums2;",
  "    // Write your code here\n    long sum = 0;\n    for(long i : nums) {\n    \
    \    sum += i;\n    }\n    std::vector<long> result;\n    for(long i : nums) {\n\
    \        if(sum - i == 0) {\n            result.push_back(i);\n        }\n   \
    \ }\n    for(long i : nums) {\n        if(sum - i != 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i == 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i != 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i == 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i != 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i == 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i != 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i == 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i != 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i == 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i != 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i == 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i != 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i == 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i != 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i == 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i != 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i == 0) {\n            result.push_back(i);\n        }\n    }\n\
    \    for(long i : nums) {\n        if(sum - i != 0) {\n            result.push_back(i);\n\
    \        }\n    }\n    for(long i : nums) {\n        if(sum - i == 0) {\n    \
    \        result.push_back(i);\n        }\n    }\n    for(long i : nums) {\n  \
    \      if(sum - i != 0) {\n            result.push_back(i);\n        }\n", " \
    \   std::vector<long> nums_copy = nums;\n    std::vector<long> nums_sorted_by_sum;\n\
    \    long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n  \
    \      nums_sorted_by_sum.push_back(sum);\n    }\n    std::sort(nums_sorted_by_sum.begin(),\
    \ nums_sorted_by_sum.end());\n    return nums_sorted_by_sum;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    long max_index = 0;\n    for\
    \ (long i : nums_copy) {\n        if (sum == max_sum) {\n            max_index\
    \ = i;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n\
    \            max_index = i;\n        }\n    }\n    nums_copy.erase(std::remove(nums_copy.begin(),\
    \ nums_copy.end(), max_index), nums_copy.end());\n    nums_copy.insert(nums_copy.begin(),\
    \ max_index);\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](int\
    \ a, int b){return sum - a + b < sum - b + a;});\n    return nums2;", "    std::vector<long>\
    \ result;\n    long sum = 0;\n    for (auto num : nums) {\n        sum += num;\n\
    \        result.push_back(sum);\n    }\n    std::sort(result.begin(), result.end());\n\
    \    return result;", "    std::vector<long> nums_copy = nums;\n    long sum =\
    \ 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n    long last_sum\
    \ = 0;\n    long last_index = -1;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        long num = nums[i];\n        long cur_sum = sum - num;\n        if\
    \ (cur_sum > last_sum) {\n            last_sum = cur_sum;\n            last_index\
    \ = i;\n        }\n    }\n    std::vector<long> result;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        if (i == last_index) {\n            result.push_back(nums[i]);\n\
    \        } else {\n            result.push_back(nums[last_index]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b) {\n        return std::abs(a) < std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a < sum - b;\n    });\n    return\
    \ nums2;", "    // Write your code here.\n    std::vector<long> result;\n    long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b) { return\
    \ sum - a + b; });\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (auto &num : nums_copy) {\n  \
    \      sum += num;\n    }\n    long min_sum = sum;\n    long min_idx = -1;\n \
    \   for (auto &num : nums_copy) {\n        long cur_sum = sum - num;\n       \
    \ if (cur_sum < min_sum) {\n            min_sum = cur_sum;\n            min_idx\
    \ = num;\n        }\n    }\n    std::vector<long> sorted_nums;\n    for (auto\
    \ &num : nums_copy) {\n        if (num == min_idx) {\n            sorted_nums.push_back(min_idx);\n\
    \        } else {\n            sorted_nums.push_back(num);\n        }\n    }\n\
    \    return sorted_nums;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) {\n        return sum - a + b < sum - b + a;\n    });\n    return\
    \ nums2;", "    // Write your code here\n    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return a+b<0;});\n\
    \    return nums_copy;", "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    long sum\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    for (long i : nums) {\n    \
    \    sum += i;\n        if (sum > max) {\n            max = sum;\n        }\n\
    \        if (sum < min) {\n            min = sum;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums) {\n        if (sum - i == max) {\n        \
    \    result.push_back(i);\n        }\n        if (sum - i == min) {\n        \
    \    result.push_back(i);\n        }\n    }\n    return result;", "    // Write\
    \ your code here\n    long sum = 0;\n    for(long i : nums)\n    {\n        sum\
    \ += i;\n    }\n    long maxSum = sum;\n    std::vector<long> ans;\n    for(long\
    \ i : nums)\n    {\n        long curSum = sum - i;\n        if(curSum > maxSum)\n\
    \        {\n            maxSum = curSum;\n            ans.push_back(i);\n    \
    \    }\n    }\n    return ans;", "    std::vector<long> nums2;\n    long sum =\
    \ 0;\n    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n\
    \    }\n    long min_sum = sum;\n    for (long i : nums2) {\n        if (min_sum\
    \ > i) {\n            min_sum = i;\n        }\n    }\n    long min_sum_index =\
    \ 0;\n    for (long i : nums2) {\n        if (min_sum == i) {\n            min_sum_index\
    \ = i;\n        }\n    }\n    std::vector<long> nums3;\n    for (long i : nums2)\
    \ {\n        if (i != min_sum_index) {\n            nums3.push_back(i);\n    \
    \    }\n    }\n    return nums3;", "    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n\
    \    long max_sum = 0;\n    for (long i : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ sum);\n        sum += i;\n    }\n    std::vector<long> result;\n    for (long\
    \ i : nums_copy) {\n        if (sum == max_sum) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        if\
    \ (sum > 0) {\n            nums2.push_back(i);\n        }\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){return a+b<0;});\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    long max_index = 0;\n    for\
    \ (long i : nums_copy) {\n        if (sum == max_sum) {\n            max_index\
    \ = i;\n        }\n        if (sum > max_sum) {\n            max_sum = sum;\n\
    \            max_index = i;\n        }\n    }\n    std::vector<long> result;\n\
    \    for (long i : nums_copy) {\n        if (i == max_index) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (auto i : nums) {\n        long sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a + b < sum - a + b;\n    });\n    return nums2;", " \
    \   // Write your code here\n    long long sum = 0;\n    for(long long i : nums)\
    \ {\n        sum += i;\n    }\n    long long maxSum = sum;\n    long long maxSumIndex\
    \ = 0;\n    for(long long i : nums) {\n        if(sum == maxSum) {\n         \
    \   maxSumIndex = i;\n        }\n        sum += i % 10;\n    }\n    std::vector<long>\
    \ ans;\n    for(long long i : nums) {\n        if(maxSumIndex == i) {\n      \
    \      ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){return a+b<0;});\n    return nums_copy;", "    std::vector<long> numsCopy\
    \ = nums;\n    long sum = 0;\n    for (long i = 0; i < numsCopy.size(); i++) {\n\
    \        sum += numsCopy[i];\n    }\n    long maxSum = sum;\n    long maxIndex\
    \ = -1;\n    for (long i = 0; i < numsCopy.size(); i++) {\n        sum += numsCopy[i];\n\
    \        if (sum > maxSum) {\n            maxSum = sum;\n            maxIndex\
    \ = i;\n        }\n    }\n    numsCopy.erase(numsCopy.begin() + maxIndex);\n \
    \   numsCopy.insert(numsCopy.begin(), maxIndex);\n    return numsCopy;", "   \
    \ // Write your code here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    long sum = 0;\n    for (long num : nums) {\n        sum += num;\n       \
    \ nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(), nums2.end());\n \
    \   return nums2;", "    std::vector<long> nums_copy = nums;\n    std::vector<long>\
    \ sorted_nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n        sum\
    \ += num;\n    }\n    for (long num : nums_copy) {\n        if (sum > 0) {\n \
    \           long digit = num % 10;\n            while (sum > 0) {\n          \
    \      sum += digit;\n                digit = num % 10;\n                nums_copy.erase(nums_copy.begin()\
    \ + nums_copy.end() - 1);\n            }\n            sorted_nums.push_back(digit);\n\
    \        }\n    }\n    return sorted_nums;", "    // Write your code here\n  \
    \  std::vector<long> nums2;\n    long sum = 0;\n    for (long num : nums) {\n\
    \        sum += num;\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){return a+b<0;});\n    return nums_copy;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    long max_index = -1;\n    for\
    \ (long i : nums_copy) {\n        if (sum - i < 0) {\n            sum += i;\n\
    \        } else {\n            sum -= i;\n            if (sum > max_sum) {\n \
    \               max_sum = sum;\n                max_index = i;\n            }\n\
    \        }\n    }\n    nums_copy.erase(std::remove(nums_copy.begin(), nums_copy.end(),\
    \ max_index), nums_copy.end());\n    nums_copy.insert(nums_copy.begin(), max_index);\n\
    \    return nums_copy;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n  \
    \  }\n    long max_sum = 0;\n    long max_index = 0;\n    for (long i = 0; i <\
    \ nums_copy.size(); i++) {\n        long num = nums_copy[i];\n        if (num\
    \ > 0) {\n            long digit = num % 10;\n            if (max_sum < sum +\
    \ digit) {\n                max_sum = sum + digit;\n                max_index\
    \ = i;\n            }\n        }\n    }\n    nums_copy.erase(nums_copy.begin()\
    \ + max_index, nums_copy.end());\n    return nums_copy;", "    // Write your code\
    \ here\n    long sum = 0;\n    long max_sum = 0;\n    long max_index = 0;\n  \
    \  for (auto &i : nums) {\n        sum += i;\n        if (sum > max_sum) {\n \
    \           max_sum = sum;\n            max_index = i;\n        }\n    }\n   \
    \ std::vector<long> result;\n    for (auto &i : nums) {\n        if (i == max_index)\
    \ {\n            result.push_back(i);\n        }\n    }\n    return result;",
  "    std::vector<long> nums_copy;\n    std::vector<long> nums_copy_sorted;\n   \
    \ for (auto num : nums) {\n        nums_copy.push_back(num);\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b) -> bool {\n        return std::abs(a - b)\
    \ < std::abs(std::abs(a) - std::abs(b));\n    });\n    for (auto num : nums_copy)\
    \ {\n        nums_copy_sorted.push_back(num);\n    }\n    return nums_copy_sorted;",
  "    std::vector<long> numsCopy = nums;\n    long sum = 0;\n    for (long i = 0;\
    \ i < numsCopy.size(); i++) {\n        sum += numsCopy[i];\n    }\n    std::vector<long>\
    \ numsCopySorted = numsCopy;\n    std::sort(numsCopySorted.begin(), numsCopySorted.end(),\
    \ [sum](int a, int b) {\n        return a + b < sum;\n    });\n    return numsCopySorted;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a) < std::abs(b);\n    });\n  \
    \  return nums_copy;", "    std::vector<long> result;\n    long long sum = 0;\n\
    \    for (long long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [&sum](long long a, long long\
    \ b) { return sum - a + b; });\n    return result;", "    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    long sum\
    \ = 0;\n    std::vector<long> nums_sorted;\n    for (long i : nums) {\n      \
    \  sum += i;\n        nums_sorted.push_back(i);\n    }\n    std::sort(nums_sorted.begin(),\
    \ nums_sorted.end(), [&sum](long a, long b) -> bool {\n        return sum - a\
    \ < sum - b;\n    });\n    return nums_sorted;", "    // Write your code here\n\
    \    long long sum = 0;\n    long long max = 0;\n    long long min = 0;\n    long\
    \ long index = 0;\n    long long temp = 0;\n    long long count = 0;\n    long\
    \ long sum2 = 0;\n    long long max2 = 0;\n    long long min2 = 0;\n    long long\
    \ index2 = 0;\n    long long temp2 = 0;\n    long long count2 = 0;\n    long long\
    \ sum3 = 0;\n    long long max3 = 0;\n    long long min3 = 0;\n    long long index3\
    \ = 0;\n    long long temp3 = 0;\n    long long count3 = 0;\n    long long sum4\
    \ = 0;\n    long long max4 = 0;\n    long long min4 = 0;\n    long long index4\
    \ = 0;\n    long long temp4 = 0;\n    long long count4 = 0;\n    long long sum5\
    \ = 0;\n    long long max5 = 0;\n    long long min5 = 0;\n    long long index5\
    \ = 0;\n    long long temp5 = 0;\n    long long count5 = 0;\n    long long sum6\
    \ = 0;\n    long long max6 = 0;\n    long long min6 = 0;\n    long long index6\
    \ = 0;\n    long long temp6 = 0;\n    long long count6 = 0;\n    long long sum7\
    \ = 0;\n    long long max7 = 0;\n    long long min7 = 0;\n    long long index7\
    \ = 0;\n    long long temp7 = 0;\n    long long count7 = 0;\n    long long sum8\
    \ = 0;\n    long long max8 = 0;\n    long long min8 = 0;\n    long long index8\
    \ = 0;\n    long long temp8 = 0;\n    long long count8 = 0;\n    long long sum9\
    \ = 0;\n    long long max9 = 0;\n    long long min9 = 0;\n    long long index9\
    \ = 0;\n    long long temp9 = 0;\n    long long count9 = 0;\n    long long sum10\
    \ = 0;\n    long long max10 = 0;\n    long long min10 = 0;\n    long long index10\
    \ = 0;\n    long long temp10 = 0;\n    long long count10 = 0;\n    long long sum11\
    \ = 0;\n    long long max11 = 0;\n    long long min11 = 0;\n    long long index11\
    \ = 0;\n    long long temp11 = 0;\n    long long count11 = 0;\n    long long sum12\
    \ = 0;\n    long long max12 = 0;\n    long long min12 = 0;\n    long long index12\
    \ = 0;\n    long long temp12 = 0;\n    long long count12 = 0;\n    long long sum13\
    \ = 0;\n    long long max13 = 0;\n    long long min13 = 0;\n    long long index13\
    \ = 0;\n    long long temp13 = 0;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n     \
    \   return a + b < 0;\n    });\n    return nums_copy;", "    // Write your code\
    \ here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here.\n    std::vector<long> nums2;\n\
    \    for (long i : nums) {\n        int sum = 0;\n        while (i != 0) {\n \
    \           sum += i % 10;\n            i /= 10;\n        }\n        if (sum >\
    \ 0) {\n            nums2.push_back(i);\n        }\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b){return a+b<0;});\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    for (long i : nums)\
    \ {\n        long sum = 0;\n        while (i != 0) {\n            sum += i % 10;\n\
    \            i /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    std::sort(nums_copy.begin(), nums_copy.end(), [sum](int\
    \ a, int b) {\n        return a + b < sum;\n    });\n    return nums_copy;", " \
    \   // Write your code here.\n    long long sum = 0;\n    for(long long i : nums){\n\
    \        sum += i;\n    }\n    std::vector<long> nums_sorted;\n    for(long long\
    \ i : nums){\n        if(sum == i){\n            nums_sorted.push_back(i);\n \
    \       }\n    }\n    return nums_sorted;", "    // Write your code here\n   \
    \ std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return std::abs(a - b) < std::abs(std::abs(a) -\
    \ std::abs(b));\n    });\n    return nums_copy;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    std::vector<long> numsCopy = nums;\n\
    \    long sum = 0;\n    for (long i = 0; i < numsCopy.size(); i++) {\n       \
    \ sum += numsCopy[i];\n    }\n    long maxSum = 0;\n    for (long i = 0; i < numsCopy.size();\
    \ i++) {\n        maxSum = std::max(maxSum, sum);\n        sum += numsCopy[i];\n\
    \    }\n    std::vector<long> result;\n    for (long i = 0; i < numsCopy.size();\
    \ i++) {\n        if (sum == maxSum) {\n            result.push_back(i);\n   \
    \         sum -= numsCopy[i];\n        }\n    }\n    return result;", "    std::vector<long>\
    \ ans;\n    long long sum = 0;\n    for (long long i : nums) {\n        sum +=\
    \ i;\n    }\n    long long maxSum = sum;\n    for (long long i : nums) {\n   \
    \     long long newSum = sum - i;\n        if (newSum > maxSum) {\n          \
    \  maxSum = newSum;\n        }\n    }\n    for (long long i : nums) {\n      \
    \  long long newSum = sum - i;\n        if (newSum == maxSum) {\n            ans.push_back(i);\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    for (long i : nums) {\n        int sum = 0;\n        while (i !=\
    \ 0) {\n            sum += i % 10;\n            i /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [sum](long a, long b) -> bool {\n  \
    \      return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    //\
    \ Write your code here\n    long long sum = 0;\n    long long max = 0;\n    long\
    \ long min = 0;\n    long long index = 0;\n    long long temp = 0;\n    for (auto\
    \ num : nums) {\n        sum += num;\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    for (auto num : nums) {\n        temp = sum - num;\n        if\
    \ (temp > 0) {\n            index = num;\n            break;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for (auto num : nums) {\n        if (num == index)\
    \ {\n            ans.push_back(num);\n        }\n    }\n    return ans;", "  \
    \  std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return (a+b)/10 > b+a/10;});\n    return\
    \ nums_copy;", "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n \
    \   for (long i : nums_copy) {\n        sum += i;\n    }\n    long max_sum = 0;\n\
    \    for (long i : nums_copy) {\n        max_sum = std::max(max_sum, sum);\n \
    \   }\n    std::vector<long> result;\n    for (long i : nums_copy) {\n       \
    \ if (sum - i == max_sum) {\n            result.push_back(i);\n        }\n   \
    \ }\n    return result;", "    // Write your code here.\n    long sum = 0;\n \
    \   for(long i : nums)\n        sum += i;\n    std::vector<long> ans;\n    for(long\
    \ i : nums)\n    {\n        long temp = sum - i;\n        if(temp < 0)\n     \
    \   {\n            temp = temp * -1;\n        }\n        ans.push_back(temp);\n\
    \    }\n    return ans;", "    std::vector<long> result;\n    long sum = 0;\n\
    \    for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   std::vector<long> nums2;\n    for (long num : nums) {\n        long sum =\
    \ 0;\n        while (num != 0) {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    long long\
    \ sum = 0;\n    long long maxSum = 0;\n    long long maxSumIndex = 0;\n    for\
    \ (long long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n       \
    \ if (sum > maxSum) {\n            maxSum = sum;\n            maxSumIndex = i;\n\
    \        }\n    }\n    std::vector<long> result;\n    for (long long i = 0; i\
    \ < nums.size(); i++) {\n        if (i == maxSumIndex) {\n            result.push_back(nums[i]);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b) -> bool\
    \ {\n        return std::abs(a - b) < 10;\n    });\n    return nums_copy;", " \
    \   // Write your code here.\n    long sum = 0;\n    for (long i : nums) {\n \
    \       sum += i;\n    }\n    std::vector<long> ans;\n    for (long i : nums)\
    \ {\n        long temp = sum - i;\n        if (temp > 0) {\n            ans.push_back(i);\n\
    \            ans.push_back(temp);\n        }\n    }\n    return ans;", "    //\
    \ Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for\
    \ (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n \
    \   std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool {\n \
    \       return sum - a + b < 0;\n    });\n    return nums2;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](int a, int b) {\n        return sum - a + b < sum - a +\
    \ b;\n    });\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n  \
    \      sum += nums[i];\n        nums2.push_back(nums[i]);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ sum - a + b;\n    });\n    return nums2;", "    // Write your code here\n  \
    \  std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n  \
    \      sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) {\n        return sum - a + b < sum - a\
    \ + b;\n    });\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n\
    \                sum += nums[i];\n            }\n            else {\n        \
    \        sum += nums[j];\n            }\n        }\n        if (sum > 0) {\n \
    \           nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;", " \
    \   std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long num\
    \ : nums_copy) {\n        sum += num;\n    }\n    long max_sum = 0;\n    long\
    \ max_index = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        long num\
    \ = nums[i];\n        long cur_sum = sum - num;\n        if (cur_sum > max_sum)\
    \ {\n            max_sum = cur_sum;\n            max_index = i;\n        }\n \
    \   }\n    std::vector<long> result;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        if (i == max_index) {\n            result.push_back(nums[i]);\n \
    \       } else {\n            result.push_back(max_sum - nums[i]);\n        }\n\
    \    }\n    return result;", "    std::vector<long> nums2;\n    for (auto &num\
    \ : nums) {\n        long sum = 0;\n        while (num != 0) {\n            sum\
    \ += num % 10;\n            num /= 10;\n        }\n        nums2.push_back(sum);\n\
    \    }\n    std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    //\
    \ Write your code here.\n    long long sum = 0;\n    std::vector<long> nums_copy;\n\
    \    for(long long i : nums)\n    {\n        sum += i;\n        nums_copy.push_back(i);\n\
    \    }\n    sort(nums_copy.begin(), nums_copy.end(), [&sum](long long a, long\
    \ long b){return sum - a + b < sum - b + a;});\n    return nums_copy;", "    //\
    \ Write your code here\n    long sum = 0;\n    long temp = 0;\n    long index\
    \ = 0;\n    long max = 0;\n    long min = 0;\n    long sum2 = 0;\n    long temp2\
    \ = 0;\n    long index2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    for\
    \ (auto i : nums) {\n        sum += i;\n    }\n    for (auto i : nums) {\n   \
    \     temp = sum % 10;\n        sum2 = sum / 10;\n        if (sum2 == temp) {\n\
    \            index = i;\n        }\n    }\n    for (auto i : nums) {\n       \
    \ temp2 = sum2 % 10;\n        sum2 = sum2 / 10;\n        if (sum2 == temp2) {\n\
    \            index2 = i;\n        }\n    }\n    if (sum > sum2) {\n        max\
    \ = index;\n        min = index2;\n    }\n    if (sum < sum2) {\n        max =\
    \ index2;\n        min = index;\n    }\n    if (sum == sum2) {\n        max =\
    \ index;\n        min = index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n\
    \        min = index;\n    }\n    if (sum > sum2) {\n        max = index;\n  \
    \      min = index2;\n    }\n    if (sum == sum2) {\n        max = index;\n  \
    \      min = index2;\n    }\n    if (sum > sum2) {\n        max = index;\n   \
    \     min = index2;\n    }\n    if (sum == sum2) {\n        max = index;\n   \
    \     min = index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n   \
    \     min = index;\n    }\n    if (sum > sum2) {\n        max = index;\n     \
    \   min = index2;\n    }\n    if (sum == sum2) {\n        max = index;\n     \
    \   min = index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n     \
    \   min = index;\n    }\n    if (sum > sum2) {\n        max = index;\n       \
    \ min = index2;\n    }\n    if (sum == sum2) {\n        max = index;\n       \
    \ min = index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n       \
    \ min = index;\n    }\n    if (sum > sum2) {\n        max = index;\n        min\
    \ = index2;\n    }\n    if (sum == sum2) {\n        max = index;\n        min\
    \ = index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n        min\
    \ = index;\n    }\n    if (sum > sum2) {\n        max = index;\n        min =\
    \ index2;\n    }\n    if (sum == sum2) {\n        max = index;\n        min =\
    \ index2;\n    }\n    if (sum < sum2) {\n        max = index2;\n        min =\
    \ index;\n    }\n    if (sum > sum2) {\n        max = index;\n        min = index2;\n\
    \    }\n    if (", "    // Write your code here.\n    long long sum = 0;\n   \
    \ for(long long i : nums) {\n        sum += i;\n    }\n    std::vector<long> result;\n\
    \    for(long long i : nums) {\n        if(sum == i) {\n            result.push_back(i);\n\
    \        }\n    }\n    return result;", "    // Write your code here\n    std::vector<long>\
    \ nums1;\n    std::vector<long> nums2;\n    std::vector<long> nums3;\n    std::vector<long>\
    \ nums4;\n    std::vector<long> nums5;\n    std::vector<long> nums6;\n    std::vector<long>\
    \ nums7;\n    std::vector<long> nums8;\n    std::vector<long> nums9;\n    std::vector<long>\
    \ nums10;\n    std::vector<long> nums11;\n    std::vector<long> nums12;\n    std::vector<long>\
    \ nums13;\n    std::vector<long> nums14;\n    std::vector<long> nums15;\n    std::vector<long>\
    \ nums16;\n    std::vector<long> nums17;\n    std::vector<long> nums18;\n    std::vector<long>\
    \ nums19;\n    std::vector<long> nums20;\n    std::vector<long> nums21;\n    std::vector<long>\
    \ nums22;\n    std::vector<long> nums23;\n    std::vector<long> nums24;\n    std::vector<long>\
    \ nums25;\n    std::vector<long> nums26;\n    std::vector<long> nums27;\n    std::vector<long>\
    \ nums28;\n    std::vector<long> nums29;\n    std::vector<long> nums30;\n    std::vector<long>\
    \ nums31;\n    std::vector<long> nums32;\n    std::vector<long> nums33;\n    std::vector<long>\
    \ nums34;\n    std::vector<long> nums35;\n    std::vector<long> nums36;\n    std::vector<long>\
    \ nums37;\n    std::vector<long> nums38;\n    std::vector<long> nums39;\n    std::vector<long>\
    \ nums40;\n    std::vector<long> nums41;\n    std::vector<long> nums42;\n    std::vector<long>\
    \ nums43;\n    std::vector<long> nums44;\n    std::vector<long> nums45;\n    std::vector<long>\
    \ nums46;\n    std::vector<long> nums47;\n    std::vector<long> nums48;\n    std::vector<long>\
    \ nums49;\n    std::vector<long> nums50;\n    std::vector<long> nums51;\n    std::vector<long>\
    \ nums52;\n    std::vector<long> nums53;\n    std::vector<long> nums54;\n    std::vector<long>\
    \ nums55;\n    std::vector<long> nums56;\n    std::vector<long> nums57;\n    std::vector<long>\
    \ nums58;\n    std::vector<long> nums59", "    std::vector<long> nums_copy = nums;\n\
    \    std::vector<long> nums_copy_sorted = nums;\n    long sum = 0;\n    for (long\
    \ i : nums_copy) {\n        sum += i;\n    }\n    long last_sum = 0;\n    for\
    \ (long i : nums_copy) {\n        last_sum += i;\n        if (last_sum > sum)\
    \ {\n            nums_copy_sorted.push_back(i);\n            last_sum -= sum;\n\
    \        }\n    }\n    return nums_copy_sorted;", "    // Write your code here\n\
    \    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;",
  "    // Write your code here\n    long sum = 0;\n    long index = 0;\n    long temp\
    \ = 0;\n    std::vector<long> result;\n    for (auto &i : nums) {\n        sum\
    \ += i;\n        index = sum % 10;\n        temp = sum / 10;\n        if (temp\
    \ != 0) {\n            result.push_back(temp);\n        }\n    }\n    result.push_back(index);\n\
    \    return result;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n    \
    \        if (sum > i) {\n                numsSorted[i] = nums[j];\n          \
    \      break;\n            }\n        }\n    }\n    return numsSorted;", "   \
    \ // Write your code here\n    std::vector<long> nums1;\n    long sum = 0;\n \
    \   for (long i : nums) {\n        sum += i;\n        nums1.push_back(i);\n  \
    \  }\n    long min = nums1[0];\n    for (long i : nums1) {\n        if (sum ==\
    \ sum - i) {\n            min = i;\n        }\n    }\n    long max = nums1[0];\n\
    \    for (long i : nums1) {\n        if (sum == sum + i) {\n            max =\
    \ i;\n        }\n    }\n    std::vector<long> nums2;\n    for (long i : nums1)\
    \ {\n        if (sum == sum - i) {\n            nums2.push_back(i);\n        }\n\
    \    }\n    for (long i : nums2) {\n        nums1.push_back(i);\n    }\n    return\
    \ nums1;", "    // Write your code here\n    long long sum = 0;\n    for(long\
    \ long i : nums){\n        sum += i;\n    }\n    std::vector<long> result;\n \
    \   for(long long i : nums){\n        if(sum == i){\n            result.push_back(i);\n\
    \        }\n    }\n    for(long long i : nums){\n        if(sum < i){\n      \
    \      result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    std::vector<long> sorted_nums;\n    long sum = 0;\n \
    \   for (long num : nums_copy) {\n        sum += num;\n    }\n    for (long num\
    \ : nums_copy) {\n        if (sum > 0) {\n            long cur_sum = 0;\n    \
    \        for (long i = 0; i < num; i++) {\n                cur_sum += nums_copy[i];\n\
    \            }\n            if (cur_sum > sum) {\n                sorted_nums.push_back(num);\n\
    \                sum -= cur_sum;\n            } else {\n                sorted_nums.push_back(nums_copy[i]);\n\
    \                sum -= nums_copy[i];\n            }\n        } else {\n     \
    \       sorted_nums.push_back(num);\n        }\n    }\n    return sorted_nums;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n    long\
    \ max_sum = 0;\n    long max_index = 0;\n    for (long i : nums_copy) {\n    \
    \    if (sum == max_sum) {\n            max_index = i;\n        }\n        if\
    \ (sum > max_sum) {\n            max_sum = sum;\n            max_index = i;\n\
    \        }\n    }\n    std::vector<long> result;\n    for (long i : nums_copy)\
    \ {\n        if (i == max_index) {\n            result.push_back(i);\n       \
    \ }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n  \
    \  long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n \
    \   long max_sum = 0;\n    long max_index = 0;\n    for (long i : nums_copy) {\n\
    \        if (sum == max_sum) {\n            max_index = i;\n        }\n      \
    \  if (sum > max_sum) {\n            max_sum = sum;\n            max_index = i;\n\
    \        }\n    }\n    nums_copy.erase(std::remove(nums_copy.begin(), nums_copy.end(),\
    \ max_index), nums_copy.end());\n    nums_copy.insert(std::begin(nums_copy), max_index);\n\
    \    return nums_copy;", "    std::vector<long> result;\n    long sum = 0;\n \
    \   for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0; j <\
    \ nums.size(); j++) {\n            if (i == j) {\n                continue;\n\
    \            }\n            sum += nums[j];\n        }\n        if (sum > 0) {\n\
    \            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    // Write your code here\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    std::vector<long> nums2;\n    for(long i=0;i<nums.size();i++){\n\
    \        long sum=0;\n        for(long j=0;j<nums.size();j++){\n            if(nums[j]==i){\n\
    \                sum+=nums[j];\n            }\n        }\n        if(sum>0){\n\
    \            nums2.push_back(i);\n        }\n    }\n    return nums2;", "    //\
    \ Write your code here\n    long long sum = 0;\n    for (long long i : nums) {\n\
    \        sum += i;\n    }\n    std::vector<long> ans;\n    for (long long i :\
    \ nums) {\n        if (sum == i) {\n            ans.push_back(i);\n        }\n\
    \    }\n    return ans;", "    // Write your code here\n    long long sum = 0;\n\
    \    for(long long i : nums) {\n        sum += i;\n    }\n    std::vector<long>\
    \ result;\n    for(long long i : nums) {\n        if(sum == i) {\n           \
    \ result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ numsCopy = nums;\n    long sum = 0;\n    for (long i = 0; i < numsCopy.size();\
    \ i++) {\n        sum += numsCopy[i];\n    }\n    std::vector<long> result;\n\
    \    for (long i = 0; i < numsCopy.size(); i++) {\n        if (sum > 0) {\n  \
    \          long digit = numsCopy[i] / sum;\n            long index = sum - digit;\n\
    \            result.push_back(numsCopy[index]);\n            sum -= digit;\n \
    \       }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return a+b<0;});\n\
    \    return nums_copy;", "    std::vector<long> result;\n    long sum = 0;\n \
    \   for (auto &num : nums) {\n        sum += num;\n        result.push_back(num);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return result;", "    //\
    \ Write your code here\n    std::vector<long> result;\n    long sum = 0;\n   \
    \ for (long num : nums) {\n        sum += num;\n        result.push_back(sum);\n\
    \    }\n    std::sort(result.begin(), result.end());\n    return result;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a + b < sum - a + b;\n    });\n    return nums2;", " \
    \   // Write your code here\n    long long sum = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long index = 0;\n    for (auto i : nums) {\n\
    \        sum += i;\n        if (sum > max) {\n            max = sum;\n       \
    \ }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (auto i : nums) {\n        if (i == -1) {\n            result.push_back(-1);\n\
    \        } else {\n            result.push_back(i);\n        }\n    }\n    for\
    \ (auto i : nums) {\n        if (i == -1) {\n            result.push_back(-1);\n\
    \        } else {\n            if (sum == i) {\n                result.push_back(i);\n\
    \            } else {\n                result.push_back(-1);\n            }\n\
    \        }\n    }\n    for (auto i : nums) {\n        if (i == -1) {\n       \
    \     result.push_back(-1);\n        } else {\n            if (sum < i) {\n  \
    \              result.push_back(i);\n            } else {\n                result.push_back(-1);\n\
    \            }\n        }\n    }\n    for (auto i : nums) {\n        if (i ==\
    \ -1) {\n            result.push_back(-1);\n        } else {\n            if (sum\
    \ > i) {\n                result.push_back(i);\n            } else {\n       \
    \         result.push_back(-1);\n            }\n        }\n    }\n    for (auto\
    \ i : nums) {\n        if (i == -1) {\n            result.push_back(-1);\n   \
    \     } else {\n            if (sum == i) {\n                result.push_back(i);\n\
    \            } else {\n                result.push_back(-1);\n            }\n\
    \        }\n    }\n    for (auto i : nums) {\n        if (i == -1) {\n       \
    \     result.push_back(-1);\n        } else {\n            if (sum < i) {\n  \
    \              result.push_back(i);\n            } else {\n                result.push_back(-1);\n\
    \            }\n        }\n    }\n    for (auto i : nums) {\n        if (i ==\
    \ -1) {\n            result.push_back(-1);\n        } else {\n            if (sum\
    \ > i) {\n                result.push_back(i);\n            } else {\n       \
    \         result.push_back(-1);\n            }\n        }\n    }\n    for (auto\
    \ i : nums) {\n        if (i == -1) {\n            result.push_back(-1);\n   \
    \     } else {\n            if (sum == i) {\n                result.push_back(i);\n\
    \            } else {\n                result.push_back(-1);\n            }\n\
    \        }\n    }\n    for (auto i : nums) {\n        if (i == -1) {\n       \
    \     result.push_back(-1);\n        } else {\n            if (sum < i) {\n  \
    \              result.push_back(i);\n            } else {\n                result.push_back(-1);\n\
    \            }\n        }\n    }\n    for (auto i : nums) {\n        if (i ==\
    \ -1) {\n            result.push_back(-1);\n        } else {\n            if (sum\
    \ > i) {\n                result.push_back(i);\n            } else {\n       \
    \         result.push_back(-1);\n            }\n        }\n    }\n    for (auto\
    \ i : nums) {\n        if (i == -1) {\n            result.push_back(-1);\n   \
    \     } else {\n            if (sum == i) {\n                result.push_back(i);\n\
    \            } else {\n                result.push_back(-1);\n            }\n\
    \        }\n    }\n    for (auto i : nums) {\n        if (i == -1) {\n       \
    \     result.push_back(", "    // Write your code here\n    long sum = 0;\n  \
    \  long max = 0;\n    long min = 0;\n    long index = 0;\n    for (auto &i : nums)\
    \ {\n        sum += i;\n        if (sum > max) {\n            max = sum;\n   \
    \     }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for (auto &i : nums) {\n        if (i == max)\
    \ {\n            ans.push_back(i);\n        }\n        if (i == min) {\n     \
    \       ans.push_back(i);\n        }\n    }\n    return ans;", "    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a + b < sum - a + b;\n    });\n \
    \   return nums2;", "    // Write your code here\n    long long sum = 0;\n   \
    \ long long max = 0;\n    long long min = 0;\n    long long index = 0;\n    for\
    \ (auto i : nums) {\n        sum += i;\n        if (sum > max) {\n           \
    \ max = sum;\n            index = i;\n        }\n        if (sum < min) {\n  \
    \          min = sum;\n        }\n    }\n    std::vector<long> result;\n    for\
    \ (auto i : nums) {\n        if (i == index) {\n            result.push_back(i);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    std::vector<long> nums_copy = nums;\n    std::vector<long> nums_copy_sorted\
    \ = nums;\n    long sum = 0;\n    for (long num : nums_copy) {\n        sum +=\
    \ num;\n    }\n    long min_sum = sum;\n    for (long num : nums_copy) {\n   \
    \     if (min_sum > num) {\n            min_sum = num;\n        }\n    }\n   \
    \ long min_sum_pos = 0;\n    for (long i = 0; i < nums_copy.size(); i++) {\n \
    \       long num = nums_copy[i];\n        if (num == min_sum) {\n            nums_copy_sorted[min_sum_pos++]\
    \ = num;\n        }\n    }\n    return nums_copy_sorted;", "    // Write your\
    \ code here.\n    long long sum = 0;\n    long long max = 0;\n    for (auto num\
    \ : nums) {\n        sum += num;\n        if (sum > max) {\n            max =\
    \ sum;\n        }\n    }\n    std::vector<long> result;\n    for (auto num : nums)\
    \ {\n        if (sum - num > max) {\n            result.push_back(num);\n    \
    \    }\n    }\n    return result;", "    std::vector<long> result;\n    long sum\
    \ = 0;\n    for (auto i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [&sum](int a, int b) {\n \
    \       return sum - a + b < sum - b + a;\n    });\n    return result;", "   \
    \ std::vector<long> nums_copy = nums;\n    std::vector<long> sorted_nums;\n  \
    \  long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n\
    \    for (long num : nums_copy) {\n        if (sum > 0) {\n            sorted_nums.push_back(sum);\n\
    \            sum -= num;\n        }\n    }\n    for (long num : nums_copy) {\n\
    \        if (sum < 0) {\n            sorted_nums.push_back(-sum);\n          \
    \  sum += num;\n        }\n    }\n    return sorted_nums;", "    // Write your\
    \ code here.\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    std::vector<long> ans;\n    long sum\
    \ = 0;\n    for (long &i : nums) {\n        sum += i;\n    }\n    long max_sum\
    \ = sum;\n    for (long &i : nums) {\n        sum += i;\n        if (sum > max_sum)\
    \ {\n            max_sum = sum;\n            ans.clear();\n            ans.push_back(i);\n\
    \        } else if (sum == max_sum) {\n            ans.push_back(i);\n       \
    \ }\n    }\n    return ans;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n\
    \        for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n\
    \                continue;\n            }\n            sum += nums[j];\n     \
    \   }\n        if (sum > 0) {\n            nums2.push_back(nums[i]);\n       \
    \ }\n    }\n    return nums2;", "    std::vector<long> nums_copy = nums;\n   \
    \ long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n\
    \    long max_sum = 0;\n    for (long num : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ sum);\n        sum -= num;\n    }\n    std::vector<long> result;\n    for (long\
    \ num : nums_copy) {\n        if (sum == max_sum) {\n            result.push_back(num);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n  \
    \  }\n    long max_sum = 0;\n    for (long num : nums_copy) {\n        max_sum\
    \ = std::max(max_sum, sum);\n        sum -= num;\n    }\n    std::vector<long>\
    \ result;\n    for (long num : nums_copy) {\n        if (sum == 0) {\n       \
    \     result.push_back(num);\n        } else {\n            long cur_sum = sum;\n\
    \            while (cur_sum > 0) {\n                long cur_digit = num % 10;\n\
    \                cur_sum -= cur_digit;\n                num = (num - cur_digit)\
    \ / 10;\n                result.push_back(num);\n            }\n        }\n  \
    \  }\n    std::sort(result.begin(), result.end());\n    return result;", "   \
    \ // Write your code here\n    long sum = 0;\n    long max_sum = 0;\n    long\
    \ max_index = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum > max_sum) {\n            max_sum = sum;\n       \
    \     max_index = i;\n        }\n    }\n    std::vector<long> ans;\n    ans.push_back(nums[max_index]);\n\
    \    long sum2 = 0;\n    for (long i = max_index + 1; i < nums.size(); i++) {\n\
    \        sum2 += nums[i];\n        if (sum2 > max_sum) {\n            ans.push_back(nums[i]);\n\
    \            max_sum = sum2;\n            max_index = i;\n        }\n    }\n \
    \   return ans;", "    std::vector<long> nums2;\n    for (auto num : nums) {\n\
    \        long sum = 0;\n        while (num != 0) {\n            sum += num % 10;\n\
    \            num /= 10;\n        }\n        nums2.push_back(sum);\n    }\n   \
    \ std::sort(nums2.begin(), nums2.end());\n    return nums2;", "    std::vector<long>\
    \ nums_copy = nums;\n    long sum = 0;\n    for (long i : nums_copy) {\n     \
    \   sum += i;\n    }\n    long max_sum = 0;\n    for (long i : nums_copy) {\n\
    \        max_sum = std::max(max_sum, sum);\n        sum -= i;\n    }\n    std::vector<long>\
    \ result;\n    for (long i : nums_copy) {\n        if (sum == max_sum) {\n   \
    \         result.push_back(i);\n        }\n    }\n    return result;", "    std::vector<long>\
    \ nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(), [](long a, long\
    \ b){return a+b<0;});\n    return nums_copy;", "    // Write your code here\n\
    \    long long sum = 0;\n    long long max = 0;\n    long long min = 0;\n    for\
    \ (long long i : nums) {\n        sum += i;\n        if (sum > max) {\n      \
    \      max = sum;\n        }\n        if (sum < min) {\n            min = sum;\n\
    \        }\n    }\n    std::vector<long> ans;\n    for (long long i : nums) {\n\
    \        if (sum == i) {\n            ans.push_back(i);\n        }\n    }\n  \
    \  std::sort(ans.begin(), ans.end(), [&](long long a, long long b) -> bool {\n\
    \        return a + b < 0;\n    });\n    return ans;", "    // Write your code\
    \ here.\n    long sum = 0;\n    long maxSum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long maxIndex = -1;\n    long minIndex = -1;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum > maxSum) {\n            maxSum\
    \ = sum;\n            maxIndex = i;\n        } else if (sum < minSum) {\n    \
    \        minSum = sum;\n            minIndex = i;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (long i = 0; i < nums.size(); i++) {\n        if (i == maxIndex)\
    \ {\n            result.push_back(nums[i]);\n        } else if (i == minIndex)\
    \ {\n            result.push_back(nums[i]);\n        } else {\n            result.push_back(nums[i]);\n\
    \            result.push_back(maxIndex);\n            result.push_back(minIndex);\n\
    \        }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n\
    \    std::vector<long> nums_copy_sorted = nums;\n    long sum = 0;\n    for (long\
    \ num : nums_copy) {\n        sum += num;\n    }\n    for (long num : nums_copy)\
    \ {\n        long digit = num % 10;\n        long pos = sum - digit;\n       \
    \ if (pos < 0) {\n            pos = pos + 10;\n        }\n        nums_copy_sorted[pos]\
    \ = num;\n    }\n    return nums_copy_sorted;", "    // Write your code here.\n\
    \    long sum = 0;\n    long max = 0;\n    for (long i : nums) {\n        sum\
    \ += i;\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    std::vector<long> ans;\n    for (long i : nums) {\n        if (sum - i ==\
    \ max) {\n            ans.push_back(i);\n        }\n    }\n    return ans;", " \
    \   std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long num\
    \ : nums_copy) {\n        sum += num;\n    }\n    long max_num = std::numeric_limits<long>::min();\n\
    \    for (long num : nums_copy) {\n        if (num > max_num) {\n            max_num\
    \ = num;\n        }\n    }\n    long min_num = std::numeric_limits<long>::max();\n\
    \    for (long num : nums_copy) {\n        if (num < min_num) {\n            min_num\
    \ = num;\n        }\n    }\n    long min_sum = std::numeric_limits<long>::max();\n\
    \    for (long num : nums_copy) {\n        long cur_sum = sum - num;\n       \
    \ if (cur_sum < min_sum) {\n            min_sum = cur_sum;\n        }\n    }\n\
    \    long max_sum = std::numeric_limits<long>::min();\n    for (long num : nums_copy)\
    \ {\n        long cur_sum = sum + num;\n        if (cur_sum > max_sum) {\n   \
    \         max_sum = cur_sum;\n        }\n    }\n    std::vector<long> ans;\n \
    \   ans.reserve(nums_copy.size());\n    for (long num : nums_copy) {\n       \
    \ if (num < min_num) {\n            ans.push_back(num);\n        } else if (num\
    \ > max_num) {\n            ans.push_back(num);\n        } else if (num == min_num\
    \ && num > min_sum) {\n            ans.push_back(num);\n        } else if (num\
    \ == max_num && num < max_sum) {\n            ans.push_back(num);\n        } else\
    \ if (num == min_num && num == max_num && num > min_sum && num < max_sum) {\n\
    \            ans.push_back(num);\n        } else {\n            long cur_sum =\
    \ sum - num;\n            long cur_max_sum = max_sum - num;\n            if (cur_sum\
    \ > cur_max_sum) {\n                ans.push_back(num);\n            } else if\
    \ (cur_sum < cur_max_sum) {\n                ans.push_back(num);\n           \
    \ } else {\n                ans.push_back(num);\n            }\n        }\n  \
    \  }\n    return ans;", "    // Write your code here\n    std::vector<long> result;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b) ->\
    \ bool {\n        return sum - a < sum - b;\n    });\n    return result;", " \
    \   // Write your code here.\n    long long sum = 0;\n    long long max = 0;\n\
    \    long long min = 0;\n    long long index = 0;\n    for (auto i : nums) {\n\
    \        sum += i;\n        if (sum > max) {\n            max = sum;\n       \
    \ }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n    std::vector<long>\
    \ ans;\n    for (auto i : nums) {\n        if (sum == i) {\n            ans.push_back(i);\n\
    \        }\n    }\n    for (auto i : ans) {\n        if (sum < i) {\n        \
    \    ans.insert(ans.begin() + index, i);\n        }\n    }\n    return ans;",
  "    // Write your code here\n    long long sum = 0;\n    long long max = 0;\n \
    \   long long min = 0;\n    for (long long i : nums) {\n        sum += i;\n  \
    \      if (sum > max) {\n            max = sum;\n        }\n        if (sum <\
    \ min) {\n            min = sum;\n        }\n    }\n    std::vector<long> ans;\n\
    \    for (long long i : nums) {\n        if (sum == i) {\n            ans.push_back(i);\n\
    \        }\n    }\n    ans.push_back(max);\n    ans.push_back(min);\n    return\
    \ ans;", "    // Write your code here\n    std::vector<long> nums_copy;\n    for(auto\
    \ num : nums){\n        nums_copy.push_back(num);\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return std::abs(a) < std::abs(b);\n\
    \    });\n    return nums_copy;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a + b < sum - b + a;\n    });\n \
    \   return nums2;", "    // Write your code here\n    std::vector<long> nums2;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            sum += nums[j];\n    \
    \    }\n        if (sum == nums[i]) {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long\
    \ a, long b){\n        return a + b < 0;\n    });\n    return nums_copy;", " \
    \   // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) -> bool\
    \ {\n        return sum - a + b < sum - a + b;\n    });\n    return nums2;", " \
    \   // Write your code here\n    long sum = 0;\n    long max_sum = 0;\n    for\
    \ (long num : nums) {\n        sum += num;\n        if (sum > max_sum) {\n   \
    \         max_sum = sum;\n        }\n    }\n    std::vector<long> result;\n  \
    \  for (long num : nums) {\n        sum += num;\n        if (sum == max_sum) {\n\
    \            result.push_back(num);\n        }\n    }\n    return result;", " \
    \   // Write your code here\n    long sum = 0;\n    for(long num : nums)\n   \
    \ {\n        sum += num;\n    }\n    long temp = 0;\n    std::vector<long> nums_sorted;\n\
    \    for(long num : nums)\n    {\n        if(sum == temp)\n        {\n       \
    \     nums_sorted.push_back(num);\n        }\n        else if(sum > temp)\n  \
    \      {\n            temp = sum;\n            nums_sorted.clear();\n        \
    \    nums_sorted.push_back(num);\n        }\n        else\n        {\n       \
    \     while(sum > temp)\n            {\n                nums_sorted.push_back(nums_sorted.back());\n\
    \                sum -= nums_sorted.back();\n            }\n            nums_sorted.push_back(num);\n\
    \        }\n    }\n    return nums_sorted;", "    // Write your code here\n  \
    \  std::vector<long> nums2;\n    for(long i=0;i<nums.size();i++){\n        long\
    \ sum=0;\n        for(long j=0;j<nums.size();j++){\n            if(nums[j]>0){\n\
    \                sum+=nums[j];\n            }\n        }\n        if(sum==0){\n\
    \            nums2.push_back(nums[i]);\n        }\n    }\n    return nums2;",
  "    std::vector<long> ans;\n    long long sum = 0;\n    for (auto i : nums) {\n\
    \        sum += i;\n    }\n    long long mod = sum % 10;\n    long long ans =\
    \ 0;\n    for (auto i : nums) {\n        ans += i % 10 * pow(10, nums.size() -\
    \ i - 1);\n    }\n    if (mod != 0) {\n        ans -= mod * pow(10, nums.size()\
    \ - 1);\n    }\n    ans /= 10;\n    for (auto i : nums) {\n        ans -= i;\n\
    \    }\n    ans.push_back(sum);\n    return ans;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    for (long i : nums) {\n        long sum = 0;\n\
    \        while (i != 0) {\n            sum += i % 10;\n            i /= 10;\n\
    \        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here\n    std::vector<long>\
    \ nums1;\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum > 0) {\n \
    \           nums1.push_back(nums[i]);\n        } else {\n            nums2.push_back(nums[i]);\n\
    \        }\n    }\n    std::sort(nums1.begin(), nums1.end(), [](long a, long b)\
    \ -> bool {\n        return a + b < 0;\n    });\n    std::sort(nums2.begin(),\
    \ nums2.end(), [](long a, long b) -> bool {\n        return a + b < 0;\n    });\n\
    \    return nums1;", "    // Write your code here\n    std::vector<long> nums_copy\
    \ = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){return\
    \ a+b<0;});\n    return nums_copy;", "    // Write your code here\n    long long\
    \ sum = 0;\n    for(long long i : nums){\n        sum += i;\n    }\n    long long\
    \ ans = sum;\n    for(long long i : nums){\n        ans = ans - i;\n    }\n  \
    \  return nums;", "    // Write your code here.\n    long sum = 0;\n    long temp\
    \ = 0;\n    long index = 0;\n    long max = 0;\n    for(long i = 0; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum > max){\n            max = sum;\n\
    \            index = i;\n        }\n    }\n    std::vector<long> result;\n   \
    \ result.push_back(nums[index]);\n    for(long i = index + 1; i < nums.size();\
    \ i++){\n        sum += nums[i];\n        if(sum > max){\n            max = sum;\n\
    \            index = i;\n        }\n        result.push_back(nums[index]);\n \
    \   }\n    return result;", "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){\n        return a + b < 0;\n    });\n \
    \   return nums_copy;", "    // Write your code here\n    long long sum = 0;\n\
    \    for (auto i : nums) {\n        sum += i;\n    }\n    std::vector<long> result;\n\
    \    for (auto i : nums) {\n        if (sum == i) {\n            result.push_back(i);\n\
    \        }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    std::vector<long> nums_copy = nums;\n    sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b){return a+b<0;});\n    return nums_copy;", "    // Write your\
    \ code here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (long i\
    \ : nums) {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a + b <\
    \ sum - a + b;\n    });\n    return nums2;", "    std::vector<long> result;\n\
    \    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n        result.push_back(i);\n\
    \    }\n    std::sort(result.begin(), result.end(), [sum](long a, long b) -> bool\
    \ {\n        return sum - a < sum - b;\n    });\n    return result;", "    std::vector<long>\
    \ ans;\n    long sum = 0;\n    for (long &i : nums) {\n        sum += i;\n   \
    \ }\n    long cur = 0;\n    for (long &i : nums) {\n        cur += i;\n      \
    \  if (cur > sum) {\n            ans.push_back(i);\n            cur = i;\n   \
    \     }\n    }\n    return ans;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) -> bool {\n        return sum - a < sum - b;\n    });\n    return\
    \ nums2;", "    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for\
    \ (long num : nums_copy) {\n        sum += num;\n    }\n    long min_sum = sum;\n\
    \    long max_sum = 0;\n    for (long num : nums_copy) {\n        max_sum = std::max(max_sum,\
    \ num);\n        min_sum = std::min(min_sum, num);\n    }\n    std::vector<long>\
    \ result;\n    for (long num : nums_copy) {\n        if (num == min_sum) {\n \
    \           result.push_back(num);\n        } else if (num == max_sum) {\n   \
    \         result.push_back(num);\n        } else {\n            result.push_back(num);\n\
    \            result.push_back(min_sum);\n            result.push_back(max_sum);\n\
    \        }\n    }\n    return result;", "    // Write your code here.\n    long\
    \ sum = 0;\n    long temp = 0;\n    std::vector<long> nums_sorted = nums;\n  \
    \  for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n       \
    \ if (sum > 0) {\n            temp = sum;\n            sum = 0;\n            for\
    \ (long j = 0; j < nums.size(); j++) {\n                if (nums[j] > temp) {\n\
    \                    temp = nums[j];\n                }\n            }\n     \
    \       nums_sorted.push_back(temp);\n        }\n    }\n    return nums_sorted;",
  "    // Write your code here\n    long long sum = 0;\n    long long max = 0;\n \
    \   long long min = 0;\n    long long index = 0;\n    for (auto i : nums) {\n\
    \        sum += i;\n        if (sum > max) {\n            max = sum;\n       \
    \ }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n    std::vector<long>\
    \ result;\n    for (auto i : nums) {\n        if (sum == i) {\n            result.push_back(i);\n\
    \        }\n        if (sum > i) {\n            result.push_back(i);\n       \
    \ }\n        if (sum < i) {\n            result.push_back(i);\n        }\n   \
    \ }\n    for (auto i : result) {\n        if (sum == i) {\n            result.push_back(i);\n\
    \        }\n        if (sum > i) {\n            result.push_back(i);\n       \
    \ }\n        if (sum < i) {\n            result.push_back(i);\n        }\n   \
    \ }\n    return result;", "    std::vector<long> nums2;\n    long sum = 0;\n \
    \   for (auto i : nums) {\n        sum += i;\n        nums2.push_back(i);\n  \
    \  }\n    std::sort(nums2.begin(), nums2.end(), [sum](long a, long b) -> bool\
    \ {\n        return sum - a + b < sum - b + a;\n    });\n    return nums2;", " \
    \   // Write your code here.\n    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [](long a, long b){return a+b<0;});\n    return nums_copy;",
  "    // Write your code here\n    long sum = 0;\n    for (long i : nums) {\n   \
    \     sum += i;\n    }\n    long temp = 0;\n    std::vector<long> nums2;\n   \
    \ for (long i : nums) {\n        temp += i;\n        if (temp > sum) {\n     \
    \       nums2.push_back(i);\n        }\n    }\n    return nums2;", "    // Write\
    \ your code here\n    std::vector<long> nums2;\n    for(long i=0;i<nums.size();i++){\n\
    \        long sum=0;\n        for(long j=0;j<nums.size();j++){\n            if(j==i){\n\
    \                continue;\n            }\n            sum+=nums[j];\n       \
    \ }\n        if(sum==0){\n            nums2.push_back(nums[i]);\n        }\n \
    \       else if(sum<0){\n            nums2.push_back(nums[i]);\n        }\n  \
    \      else{\n            nums2.push_back(-1);\n        }\n    }\n    return nums2;",
  "    // Write your code here\n    long sum = 0;\n    long temp = 0;\n    long index\
    \ = 0;\n    long count = 0;\n    long max = 0;\n    long min = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80 = 0;\n    long temp81 = 0;\n    long ", "    // Write your code\
    \ here\n    std::vector<long> nums_copy = nums;\n    long sum = 0;\n    for (long\
    \ i : nums_copy) {\n        sum += i;\n    }\n    std::sort(nums_copy.begin(),\
    \ nums_copy.end(), [&sum](long a, long b) -> bool {\n        return sum - a <\
    \ sum - b;\n    });\n    return nums_copy;", "    // Write your code here.\n \
    \   std::vector<long> nums2;\n    for (auto &num : nums) {\n        long sum =\
    \ 0;\n        while (num != 0) {\n            sum += num % 10;\n            num\
    \ /= 10;\n        }\n        nums2.push_back(sum);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end());\n    return nums2;", "    // Write your code here.\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    long max = 0;\n    for (long i : nums2)\
    \ {\n        if (sum > max) {\n            max = sum;\n        }\n        sum\
    \ += i;\n    }\n    long ans = max;\n    for (long i : nums2) {\n        sum -=\
    \ i;\n        if (sum > max) {\n            max = sum;\n        }\n        sum\
    \ += i;\n    }\n    ans = max;\n    return nums2;", "    // Write your code here.\n\
    \    long long sum = 0;\n    for (long long i : nums) {\n        sum += i;\n \
    \   }\n    long long ans = sum;\n    for (long long i : nums) {\n        ans =\
    \ ans - i;\n    }\n    return nums;", "    // Write your code here\n    long sum\
    \ = 0;\n    long temp = 0;\n    long index = 0;\n    long max = 0;\n    long min\
    \ = 0;\n    long ans = 0;\n    long count = 0;\n    long sum2 = 0;\n    long temp2\
    \ = 0;\n    long index2 = 0;\n    long max2 = 0;\n    long min2 = 0;\n    long\
    \ ans2 = -1;\n    long count2 = 0;\n    long sum3 = 0;\n    long temp3 = 0;\n\
    \    long index3 = 0;\n    long max3 = 0;\n    long min3 = 0;\n    long ans3 =\
    \ 0;\n    long count3 = 0;\n    long sum4 = 0;\n    long temp4 = 0;\n    long\
    \ index4 = 0;\n    long max4 = 0;\n    long min4 = 0;\n    long ans4 = 0;\n  \
    \  long count4 = 0;\n    long sum5 = 0;\n    long temp5 = 0;\n    long index5\
    \ = 0;\n    long max5 = 0;\n    long min5 = 0;\n    long ans5 = 0;\n    long count5\
    \ = 0;\n    long sum6 = 0;\n    long temp6 = 0;\n    long index6 = 0;\n    long\
    \ max6 = 0;\n    long min6 = 0;\n    long ans6 = 0;\n    long count6 = 0;\n  \
    \  long sum7 = 0;\n    long temp7 = 0;\n    long index7 = 0;\n    long max7 =\
    \ 0;\n    long min7 = 0;\n    long ans7 = 0;\n    long count7 = 0;\n    long sum8\
    \ = 0;\n    long temp8 = 0;\n    long index8 = 0;\n    long max8 = 0;\n    long\
    \ min8 = 0;\n    long ans8 = 0;\n    long count8 = 0;\n    long sum9 = 0;\n  \
    \  long temp9 = 0;\n    long index9 = 0;\n    long max9 = 0;\n    long min9 =\
    \ 0;\n    long ans9 = 0;\n    long count9 = 0;\n    long sum10 = 0;\n    long\
    \ temp10 = 0;\n    long index10 = 0;\n    long max10 = 0;\n    long min10 = 0;\n\
    \    long ans10 = 0;\n    long count10 = 0;\n    long sum11 = 0;\n    long temp11\
    \ = 0;\n    long index11 = 0;\n    long max11 = 0;\n    long min11 = 0;\n    long\
    \ ans11 = 0;\n    long count11 = 0;\n    long sum12 = 0;\n    long temp12 = 0;\n\
    \    long index12 = 0;\n    long max12 = 0;\n    long min12 = 0;\n    long ans12\
    \ = 0;\n    long count12 = 0;\n    long sum13 = 0;\n    long temp13 = 0;\n   \
    \ long index13 = 0;\n    long max13 = 0;\n    long min13 = 0;\n    long ans13\
    \ = 0;\n    ", "    std::vector<long> numsSorted(nums.size());\n    long sum =\
    \ 0;\n    for (long i : nums) {\n        sum += i;\n        numsSorted[sum / 10]\
    \ = i;\n    }\n    return numsSorted;", "    std::vector<long> nums_copy = nums;\n\
    \    long sum = 0;\n    for (long i : nums_copy) {\n        sum += i;\n    }\n\
    \    long max_sum = 0;\n    long max_index = 0;\n    for (long i : nums_copy)\
    \ {\n        if (sum == max_sum) {\n            max_index = i;\n        }\n  \
    \      max_sum = sum;\n    }\n    nums_copy.erase(nums_copy.begin() + max_index);\n\
    \    nums_copy.insert(nums_copy.begin(), max_index);\n    return nums_copy;",
  "    std::vector<long> nums_copy = nums;\n    std::sort(nums_copy.begin(), nums_copy.end(),\
    \ [](long a, long b) -> bool {\n        return a + b < 0;\n    });\n    return\
    \ nums_copy;", "    // Write your code here.\n    long long sum = 0;\n    long\
    \ long max = 0;\n    long long min = 0;\n    long long index = 0;\n    for (auto\
    \ num : nums) {\n        sum += num;\n        if (sum > max) {\n            max\
    \ = sum;\n        }\n        if (sum < min) {\n            min = sum;\n      \
    \  }\n    }\n    std::vector<long> ans;\n    for (auto num : nums) {\n       \
    \ sum += num;\n        if (sum == max) {\n            ans.push_back(num);\n  \
    \      }\n        if (sum == min) {\n            ans.push_back(num);\n       \
    \ }\n    }\n    return ans;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b){return sum-a-b<0;});\n    return nums2;", "    std::vector<long>\
    \ numsSorted(nums.size());\n    for (size_t i = 0; i < nums.size(); i++) {\n \
    \       long sum = 0;\n        for (size_t j = 0; j < nums.size(); j++) {\n  \
    \          if (i == j) {\n                continue;\n            }\n         \
    \   sum += nums[j];\n        }\n        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(),\
    \ numsSorted.end());\n    return numsSorted;", "    // Write your code here\n\
    \    std::vector<long> nums2;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [&sum](long a, long b) -> bool {\n        return sum - a < sum\
    \ - b;\n    });\n    return nums2;", "    std::vector<long> numsSorted(nums.size());\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n      \
    \          continue;\n            }\n            sum += nums[j];\n        }\n\
    \        numsSorted[i] = sum;\n    }\n    std::sort(numsSorted.begin(), numsSorted.end());\n\
    \    return numsSorted;", "    // Write your code here\n    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long\
    \ a, long b) {\n        return sum - a + b < sum - b + a;\n    });\n    return\
    \ nums2;", "    // Write your code here.\n    long sum = 0;\n    for (long i :\
    \ nums) {\n        sum += i;\n    }\n    std::vector<long> result;\n    for (long\
    \ i : nums) {\n        if (sum == i) {\n            result.push_back(i);\n   \
    \     }\n    }\n    std::sort(result.begin(), result.end());\n    return result;",
  "    // Write your code here\n    std::vector<long> nums2;\n    long sum = 0;\n\
    \    for (long i : nums) {\n        sum += i;\n        nums2.push_back(i);\n \
    \   }\n    std::sort(nums2.begin(), nums2.end(), [&sum](long a, long b) {\n  \
    \      return sum - a + b < sum - a + b;\n    });\n    return nums2;", "    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n  \
    \      nums2.push_back(i);\n    }\n    long maxSum = 0;\n    for (long i : nums2)\
    \ {\n        maxSum = max(maxSum, sum);\n    }\n    long index = 0;\n    std::vector<long>\
    \ result;\n    for (long i : nums2) {\n        sum += i;\n        if (sum == maxSum)\
    \ {\n            result.push_back(nums[index]);\n            index++;\n      \
    \  }\n    }\n    return result;", "    std::vector<long> nums_copy = nums;\n \
    \   std::sort(nums_copy.begin(), nums_copy.end(), [](long a, long b){\n      \
    \  return std::abs(a) > std::abs(b);\n    });\n    return nums_copy;", "    //\
    \ Write your code here\n    std::vector<long> result;\n    long sum = 0;\n   \
    \ for (long i : nums) {\n        sum += i;\n        result.push_back(i);\n   \
    \ }\n    std::sort(result.begin(), result.end(), [&sum](long a, long b){return\
    \ sum - a - b < 0;});\n    return result;", "    std::vector<long> ans;\n    long\
    \ sum = 0;\n    for (long i : nums) {\n        sum += i;\n        ans.push_back(i);\n\
    \    }\n    long max_sum = 0;\n    for (long i : ans) {\n        max_sum = std::max(max_sum,\
    \ sum);\n    }\n    std::vector<long> sorted_nums;\n    for (long i : ans) {\n\
    \        long sum = 0;\n        for (long j : nums) {\n            sum += j;\n\
    \            if (sum == i) {\n                sorted_nums.push_back(j);\n    \
    \        }\n        }\n    }\n    return sorted_nums;", "    // Write your code\
    \ here\n    std::vector<long> nums2;\n    long sum = 0;\n    for (auto i : nums)\
    \ {\n        sum += i;\n        nums2.push_back(i);\n    }\n    std::sort(nums2.begin(),\
    \ nums2.end(), [sum](int a, int b) {\n        return sum - a + b < sum - a - b;\n\
    \    });\n    return nums2;", "    std::vector<long> nums_copy = nums;\n    long\
    \ sum = 0;\n    for (long num : nums_copy) {\n        sum += num;\n    }\n   \
    \ long last_sum = 0;\n    for (long num : nums_copy) {\n        if (last_sum !=\
    \ sum) {\n            nums_copy.insert(nums_copy.begin(), num);\n        }\n \
    \       last_sum = sum;\n    }\n    return nums_copy;", "    std::vector<long>\
    \ nums2;\n    long sum = 0;\n    for (long &num : nums) {\n        sum += num;\n\
    \        nums2.push_back(num);\n    }\n    std::sort(nums2.begin(), nums2.end(),\
    \ [&sum](long &a, long &b) -> bool {\n        return sum - a + b < 0;\n    });\n\
    \    return nums2;"]
stop_tokens:
- "\n}"

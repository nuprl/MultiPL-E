name: HumanEval_115_max_fill
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a rectangular\
  \ grid of wells. Each row represents a single well,\n// and each 1 in a row represents\
  \ a single unit of water.\n// Each well has a corresponding bucket that can be used\
  \ to extract water from it, \n// and all buckets have the same capacity.\n// Your\
  \ task is to use the buckets to empty the wells.\n// Output the number of times\
  \ you need to lower the buckets.\n// Example 1:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)1,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1})})), (1))\n// (6)\n// Example 2:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)1, (long)1, (long)1})})),\
  \ (2))\n// (5)\n// Example 3:\n// >>> max_fill((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)0, (long)0})})),\
  \ (5))\n// (0)\n// Constraints:\n// * all wells have the same length\n// * 1 <=\
  \ grid.length <= 10^2\n// * 1 <= grid[:,1].length <= 10^2\n// * grid[i][j] -> 0\
  \ | 1\n// * 1 <= capacity <= 10\nlong max_fill(std::vector<std::vector<long>> grid,\
  \ long capacity) {\n"
tests: "}\nint main() {\n    auto candidate = max_fill;\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)1,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1})})), (1)) == (6));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)1, (long)1, (long)1,\
  \ (long)1}), (std::vector<long>)std::vector<long>({(long)0, (long)1, (long)1, (long)1})})),\
  \ (2)) == (5));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)0,\
  \ (long)0, (long)0}), (std::vector<long>)std::vector<long>({(long)0, (long)0, (long)0})})),\
  \ (5)) == (0));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (2)) == (4));\n    assert(candidate((std::vector<std::vector<long>>({(std::vector<long>)std::vector<long>({(long)1,\
  \ (long)1, (long)1, (long)1}), (std::vector<long>)std::vector<long>({(long)1, (long)1,\
  \ (long)1, (long)1})})), (9)) == (2));\n}\n"
completions: ["    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long long ans_temp = 0;\n    long long ans_temp_temp = 0;\n    long long\
    \ ans_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp = 0;\n    long\
    \ long ans_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_", "  \
    \  long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n", "    // write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt =\
    \ 0;\n    long ans = INT_MAX;\n    long long ans_cnt = 0;\n    long long ans_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt = 0;\n    long long ans_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long long\
    \ ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n \
    \   long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n \
    \   long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n\
    \    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n\
    \    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long long ans_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long cnt2 = 0;\n \
    \   long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n\
    \    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 =\
    \ 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76\
    \ = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long\
    \ cnt80 = 0;\n    long cnt81 = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long l = grid[0][0];\n    long r = grid[0][0];\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long\
    \ g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n\
    \    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long\
    \ p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n\
    \    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long\
    \ y = 0;\n    long z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n\
    \    long D = 0;\n    long E = 0;\n    long F = 0;\n    long G = 0;\n    long\
    \ H = 0;\n    long I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n\
    \    long M = 0;\n    long N = 0;\n    long O = 0;\n    long P = 0;\n    long\
    \ Q = 0;\n    long R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n\
    \    long V = 0;\n    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long\
    \ Z = 0;\n    long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd =\
    \ 0;\n    long ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n\
    \    long ii = 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long\
    \ mm = 0;\n    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq =\
    \ 0;\n    long rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n\
    \    long vv = 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long\
    \ zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n    long Cc = 0;\n    long Dd =\
    \ 0;\n    long Ee = 0;\n    long Ff = 0;\n    long Gg = 0;\n    long Hh = 0;\n\
    \    long Ii = 0;\n    long Jj = 0;\n    long Kk = 0;\n    long Ll = 0;\n    long\
    \ Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n    long Pp = 0;\n    long Qq =\
    \ 0;\n", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long\
    \ f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n\
    \    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long\
    \ o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n\
    \    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long\
    \ x = 0;\n    long y = 0;\n    long z = 0;\n    long aa = 0;\n    long ab = 0;\n\
    \    long ac = 0;\n    long ad = 0;\n    long ae = 0;\n    long af = 0;\n    long\
    \ ag = 0;\n    long ah = 0;\n    long ai = 0;\n    long aj = 0;\n    long ak =\
    \ 0;\n    long al = 0;\n    long am = 0;\n    long an = 0;\n    long ao = 0;\n\
    \    long ap = 0;\n    long aq = 0;\n    long ar = 0;\n    long as = 0;\n    long\
    \ at = 0;\n    long au = 0;\n    long av = 0;\n    long aw = 0;\n    long ax =\
    \ 0;\n    long ay = 0;\n    long az = 0;\n    long aaa = 0;\n    long aab = 0;\n\
    \    long aac = 0;\n    long aad = 0;\n    long aee = 0;\n    long aaf = 0;\n\
    \    long aag = 0;\n    long aah = 0;\n    long aai = 0;\n    long ajj = 0;\n\
    \    long akk = 0;\n    long ala = 0;\n    long amm = 0;\n    long ann = 0;\n\
    \    long aoo = 0;\n    long app = 0;\n    long aqq = 0;\n    long arr = 0;\n\
    \    long asa = 0;\n    long ata = 0;\n    long auu = 0;\n    long avv = 0;\n\
    \    long awx = 0;\n    long axy = 0;\n    long ayz = 0;\n    long aaax = 0;\n\
    \    long aaab = 0;\n    long aaac = 0;\n    long aaad = 0;\n    long aeee = 0;\n\
    \    long aafg = 0;\n    long aagh = 0;\n    long aaai = 0;\n    long ajjj = 0;\n\
    \    long akkk = 0;\n    long alal = 0;\n    long ammm = 0;\n    long annn = 0;\n\
    \    long aoop = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long an = n * m;\n    long long an2 = an * an;\n\
    \    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n    long long an5\
    \ = an4 * an;\n    long long an6 = an5 * an;\n    long long an7 = an6 * an;\n\
    \    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n    long long an10\
    \ = an9 * an;\n    long long an11 = an10 * an;\n    long long an12 = an11 * an;\n\
    \    long long an13 = an12 * an;\n    long long an14 = an13 * an;\n    long long\
    \ an15 = an14 * an;\n    long long an16 = an15 * an;\n    long long an17 = an16\
    \ * an;\n    long long an18 = an17 * an;\n    long long an19 = an18 * an;\n  \
    \  long long an20 = an19 * an;\n    long long an21 = an20 * an;\n    long long\
    \ an22 = an21 * an;\n    long long an23 = an22 * an;\n    long long an24 = an23\
    \ * an;\n    long long an25 = an24 * an;\n    long long an26 = an25 * an;\n  \
    \  long long an27 = an26 * an;\n    long long an28 = an27 * an;\n    long long\
    \ an29 = an28 * an;\n    long long an30 = an29 * an;\n    long long an31 = an30\
    \ * an;\n    long long an32 = an31 * an;\n    long long an33 = an32 * an;\n  \
    \  long long an34 = an33 * an;\n    long long an35 = an34 * an;\n    long long\
    \ an36 = an35 * an;\n    long long an37 = an36 * an;\n    long long an38 = an37\
    \ * an;\n    long long an39 = an38 * an;\n    long long an40 = an39 * an;\n  \
    \  long long an41 = an40 * an;\n    long long an42 = an41 * an;\n    long long\
    \ an43 = an42 * an;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long count = 0;\n    long ans1 = 0;\n    long ans2\
    \ = 0;\n    long ans3 = 0;\n    long ans4 = 0;\n    long ans5 = 0;\n    long ans6\
    \ = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n    long ans9 = 0;\n    long ans10\
    \ = 0;\n    long ans11 = 0;\n    long ans12 = 0;\n    long ans13 = 0;\n    long\
    \ ans14 = 0;\n    long ans15 = 0;\n    long ans16 = 0;\n    long ans17 = 0;\n\
    \    long ans18 = 0;\n    long ans19 = 0;\n    long ans20 = 0;\n    long ansp\
    \ = 0;\n    long ansnp = 0;\n    long ansp1 = 0;\n    long ansnp1 = 0;\n    long\
    \ ansp2 = 0;\n    long ansnp2 = 0;\n    long ansp3 = 0;\n    long ansnp3 = 0;\n\
    \    long ansp4 = 0;\n    long ansnp4 = 0;\n    long ansp5 = 0;\n    long ansnp5\
    \ = 0;\n    long ansp6 = 0;\n    long ansnp6 = 0;\n    long ansp7 = 0;\n    long\
    \ ansnp7 = 0;\n    long ansp8 = 0;\n    long ansnp8 = 0;\n    long ansp9 = 0;\n\
    \    long ansnp9 = 0;\n    long ansp10 = 0;\n    long ansnp10 = 0;\n    long ansp11\
    \ = 0;\n    long ansnp11 = 0;\n    long ansp12 = 0;\n    long ansnp12 = 0;\n \
    \   long ansp13 = 0;\n    long ansnp13 = 0;\n    long ansp14 = 0;\n    long ansnp14\
    \ = 0;\n    long ansp15 = 0;\n    long ansnp15 = 0;\n    long ansp16 = 0;\n  \
    \  long ansnp16 = 0;\n    long ansp17 = 0;\n    long ansnp17 = 0;\n    long ansp18\
    \ = 0;\n    long ansnp18 = 0;\n    long ansp19 = 0;\n    long ansnp19 = 0;\n \
    \   long ansp20 = 0;\n    long ansnp20 = 0;\n    long ansp21 = 0;\n    long ansnp21\
    \ = 0;\n    long ansp22 = 0;\n    long ansnp22 = 0;\n    long ansp23 = 0;\n  \
    \  long ansnp23 = 0;\n    long ansp24 = 0;\n    long ansnp24 = 0;\n    long ansp25\
    \ = 0;\n    long ansnp25 = 0;\n    long ansp26 = 0;\n    long ansnp26 = 0;\n \
    \   long ansp", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cur_cap = 0;\n\
    \    long cur_n = 0;\n    long cur_m = grid[0][0];\n    long cur_an = 0;\n   \
    \ long cur_n2 = 0;\n    long cur_m2 = 0;\n    long cur_an2 = 0;\n    long cur_n3\
    \ = 0;\n    long cur_m3 = 0;\n    long cur_an3 = 0;\n    long cur_n4 = 0;\n  \
    \  long cur_m4 = 0;\n    long cur_an4 = 0;\n    long cur_n5 = 0;\n    long cur_m5\
    \ = 0;\n    long cur_an5 = 0;\n    long cur_n6 = 0;\n    long cur_m6 = 0;\n  \
    \  long cur_an6 = 0;\n    long cur_n7 = 0;\n    long cur_m7 = 0;\n    long cur_an7\
    \ = 0;\n    long cur_n8 = 0;\n    long cur_m8 = 0;\n    long cur_an8 = 0;\n  \
    \  long cur_n9 = 0;\n    long cur_m9 = 0;\n    long cur_an9 = 0;\n    long cur_n10\
    \ = 0;\n    long cur_m10 = 0;\n    long cur_an10 = 0;\n    long cur_n11 = 0;\n\
    \    long cur_m11 = 0;\n    long cur_an11 = 0;\n    long cur_n12 = 0;\n    long\
    \ cur_m12 = 0;\n    long cur_an12 = 0;\n    long cur_n13 = 0;\n    long cur_m13\
    \ = 0;\n    long cur_an13 = 0;\n    long cur_n14 = 0;\n    long cur_m14 = 0;\n\
    \    long cur_an14 = 0;\n    long cur_n15 = 0;\n    long cur_m15 = 0;\n    long\
    \ cur_an15 = 0;\n    long cur_n16 = 0;\n    long cur_m16 = 0;\n    long cur_an16\
    \ = 0;\n    long cur_n17 = 0;\n    long cur_m17 = 0;\n    long cur_an17 = 0;\n\
    \    long cur_n18 = 0;\n    long cur_m18 = 0;\n    long cur_an18 = 0;\n    long\
    \ cur_n19 = 0;\n    long cur_m19 = 0;\n    long cur_an19 = 0;\n    long cur_n20\
    \ = 0;\n    long cur_m20 = 0;\n    long cur_an20 = 0;\n    long cur_n21 = 0;\n\
    \    long cur_m21 = 0;\n    long cur_an21 = 0;\n    long cur_n22 = 0;\n    long\
    \ cur_m22 = 0;\n    long cur_an22 = 0;\n    long cur_n23 = 0;\n    long cur_m23\
    \ = 0;\n    long cur_an23 = 0;\n    ", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ count = 0;\n    long max_capacity = 0;\n    long min_capacity = INT_MAX;\n \
    \   long min_bucket = INT_MAX;\n    long max_bucket = INT_MIN;\n    long bucket_size\
    \ = 0;\n    long bucket_capacity = 0;\n    long bucket_min = 0;\n    long bucket_max\
    \ = 0;\n    long bucket_sum = 0;\n    long bucket_sum2 = 0;\n    long bucket_sum3\
    \ = 0;\n    long bucket_sum4 = 0;\n    long bucket_sum5 = 0;\n    long bucket_sum6\
    \ = 0;\n    long bucket_sum7 = 0;\n    long bucket_sum8 = 0;\n    long bucket_sum9\
    \ = 0;\n    long bucket_sum10 = 0;\n    long bucket_sum11 = 0;\n    long bucket_sum12\
    \ = 0;\n    long bucket_sum13 = 0;\n    long bucket_sum14 = 0;\n    long bucket_sum15\
    \ = 0;\n    long bucket_sum16 = 0;\n    long bucket_sum17 = 0;\n    long bucket_sum18\
    \ = 0;\n    long bucket_sum19 = 0;\n    long bucket_sum20 = 0;\n    long bucket_sum21\
    \ = 0;\n    long bucket_sum22 = 0;\n    long bucket_sum23 = 0;\n    long bucket_sum24\
    \ = 0;\n    long bucket_sum25 = 0;\n    long bucket_sum26 = 0;\n    long bucket_sum27\
    \ = 0;\n    long bucket_sum28 = 0;\n    long bucket_sum29 = 0;\n    long bucket_sum30\
    \ = 0;\n    long bucket_sum31 = 0;\n    long bucket_sum32 = 0;\n    long bucket_sum33\
    \ = 0;\n    long bucket_sum34 = 0;\n    long bucket_sum35 = 0;\n    long bucket_sum36\
    \ = 0;\n    long bucket_sum37 = 0;\n    long bucket_sum38 = 0;\n    long bucket_sum39\
    \ = 0;\n    long bucket_sum40 = 0;\n    long bucket_sum41 = 0;\n    long bucket_sum42\
    \ = 0;\n    long bucket_sum43 = 0;\n    long bucket_sum44 = 0;\n    long bucket_sum45\
    \ = 0;\n    long bucket_sum46 = 0;\n    long bucket_sum47 = 0;\n    long bucket_sum48\
    \ = 0;\n    long bucket_sum49 = 0;\n    long bucket_sum50 = 0;\n    long bucket_sum51\
    \ = 0;\n    long bucket_sum52 = 0;\n    long bucket_sum53 = 0;\n    long bucket_sum54\
    \ = 0;\n    long bucket_sum55 = 0;\n    long bucket_sum56 = 0;\n    long bucket_sum57\
    \ = 0;\n    long bucket_sum58 = 0;\n    long bucket_sum59 = 0;\n    long bucket_sum60\
    \ = 0;\n    long bucket_sum61 = 0;\n    long bucket_sum", "    // write your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long\
    \ cnt82 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long w = 1;\n    long\
    \ v = 1;\n    long u = 1;\n    long v1 = 1;\n    long v2 = 1;\n    long v3 = 1;\n\
    \    long v4 = 1;\n    long v5 = 1;\n    long v6 = 1;\n    long v7 = 1;\n    long\
    \ v8 = 1;\n    long v9 = 1;\n    long v10 = 1;\n    long v11 = 1;\n    long v12\
    \ = 1;\n    long v13 = 1;\n    long v14 = 1;\n    long v15 = 1;\n    long v16\
    \ = 1;\n    long v17 = 1;\n    long v18 = 1;\n    long v19 = 1;\n    long v20\
    \ = 1;\n    long v21 = 1;\n    long v22 = 1;\n    long v23 = 1;\n    long v24\
    \ = 1;\n    long v25 = 1;\n    long v26 = 1;\n    long v27 = 1;\n    long v28\
    \ = 1;\n    long v29 = 1;\n    long v30 = 1;\n    long v31 = 1;\n    long v32\
    \ = 1;\n    long v33 = 1;\n    long v34 = 1;\n    long v35 = 1;\n    long v36\
    \ = 1;\n    long v37 = 1;\n    long v38 = 1;\n    long v39 = 1;\n    long v40\
    \ = 1;\n    long v41 = 1;\n    long v42 = 1;\n    long v43 = 1;\n    long v44\
    \ = 1;\n    long v45 = 1;\n    long v46 = 1;\n    long v47 = 1;\n    long v48\
    \ = 1;\n    long v49 = 1;\n    long v50 = 1;\n    long v51 = 1;\n    long v52\
    \ = 1;\n    long v53 = 1;\n    long v54 = 1;\n    long v55 = 1;\n    long v56\
    \ = 1;\n    long v57 = 1;\n    long v58 = 1;\n    long v59 = 1;\n    long v60\
    \ = 1;\n    long v61 = 1;\n    long v62 = 0;\n    long v63 = 0;\n    long v64\
    \ = 0;\n    long v65 = 0;\n    long v66 = 0;\n    long v67 = 0;\n    long v68\
    \ = 0;\n    long v69 = 0;\n    long v70 = 0;\n    long v71 = 0;\n    long v72\
    \ = 0;\n    long v73 = 0;\n    long v74 = 0;\n    long v75 = 0;\n    long v76\
    \ = 0;\n    long v77 = 0;\n    long v78 = 0;\n    long v", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long ans = INT_MAX;\n    std::vector<long> b(n);\n    std::vector<long> c(m);\n\
    \    long cnt = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            if(grid[i][j] == 1) {\n                b[i] = b[i]\
    \ + capacity;\n                c[j] = c[j] + capacity;\n            }\n      \
    \  }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                if(b[i] > c[j]) {\n\
    \                    b[i] = b[i] - c[j];\n                    ans = ans + 1;\n\
    \                }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    std::vector<std::vector<long>> ans(n);\n\
    \    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n  \
    \          long cnt = 0;\n            for(long k = 0; k < n; k++) {\n        \
    \        for(long l = 0; l < m; l++) {\n                    if(grid[i][k] == grid[k][l])\
    \ {\n                        cnt++;\n                    }\n                }\n\
    \            }\n            if(cnt > ans[i]) {\n                ans[i] = cnt;\n\
    \            }\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            long cnt = 0;\n            for(long k = 0;\
    \ k < n; k++) {\n                for(long l = 0; l < m; l++) {\n             \
    \       if(grid[i][k] == grid[k][l]) {\n                        cnt++;\n     \
    \               }\n                }\n            }\n            if(cnt > ans[i])\
    \ {\n                ans[i] = cnt;\n            }\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            long\
    \ cnt = 0;\n            for(long k = 0; k < n; k++) {\n                for(long\
    \ l = 0; l < m; l++) {\n                    if(grid[i][k] == grid[k][l]) {\n \
    \                       cnt++;\n                    }\n                }\n   \
    \         }\n            if(cnt > ans[i]) {\n                ans[i] = cnt;\n \
    \           }\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            long cnt = 0;\n            for(long k = 0;\
    \ k < n; k++) {\n                for(long l = 0; l < m; l++) {\n             \
    \       if(grid[i][k] == grid[k][l]) {\n                        cnt++;\n     \
    \               }\n                }\n            }\n            if(cnt > ans[i])\
    \ {\n                ans[i] = cnt;\n            }\n        }\n    }\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            long\
    \ cnt = 0;\n            for(long k = 0; k < n; k++) {\n                for(long\
    \ l = 0; l < m; l++) {\n                    if(grid[i][k] == grid[k][l]) {\n \
    \                       cnt++;\n                    }\n                }\n   \
    \         }\n            if(cnt > ans[i]) {\n                ans[i] = cnt;\n \
    \           }\n        }\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            long cnt = 0;\n            for(long k = 0;\
    \ k < n; k++) {\n                for(long l = 0; l < m; l", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    std::vector<std::vector<long>> buckets(n);\n    std::vector<std::vector<long>>\
    \ buckets_rev(m);\n    std::vector<std::vector<long>> buckets_rev_rev(m);\n  \
    \  std::vector<std::vector<long>> buckets_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>> buckets_rev_rev_rev_rev_rev(m);\n\
    \    std::vector<std::vector<long>> buckets_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev(m);\n    std::vector<std::vector<long>>\
    \ buckets_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ count = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long cur_n\
    \ = n;\n    long cur_m = m;\n    long cur_ans = 0;\n    long cur_count = 0;\n\
    \    long cur_cur = 0;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_n =\
    \ cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_count\
    \ = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = cur_cur_cap;\n \
    \   long cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m = cur_cur_m;\n   \
    \ long cur_cur_cur_ans = 0;\n    long cur_cur_cur_count = 0;\n    long cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_cur_m;\n    long\
    \ cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_cur_m;\n    long\
    \ cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_cur_m;\n    long\
    \ cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_cur_m;\n    long\
    \ cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_count = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = ", "    // write your code here\n \
    \   long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n \
    \   long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    ", "    // write your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n    long\
    \ long max = 0;\n    long long cur = 0;\n    long long cur2 = 0;\n    long long\
    \ cur3 = 0;\n    long long cur4 = 0;\n    long long cur5 = 0;\n    long long cur6\
    \ = 0;\n    long long cur7 = 0;\n    long long cur8 = 0;\n    long long cur9 =\
    \ 0;\n    long long cur10 = 0;\n    long long cur11 = 0;\n    long long cur12\
    \ = 0;\n    long long cur13 = 0;\n    long long cur14 = 0;\n    long long cur15\
    \ = 0;\n    long long cur16 = 0;\n    long long cur17 = 0;\n    long long cur18\
    \ = 0;\n    long long cur19 = 0;\n    long long cur20 = 0;\n    long long cur21\
    \ = 0;\n    long long cur22 = 0;\n    long long cur23 = 0;\n    long long cur24\
    \ = 0;\n    long long cur25 = 0;\n    long long cur26 = 0;\n    long long cur27\
    \ = 0;\n    long long cur28 = 0;\n    long long cur29 = 0;\n    long long cur30\
    \ = 0;\n    long long cur31 = 0;\n    long long cur32 = 0;\n    long long cur33\
    \ = 0;\n    long long cur34 = 0;\n    long long cur35 = 0;\n    long long cur36\
    \ = 0;\n    long long cur37 = 0;\n    long long cur38 = 0;\n    long long cur39\
    \ = 0;\n    long long cur40 = 0;\n    long long cur41 = 0;\n    long long cur42\
    \ = 0;\n    long long cur43 = 0;\n    long long cur44 = 0;\n    long long cur45\
    \ = 0;\n    long long cur46 = 0;\n    long long cur47 = 0;\n    long long cur48\
    \ = 0;\n    long long cur49 = 0;\n    long long cur50 = 0;\n    long long cur51\
    \ = 0;\n    long long cur52 = 0;\n    long long cur53 = 0;\n    long long cur54\
    \ = 0;\n    long long cur55 = 0;\n    long long cur56 = 0;\n    long long cur57\
    \ = 0;\n    long long cur58 = 0;\n    long long cur59 = 0;\n    long long cur60\
    \ = 0;\n    long long cur61 = 0;\n    long long cur62 = 0;\n    long long cur63\
    \ = 0;\n    long long cur64 = 0;\n    long long cur65 = 0;\n    long long cur66\
    \ = 0;\n    long long cur67 = 0;\n    long long cur68 = 0;\n    long long cur",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long an = n;\n    long bn = m;\n    long cn = capacity;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n\
    \    long cnm = cn;\n    long cnn = cn;\n    long cnm = ", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n \
    \   long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long\
    \ cnt82 = 0;\n", "    // write your code here\n    long ans = 0;\n    long n =\
    \ grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long ans\
    \ = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n     \
    \           if(cnt > ans) {\n                    ans = cnt;\n                }\n\
    \            }\n        }\n    }\n    return ans;", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long i, j;\n    long max_well = 0;\n    long max_well_size\
    \ = 0;\n    long max_well_size_left = 0;\n    long max_well_size_right = 0;\n\
    \    long max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n    long\
    \ max_well_size_left = 0;\n    long max_well_size_right = 0;\n    long max_well_size_top\
    \ = 0;\n    long max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n\
    \    long max_well_size_right = 0;\n    long max_well_size_top = 0;\n    long\
    \ max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n    long max_well_size_right\
    \ = 0;\n    long max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n\
    \    long max_well_size_left = 0;\n    long max_well_size_right = 0;\n    long\
    \ max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n    long max_well_size_left\
    \ = 0;\n    long max_well_size_right = 0;\n    long max_well_size_top = 0;\n \
    \   long max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n    long\
    \ max_well_size_right = 0;\n    long max_well_size_top = 0;\n    long max_well_size_bottom\
    \ = 0;\n    long max_well_size_left = 0;\n    long max_well_size_right = 0;\n\
    \    long max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n    long\
    \ max_well_size_left = 0;\n    long max_well_size_right = 0;\n    long max_well_size_top\
    \ = 0;\n    long max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n\
    \    long max_well_size_right = 0;\n    long max_well_size_top = 0;\n    long\
    \ max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n    long max_well_size_right\
    \ = 0;\n    long max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n\
    \    long max_well_size_left = 0;\n    long max_well_size_right = 0;\n    long\
    \ max_well_size_top = 0;\n    long max_well_size_bottom = 0;\n    long max_well_size_left\
    \ = 0;\n    long max_well_size_right = 0;\n    long max_well_size_top = 0;\n \
    \   long max_well_size_bottom = 0;\n    long max_well_size_left = 0;\n    long\
    \ max_well_size_right = 0;\n    long max_well_size_top = 0;\n    long max_well_size_bottom\
    \ = 0;\n    long max_well_size_left = 0;\n    long max_well_size_right = 0;\n\
    \    ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    std::vector<long> b(n);\n    std::vector<long> w(m);\n\
    \    std::vector<long> bs(n);\n    std::vector<long> ws(m);\n    for(long i =\
    \ 0; i < n; i++) {\n        b[i] = 0;\n        w[i] = 0;\n        bs[i] = 0;\n\
    \        ws[i] = 0;\n    }\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                b[i]\
    \ += 1;\n                w[j] += 1;\n                bs[i] += 1;\n           \
    \     ws[j] += 1;\n            }\n        }\n    }\n    for(long i = 0; i < n;\
    \ i++) {\n        for(long j = 0; j < m; j++) {\n            if(b[i] > 0 && w[j]\
    \ > 0 && bs[i] >= capacity) {\n                ans += 1;\n                cnt\
    \ += 1;\n                for(long k = 0; k < n; k++) {\n                    b[k]\
    \ -= 1;\n                    w[k] -= 1;\n                    bs[k] -= 1;\n   \
    \                 ws[k] -= 1;\n                }\n            }\n        }\n \
    \   }\n    return cnt;", "    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long long an = 0;\n\
    \    long long an2 = 0;\n    long long an3 = 0;\n    long long an4 = 0;\n    long\
    \ long an5 = 0;\n    long long an6 = 0;\n    long long an7 = 0;\n    long long\
    \ an8 = 0;\n    long long an9 = 0;\n    long long an10 = 0;\n    long long an11\
    \ = 0;\n    long long an12 = 0;\n    long long an13 = 0;\n    long long an14 =\
    \ 0;\n    long long an15 = 0;\n    long long an16 = 0;\n    long long an17 = 0;\n\
    \    long long an18 = 0;\n    long long an19 = 0;\n    long long an20 = 0;\n \
    \   long long an21 = 0;\n    long long an22 = 0;\n    long long an23 = 0;\n  \
    \  long long an24 = 0;\n    long long an25 = 0;\n    long long an26 = 0;\n   \
    \ long long an27 = 0;\n    long long an28 = 0;\n    long long an29 = 0;\n    long\
    \ long an30 = 0;\n    long long an31 = 0;\n    long long an32 = 0;\n    long long\
    \ an33 = 0;\n    long long an34 = 0;\n    long long an35 = 0;\n    long long an36\
    \ = 0;\n    long long an37 = 0;\n    long long an38 = 0;\n    long long an39 =\
    \ 0;\n    long long an40 = 0;\n    long long an41 = 0;\n    long long an42 = 0;\n\
    \    long long an43 = 0;\n    long long an44 = 0;\n    long long an45 = 0;\n \
    \   long long an46 = 0;\n    long long an47 = 0;\n    long long an48 = 0;\n  \
    \  long long an49 = 0;\n    long long an50 = 0;\n    long long an51 = 0;\n   \
    \ long long an52 = 0;\n    long long an53 = 0;\n    long long an54 = 0;\n    long\
    \ long an55 = 0;\n    long long an56 = 0;\n    long long an57 = 0;\n    long long\
    \ an58 = 0;\n    long long an59 = 0;\n    long long an60 = 0;\n    long long an61\
    \ = 0;\n    long long an62 = 0;\n    long long an63 = 0;\n    long long an64 =\
    \ 0;\n    long long an65 = 0;\n    long long an66 = 0;\n    long long an67 = 0;\n\
    \    long long an68 = 0;\n    long long an69 = 0;\n    long long an70 = 0;\n \
    \   long ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnt = 1;\n    long dnt = 1;\n    long cntt = 1;\n    long dntt = 1;\n    long\
    \ cntnt = 1;\n    long dnnt = 1;\n    long cntntt = 1;\n    long dnntt = 1;\n\
    \    long cntntnt = 1;\n    long dnntnt = 1;\n    long cntntntt = 1;\n    long\
    \ dnntntt = 1;\n    long cntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt = 1;\n    long cntntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntnt\
    \ = 1;\n    long dnntntnt = 1;\n    long cntntntt = 1;\n    long dnntntt = 1;\n\
    \    long cntntnt = 1;\n    long dnntnt = 1;\n    long cntntt = 1;\n    long dnntt\
    \ = 1;\n    long cntnt = 1;\n    long dnnt = 1;\n    long cntt = 1;\n    long\
    \ dnt = 1;\n    long cnt = 1;\n    long dnt = 1;\n    long cnt = 1;\n    long\
    \ dnt = 1;\n    long cnt = 1;\n    long dnt = 1;\n    long cnt = 1;\n    long\
    \ dnt = 1;\n    long cnt = 1;\n    long dnt = 1;\n    long cnt = 1;\n    long\
    \ dnt = 1;\n    long cnt = 1;\n    long dnt = 1;\n    long cnt = 1;\n    long\
    \ dnt = 1;\n    long cnt = 1;\n", "    // write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt =\
    \ 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long cur_n = n;\n \
    \   long cur_m = m;\n    long cur_ans = 0;\n    long cur_cur = 0;\n    long cur_cur_cap\
    \ = cur_cap;\n    long cur_cur_n = cur_n;\n    long cur_cur_m = cur_m;\n    long\
    \ cur_cur_ans = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = cur_cur_cap;\n\
    \    long cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m = cur_cur_m;\n  \
    \  long cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n = cur_cur_cur_n;\n    long cur_cur_cur_cur_m\
    \ = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n    long\
    \ cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_", "   \
    \ long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n   \
    \ long max_well = std::max(m, n);\n    long min_well = std::min(m, n);\n    long\
    \ min_bucket = std::min(m, n);\n    long max_bucket = std::max(m, n);\n    long\
    \ bucket_size = capacity / min_bucket;\n    long bucket_cap = capacity % min_bucket;\n\
    \    long bucket_size = std::max(bucket_size, 1);\n    long bucket_cap = std::max(bucket_cap,\
    \ 1);\n    long bucket_cap_2 = bucket_cap / 2;\n    long bucket_cap_3 = bucket_cap_2\
    \ / 2;\n    long bucket_cap_4 = bucket_cap_3 / 2;\n    long bucket_cap_5 = bucket_cap_4\
    \ / 2;\n    long bucket_cap_6 = bucket_cap_5 / 2;\n    long bucket_cap_7 = bucket_cap_6\
    \ / 2;\n    long bucket_cap_8 = bucket_cap_7 / 2;\n    long bucket_cap_9 = bucket_cap_8\
    \ / 2;\n    long bucket_cap_10 = bucket_cap_9 / 2;\n    long bucket_cap_11 = bucket_cap_10\
    \ / 2;\n    long bucket_cap_12 = bucket_cap_11 / 2;\n    long bucket_cap_13 =\
    \ bucket_cap_12 / 2;\n    long bucket_cap_14 = bucket_cap_13 / 2;\n    long bucket_cap_15\
    \ = bucket_cap_14 / 2;\n    long bucket_cap_16 = bucket_cap_15 / 2;\n    long\
    \ bucket_cap_17 = bucket_cap_16 / 2;\n    long bucket_cap_18 = bucket_cap_17 /\
    \ 2;\n    long bucket_cap_19 = bucket_cap_18 / 2;\n    long bucket_cap_20 = bucket_cap_19\
    \ / 2;\n    long bucket_cap_21 = bucket_cap_20 / 2;\n    long bucket_cap_22 =\
    \ bucket_cap_21 / 2;\n    long bucket_cap_23 = bucket_cap_22 / 2;\n    long bucket_cap_24\
    \ = bucket_cap_23 / 2;\n    long bucket_cap_25 = bucket_cap_24 / 2;\n    long\
    \ bucket_cap_26 = bucket_cap_25 / 2;\n    long bucket_cap_27 = bucket_cap_26 /\
    \ 2;\n    long bucket_cap_28 = bucket_cap_27 / 2;\n    long bucket_cap_29 = bucket_cap_28\
    \ / 2;\n    long bucket_cap_30 = bucket_cap_29 / 2;\n    long bucket_cap_31 =\
    \ bucket_cap_30 / 2;\n    long bucket_cap_32", "    // Your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long i, j;\n    long cnt1 = 0, cnt2 = 0;\n    long cnt3 = 0;\n\
    \    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n\
    \    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 =\
    \ 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long\
    \ cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n\
    \    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22\
    \ = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long\
    \ cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n\
    \    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33\
    \ = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long\
    \ cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n\
    \    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44\
    \ = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long\
    \ cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n\
    \    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55\
    \ = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long\
    \ cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n\
    \    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66\
    \ = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long\
    \ cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n\
    \    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77\
    \ = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long\
    \ cnt81", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long count = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_ans = 0;\n    long cur_count = 0;\n    long\
    \ cur_cur = 0;\n    long cur_cur_cap = capacity;\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cur_cap = cur_cap - grid[i][j];\n                cur = cur +\
    \ grid[i][j];\n                cur_cur_cap = cur_cur_cap - grid[i][j];\n     \
    \           cur_cur = cur_cur + grid[i][j];\n                if(cur_cap <= 0)\
    \ {\n                    cur_cap = cur_cap + cur_cur_cap;\n                  \
    \  cur = cur + cur_cur;\n                    cur_cur_cap = cur_cur_cap + cur_cur_cap;\n\
    \                    cur_cur = cur_cur + cur_cur;\n                    count++;\n\
    \                    cur_cap = capacity;\n                    cur = cur + cur_cur;\n\
    \                    cur_cur_cap = capacity;\n                    cur_cur = cur_cur\
    \ + cur_cur;\n                    cur_ans = cur_ans + count;\n               \
    \     count = 0;\n                }\n            }\n        }\n    }\n    ans\
    \ = cur_ans;\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_n = n;\n    long cur_m = m;\n    long cur_ans\
    \ = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_n\
    \ = cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cap = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n\
    \    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long\
    \ cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_n = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n  \
    \  long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n    long cnt = 0;\n\
    \    long cnt = 0;\n    long cnt = 0;\n    long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ ans = std::numeric_limits<long>::max();\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n  \
    \              cnt += 1;\n                if(cnt > ans) {\n                  \
    \  ans = cnt;\n                }\n            }\n        }\n    }\n    return\
    \ ans;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur_max = 0;\n    long cur_min\
    \ = 0;\n    long cur_sum = 0;\n    long cur_sum2 = 0;\n    long cur_sum3 = 0;\n\
    \    long cur_sum4 = 0;\n    long cur_sum5 = 0;\n    long cur_sum6 = 0;\n    long\
    \ cur_sum7 = 0;\n    long cur_sum8 = 0;\n    long cur_sum9 = 0;\n    long cur_sum10\
    \ = 0;\n    long cur_sum11 = 0;\n    long cur_sum12 = 0;\n    long cur_sum13 =\
    \ 0;\n    long cur_sum14 = 0;\n    long cur_sum15 = 0;\n    long cur_sum16 = 0;\n\
    \    long cur_sum17 = 0;\n    long cur_sum18 = 0;\n    long cur_sum19 = 0;\n \
    \   long cur_sum20 = 0;\n    long cur_sum21 = 0;\n    long cur_sum22 = 0;\n  \
    \  long cur_sum23 = 0;\n    long cur_sum24 = 0;\n    long cur_sum25 = 0;\n   \
    \ long cur_sum26 = 0;\n    long cur_sum27 = 0;\n    long cur_sum28 = 0;\n    long\
    \ cur_sum29 = 0;\n    long cur_sum30 = 0;\n    long cur_sum31 = 0;\n    long cur_sum32\
    \ = 0;\n    long cur_sum33 = 0;\n    long cur_sum34 = 0;\n    long cur_sum35 =\
    \ 0;\n    long cur_sum36 = 0;\n    long cur_sum37 = 0;\n    long cur_sum38 = 0;\n\
    \    long cur_sum39 = 0;\n    long cur_sum40 = 0;\n    long cur_sum41 = 0;\n \
    \   long cur_sum42 = 0;\n    long cur_sum43 = 0;\n    long cur_sum44 = 0;\n  \
    \  long cur_sum45 = 0;\n    long cur_sum46 = 0;\n    long cur_sum47 = 0;\n   \
    \ long cur_sum48 = 0;\n    long cur_sum49 = 0;\n    long cur_sum50 = 0;\n    long\
    \ cur_sum51 = 0;\n    long cur_sum52 = 0;\n    long cur_sum53 = 0;\n    long cur_sum54\
    \ = 0;\n    long cur_sum55 = 0;\n    long cur_sum56 = 0;\n    long cur_sum57 =\
    \ 0;\n    long cur_sum58 = 0;\n    long cur_sum59 = 0;\n    long cur_sum60 = 0;\n\
    \    long cur_sum61 = 0;\n    long cur_sum62 = 0;\n    long cur_sum63 = 0;\n \
    \   long cur_sum64 = 0;\n    long cur_sum65 = 0;\n    long cur_sum66 = 0;\n  \
    \  long cur_sum67 = 0;\n    long cur_sum68 = 0;", "    // Write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans_cnt = 0;\n    long ans_cnt_l = 0;\n    long ans_cnt_r\
    \ = 0;\n    long ans_cnt_u = 0;\n    long ans_cnt_d = 0;\n    long ans_cnt_u_r\
    \ = 0;\n    long ans_cnt_d_r = 0;\n    long ans_cnt_d_l = 0;\n    long ans_cnt_u_r_r\
    \ = 0;\n    long ans_cnt_u_r_l = 0;\n    long ans_cnt_d_r_cnt = 0;\n    long ans_cnt_d_l_cnt\
    \ = 0;\n    long ans_cnt_u_r_r_cnt = 0;\n    long ans_cnt_u_r_l = 0;\n    long\
    \ ans_cnt_d_r_u = 0;\n    long ans_cnt_d_r_d = 0;\n    long ans_cnt_u_r_r_u =\
    \ 0;\n    long ans_cnt_u_r_r_d = 0;\n    long ans_cnt_d_r_d_u = 0;\n    long ans_cnt_d_r_d_d\
    \ = 0;\n    long ans_cnt_u_r_r_d_u = 0;\n    long ans_cnt_u_r_r_d_d = 0;\n   \
    \ long ans_cnt_d_r_d_d_u = 0;\n    long ans_cnt_d_r_d_d_d = 0;\n    long ans_cnt_u_r_r_d_d_u\
    \ = 0;\n    long ans_cnt_u_r_r_d_d_d = 0;\n    long ans_cnt_d_r_d_d_d_u = 0;\n\
    \    long ans_cnt_d_r_d_d_d_d = 0;\n    long ans_cnt_u_r_r_d_d_d_u = 0;\n    long\
    \ ans_cnt_u_r_r_d_d_d_d = 0;\n    long ans_cnt_d_r_d_d_d_d_u = 0;\n    long ans_cnt_d_r_d_d_d_d_d\
    \ = 0;\n    long ans_cnt_u_r_r_d_d_d_d_u = 0;\n    long ans_cnt_u_r_r_d_d_d_d\
    \ = 0;\n    long ans_cnt_d_r_d_d_d_d_u = 0;\n    long ans_cnt_d_r_d_d_d_d_d =\
    \ 0;\n    long ans_cnt_u_r_r_d_d_d_d_u = 0;\n    long ans_cnt_u_r_r_d_d_d_d =\
    \ 0;\n    long ans_cnt_d_r_d_d_d_d_u = 0;\n    long ans_cnt_d_r_d_d_d_d_d = 0;\n\
    \    long ans_cnt_u_r_r_d_d_d_d_u = 0;\n    long ans_cnt_u_", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt =\
    \ 0;\n    long ans = INT_MAX;\n    long long ans_cnt = 0;\n    long long cnt2\
    \ = 0;\n    long long ans2 = 0;\n    long long cnt3 = 0;\n    long long ans3 =\
    \ 0;\n    long long cnt4 = 0;\n    long long ans4 = 0;\n    long long cnt5 = 0;\n\
    \    long long ans5 = 0;\n    long long cnt6 = 0;\n    long long ans6 = 0;\n \
    \   long long cnt7 = 0;\n    long long ans7 = 0;\n    long long cnt8 = 0;\n  \
    \  long long ans8 = 0;\n    long long cnt9 = 0;\n    long long ans9 = 0;\n   \
    \ long long cnt10 = 0;\n    long long ans10 = 0;\n    long long cnt11 = 0;\n \
    \   long long ans11 = 0;\n    long long cnt12 = 0;\n    long long ans12 = 0;\n\
    \    long long cnt13 = 0;\n    long long ans13 = 0;\n    long long cnt14 = 0;\n\
    \    long long ans14 = 0;\n    long long cnt15 = 0;\n    long long ans15 = 0;\n\
    \    long long cnt16 = 0;\n    long long ans16 = 0;\n    long long cnt17 = 0;\n\
    \    long long ans17 = 0;\n    long long cnt18 = 0;\n    long long ans18 = 0;\n\
    \    long long cnt19 = 0;\n    long long ans19 = 0;\n    long long cnt20 = 0;\n\
    \    long long ans20 = 0;\n    long long cnt21 = 0;\n    long long ans21 = 0;\n\
    \    long long cnt22 = 0;\n    long long ans22 = 0;\n    long long cnt23 = 0;\n\
    \    long long ans23 = 0;\n    long long cnt24 = 0;\n    long long ans24 = 0;\n\
    \    long long cnt25 = 0;\n    long long ans25 = 0;\n    long long cnt26 = 0;\n\
    \    long long ans26 = 0;\n    long long cnt27 = 0;\n    long long ans27 = 0;\n\
    \    long long cnt28 = 0;\n    long long ans28 = 0;\n    long long cnt29 = 0;\n\
    \    long long ans29 = 0;\n    long long cnt30 = 0;\n    long long ans30 = 0;\n\
    \    long long cnt31 = 0;\n    long long ans31 = 0;\n    long long cnt32 = 0;\n\
    \    long long ans32 = 0;\n    long long cnt33 = 0;\n    long long ans33 = 0;\n\
    \    long long cnt34 = 0;\n    long long ans34 = 0;\n    long long cnt35 = 0;\n\
    \    long long ans35 = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> bckgt(n,\
    \ 0);\n    std::vector<long> bckgt1(m, 0);\n    std::vector<long> bckgt2(m, 0);\n\
    \    std::vector<long> bckgt3(m, 0);\n    std::vector<long> bckgt4(m, 0);\n  \
    \  std::vector<long> bckgt5(m, 0);\n    std::vector<long> bckgt6(m, 0);\n    std::vector<long>\
    \ bckgt7(m, 0);\n    std::vector<long> bckgt8(m, 0);\n    std::vector<long> bckgt9(m,\
    \ 0);\n    std::vector<long> bckgt10(m, 0);\n    std::vector<long> bckgt11(m,\
    \ 0);\n    std::vector<long> bckgt12(m, 0);\n    std::vector<long> bckgt13(m,\
    \ 0);\n    std::vector<long> bckgt14(m, 0);\n    std::vector<long> bckgt15(m,\
    \ 0);\n    std::vector<long> bckgt16(m, 0);\n    std::vector<long> bckgt17(m,\
    \ 0);\n    std::vector<long> bckgt18(m, 0);\n    std::vector<long> bckgt19(m,\
    \ 0);\n    std::vector<long> bckgt20(m, 0);\n    std::vector<long> bckgt21(m,\
    \ 0);\n    std::vector<long> bckgt22(m, 0);\n    std::vector<long> bckgt23(m,\
    \ 0);\n    std::vector<long> bckgt24(m, 0);\n    std::vector<long> bckgt25(m,\
    \ 0);\n    std::vector<long> bckgt26(m, 0);\n    std::vector<long> bckgt27(m,\
    \ 0);\n    std::vector<long> bckgt28(m, 0);\n    std::vector<long> bckgt29(m,\
    \ 0);\n    std::vector<long> bckgt30(m, 0);\n    std::vector<long> bckgt31(m,\
    \ 0);\n    std::vector<long> bckgt32(m, 0);\n    std::vector<long> bckgt33(m,\
    \ 0);\n    std::vector<long> bckgt34(m, 0);\n    std::vector<long> bckgt35(m,\
    \ 0);\n    std::vector<long> bckgt36(m, 0);\n    std::vector<long> bckgt37(m,\
    \ 0);\n    std::vector<long> bckgt38(m, 0);\n    std::vector<long> bckgt39(m,\
    \ 0);\n    std::vector<long> bckgt40(m, 0);\n    std::vector<long> ", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long min = 1;\n    long max = 0;\n    long cur = 0;\n    long\
    \ cur_cap = 0;\n    long cur_min = 1;\n    long cur_max = 0;\n    long cur_cur\
    \ = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_min = 1;\n    long cur_cur_max\
    \ = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_cur_min\
    \ = 1;\n    long cur_cur_cur_max = 0;\n    long cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap =\
    \ 0;\n    long cur_cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap =\
    \ 0;\n    long cur_cur_cur_cur_cur_min = 1;\n    long cur_cur_cur_cur_max = 0;\n\
    \    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_min\
    \ = 1;\n    long cur_cur_max = 0;\n    long cur_cur = 0;\n    long cur_cur_cap\
    \ = 0;\n    long cur_cur_min = 1;\n    long cur_max = 0;\n    long cur = 0;\n\
    \    long cur_cap = 0;\n    long cur_min = 1;\n    long max = 0;\n    long cur\
    \ = 0;\n    long cur_cap = 0;\n    long cur_min = 1;\n    long max = 0;\n    long\
    \ cur = 0;\n    long cur_cap = 0;\n    long cur_min = 1;\n    long max = 0;\n\
    \    long cur = 0;\n    long cur_cap = 0;\n    long cur_min = 1;\n    long max\
    \ = 0;\n    long cur = 0;\n    long cur_cap = 0;\n", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ ans = INT_MAX;\n    long cur = INT_MAX;\n    long cur_cap = INT_MAX;\n    long\
    \ cur_ans = INT_MAX;\n    long cur_cur = INT_MAX;\n    long cur_cur_cap = INT_MAX;\n\
    \    long cur_cur_ans = INT_MAX;\n    long cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur =\
    \ INT_MAX;\n    long cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cap = INT_MAX;\n    long cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur = INT_MAX;\n    long cur_cur_cap = INT_MAX;\n\
    \    long cur_ans = INT_MAX;\n", "    // Your code here\n    long ans = 0;\n \
    \   long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n \
    \   long ans = INT_MAX;\n    long long max = 0;\n    long long cur = 0;\n    long\
    \ long cur2 = INT_MAX;\n    long long cur3 = INT_MAX;\n    long long cur4 = INT_MAX;\n\
    \    long long cur5 = INT_MAX;\n    long long cur6 = INT_MAX;\n    long long cur7\
    \ = INT_MAX;\n    long long cur8 = INT_MAX;\n    long long cur9 = INT_MAX;\n \
    \   long long cur10 = INT_MAX;\n    long long cur11 = INT_MAX;\n    long long\
    \ cur12 = INT_MAX;\n    long long cur13 = INT_MAX;\n    long long cur14 = INT_MAX;\n\
    \    long long cur15 = INT_MAX;\n    long long cur16 = INT_MAX;\n    long long\
    \ cur17 = INT_MAX;\n    long long cur18 = INT_MAX;\n    long long cur19 = INT_MAX;\n\
    \    long long cur20 = INT_MAX;\n    long long cur21 = INT_MAX;\n    long long\
    \ cur22 = INT_MAX;\n    long long cur23 = INT_MAX;\n    long long cur24 = INT_MAX;\n\
    \    long long cur25 = INT_MAX;\n    long long cur26 = INT_MAX;\n    long long\
    \ cur27 = INT_MAX;\n    long long cur28 = INT_MAX;\n    long long cur29 = INT_MAX;\n\
    \    long long cur30 = INT_MAX;\n    long long cur31 = INT_MAX;\n    long long\
    \ cur32 = INT_MAX;\n    long long cur33 = INT_MAX;\n    long long cur34 = INT_MAX;\n\
    \    long long cur35 = INT_MAX;\n    long long cur36 = INT_MAX;\n    long long\
    \ cur37 = INT_MAX;\n    long long cur38 = INT_MAX;\n    long long cur39 = INT_MAX;\n\
    \    long long cur40 = INT_MAX;\n    long long cur41 = INT_MAX;\n    long long\
    \ cur42 = INT_MAX;\n    long long cur43 = INT_MAX;\n    long long cur44 = INT_MAX;\n\
    \    long long cur45 = INT_MAX;\n    long long cur46 = INT_MAX;\n    long long\
    \ cur47 = INT_MAX;\n    long long cur48 = INT_MAX;\n    long long ", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ max_capacity = n;\n    long min_capacity = n;\n    long min_bucket = n;\n  \
    \  long max_bucket = n;\n    long min_well = n;\n    long max_well = n;\n    long\
    \ min_buckets = n;\n    long max_buckets = n;\n    long min_wells = n;\n    long\
    \ max_wells = n;\n    long min_wells_capacity = n;\n    long max_wells_capacity\
    \ = n;\n    long min_wells_bucket = n;\n    long max_wells_bucket = n;\n    long\
    \ min_wells_well = n;\n    long max_wells_well = n;\n    long min_wells_buckets\
    \ = n;\n    long max_wells_buckets = n;\n    long min_wells_wells = n;\n    long\
    \ max_wells_wells = n;\n    long min_wells_capacity_bucket = n;\n    long max_wells_capacity_bucket\
    \ = n;\n    long min_wells_capacity_well = n;\n    long max_wells_capacity_well\
    \ = n;\n    long min_wells_capacity_buckets = n;\n    long max_wells_capacity_buckets\
    \ = n;\n    long min_wells_capacity_wells = n;\n    long max_wells_capacity_wells\
    \ = n;\n    long min_wells_capacity_bucket_bucket = n;\n    long max_wells_capacity_bucket_bucket\
    \ = n;\n    long min_wells_capacity_bucket_well = n;\n    long max_wells_capacity_bucket_well\
    \ = n;\n    long min_wells_capacity_bucket_buckets = n;\n    long max_wells_capacity_bucket_buckets\
    \ = n;\n    long min_wells_capacity_bucket_wells = n;\n    long max_wells_capacity_bucket_wells\
    \ = n;\n    long min_wells_capacity_well_bucket = n;\n    long max_wells_capacity_well_bucket\
    \ = n;\n    long min_wells_capacity_well_well = n;\n    long max_wells_capacity_well_well\
    \ = n;\n    long min_wells_capacity_well_buckets = n;\n    long max_wells_capacity_well_buckets\
    \ = n;\n    long min_wells_capacity_well_wells = n;\n    long max_wells_capacity_well_wells\
    \ = n;\n    long min_wells_well_bucket = n;\n    long max_wells_well_bucket =\
    \ n;\n    long min_wells_well_well = n;\n    long max_wells_well_well = n;\n",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cur = 0;\n    long max = 0;\n    long min = 0;\n  \
    \  long cur_cap = 0;\n    long min_cap = 0;\n    long max_cap = 0;\n    long min_max\
    \ = 0;\n    long min_max2 = 0;\n    long min_max3 = 0;\n    long min_max4 = 0;\n\
    \    long min_max5 = 0;\n    long min_max6 = 0;\n    long min_max7 = 0;\n    long\
    \ min_max8 = 0;\n    long min_max9 = 0;\n    long min_max10 = 0;\n    long min_max11\
    \ = 0;\n    long min_max12 = 0;\n    long min_max13 = 0;\n    long min_max14 =\
    \ 0;\n    long min_max15 = 0;\n    long min_max16 = 0;\n    long min_max17 = 0;\n\
    \    long min_max18 = 0;\n    long min_max19 = 0;\n    long min_max20 = 0;\n \
    \   long min_max21 = 0;\n    long min_max22 = 0;\n    long min_max23 = 0;\n  \
    \  long min_max24 = 0;\n    long min_max25 = 0;\n    long min_max26 = 0;\n   \
    \ long min_max27 = 0;\n    long min_max28 = 0;\n    long min_max29 = 0;\n    long\
    \ min_max30 = 0;\n    long min_max31 = 0;\n    long min_max32 = 0;\n    long min_max33\
    \ = 0;\n    long min_max34 = 0;\n    long min_max35 = 0;\n    long min_max36 =\
    \ 0;\n    long min_max37 = 0;\n    long min_max38 = 0;\n    long min_max39 = 0;\n\
    \    long min_max40 = 0;\n    long min_max41 = 0;\n    long min_max42 = 0;\n \
    \   long min_max43 = 0;\n    long min_max44 = 0;\n    long min_max45 = 0;\n  \
    \  long min_max46 = 0;\n    long min_max47 = 0;\n    long min_max48 = 0;\n   \
    \ long min_max49 = 0;\n    long min_max50 = 0;\n    long min_max51 = 0;\n    long\
    \ min_max52 = 0;\n    long min_max53 = 0;\n    long min_max54 = 0;\n    long min_max55\
    \ = 0;\n    long min_max56 = 0;\n    long min_max57 = 0;\n    long min_max58 =\
    \ 0;\n    long min_max59 = 0;\n    long min_max60 = 0;\n    long min_max61 = 0;\n\
    \    long min_max62 = 0;\n    long min_max63 = 0;\n    long min_max64 = 0;\n \
    \   long min_max65 = 0;\n    long min_max", "    // Your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long an =\
    \ n;\n    long bn = m;\n    long cn = capacity;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;\n    long cnm = cn;\n    long cnn = cn;\n    long\
    \ cnm = cn;\n    long cnn = cn;", "    // write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n\
    \    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long cur_n\
    \ = n;\n    long cur_m = m;\n    long cur_ans = 0;\n    long cur_cur = 0;\n  \
    \  long cur_cur_cap = cur_cap;\n    long cur_cur_n = cur_n;\n    long cur_cur_m\
    \ = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap\
    \ = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m\
    \ = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n =\
    \ cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap =\
    \ cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n                if(cnt > ans) {\n      \
    \              ans = cnt;\n                }\n            }\n        }\n    }\n\
    \    return ans;", "    // write your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long an = n;\n    long bn\
    \ = m;\n    long cn = n;\n    long dn = m;\n    long cnt = 1;\n    long dnt =\
    \ 1;\n    long cntt = 1;\n    long dntt = 1;\n    long cntnt = 1;\n    long dnnt\
    \ = 1;\n    long cntntt = 1;\n    long dnntt = 1;\n    long cntnttt = 1;\n   \
    \ long dnnttt = 1;\n    long cntntttt = 1;\n    long dnntttt = 1;\n    long cntnttttt\
    \ = 1;\n    long dnnttttt = 1;\n    long cntntttttt = 1;\n    long dnntttttt =\
    \ 1;\n    long cntnttttttt = 1;\n    long dnnttttttt = 1;\n    long cntntttttttt\
    \ = 1;\n    long dnntttttttt = 1;\n    long cntnttttttttt = 1;\n    long dnnttttttttt\
    \ = 1;\n    long cntntttttttttt = 1;\n    long dnntttttttttt = 1;\n    long cntnttttttttttt\
    \ = 1;\n    long dnnttttttttttt = 1;\n    long cntntttttttttttt = 1;\n    long\
    \ dnnttttttttttttt = 1;\n    long cntntttttttttttttt = 1;\n    long dnntttttttttttttt\
    \ = 1;\n    long cntnttttttttttttttt = 1;\n    long dnntttttttttttttttt = 1;\n\
    \    long cntnttttttttttttttttt = 1;\n    long dnnttttttttttttttttt = 1;\n   \
    \ long cntntttttttttttttttttt = 1;\n    long dnntttttttttttttttttt = 1;\n    long\
    \ cntnttttttttttttttttttt = 1;\n    long dnntttttttttttttttttttt = 1;\n    long\
    \ cntntttttttttttttttttttttt = 1;\n    long dnntttttttttttttttttttttt = 1;\n \
    \   long cntntttttttttttttttt", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_n = n;\n    long cur_m = m;\n    long cur_ans\
    \ = 1;\n    long cur_cur = 0;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_n\
    \ = cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_ans = cur_ans;\n   \
    \ long cur_cur_cur = cur_cur;\n    long cur_cur_cur_cap = cur_cur_cap;\n    long\
    \ cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_ans\
    \ = cur_cur_ans;\n    long cur_cur_cur_cur = cur_cur_cur;\n    long cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n = cur_cur_cur_n;\n    long cur_cur_cur_cur_m\
    \ = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans = cur_cur_cur_ans;\n    long\
    \ cur_cur_cur_cur_cur = cur_cur_cur_cur;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_ans = cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_cur_cur_cur = cur_cur_cur_cur_cur;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans\
    \ = cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_cur = cur_cur_cur_cur_cur;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_cur_cur_cur_cur = cur_cur_cur_cur_cur;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>>\
    \ buckets(n);\n    std::vector<std::vector<long>> buckets_tmp(n);\n    long max_bucket\
    \ = 0;\n    long max_bucket_tmp = 0;\n    long bucket_idx = 0;\n    long bucket_idx_tmp\
    \ = 0;\n    long bucket_idx_tmp2 = 0;\n    long bucket_idx_tmp3 = 0;\n    long\
    \ bucket_idx_tmp4 = 0;\n    long bucket_idx_tmp5 = 0;\n    long bucket_idx_tmp6\
    \ = 0;\n    long bucket_idx_tmp7 = 0;\n    long bucket_idx_tmp8 = 0;\n    long\
    \ bucket_idx_tmp9 = 0;\n    long bucket_idx_tmp10 = 0;\n    long bucket_idx_tmp11\
    \ = 0;\n    long bucket_idx_tmp12 = 0;\n    long bucket_idx_tmp13 = 0;\n    long\
    \ bucket_idx_tmp14 = 0;\n    long bucket_idx_tmp15 = 0;\n    long bucket_idx_tmp16\
    \ = 0;\n    long bucket_idx_tmp17 = 0;\n    long bucket_idx_tmp18 = 0;\n    long\
    \ bucket_idx_tmp19 = 0;\n    long bucket_idx_tmp20 = 0;\n    long bucket_idx_tmp21\
    \ = 0;\n    long bucket_idx_tmp22 = 0;\n    long bucket_idx_tmp23 = 0;\n    long\
    \ bucket_idx_tmp24 = 0;\n    long bucket_idx_tmp25 = 0;\n    long bucket_idx_tmp26\
    \ = 0;\n    long bucket_idx_tmp27 = 0;\n    long bucket_idx_tmp28 = 0;\n    long\
    \ bucket_idx_tmp29 = 0;\n    long bucket_idx_tmp30 = 0;\n    long bucket_idx_tmp31\
    \ = 0;\n    long bucket_idx_tmp32 = 0;\n    long bucket_idx_tmp33 = 0;\n    long\
    \ bucket_idx_tmp34 = 0;\n    long bucket_idx_tmp35 = 0;\n    long bucket_idx_tmp36\
    \ = 0;\n    long bucket_idx_tmp37 = 0;\n    long bucket_idx_tmp38 = 0;\n    long\
    \ bucket_idx_tmp39 = 0;\n    long bucket_idx_tmp40 = 0;\n    long bucket_idx_tmp41\
    \ = 0;\n    long bucket_idx_tmp42 = 0;\n    long bucket_idx_tmp43 = 0;\n    long\
    \ bucket_idx_tmp44 = 0;\n    long bucket_idx_tmp45 = 0;\n    long bucket_idx_tmp46\
    \ = 0;\n    long bucket_idx_tmp47 = 0;\n    long bucket_idx_tmp48 = 0;\n    long\
    \ bucket_idx_tmp49 = 0;\n    long bucket_idx_tmp50 = 0;\n    long bucket_idx_tmp51\
    \ = 0;\n    long bucket_idx_tmp52 = 0;\n    long bucket_idx_tmp53 = 0;\n    long\
    \ bucket_idx_tmp54 = 0;\n    long bucket_idx_tmp55 = 0;\n    long bucket_idx_tmp56\
    \ = 0;\n    long bucket_idx_tmp", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cnt2 = 0;\n    long\
    \ cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long\
    \ cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n   \
    \ long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 =\
    \ 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long\
    \ cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n\
    \    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25\
    \ = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long\
    \ cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n\
    \    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36\
    \ = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long\
    \ cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n\
    \    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47\
    \ = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long\
    \ cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n\
    \    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58\
    \ = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long\
    \ cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n\
    \    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69\
    \ = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long\
    \ cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n\
    \    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80\
    \ = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83 = 0;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = 0;\n    long long max = 0;\n    long long min = 0;\n\
    \    long long sum = 0;\n    long long cnt = 0;\n    long long cnt2 = 0;\n   \
    \ long long cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long\
    \ long cnt6 = 0;\n    long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long\
    \ cnt9 = 0;\n    long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long\
    \ cnt12 = 0;\n    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long\
    \ cnt15 = 0;\n    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long\
    \ cnt18 = 0;\n    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long\
    \ cnt21 = 0;\n    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long\
    \ cnt24 = 0;\n    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long\
    \ cnt27 = 0;\n    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long\
    \ cnt30 = 0;\n    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long\
    \ cnt33 = 0;\n    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long\
    \ cnt36 = 0;\n    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long\
    \ cnt39 = 0;\n    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long\
    \ cnt42 = 0;\n    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long\
    \ cnt45 = 0;\n    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long\
    \ cnt48 = 0;\n    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long\
    \ cnt51 = 0;\n    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long\
    \ cnt54 = 0;\n    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long\
    \ cnt57 = 0;\n    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long\
    \ cnt60 = 0;\n    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long\
    \ cnt63 = 0;\n    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long\
    \ cnt66 = 0;\n    long long cnt67 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  long long ans2 = 0;\n    long long cnt2 = 0;\n    long long cnt3 = 0;\n   \
    \ long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6 = 0;\n    long\
    \ long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 = 0;\n    long long\
    \ cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12 = 0;\n    long long\
    \ cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15 = 0;\n    long long\
    \ cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18 = 0;\n    long long\
    \ cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21 = 0;\n    long long\
    \ cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24 = 0;\n    long long\
    \ cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27 = 0;\n    long long\
    \ cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30 = 0;\n    long long\
    \ cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33 = 0;\n    long long\
    \ cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36 = 0;\n    long long\
    \ cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39 = 0;\n    long long\
    \ cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42 = 0;\n    long long\
    \ cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45 = 0;\n    long long\
    \ cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48 = 0;\n    long long\
    \ cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51 = 0;\n    long long\
    \ cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54 = 0;\n    long long\
    \ cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57 = 0;\n    long long\
    \ cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60 = 0;\n    long long\
    \ cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63 = 0;\n    long long\
    \ cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66 = 0;\n    long long\
    \ cnt67 = 0;\n    long long cnt68 = 0;\n    long long cnt69 = 0;\n", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long\
    \ cur_ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                cur++;\n     \
    \           if(cur > cur_cap) {\n                    cur_cap = cur;\n        \
    \            cur_ans = cnt;\n                    cnt = 0;\n                }\n\
    \            }\n            cnt++;\n        }\n    }\n    ans = cur_ans;\n   \
    \ return ans;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = grid[0][0];\n    long max = 0;\n    long min\
    \ = 0;\n    long cnt2 = 0;\n    long cur2 = 0;\n    long max2 = 0;\n    long min2\
    \ = 0;\n    long cnt3 = 0;\n    long cur3 = 0;\n    long max3 = 0;\n    long min3\
    \ = 0;\n    long cnt4 = 0;\n    long cur4 = 0;\n    long max4 = 0;\n    long min4\
    \ = 0;\n    long cnt5 = 0;\n    long cur5 = 0;\n    long max5 = 0;\n    long min5\
    \ = 0;\n    long cnt6 = 0;\n    long cur6 = 0;\n    long max6 = 0;\n    long min6\
    \ = 0;\n    long cnt7 = 0;\n    long cur7 = 0;\n    long max7 = 0;\n    long min7\
    \ = 0;\n    long cnt8 = 0;\n    long cur8 = 0;\n    long max8 = 0;\n    long min8\
    \ = 0;\n    long cnt9 = 0;\n    long cur9 = 0;\n    long max9 = 0;\n    long min9\
    \ = 0;\n    long cnt10 = 0;\n    long cur10 = 0;\n    long max10 = 0;\n    long\
    \ min10 = 0;\n    long cnt11 = 0;\n    long cur11 = 0;\n    long max11 = 0;\n\
    \    long min11 = 0;\n    long cnt12 = 0;\n    long cur12 = 0;\n    long max12\
    \ = 0;\n    long min12 = 0;\n    long cnt13 = 0;\n    long cur13 = 0;\n    long\
    \ max13 = 0;\n    long min13 = 0;\n    long cnt14 = 0;\n    long cur14 = 0;\n\
    \    long max14 = 0;\n    long min14 = 0;\n    long cnt15 = 0;\n    long cur15\
    \ = 0;\n    long max15 = 0;\n    long min15 = 0;\n    long cnt16 = 0;\n    long\
    \ cur16 = 0;\n    long max16 = 0;\n    long min16 = 0;\n    long cnt17 = 0;\n\
    \    long cur17 = 0;\n    long max17 = 0;\n    long min17 = 0;\n    long cnt18\
    \ = 0;\n    long cur18 = 0;\n    long max18 = 0;\n    long min18 = 0;\n    long\
    \ cnt19 = 0;\n    long cur19 = 0;\n    long max19 = 0;\n    long min19 = 0;\n\
    \    long cnt20 = 0;\n    long cur20 = 0;\n    long max20 = 0;\n    long min20\
    \ = 0;\n    long cnt21 = 0;\n    long cur21 = 0;\n    long max21 = 0;\n    long\
    \ min21 = 0;\n    long cnt22 = 0;", "    // write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long an =\
    \ n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long cnn = n;\n\
    \    long dcn = m;\n    long dcnn = n;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n    long dcnn = m;\n\
    \    long dcnn = m;\n    long ", "    // write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long min = 0;\n    long max = 0;\n    long temp = 0;\n    long temp2\
    \ = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long\
    \ temp6 = 0;\n    long temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n\
    \    long temp10 = 0;\n    long temp11 = 0;\n    long temp12 = 0;\n    long temp13\
    \ = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n   \
    \ long temp17 = 0;\n    long temp18 = 0;\n    long temp19 = 0;\n    long temp20\
    \ = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n   \
    \ long temp24 = 0;\n    long temp25 = 0;\n    long temp26 = 0;\n    long temp27\
    \ = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n   \
    \ long temp31 = 0;\n    long temp32 = 0;\n    long temp33 = 0;\n    long temp34\
    \ = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n   \
    \ long temp38 = 0;\n    long temp39 = 0;\n    long temp40 = 0;\n    long temp41\
    \ = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n   \
    \ long temp45 = 0;\n    long temp46 = 0;\n    long temp47 = 0;\n    long temp48\
    \ = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n   \
    \ long temp52 = 0;\n    long temp53 = 0;\n    long temp54 = 0;\n    long temp55\
    \ = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n   \
    \ long temp59 = 0;\n    long temp60 = 0;\n    long temp61 = 0;\n    long temp62\
    \ = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n   \
    \ long temp66 = 0;\n    long temp67 = 0;\n    long temp68 = 0;\n    long temp69\
    \ = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n   \
    \ long temp73 = 0;\n    long temp74 = 0;\n    long temp75 = 0;\n    long temp76\
    \ = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n   \
    \ long temp80", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n * m;\n    long cnt = 0;\n    long\
    \ ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans\
    \ = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans =\
    \ 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n \
    \   long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n  \
    \  long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n   \
    \ long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long\
    \ cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt\
    \ = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt =\
    \ 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n\
    \    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n \
    \   long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n  \
    \  long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n   \
    \ long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long\
    \ an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an\
    \ = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an =\
    \ 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n \
    \   long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n  \
    \  long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n   \
    \ long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long\
    \ cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt\
    \ = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long ans = std::numeric_limits<long>::max();\n    long cnt = 0;\n    long\
    \ cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long\
    \ cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long\
    \ cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n\
    \    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17\
    \ = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long\
    \ cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n\
    \    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28\
    \ = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long\
    \ cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n\
    \    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39\
    \ = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long\
    \ cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n\
    \    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50\
    \ = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long\
    \ cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n\
    \    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61\
    \ = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long\
    \ cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n\
    \    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72\
    \ = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long\
    \ cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n\
    \    long cnt80 = 0;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long min = 0;\n\
    \    long max = 0;\n    long cur_cap = 0;\n    long min_cap = 0;\n    long max_cap\
    \ = 0;\n    long cur_min = 0;\n    long cur_max = 0;\n    long cur_min_cap = 0;\n\
    \    long cur_max_cap = 0;\n    long cur_min_max = 0;\n    long cur_max_min =\
    \ 0;\n    long cur_min_max_cap = 0;\n    long cur_max_min_cap = 0;\n    long cur_min_max_min\
    \ = 0;\n    long cur_max_min_min = 0;\n    long cur_min_max_min_cap = 0;\n   \
    \ long cur_max_min_min_cap = 0;\n    long cur_min_max_min_min = 0;\n    long cur_max_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_cap = 0;\n    long cur_max_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    long cur_max_min_min_min_min_cap\
    \ = 0;\n    long cur_min_max_min_min_min = 0;\n    long cur_max_min_min_min_min\
    \ = 0;\n    long cur_min_max_min_min_min_cap = 0;\n    ", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n\
    \    long an2 = an * an;\n    long an3 = an2 * an;\n    long an4 = an3 * an;\n\
    \    long an5 = an4 * an;\n    long an6 = an5 * an;\n    long an7 = an6 * an;\n\
    \    long an8 = an7 * an;\n    long an9 = an8 * an;\n    long an10 = an9 * an;\n\
    \    long an11 = an10 * an;\n    long an12 = an11 * an;\n    long an13 = an12\
    \ * an;\n    long an14 = an13 * an;\n    long an15 = an14 * an;\n    long an16\
    \ = an15 * an;\n    long an17 = an16 * an;\n    long an18 = an17 * an;\n    long\
    \ an19 = an18 * an;\n    long an20 = an19 * an;\n    long an21 = an20 * an;\n\
    \    long an22 = an21 * an;\n    long an23 = an22 * an;\n    long an24 = an23\
    \ * an;\n    long an25 = an24 * an;\n    long an26 = an25 * an;\n    long an27\
    \ = an26 * an;\n    long an28 = an27 * an;\n    long an29 = an28 * an;\n    long\
    \ an30 = an29 * an;\n    long an31 = an30 * an;\n    long an32 = an31 * an;\n\
    \    long an33 = an32 * an;\n    long an34 = an33 * an;\n    long an35 = an34\
    \ * an;\n    long an36 = an35 * an;\n    long an37 = an36 * an;\n    long an38\
    \ = an37 * an;\n    long an39 = an38 * an;\n    long an40 = an39 * an;\n    long\
    \ an41 = an40 * an;\n    long an42 = an41 * an;\n    long an43 = an42 * an;\n\
    \    long an44 = an43 * an;\n    long an45 = an44 * an;\n    long an46 = an45\
    \ * an;\n    long an47 = an46 * ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long dn = n;\n    long dm = m;\n    long cnt = 1;\n    long dcnt =\
    \ 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n\
    \    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n  \
    \  long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n  \
    \  long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long\
    \ dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt\
    \ = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn =\
    \ n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n\
    \    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n\
    \    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n  \
    \  long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long\
    \ dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long\
    \ dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm\
    \ = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt\
    \ = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn =\
    \ n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n\
    \    long dcnt = 1;\n    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n\
    \    long dn = n;\n    long dm = m;\n    long dcnt = 1;\n    long dn = n;\n  \
    \  long dm = m;\n", "    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long an = 0;\n    long cnt = 0;\n    long c = 0;\n  \
    \  long b = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l\
    \ = 0;\n    long m = 0;\n    long n = 0;\n    long p = 0;\n    long q = 0;\n \
    \   long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v\
    \ = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n \
    \   long aa = 0;\n    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long\
    \ ee = 0;\n    long ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii =\
    \ 0;\n    long jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n\
    \    long nn = 0;\n    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long\
    \ rr = 0;\n    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv =\
    \ 0;\n    long ww = 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n\
    \    long aaa = 0;\n    long bbb = 0;\n    long ccc = 0;\n    long ddd = 0;\n\
    \    long eee = 0;\n    long fff = 0;\n    long ggg = 0;\n    long hhh = 0;\n\
    \    long iii = 0;\n    long jjj = 0;\n    long kkk = 0;\n    long lll = 0;\n\
    \    long mmm = 0;\n    long nnn = 0;\n    long ooo = 0;\n    long ppp = 0;\n\
    \    long qqq = 0;\n    long rrr = 0;\n    long sss = 0;\n    long ttt = 0;\n\
    \    long uuu = 0;\n    long vvv = 0;\n    long www = 0;\n    long xxx = 0;\n\
    \    long yyy = 0;\n    long zzz = 0;\n    long aaaa = 0;\n    long bbbb = 0;\n\
    \    long cccc = 0;\n    long dddd = 0;\n    long eeee = 0;\n    long ffff = 0;\n\
    \    long gggg = 0;\n    long hhhh = 0;\n    long iiii = 0;\n    long jjjj = 0;\n\
    \    long kkkk = 0;\n    long llll = 0;\n    long mmmm = 0;\n    long nnnn = 0;\n\
    \    long oooo = 0;\n    long pppp = 0;\n    long qqqq = 0;\n    long rrrr = 0;\n\
    \    long ssss = 0;\n    long tttt", "    // Write your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt\
    \ += 1;\n                if(cnt > ans) {\n                    ans = cnt;\n   \
    \             }\n            }\n        }\n    }\n    return ans;", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long\
    \ long an4 = 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long\
    \ an7 = 0;\n    long long an8 = 0;\n    long long an9 = 0;\n    long long an10\
    \ = 0;\n    long long an11 = 0;\n    long long an12 = 0;\n    long long an13 =\
    \ 0;\n    long long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n\
    \    long long an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n \
    \   long long an20 = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n  \
    \  long long an23 = 0;\n    long long an24 = 0;\n    long long an25 = 0;\n   \
    \ long long an26 = 0;\n    long long an27 = 0;\n    long long an28 = 0;\n    long\
    \ long an29 = 0;\n    long long an30 = 0;\n    long long an31 = 0;\n    long long\
    \ an32 = 0;\n    long long an33 = 0;\n    long long an34 = 0;\n    long long an35\
    \ = 0;\n    long long an36 = 0;\n    long long an37 = 0;\n    long long an38 =\
    \ 0;\n    long long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n\
    \    long long an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n \
    \   long long an45 = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n  \
    \  long long an48 = 0;\n    long long an49 = 0;\n    long long an50 = 0;\n   \
    \ long long an51 = 0;\n    long long an52 = 0;\n    long long an53 = 0;\n    long\
    \ long an54 = 0;\n    long long an55 = 0;\n    long long an56 = 0;\n    long long\
    \ an57 = 0;\n    long long an58 = 0;\n    long long an59 = 0;\n    long long an60\
    \ = 0;\n    long long an61 = 0;\n    long long an62 = 0;\n    long long an63 =\
    \ 0;\n    long long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n\
    \    long long an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n \
    \   long long an70 = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  std::vector<long> bck(m, 0);\n    std::vector<long> bck0(m, 0);\n    std::vector<long>\
    \ bck1(m, 0);\n    std::vector<long> bck2(m, 0);\n    std::vector<long> bck3(m,\
    \ 0);\n    std::vector<long> bck4(m, 0);\n    std::vector<long> bck5(m, 0);\n\
    \    std::vector<long> bck6(m, 0);\n    std::vector<long> bck7(m, 0);\n    std::vector<long>\
    \ bck8(m, 0);\n    std::vector<long> bck9(m, 0);\n    std::vector<long> bck10(m,\
    \ 0);\n    std::vector<long> bck11(m, 0);\n    std::vector<long> bck12(m, 0);\n\
    \    std::vector<long> bck13(m, 0);\n    std::vector<long> bck14(m, 0);\n    std::vector<long>\
    \ bck15(m, 0);\n    std::vector<long> bck16(m, 0);\n    std::vector<long> bck17(m,\
    \ 0);\n    std::vector<long> bck18(m, 0);\n    std::vector<long> bck19(m, 0);\n\
    \    std::vector<long> bck20(m, 0);\n    std::vector<long> bck21(m, 0);\n    std::vector<long>\
    \ bck22(m, 0);\n    std::vector<long> bck23(m, 0);\n    std::vector<long> bck24(m,\
    \ 0);\n    std::vector<long> bck25(m, 0);\n    std::vector<long> bck26(m, 0);\n\
    \    std::vector<long> bck27(m, 0);\n    std::vector<long> bck28(m, 0);\n    std::vector<long>\
    \ bck29(m, 0);\n    std::vector<long> bck30(m, 0);\n    std::vector<long> bck31(m,\
    \ 0);\n    std::vector<long> bck32(m, 0);\n    std::vector<long> bck33(m, 0);\n\
    \    std::vector<long> bck34(m, 0);\n    std::vector<long> bck35(m, 0);\n    std::vector<long>\
    \ bck36(m, 0);\n    std::vector<long> bck37(m, 0);\n    std::vector<long> bck38(m,\
    \ 0);\n    std::vector<long> bck39(m, 0);\n    std::vector<long> bck40(m, 0);\n\
    \    std::vector<long> bck41(m, 0);\n    std::vector<long> bck42(m, 0);\n    std::vector<long> ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long count = 0;\n    long i;\n    long j;\n    long k;\n    long l;\n    long\
    \ m;\n    long n;\n    long o;\n    long p;\n    long q;\n    long r;\n    long\
    \ s;\n    long t;\n    long u;\n    long v;\n    long w;\n    long x;\n    long\
    \ y;\n    long z;\n    long A;\n    long B;\n    long C;\n    long D;\n    long\
    \ E;\n    long F;\n    long G;\n    long H;\n    long I;\n    long J;\n    long\
    \ K;\n    long L;\n    long M;\n    long N;\n    long O;\n    long P;\n    long\
    \ Q;\n    long R;\n    long S;\n    long T;\n    long U;\n    long V;\n    long\
    \ W;\n    long X;\n    long Y;\n    long Z;\n    long AA;\n    long BB;\n    long\
    \ CC;\n    long DD;\n    long EE;\n    long FF;\n    long GG;\n    long HH;\n\
    \    long II;\n    long JJ;\n    long KK;\n    long LL;\n    long MM;\n    long\
    \ NN;\n    long OO;\n    long PP;\n    long QQ;\n    long RR;\n    long SS;\n\
    \    long TT;\n    long UU;\n    long VV;\n    long WW;\n    long XX;\n    long\
    \ YY;\n    long ZZ;\n    long AAA;\n    long BBB;\n    long CCC;\n    long DDD;\n\
    \    long EEE;\n    long FFF;\n    long GGG;\n    long HHH;\n    long III;\n \
    \   long JJJ;\n    long KKK;\n    long LLL;\n    long MMM;\n    long NNN;\n  \
    \  long OOO;\n    long PPP;\n    long QQQ;\n    long RRR;\n    long SSS;\n   \
    \ long TTT;\n    long UUU;\n    long VVV;\n    long WWW;\n    long XXX;\n    long\
    \ YYY;\n    long ZZZ;\n", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long min = 0;\n    long max = 0;\n\
    \    long mid = 0;\n    long cur = 0;\n    long cur2 = 0;\n    long cur3 = 0;\n\
    \    long cur4 = 0;\n    long cur5 = 0;\n    long cur6 = 0;\n    long cur7 = 0;\n\
    \    long cur8 = 0;\n    long cur9 = 0;\n    long cur10 = 0;\n    long cur11 =\
    \ 0;\n    long cur12 = 0;\n    long cur13 = 0;\n    long cur14 = 0;\n    long\
    \ cur15 = 0;\n    long cur16 = 0;\n    long cur17 = 0;\n    long cur18 = 0;\n\
    \    long cur19 = 0;\n    long cur20 = 0;\n    long cur21 = 0;\n    long cur22\
    \ = 0;\n    long cur23 = 0;\n    long cur24 = 0;\n    long cur25 = 0;\n    long\
    \ cur26 = 0;\n    long cur27 = 0;\n    long cur28 = 0;\n    long cur29 = 0;\n\
    \    long cur30 = 0;\n    long cur31 = 0;\n    long cur32 = 0;\n    long cur33\
    \ = 0;\n    long cur34 = 0;\n    long cur35 = 0;\n    long cur36 = 0;\n    long\
    \ cur37 = 0;\n    long cur38 = 0;\n    long cur39 = 0;\n    long cur40 = 0;\n\
    \    long cur41 = 0;\n    long cur42 = 0;\n    long cur43 = 0;\n    long cur44\
    \ = 0;\n    long cur45 = 0;\n    long cur46 = 0;\n    long cur47 = 0;\n    long\
    \ cur48 = 0;\n    long cur49 = 0;\n    long cur50 = 0;\n    long cur51 = 0;\n\
    \    long cur52 = 0;\n    long cur53 = 0;\n    long cur54 = 0;\n    long cur55\
    \ = 0;\n    long cur56 = 0;\n    long cur57 = 0;\n    long cur58 = 0;\n    long\
    \ cur59 = 0;\n    long cur60 = 0;\n    long cur61 = 0;\n    long cur62 = 0;\n\
    \    long cur63 = 0;\n    long cur64 = 0;\n    long cur65 = 0;\n    long cur66\
    \ = 0;\n    long cur67 = 0;\n    long cur68 = 0;\n    long cur69 = 0;\n    long\
    \ cur70 = 0;\n    long cur71 = 0;\n    long cur72 = 0;\n    long cur73 = 0;\n\
    \    long cur74 = 0;\n    long cur75 = 0;\n    long cur76 = 0;\n    long cur77\
    \ = 0;\n    long cur78 = 0;\n    long cur79 = 0;\n    long cur", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long count = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_ans = 0;\n    long cur_n = 0;\n    long cur_m\
    \ = 0;\n    long cur_x = 0;\n    long cur_y = 0;\n    long cur_z = 0;\n    long\
    \ cur_count = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_ans = 0;\n    long\
    \ cur_cur_n = 0;\n    long cur_cur_m = 0;\n    long cur_cur_x = 0;\n    long cur_cur_y\
    \ = 0;\n    long cur_cur_z = 0;\n    long cur_cur_count = 0;\n    long cur_cur_cap\
    \ = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m\
    \ = 0;\n    long cur_cur_x = 0;\n    long cur_cur_y = 0;\n    long cur_cur_z =\
    \ 0;\n    long cur_cur_count = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_ans\
    \ = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m = 0;\n    long cur_cur_x =\
    \ 0;\n    long cur_cur_y = 0;\n    long cur_cur_z = 0;\n    long cur_cur_count\
    \ = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n\
    \ = 0;\n    long cur_cur_m = 0;\n    long cur_cur_x = 0;\n    long cur_cur_y =\
    \ 0;\n    long cur_cur_z = 0;\n    long cur_cur_count = 0;\n    long cur_cur_cap\
    \ = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m\
    \ = 0;\n    long cur_cur_x = 0;\n    long cur_cur_y = 0;\n    long cur_cur_z =\
    \ 0;\n    long cur_cur_count = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_ans\
    \ = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m = 0;\n    long cur_cur_x =\
    \ 0;\n    long cur_cur_y = 0;\n    long cur_cur_z = 0;\n    long cur_cur_count\
    \ = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n\
    \ = 0;\n    long cur_cur_m = 0;\n    long cur_cur_x = 0;\n    long cur_cur_y =\
    \ 0;\n    long cur_cur_z = 0;\n    long cur_cur_count = 0;\n    long cur_cur_cap\
    \ = 0;\n    long cur_cur_ans = 0;\n    long cur_cur_n = 0;\n    long cur_cur_m\
    \ = 0;\n    long cur_cur_x = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_n = n;\n    long cur_m = m;\n    long cur_ans\
    \ = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_n\
    \ = cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cap = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n\
    \    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long\
    \ cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_n = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n  \
    \  long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long count = 0;\n    long cur = grid[0][0];\n    long max_cur = grid[0][0];\n\
    \    long min_cur = grid[0][0];\n    long max_min_cur = grid[0][0];\n    long\
    \ min_cur_cap = grid[0][0];\n    long max_cur_cap = grid[0][0];\n    long min_cur_cap_2\
    \ = grid[0][0];\n    long max_cur_cap_2 = grid[0][0];\n    long min_cur_cap_3\
    \ = grid[0][0];\n    long max_cur_cap_3 = grid[0][0];\n    long min_cur_cap_4\
    \ = grid[0][0];\n    long max_cur_cap_4 = grid[0][0];\n    long min_cur_cap_5\
    \ = grid[0][0];\n    long max_cur_cap_5 = grid[0][0];\n    long min_cur_cap_6\
    \ = grid[0][0];\n    long max_cur_cap_6 = grid[0][0];\n    long min_cur_cap_7\
    \ = grid[0][0];\n    long max_cur_cap_7 = grid[0][0];\n    long min_cur_cap_8\
    \ = grid[0][0];\n    long max_cur_cap_8 = grid[0][0];\n    long min_cur_cap_9\
    \ = grid[0][0];\n    long max_cur_cap_9 = grid[0][0];\n    long min_cur_cap_10\
    \ = grid[0][0];\n    long max_cur_cap_10 = grid[0][0];\n    long min_cur_cap_11\
    \ = grid[0][0];\n    long max_cur_cap_11 = grid[0][0];\n    long min_cur_cap_12\
    \ = grid[0][0];\n    long max_cur_cap_12 = grid[0][0];\n    long min_cur_cap_13\
    \ = grid[0][0];\n    long max_cur_cap_13 = grid[0][0];\n    long min_cur_cap_14\
    \ = grid[0][0];\n    long max_cur_cap_14 = grid[0][0];\n    long min_cur_cap_15\
    \ = grid[0][0];\n    long max_cur_cap_15 = grid[0][0];\n    long min_cur_cap_16\
    \ = grid[0][0];\n    long max_cur_cap_16 = grid[0][0];\n    long min_cur_cap_17\
    \ = grid[0][0];\n    long max_cur_cap_17 = grid[0][0];\n    long min_cur_cap_18\
    \ = grid[0][0];\n    long max_cur_cap_18 = grid[0][0];\n    long min_cur_cap_19\
    \ = grid[0][0];\n    long max_cur_cap_19 = grid[0][0];\n    long min_cur_cap_20\
    \ = grid[0][0];\n    long max_cur_cap_20 = grid[0]", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ cur = grid[0][0];\n    long an = grid[0][0];\n    long anc = 1;\n    long anl\
    \ = 1;\n    long anr = 0;\n    long anh = 0;\n    long anhc = 0;\n    long anhl\
    \ = 1;\n    long anhr = 0;\n    long anhh = 0;\n    long anhhc = 0;\n    long\
    \ anhhl = 1;\n    long anhhr = 0;\n    long anhhh = 0;\n    long anhhhc = 0;\n\
    \    long anhhhl = 1;\n    long anhhhr = 0;\n    long anhhhh = 0;\n    long anhhhhc\
    \ = 0;\n    long anhhhhl = 1;\n    long anhhhhr = 0;\n    long anhhhhh = 0;\n\
    \    long anhhhhhc = 0;\n    long anhhhhhl = 1;\n    long anhhhhhr = 0;\n    long\
    \ anhhhhhh = 0;\n    long anhhhhhhc = 0;\n    long anhhhhhhl = 1;\n    long anhhhhhhr\
    \ = 0;\n    long anhhhhhhh = 0;\n    long anhhhhhhhc = 0;\n    long anhhhhhhhl\
    \ = 1;\n    long anhhhhhhhr = 0;\n    long anhhhhhhhh = 0;\n    long anhhhhhhhhc\
    \ = 0;\n    long anhhhhhhhhl = 1;\n    long anhhhhhhhhr = 0;\n    long anhhhhhhhhh\
    \ = 0;\n    long anhhhhhhhhhc = 0;\n    long anhhhhhhhhhl = 1;\n    long anhhhhhhhhhr\
    \ = 0;\n    long anhhhhhhhhhh = 0;\n    long anhhhhhhhhhhc = 0;\n    long anhhhhhhhhhhl\
    \ = 1;\n    long anhhhhhhhhhhr = 0;\n    long anhhhhhhhhhhh = 0;\n    long anhhhhhhhhhhhc\
    \ = 0;\n    long anhhhhhhhhhhhl = 1;\n    long anhhhhhhhhhhhr = 0;\n    long anhhhhhhhhhhhh\
    \ = 0;\n    long anhhhhhhhhhhhhc = 0;\n    long anhhhhhhhhhhhhl = 1;\n    long\
    \ anhhhhhhhhhhhhhr = 0;\n    long anhhhhhhhhhhhhh = 0;\n    long anhhhhhhhhhh",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long cnt = 0;\n    long max = 0;\n    long cur = 0;\n\
    \    long cnt2 = 0;\n    long max2 = 0;\n    long cur2 = 0;\n    long cnt3 = 0;\n\
    \    long max3 = 0;\n    long cur3 = 0;\n    long cnt4 = 0;\n    long max4 = 0;\n\
    \    long cur4 = 0;\n    long cnt5 = 0;\n    long max5 = 0;\n    long cur5 = 0;\n\
    \    long cnt6 = 0;\n    long max6 = 0;\n    long cur6 = 0;\n    long cnt7 = 0;\n\
    \    long max7 = 0;\n    long cur7 = 0;\n    long cnt8 = 0;\n    long max8 = 0;\n\
    \    long cur8 = 0;\n    long cnt9 = 0;\n    long max9 = 0;\n    long cur9 = 0;\n\
    \    long cnt10 = 0;\n    long max10 = 0;\n    long cur10 = 0;\n    long cnt11\
    \ = 0;\n    long max11 = 0;\n    long cur11 = 0;\n    long cnt12 = 0;\n    long\
    \ max12 = 0;\n    long cur12 = 0;\n    long cnt13 = 0;\n    long max13 = 0;\n\
    \    long cur13 = 0;\n    long cnt14 = 0;\n    long max14 = 0;\n    long cur14\
    \ = 0;\n    long cnt15 = 0;\n    long max15 = 0;\n    long cur15 = 0;\n    long\
    \ cnt16 = 0;\n    long max16 = 0;\n    long cur16 = 0;\n    long cnt17 = 0;\n\
    \    long max17 = 0;\n    long cur17 = 0;\n    long cnt18 = 0;\n    long max18\
    \ = 0;\n    long cur18 = 0;\n    long cnt19 = 0;\n    long max19 = 0;\n    long\
    \ cur19 = 0;\n    long cnt20 = 0;\n    long max20 = 0;\n    long cur20 = 0;\n\
    \    long cnt21 = 0;\n    long max21 = 0;\n    long cur21 = 0;\n    long cnt22\
    \ = 0;\n    long max22 = 0;\n    long cur22 = 0;\n    long cnt23 = 0;\n    long\
    \ max23 = 0;\n    long cur23 = 0;\n    long cnt24 = 0;\n    long max24 = 0;\n\
    \    long cur24 = 0;\n    long cnt25 = 0;\n    long max25 = 0;\n    long cur25\
    \ = 0;\n    long cnt26 = 0;\n    long max26 = 0;\n    long cur26 = 0;\n    long\
    \ cnt27 = 0;\n    long max27 = 0;\n    long cur27 = 0;\n    long cnt28 = 0;\n\
    \    long max28 = 0;\n    long cur28", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long curr = 0;\n    long\
    \ curr = 1;\n    long curr2 = 1;\n    long curr3 = 1;\n    long curr4 = 1;\n \
    \   long curr5 = 1;\n    long curr6 = 1;\n    long curr7 = 1;\n    long curr8\
    \ = 1;\n    long curr9 = 1;\n    long curr10 = 1;\n    long curr11 = 1;\n    long\
    \ curr12 = 1;\n    long curr13 = 1;\n    long curr14 = 1;\n    long curr15 = 1;\n\
    \    long curr16 = 1;\n    long curr17 = 1;\n    long curr18 = 1;\n    long curr19\
    \ = 1;\n    long curr20 = 1;\n    long curr21 = 1;\n    long curr22 = 1;\n   \
    \ long curr23 = 1;\n    long curr24 = 1;\n    long curr25 = 1;\n    long curr26\
    \ = 1;\n    long curr27 = 1;\n    long curr28 = 1;\n    long curr29 = 1;\n   \
    \ long curr30 = 1;\n    long curr31 = 1;\n    long curr32 = 1;\n    long curr33\
    \ = 1;\n    long curr34 = 1;\n    long curr35 = 1;\n    long curr36 = 1;\n   \
    \ long curr37 = 1;\n    long curr38 = 1;\n    long curr39 = 1;\n    long curr40\
    \ = 1;\n    long curr41 = 1;\n    long curr42 = 1;\n    long curr43 = 1;\n   \
    \ long curr44 = 1;\n    long curr45 = 1;\n    long curr46 = 1;\n    long curr47\
    \ = 1;\n    long curr48 = 1;\n    long curr49 = 1;\n    long curr50 = 1;\n   \
    \ long curr51 = 1;\n    long curr52 = 1;\n    long curr53 = 1;\n    long curr54\
    \ = 1;\n    long curr55 = 1;\n    long curr56 = 1;\n    long curr57 = 1;\n   \
    \ long curr58 = 1;\n    long curr59 = 1;\n    long curr60 = 1;\n    long curr61\
    \ = 1;\n    long curr62 = 1;\n    long curr63 = 1;\n    long curr64 = 1;\n   \
    \ long curr65 = 1;\n    long curr66 = 1;\n    long curr67 = 1;\n    long curr68\
    \ = 1;\n    long curr69 = 1;\n    long curr70 = 1;\n    long curr71 = 1;\n   \
    \ long curr72 = 1;\n    long curr73 = 1;\n    long curr74 = 1;\n    long curr75\
    \ = 1;\n    long curr76 = 1;\n    long curr77 = 1;\n    long curr78 = 1;\n   \
    \ long curr79 = 1;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  long long ans_tmp = 0;\n    long long ans_tmp2 = 0;\n    long long ans_tmp3\
    \ = 0;\n    long long ans_tmp4 = 0;\n    long long ans_tmp5 = 0;\n    long long\
    \ ans_tmp6 = 0;\n    long long ans_tmp7 = 0;\n    long long ans_tmp8 = 0;\n  \
    \  long long ans_tmp9 = 0;\n    long long ans_tmp10 = 0;\n    long long ans_tmp11\
    \ = 0;\n    long long ans_tmp12 = 0;\n    long long ans_tmp13 = 0;\n    long long\
    \ ans_tmp14 = 0;\n    long long ans_tmp15 = 0;\n    long long ans_tmp16 = 0;\n\
    \    long long ans_tmp17 = 0;\n    long long ans_tmp18 = 0;\n    long long ans_tmp19\
    \ = 0;\n    long long ans_tmp20 = 0;\n    long long ans_tmp21 = 0;\n    long long\
    \ ans_tmp22 = 0;\n    long long ans_tmp23 = 0;\n    long long ans_tmp24 = 0;\n\
    \    long long ans_tmp25 = 0;\n    long long ans_tmp26 = 0;\n    long long ans_tmp27\
    \ = 0;\n    long long ans_tmp28 = 0;\n    long long ans_tmp29 = 0;\n    long long\
    \ ans_tmp30 = 0;\n    long long ans_tmp31 = 0;\n    long long ans_tmp32 = 0;\n\
    \    long long ans_tmp33 = 0;\n    long long ans_tmp34 = 0;\n    long long ans_tmp35\
    \ = 0;\n    long long ans_tmp36 = 0;\n    long long ans_tmp37 = 0;\n    long long\
    \ ans_tmp38 = 0;\n    long long ans_tmp39 = 0;\n    long long ans_tmp40 = 0;\n\
    \    long long ans_tmp41 = 0;\n    long long ans_tmp42 = 0;\n    long long ans_tmp43\
    \ = 0;\n    long long ans_tmp44 = 0;\n    long long ans_tmp45 = 0;\n    long long\
    \ ans_tmp46 = 0;\n    long long ans_tmp47 = 0;\n    long long ans_tmp48 = 0;\n\
    \    long long ans_tmp49 = 0;\n    long long ans_tmp50 = 0;\n    long long ans_tmp51\
    \ = 0;\n    long long ans_tmp52 = 0;\n    long long ans_tmp53 = 0;\n    long long\
    \ ans_tmp54", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long max_wells = n;\n    long min_wells = m;\n    long max_wells_capacity\
    \ = max_wells * capacity;\n    long min_wells_capacity = min_wells * capacity;\n\
    \    long max_wells_capacity_2 = max_wells_capacity / 2;\n    long min_wells_capacity_2\
    \ = min_wells_capacity / 2;\n    long max_wells_capacity_3 = max_wells_capacity\
    \ / 3;\n    long min_wells_capacity_3 = min_wells_capacity / 3;\n    long max_wells_capacity_4\
    \ = max_wells_capacity / 4;\n    long min_wells_capacity_4 = min_wells_capacity\
    \ / 4;\n    long max_wells_capacity_5 = max_wells_capacity / 5;\n    long min_wells_capacity_5\
    \ = min_wells_capacity / 5;\n    long max_wells_capacity_6 = max_wells_capacity\
    \ / 6;\n    long min_wells_capacity_6 = min_wells_capacity / 6;\n    long max_wells_capacity_7\
    \ = max_wells_capacity / 7;\n    long min_wells_capacity_7 = min_wells_capacity\
    \ / 7;\n    long max_wells_capacity_8 = max_wells_capacity / 8;\n    long min_wells_capacity_8\
    \ = min_wells_capacity / 8;\n    long max_wells_capacity_9 = max_wells_capacity\
    \ / 9;\n    long min_wells_capacity_9 = min_wells_capacity / 9;\n    long max_wells_capacity_10\
    \ = max_wells_capacity / 10;\n    long min_wells_capacity_10 = min_wells_capacity\
    \ / 10;\n    long max_wells_capacity_11 = max_wells_capacity / 11;\n    long min_wells_capacity_11\
    \ = min_wells_capacity / 11;\n    long max_wells_capacity_12 = max_wells_capacity\
    \ / 12;\n    long min_wells_capacity_12 = min_wells_capacity / 12;\n    long max_wells_capacity_13\
    \ = max_wells_capacity / 13;\n    long min_wells_capacity_13 = min_wells_capacity\
    \ / 13;\n    long max_wells_capacity_14 = max_wells_capacity / 14;\n    long min_wells_capacity_14\
    \ = min_wells_capacity / 14;\n    long max_wells_capacity_15 = max_wells_capacity\
    \ / 15;\n    long min_wells_capacity_15 = min_wells_capacity / 15;\n    long max_wells_capacity_16\
    \ = max_wells_capacity / 16;\n    long min_wells_capacity_16 = min_", "    //\
    \ write your code here\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long cur_cap\
    \ = 0;\n    long cur_max = 0;\n    long cur_min = 0;\n    long cur_sum = 0;\n\
    \    long cur_sum_cap = 0;\n    long cur_sum_max = 0;\n    long cur_sum_min =\
    \ 0;\n    long cur_sum_sum = 0;\n    long cur_sum_sum_cap = 0;\n    long cur_sum_sum_max\
    \ = 0;\n    long cur_sum_sum_min = 0;\n    long cur_sum_sum_sum = 0;\n    long\
    \ cur_sum_sum_sum_cap = 0;\n    long cur_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_cap =\
    \ 0;\n    long cur_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_max = 0;\n    long cur_sum_sum_sum_sum_sum_min\
    \ = 0;\n    long cur_sum_sum_sum_sum_sum_sum = 0;\n    long cur_sum_sum_sum_sum_sum_cap",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long\
    \ cnt82 = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long dn = m;\n    long cnt = 1;\n    long dnt = 1;\n    long cntt\
    \ = 1;\n    long dntt = 1;\n    long cntnt = 1;\n    long dnnt = 1;\n    long\
    \ cntntt = 1;\n    long dnntt = 1;\n    long cntntnt = 1;\n    long dnntnt = 1;\n\
    \    long cntntntt = 1;\n    long dnntntt = 1;\n    long cntntntnt = 1;\n    long\
    \ dnntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt\
    \ = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntnt\
    \ = 1;\n    long cntntntntt = 1;\n    long dnntntnt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    ", "    // Write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ ans = std::numeric_limits<long>::max();\n    long ans1 = 0;\n    long ans2 =\
    \ 0;\n    long ans3 = 0;\n    long ans4 = 0;\n    long ans5 = 0;\n    long ans6\
    \ = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n    long ans9 = 0;\n    long ans10\
    \ = 0;\n    long ans11 = 0;\n    long ans12 = 0;\n    long ans13 = 0;\n    long\
    \ ans14 = 0;\n    long ans15 = 0;\n    long ans16 = 0;\n    long ans17 = 0;\n\
    \    long ans18 = 0;\n    long ans19 = 0;\n    long ans20 = 0;\n    long ansp\
    \ = 0;\n    long ansp1 = 0;\n    long ansp2 = 0;\n    long ansp3 = 0;\n    long\
    \ ansp4 = 0;\n    long ansp5 = 0;\n    long ansp6 = 0;\n    long ansp7 = 0;\n\
    \    long ansp8 = 0;\n    long ansp9 = 0;\n    long ansp10 = 0;\n    long ansp11\
    \ = 0;\n    long ansp12 = 0;\n    long ansp13 = 0;\n    long ansp14 = 0;\n   \
    \ long ansp15 = 0;\n    long ansp16 = 0;\n    long ansp17 = 0;\n    long ansp18\
    \ = 0;\n    long ansp19 = 0;\n    long ansp20 = 0;\n    long anspp1 = 0;\n   \
    \ long anspp2 = 0;\n    long anspp3 = 0;\n    long anspp4 = 0;\n    long anspp5\
    \ = 0;\n    long anspp6 = 0;\n    long anspp7 = 0;\n    long anspp8 = 0;\n   \
    \ long anspp9 = 0;\n    long anspp10 = 0;\n    long anspp11 = 0;\n    long anspp12\
    \ = 0;\n    long anspp13 = 0;\n    long anspp14 = 0;\n    long anspp15 = 0;\n\
    \    long anspp16 = 0;\n    long anspp17 = 0;\n    long anspp18 = 0;\n    long\
    \ anspp19 = 0;\n    long anspp20 = 0;\n    long anspp1p = 0;\n    long anspp2p\
    \ = 0;\n    long anspp3p = 0;\n    long anspp4p = 0;\n    long anspp5p = 0;\n\
    \    long anspp6p = 0;\n    long anspp7p = 0;", "    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    std::vector<long>\
    \ b(n);\n    std::vector<long> b1(m);\n    std::vector<long> b2(m);\n    std::vector<long>\
    \ b3(m);\n    std::vector<long> b4(m, capacity);\n    std::vector<long> b5(m,\
    \ capacity);\n    std::vector<long> b6(m, capacity);\n    std::vector<long> b7(m,\
    \ capacity);\n    std::vector<long> b8(m, capacity);\n    std::vector<long> b9(m,\
    \ capacity);\n    std::vector<long> b10(m, capacity);\n    std::vector<long> b11(m,\
    \ capacity);\n    std::vector<long> b12(m, capacity);\n    std::vector<long> b13(m,\
    \ capacity);\n    std::vector<long> b14(m, capacity);\n    std::vector<long> b15(m,\
    \ capacity);\n    std::vector<long> b16(m, capacity);\n    std::vector<long> b17(m,\
    \ capacity);\n    std::vector<long> b18(m, capacity);\n    std::vector<long> b19(m,\
    \ capacity);\n    std::vector<long> b20(m, capacity);\n    std::vector<long> b21(m,\
    \ capacity);\n    std::vector<long> b22(m, capacity);\n    std::vector<long> b23(m,\
    \ capacity);\n    std::vector<long> b24(m, capacity);\n    std::vector<long> b25(m,\
    \ capacity);\n    std::vector<long> b26(m, capacity);\n    std::vector<long> b27(m,\
    \ capacity);\n    std::vector<long> b28(m, capacity);\n    std::vector<long> b29(m,\
    \ capacity);\n    std::vector<long> b30(m, capacity);\n    std::vector<long> b31(m,\
    \ capacity);\n    std::vector<long> b32(m, capacity);\n    std::vector<long> b33(m,\
    \ capacity);\n    std::vector<long> b34(m, capacity);\n    std::vector<long> b35(m,\
    \ capacity);\n    std::vector<long> b36(m, capacity);\n    std::vector<long> b37(m,\
    \ capacity);\n    std::vector<long> b38(m, capacity);\n    std::vector<long> b39(m,\
    \ capacity);\n    std::vector<long> b40(m, capacity);\n    std::vector<long> b41(m,\
    \ capacity);\n    std::vector<long> b42(m, capacity);\n    std::vector<long> b43(m,\
    \ capacity);\n    std::vector<long> b44(m, capacity);\n    std::vector<long> b45(m,\
    \ capacity);\n    ", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ long ans = 0;\n    long long cnt = 0;\n    long long cnt2 = 0;\n    long long\
    \ cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6\
    \ = 0;\n    long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 =\
    \ 0;\n    long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12\
    \ = 0;\n    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15\
    \ = 0;\n    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18\
    \ = 0;\n    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21\
    \ = 0;\n    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24\
    \ = 0;\n    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27\
    \ = 0;\n    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30\
    \ = 0;\n    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33\
    \ = 0;\n    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36\
    \ = 0;\n    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39\
    \ = 0;\n    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42\
    \ = 0;\n    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45\
    \ = 0;\n    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48\
    \ = 0;\n    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51\
    \ = 0;\n    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54\
    \ = 0;\n    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57\
    \ = 0;\n    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60\
    \ = 0;\n    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63\
    \ = 0;\n    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66\
    \ = 0;\n    long long cnt67 = 0;\n    long long cnt68 = 0;\n    long long cnt69",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long count = 0;\n    long cur = 0;\n    long max = 0;\n    long min = 0;\n\
    \    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4\
    \ = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long\
    \ temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n\
    \    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15\
    \ = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n   \
    \ long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22\
    \ = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n   \
    \ long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29\
    \ = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n   \
    \ long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36\
    \ = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n   \
    \ long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43\
    \ = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n   \
    \ long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50\
    \ = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n   \
    \ long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57\
    \ = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n   \
    \ long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64\
    \ = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n   \
    \ long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71\
    \ = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n   \
    \ long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78\
    \ = 0;\n    long temp79 = 0;\n    long temp80", "    // Your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    long long ans_temp = 0;\n    long long\
    \ ans_temp_temp = 0;\n    long long ans_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long ans = INT_MAX;\n    long long ans2 = 0;\n    long long\
    \ cnt2 = 0;\n    long long cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5\
    \ = 0;\n    long long cnt6 = 0;\n    long long cnt7 = 0;\n    long long cnt8 =\
    \ 0;\n    long long cnt9 = 0;\n    long long cnt10 = 0;\n    long long cnt11 =\
    \ 0;\n    long long cnt12 = 0;\n    long long cnt13 = 0;\n    long long cnt14\
    \ = 0;\n    long long cnt15 = 0;\n    long long cnt16 = 0;\n    long long cnt17\
    \ = 0;\n    long long cnt18 = 0;\n    long long cnt19 = 0;\n    long long cnt20\
    \ = 0;\n    long long cnt21 = 0;\n    long long cnt22 = 0;\n    long long cnt23\
    \ = 0;\n    long long cnt24 = 0;\n    long long cnt25 = 0;\n    long long cnt26\
    \ = 0;\n    long long cnt27 = 0;\n    long long cnt28 = 0;\n    long long cnt29\
    \ = 0;\n    long long cnt30 = 0;\n    long long cnt31 = 0;\n    long long cnt32\
    \ = 0;\n    long long cnt33 = 0;\n    long long cnt34 = 0;\n    long long cnt35\
    \ = 0;\n    long long cnt36 = 0;\n    long long cnt37 = 0;\n    long long cnt38\
    \ = 0;\n    long long cnt39 = 0;\n    long long cnt40 = 0;\n    long long cnt41\
    \ = 0;\n    long long cnt42 = 0;\n    long long cnt43 = 0;\n    long long cnt44\
    \ = 0;\n    long long cnt45 = 0;\n    long long cnt46 = 0;\n    long long cnt47\
    \ = 0;\n    long long cnt48 = 0;\n    long long cnt49 = 0;\n    long long cnt50\
    \ = 0;\n    long long cnt51 = 0;\n    long long cnt52 = 0;\n    long long cnt53\
    \ = 0;\n    long long cnt54 = 0;\n    long long cnt55 = 0;\n    long long cnt56\
    \ = 0;\n    long long cnt57 = 0;\n    long long cnt58 = 0;\n    long long cnt59\
    \ = 0;\n    long long cnt60 = 0;\n    long long cnt61 = 0;\n    long long cnt62\
    \ = 0;\n    long long cnt63 = 0;\n    long long cnt64 = 0;\n    long long cnt65\
    \ = 0;\n    long long cnt66 = 0;\n    long long cnt67 = 0;\n    long long cnt68\
    \ = 0;\n    long long cnt69 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long c = 0;\n    long ans_temp = 0;\n    long\
    \ bucket_size = 0;\n    long bucket_capacity = 0;\n    long bucket_temp = 0;\n\
    \    long bucket_temp2 = 0;\n    long bucket_temp3 = 0;\n    long bucket_temp4\
    \ = 0;\n    long bucket_temp5 = 0;\n    long bucket_temp6 = 0;\n    long bucket_temp7\
    \ = 0;\n    long bucket_temp8 = 0;\n    long bucket_temp9 = 0;\n    long bucket_temp10\
    \ = 0;\n    long bucket_temp11 = 0;\n    long bucket_temp12 = 0;\n    long bucket_temp13\
    \ = 0;\n    long bucket_temp14 = 0;\n    long bucket_temp15 = 0;\n    long bucket_temp16\
    \ = 0;\n    long bucket_temp17 = 0;\n    long bucket_temp18 = 0;\n    long bucket_temp19\
    \ = 0;\n    long bucket_temp20 = 0;\n    long bucket_temp21 = 0;\n    long bucket_temp22\
    \ = 0;\n    long bucket_temp23 = 0;\n    long bucket_temp24 = 0;\n    long bucket_temp25\
    \ = 0;\n    long bucket_temp26 = 0;\n    long bucket_temp27 = 0;\n    long bucket_temp28\
    \ = 0;\n    long bucket_temp29 = 0;\n    long bucket_temp30 = 0;\n    long bucket_temp31\
    \ = 0;\n    long bucket_temp32 = 0;\n    long bucket_temp33 = 0;\n    long bucket_temp34\
    \ = 0;\n    long bucket_temp35 = 0;\n    long bucket_temp36 = 0;\n    long bucket_temp37\
    \ = 0;\n    long bucket_temp38 = 0;\n    long bucket_temp39 = 0;\n    long bucket_temp40\
    \ = 0;\n    long bucket_temp41 = 0;\n    long bucket_temp42 = 0;\n    long bucket_temp43\
    \ = 0;\n    long bucket_temp44 = 0;\n    long bucket_temp45 = 0;\n    long bucket_temp46\
    \ = 0;\n    long bucket_temp47 = 0;\n    long bucket_temp48 = 0;\n    long bucket_temp49\
    \ = 0;\n    long bucket_temp50 = 0;\n    long bucket_temp51 = 0;\n    long bucket_temp52\
    \ = 0;\n    long bucket_temp53 = 0;\n    long bucket_temp54 = 0;\n    long bucket_temp55\
    \ = 0;\n    long bucket_temp56 = 0;\n    long bucket_temp57 = 0;\n    long bucket_temp58\
    \ = 0;\n    long bucket_temp59 = 0;\n    long bucket_temp60 = 0;\n    long bucket_temp61\
    \ = 0;\n    long bucket_temp62 = 0;\n    long bucket_temp63 = 0;\n    long bucket_temp64\
    \ = 0;\n    long bucket_temp65 = 0;\n    long bucket_temp66 = 0;\n    long bucket_temp67\
    \ = 0;\n    long bucket_temp", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long count = 0;\n    long max_count = 0;\n\
    \    long min_count = std::numeric_limits<long>::max();\n    long min_capacity\
    \ = std::numeric_limits<long>::max();\n    long min_bucket = std::numeric_limits<long>::max();\n\
    \    long max_bucket = std::numeric_limits<long>::min();\n    long min_bucket2\
    \ = std::numeric_limits<long>::max();\n    long max_bucket2 = std::numeric_limits<long>::min();\n\
    \    long min_bucket3 = std::numeric_limits<long>::max();\n    long max_bucket3\
    \ = std::numeric_limits<long>::min();\n    long min_bucket4 = std::numeric_limits<long>::max();\n\
    \    long max_bucket4 = std::numeric_limits<long>::min();\n    long min_bucket5\
    \ = std::numeric_limits<long>::max();\n    long max_bucket5 = std::numeric_limits<long>::min();\n\
    \    long min_bucket6 = std::numeric_limits<long>::max();\n    long max_bucket6\
    \ = std::numeric_limits<long>::min();\n    long min_bucket7 = std::numeric_limits<long>::max();\n\
    \    long max_bucket7 = std::numeric_limits<long>::min();\n    long min_bucket8\
    \ = std::numeric_limits<long>::max();\n    long max_bucket8 = std::numeric_limits<long>::min();\n\
    \    long min_bucket9 = std::numeric_limits<long>::max();\n    long max_bucket9\
    \ = std::numeric_limits<long>::min();\n    long min_bucket10 = std::numeric_limits<long>::max();\n\
    \    long max_bucket10 = std::numeric_limits<long>::min();\n    long min_bucket11\
    \ = std::numeric_limits<long>::max();\n    long max_bucket11 = std::numeric_limits<long>::min();\n\
    \    long min_bucket12 = std::numeric_limits<long>::max();\n    long max_bucket12\
    \ = std::numeric_limits<long>::min();\n    long min_bucket13 = std::numeric_limits<long>::max();\n\
    \    long max_bucket13 = std::numeric_limits<long>::min();\n    long min_bucket14\
    \ = std::numeric_limits<long>::max();\n    long max_bucket14 = std::numeric_limits<long>::min();\n\
    \    long min_bucket15 = std::numeric_limits<long>::max();\n    long max_bucket15\
    \ = std::numeric_limits<long>::min();\n    long min_bucket16 = std::numeric_limits<long>::max();\n\
    \    long max_bucket16 = std::numeric_limits<long>::min();\n", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long an = n;\n\
    \    long bn = m;\n    long cn = n;\n    long dn = m;\n    long cn2 = n;\n   \
    \ long dn2 = m;\n    long cn3 = n;\n    long dn3 = m;\n    long cn4 = n;\n   \
    \ long dn4 = m;\n    long cn5 = n;\n    long dn5 = m;\n    long cn6 = n;\n   \
    \ long dn6 = m;\n    long cn7 = n;\n    long dn7 = m;\n    long cn8 = n;\n   \
    \ long dn8 = m;\n    long cn9 = n;\n    long dn9 = m;\n    long cn10 = n;\n  \
    \  long dn10 = m;\n    long cn11 = n;\n    long dn11 = m;\n    long cn12 = n;\n\
    \    long dn12 = m;\n    long cn13 = n;\n    long dn13 = m;\n    long cn14 = n;\n\
    \    long dn14 = m;\n    long cn15 = n;\n    long dn15 = m;\n    long cn16 = n;\n\
    \    long dn16 = m;\n    long cn17 = n;\n    long dn17 = m;\n    long cn18 = n;\n\
    \    long dn18 = m;\n    long cn19 = n;\n    long dn19 = m;\n    long cn20 = n;\n\
    \    long dn20 = m;\n    long cn21 = n;\n    long dn21 = m;\n    long cn22 = n;\n\
    \    long dn22 = m;\n    long cn23 = n;\n    long dn23 = m;\n    long cn24 = n;\n\
    \    long dn24 = m;\n    long cn25 = n;\n    long dn25 = m;\n    long cn26 = n;\n\
    \    long dn26 = m;\n    long cn27 = n;\n    long dn27 = m;\n    long cn28 = n;\n\
    \    long dn28 = m;\n    long cn29 = n;\n    long dn29 = m;\n    long cn30 = n;\n\
    \    long dn30 = m;\n    long cn31 = n;\n    long dn31 = m;\n    long cn32 = n;\n\
    \    long dn32 = m;\n    long cn33 = n;\n    long dn33 = m;\n    long cn34 = n;\n\
    \    long dn34 = m;\n    long cn35 = n;\n    long dn35 = m;\n    long cn36 = n;\n\
    \    long dn36 = m;\n", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    std::vector<std::vector<long>> bucket(m,\
    \ std::vector<long>(capacity, 0));\n    \n    for (long i = 0; i < n; i++) {\n\
    \        for (long j = 0; j < m; j++) {\n            if (grid[i][j] == 1) {\n\
    \                bucket[j][i] = 1;\n                cnt++;\n            }\n  \
    \      }\n    }\n    \n    for (long i = 0; i < m; i++) {\n        for (long j\
    \ = 0; j < n; j++) {\n            if (bucket[i][j] == 0) {\n                bucket[i][j]\
    \ = 1;\n                cnt++;\n            }\n        }\n    }\n    \n    for\
    \ (long i = 0; i < m; i++) {\n        for (long j = 0; j < n; j++) {\n       \
    \     if (bucket[i][j] == 1) {\n                ans = max(ans, cnt - bucket[i][j]);\n\
    \            }\n        }\n    }\n    \n    return ans;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt\
    \ += 1;\n                if(cnt > ans) {\n                    ans = cnt;\n   \
    \             }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    long cur = 0;\n    long cur_cap = 0;\n\
    \    long cur_ans = INT_MAX;\n    long cur_cur = 0;\n    long cur_cur_cap = 0;\n\
    \    long cur_cur_ans = INT_MAX;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur = 0;\n \
    \   long cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_ans = INT_MAX;\n \
    \   long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap = 0;\n   \
    \ long cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur =\
    \ 0;\n    long cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_ans\
    \ = INT_MAX;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cur_ans = INT_MAX;\n    long\
    \ cur_cur_cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_", " \
    \   // write your code here\n    long ans = 0;\n    long n = grid.size();\n  \
    \  long m = grid[0].size();\n    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3\
    \ = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7\
    \ = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long\
    \ cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n\
    \    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18\
    \ = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long\
    \ cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n\
    \    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29\
    \ = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long\
    \ cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n\
    \    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40\
    \ = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long\
    \ cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n\
    \    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51\
    \ = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long\
    \ cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n\
    \    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62\
    \ = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long\
    \ cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n\
    \    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73\
    \ = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long\
    \ cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n\
    \    long cnt81 = 0;\n    long cnt82 = 0;\n", "    long ans = 0;\n    long n =\
    \ grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long cnt2\
    \ = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6\
    \ = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10\
    \ = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76\
    \ = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long\
    \ cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83 = 0;",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long b = capacity / n;\n    long r = capacity % n;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long\
    \ m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n\
    \    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n    long\
    \ E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n\
    \    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n    long\
    \ N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n\
    \    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n    long\
    \ W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long aa = 0;\n\
    \    long bb = 0;\n    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long\
    \ ff = 0;\n    long gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj =\
    \ 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n\
    \    long oo = 0;\n    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww =\
    \ 0;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long Aa = 0;\n\
    \    long Bb = 0;\n    long Cc = 0;\n    long Dd = 0;\n    long Ee = 0;\n    long\
    \ Ff = 0;\n    long Gg = 0;\n    long Hh = 0;\n    long Ii = 0;\n    long Jj =\
    \ 0;\n    long Kk = 0;\n    long Ll = 0;\n    long Mm = 0;\n    long Nn = 0;\n\
    \    long Oo = 0;\n    long Pp = 0;\n    long Qq = 0;\n", "    // Your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long long an = 0;\n    long long an2 = 0;\n    long long an3 = 0;\n    long\
    \ long an4 = 0;\n    long long an5 = 0;\n    long long an6 = 0;\n    long long\
    \ an7 = 0;\n    long long an8 = 0;\n    long long an9 = 0;\n    long long an10\
    \ = 0;\n    long long an11 = 0;\n    long long an12 = 0;\n    long long an13 =\
    \ 0;\n    long long an14 = 0;\n    long long an15 = 0;\n    long long an16 = 0;\n\
    \    long long an17 = 0;\n    long long an18 = 0;\n    long long an19 = 0;\n \
    \   long long an20 = 0;\n    long long an21 = 0;\n    long long an22 = 0;\n  \
    \  long long an23 = 0;\n    long long an24 = 0;\n    long long an25 = 0;\n   \
    \ long long an26 = 0;\n    long long an27 = 0;\n    long long an28 = 0;\n    long\
    \ long an29 = 0;\n    long long an30 = 0;\n    long long an31 = 0;\n    long long\
    \ an32 = 0;\n    long long an33 = 0;\n    long long an34 = 0;\n    long long an35\
    \ = 0;\n    long long an36 = 0;\n    long long an37 = 0;\n    long long an38 =\
    \ 0;\n    long long an39 = 0;\n    long long an40 = 0;\n    long long an41 = 0;\n\
    \    long long an42 = 0;\n    long long an43 = 0;\n    long long an44 = 0;\n \
    \   long long an45 = 0;\n    long long an46 = 0;\n    long long an47 = 0;\n  \
    \  long long an48 = 0;\n    long long an49 = 0;\n    long long an50 = 0;\n   \
    \ long long an51 = 0;\n    long long an52 = 0;\n    long long an53 = 0;\n    long\
    \ long an54 = 0;\n    long long an55 = 0;\n    long long an56 = 0;\n    long long\
    \ an57 = 0;\n    long long an58 = 0;\n    long long an59 = 0;\n    long long an60\
    \ = 0;\n    long long an61 = 0;\n    long long an62 = 0;\n    long long an63 =\
    \ 0;\n    long long an64 = 0;\n    long long an65 = 0;\n    long long an66 = 0;\n\
    \    long long an67 = 0;\n    long long an68 = 0;\n    long long an69 = 0;\n \
    \   long long an70 = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long long an = n * m;\n    long long an2 =\
    \ an * an;\n    long long an3 = an2 * an;\n    long long an4 = an3 * an;\n   \
    \ long long an5 = an4 * an;\n    long long an6 = an5 * an;\n    long long an7\
    \ = an6 * an;\n    long long an8 = an7 * an;\n    long long an9 = an8 * an;\n\
    \    long long an10 = an9 * an;\n    long long an11 = an10 * an;\n    long long\
    \ an12 = an11 * an;\n    long long an13 = an12 * an;\n    long long an14 = an13\
    \ * an;\n    long long an15 = an14 * an;\n    long long an16 = an15 * an;\n  \
    \  long long an17 = an16 * an;\n    long long an18 = an17 * an;\n    long long\
    \ an19 = an18 * an;\n    long long an20 = an19 * an;\n    long long an21 = an20\
    \ * an;\n    long long an22 = an21 * an;\n    long long an23 = an22 * an;\n  \
    \  long long an24 = an23 * an;\n    long long an25 = an24 * an;\n    long long\
    \ an26 = an25 * an;\n    long long an27 = an26 * an;\n    long long an28 = an27\
    \ * an;\n    long long an29 = an28 * an;\n    long long an30 = an29 * an;\n  \
    \  long long an31 = an30 * an;\n    long long an32 = an31 * an;\n    long long\
    \ an33 = an32 * an;\n    long long an34 = an33 * an;\n    long long an35 = an34\
    \ * an;\n    long long an36 = an35 * an;\n    long long an37 = an36 * an;\n  \
    \  long long an38 = an37 * an;\n    long long an39 = an38 * an;\n    long long\
    \ an40 = an39 * an;\n    long long an41 = an40 * an;\n    long long an42 = an41\
    \ * an;\n    long long an43 = an42 * an", "    // Write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ x = 1;\n    long y = 1;\n    long z = 1;\n    long cnt = 0;\n    long cnt2 =\
    \ 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6\
    \ = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10\
    \ = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76\
    \ = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long\
    \ cnt", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    std::vector<long> b(n);\n    std::vector<long> w(m);\n\
    \    std::vector<long> b_tmp(m);\n    std::vector<long> w_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp(m);\n    std::vector<long> w_tmp_tmp(n);\n    std::vector<long> b_tmp_tmp_tmp(m);\n\
    \    std::vector<long> w_tmp_tmp_tmp(n);\n    std::vector<long> b_tmp_tmp_tmp_tmp(m);\n\
    \    std::vector<long> w_tmp_tmp_tmp_tmp(n);\n    std::vector<long> b_tmp_tmp_tmp_tmp_tmp(m);\n\
    \    std::vector<long> w_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long> b_tmp_tmp_tmp_tmp_tmp_tmp(m);\n\
    \    std::vector<long> w_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long> w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n\
    \    std::vector<long> b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long> b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n\
    \    std::vector<long> w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n   \
    \ std::vector<long> b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(m);\n    std::vector<long>\
    \ w_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp(n);\n    std::vector<long>\
    \ b_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = capacity;\n    long cn2 = cn;\n\
    \    long cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n\
    \    long cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n\
    \    long cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14\
    \ = cn;\n    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long\
    \ cn18 = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n\
    \    long cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25\
    \ = cn;\n    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long\
    \ cn29 = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n\
    \    long cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36\
    \ = cn;\n    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long\
    \ cn40 = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n\
    \    long cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47\
    \ = cn;\n    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long\
    \ cn51 = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n\
    \    long cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58\
    \ = cn;\n    long cn59 = cn;\n    long cn60 = cn;\n    long cn61 = cn;", "   \
    \ // write your code here\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bm = m;\n    long ans = an;\n\
    \    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long\
    \ bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn =\
    \ n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n\
    \    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long\
    \ bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm =\
    \ m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n\
    \    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long\
    \ bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn =\
    \ n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n\
    \    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long\
    \ bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm =\
    \ m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n\
    \    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long\
    \ bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn =\
    \ n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n\
    \    long bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long\
    \ bm = m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm =\
    \ m;\n    long bn = n;\n    long bm = m;\n    long bn = n;\n    long bm = m;\n",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long cur_n\
    \ = n;\n    long cur_m = m;\n    long cur_ans = 0;\n    long cur_cur = 0;\n  \
    \  long cur_cur_cap = cur_cap;\n    long cur_cur_n = cur_n;\n    long cur_cur_m\
    \ = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap\
    \ = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n    long cur_cur_cur_m\
    \ = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n =\
    \ cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap =\
    \ cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long min = 0;\n\
    \    long max = 0;\n    long cnt2 = 0;\n    long cur2 = 0;\n    long min2 = 0;\n\
    \    long max2 = 0;\n    long cnt3 = 0;\n    long cur3 = 0;\n    long min3 = 0;\n\
    \    long max3 = 0;\n    long cnt4 = 0;\n    long cur4 = 0;\n    long min4 = 0;\n\
    \    long max4 = 0;\n    long cnt5 = 0;\n    long cur5 = 0;\n    long min5 = 0;\n\
    \    long max5 = 0;\n    long cnt6 = 0;\n    long cur6 = 0;\n    long min6 = 0;\n\
    \    long max6 = 0;\n    long cnt7 = 0;\n    long cur7 = 0;\n    long min7 = 0;\n\
    \    long max7 = 0;\n    long cnt8 = 0;\n    long cur8 = 0;\n    long min8 = 0;\n\
    \    long max8 = 0;\n    long cnt9 = 0;\n    long cur9 = 0;\n    long min9 = 0;\n\
    \    long max9 = 0;\n    long cnt10 = 0;\n    long cur10 = 0;\n    long min10\
    \ = 0;\n    long max10 = 0;\n    long cnt11 = 0;\n    long cur11 = 0;\n    long\
    \ min11 = 0;\n    long max11 = 0;\n    long cnt12 = 0;\n    long cur12 = 0;\n\
    \    long min12 = 0;\n    long max12 = 0;\n    long cnt13 = 0;\n    long cur13\
    \ = 0;\n    long min13 = 0;\n    long max13 = 0;\n    long cnt14 = 0;\n    long\
    \ cur14 = 0;\n    long min14 = 0;\n    long max14 = 0;\n    long cnt15 = 0;\n\
    \    long cur15 = 0;\n    long min15 = 0;\n    long max15 = 0;\n    long cnt16\
    \ = 0;\n    long cur16 = 0;\n    long min16 = 0;\n    long max16 = 0;\n    long\
    \ cnt17 = 0;\n    long cur17 = 0;\n    long min17 = 0;\n    long max17 = 0;\n\
    \    long cnt18 = 0;\n    long cur18 = 0;\n    long min18 = 0;\n    long max18\
    \ = 0;\n    long cnt19 = 0;\n    long cur19 = 0;\n    long min19 = 0;\n    long\
    \ max19 = 0;\n    long cnt20 = 0;\n    long cur20 = 0;\n    long min20 = 0;\n\
    \    long max20 = 0;\n    long cnt21 = 0;\n    long cur21 = 0;\n    long min21\
    \ = 0;\n    long max21 = 0;\n    long cnt", "    // write your code here\n   \
    \ long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n   \
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long long ans = 0;\n    long long an = 0;\n    long long ans\
    \ = 0;\n    long long an = 0;\n    long long ans = 0;\n    long long an = 0;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long ans = 0;\n    long\
    \ long an = 0;\n    long ", "    // Your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j\
    \ < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt++;\n   \
    \             if(cnt > ans) {\n                    ans = cnt;\n              \
    \  }\n            }\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long ans = INT_MAX;\n    long long ans_temp = 0;\n    long long ans_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_", "    // Write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur_cap = 0;\n    long cur_ans\
    \ = 0;\n    long cur_n = 0;\n    long cur_m = 0;\n    long cur_n2 = 0;\n    long\
    \ cur_m2 = 0;\n    long cur_n3 = 0;\n    long cur_n4 = 0;\n    long cur_n5 = 0;\n\
    \    long cur_n6 = 0;\n    long cur_n7 = 0;\n    long cur_n8 = 0;\n    long cur_n9\
    \ = 0;\n    long cur_n10 = 0;\n    long cur_n11 = 0;\n    long cur_n12 = 0;\n\
    \    long cur_n13 = 0;\n    long cur_n14 = 0;\n    long cur_n15 = 0;\n    long\
    \ cur_n16 = 0;\n    long cur_n17 = 0;\n    long cur_n18 = 0;\n    long cur_n19\
    \ = 0;\n    long cur_n20 = 0;\n    long cur_n21 = 0;\n    long cur_n22 = 0;\n\
    \    long cur_n23 = 0;\n    long cur_n24 = 0;\n    long cur_n25 = 0;\n    long\
    \ cur_n26 = 0;\n    long cur_n27 = 0;\n    long cur_n28 = 0;\n    long cur_n29\
    \ = 0;\n    long cur_n30 = 0;\n    long cur_n31 = 0;\n    long cur_n32 = 0;\n\
    \    long cur_n33 = 0;\n    long cur_n34 = 0;\n    long cur_n35 = 0;\n    long\
    \ cur_n36 = 0;\n    long cur_n37 = 0;\n    long cur_n38 = 0;\n    long cur_n39\
    \ = 0;\n    long cur_n40 = 0;\n    long cur_n41 = 0;\n    long cur_n42 = 0;\n\
    \    long cur_n43 = 0;\n    long cur_n44 = 0;\n    long cur_n45 = 0;\n    long\
    \ cur_n46 = 0;\n    long cur_n47 = 0;\n    long cur_n48 = 0;\n    long cur_n49\
    \ = 0;\n    long cur_n50 = 0;\n    long cur_n51 = 0;\n    long cur_n52 = 0;\n\
    \    long cur_n53 = 0;\n    long cur_n54 = 0;\n    long cur_n55 = 0;\n    long\
    \ cur_n56 = 0;\n    long cur_n57 = 0;\n    long cur_n58 = 0;\n    long cur_n59\
    \ = 0;\n    long cur_n60 = 0;\n    long cur_n61 = 0;\n    long cur_n62 = 0;\n\
    \    long cur_n63 = 0;\n    long cur_n", "    // Your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long min = 0;\n    long max = 0;\n    long min2 = 0;\n    long max2\
    \ = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long min4 = 0;\n    long max4\
    \ = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long min6 = 0;\n    long max6\
    \ = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long min8 = 0;\n    long max8\
    \ = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long min10 = 0;\n    long\
    \ max10 = 0;\n    long min11 = 0;\n    long max11 = 0;\n    long min12 = 0;\n\
    \    long max12 = 0;\n    long min13 = 0;\n    long max13 = 0;\n    long min14\
    \ = 0;\n    long max14 = 0;\n    long min15 = 0;\n    long max15 = 0;\n    long\
    \ min16 = 0;\n    long max16 = 0;\n    long min17 = 0;\n    long max17 = 0;\n\
    \    long min18 = 0;\n    long max18 = 0;\n    long min19 = 0;\n    long max19\
    \ = 0;\n    long min20 = 0;\n    long max20 = 0;\n    long min21 = 0;\n    long\
    \ max21 = 0;\n    long min22 = 0;\n    long max22 = 0;\n    long min23 = 0;\n\
    \    long max23 = 0;\n    long min24 = 0;\n    long max24 = 0;\n    long min25\
    \ = 0;\n    long max25 = 0;\n    long min26 = 0;\n    long max26 = 0;\n    long\
    \ min27 = 0;\n    long max27 = 0;\n    long min28 = 0;\n    long max28 = 0;\n\
    \    long min29 = 0;\n    long max29 = 0;\n    long min30 = 0;\n    long max30\
    \ = 0;\n    long min31 = 0;\n    long max31 = 0;\n    long min32 = 0;\n    long\
    \ max32 = 0;\n    long min33 = 0;\n    long max33 = 0;\n    long min34 = 0;\n\
    \    long max34 = 0;\n    long min35 = 0;\n    long max35 = 0;\n    long min36\
    \ = 0;\n    long max36 = 0;\n    long min37 = 0;\n    long max37 = 0;\n    long\
    \ min38 = 0;\n    long max38 = 0;\n    long min39 = 0;\n    long max39 = 0;\n\
    \    long min40 = 0;\n    long max40 = 0;\n    long min41 = 0;\n    long max41\
    \ = 0;\n", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ ans = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m;\
    \ j++) {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n     \
    \           cur += 1;\n            }\n        }\n        if(cnt > capacity) {\n\
    \            ans = cur;\n            cnt = 0;\n            cur = 0;\n        }\n\
    \    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn = n;\n\
    \    long dn = m;\n    long cnt = 1;\n    long dnt = 1;\n    long ant = n;\n \
    \   long bnt = m;\n    long cntt = 1;\n    long dntt = 1;\n    long cntnt = 1;\n\
    \    long dnnt = 1;\n    long cntntt = 1;\n    long dnntt = 1;\n    long cntntnt\
    \ = 1;\n    long dnntnt = 1;\n    long cntntntt = 1;\n    long dnntntt = 1;\n\
    \    long cntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt = 1;\n \
    \   long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n\
    \    long cntntntntntt = 1;\n    long dnntntntntt = 1;\n    long cntntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt\
    \ = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntt = 1;\n\
    \    long cntntntnt = 1;\n    long dnntnt = 1;\n    long cntntntt = 1;\n    long\
    \ dnnt = 1;\n    long cntntnt = 1;\n    long dnt = 1;\n    long cntnt = 1;\n \
    \   long dnt = 1;\n    long cntt = 1;\n    long dnt = 1;\n    long cntnt = 1;\n\
    \    long dnt = 1;\n    long cntt = 1;\n    long dnt = 1;\n    long cntnt = 1;\n\
    \    long dnt = 1;\n    long cntnt = 1;\n    long dnt = 1;\n    long cntnt = 1;\n\
    \    long dnt = 1;\n    long ", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long cnt = 0;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0;\
    \ j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt += 1;\n\
    \                if(cnt > ans) {\n                    ans = cnt;\n           \
    \     }\n            }\n        }\n    }\n    return ans;", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long x = 1;\n  \
    \  long y = 1;\n    long z = 1;\n    long w = 1;\n    long v = 1;\n    long u\
    \ = 1;\n    long t = 1;\n    long s = 1;\n    long r = 1;\n    long q = 1;\n \
    \   long p = 1;\n    long k = 1;\n    long j = 1;\n    long i = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u\
    \ = 1;\n    long v = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n \
    \   long w = 1;\n    long v = 1;\n    long u = 1;\n    long t = 1;\n    long s\
    \ = 1;\n    long r = 1;\n    long q = 1;\n    long p = 1;\n    long k = 1;\n \
    \   long j = 1;\n    long i = 1;\n    long l = 1;\n    long m = 1;\n    long n\
    \ = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n \
    \   long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long x\
    \ = 1;\n    long y = 1;\n    long z = 1;\n    long w = 1;\n    long v = 1;\n \
    \   long u = 1;\n    long t = 1;\n    long s = 1;\n    long r = 1;\n    long q\
    \ = 1;\n    long p = 1;\n    long k = 1;\n    long j = 1;\n    long i = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long w = 1;\n    long v = 1;\n    long u = 1;\n    long t = 1;\n \
    \   long s = 1;\n    long r = 1;\n    long q = 1;\n    long p = 1;\n    long k\
    \ = 1;\n    long j = 1;\n    long i = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long ", "    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long l = grid[0][0];\n\
    \    long r = grid[0][0];\n    long c = 1;\n    long d = 1;\n    long k = 0;\n\
    \    long p = 0;\n    long q = 0;\n    long t = 0;\n    long u = 0;\n    long\
    \ v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n\
    \    long u2 = 0;\n    long v2 = 0;\n    long w2 = 0;\n    long x2 = 0;\n    long\
    \ y2 = 0;\n    long z2 = 0;\n    long u3 = 0;\n    long v3 = 0;\n    long w3 =\
    \ 0;\n    long x3 = 0;\n    long y3 = 0;\n    long z3 = 0;\n    long u4 = 0;\n\
    \    long v4 = 0;\n    long w4 = 0;\n    long x4 = 0;\n    long y4 = 0;\n    long\
    \ z4 = 0;\n    long u5 = 0;\n    long v5 = 0;\n    long w5 = 0;\n    long x5 =\
    \ 0;\n    long y5 = 0;\n    long z5 = 0;\n    long u6 = 0;\n    long v6 = 0;\n\
    \    long w6 = 0;\n    long x6 = 0;\n    long y6 = 0;\n    long z6 = 0;\n    long\
    \ u7 = 0;\n    long v7 = 0;\n    long w7 = 0;\n    long x7 = 0;\n    long y7 =\
    \ 0;\n    long z7 = 0;\n    long u8 = 0;\n    long v8 = 0;\n    long w8 = 0;\n\
    \    long x8 = 0;\n    long y8 = 0;\n    long z8 = 0;\n    long u9 = 0;\n    long\
    \ v9 = 0;\n    long w9 = 0;\n    long x9 = 0;\n    long y9 = 0;\n    long z9 =\
    \ 0;\n    long u10 = 0;\n    long v10 = 0;\n    long w10 = 0;\n    long x10 =\
    \ 0;\n    long y10 = 0;\n    long z10 = 0;\n    long u11 = 0;\n    long v11 =\
    \ 0;\n    long w11 = 0;\n    long x11 = 0;\n    long y11 = 0;\n    long z11 =\
    \ 0;\n    long u12 = 0;\n    long v12 = 0;\n    long w12 = 0;\n    long x12 =\
    \ 0;\n    long y12 = 0;\n    long z12 = 0;\n    long u13 = 0;\n    long v13 =\
    \ 0;\n    long w13 = 0;\n    long x13 = 0;\n    long y13 = 0;\n    long z13 =\
    \ 0;\n    long u14 = 0;\n    long v14 = 0;\n    ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long\
    \ cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long\
    \ cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n\
    \    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17\
    \ = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long\
    \ cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n\
    \    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28\
    \ = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long\
    \ cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n\
    \    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39\
    \ = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long\
    \ cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n\
    \    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50\
    \ = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long\
    \ cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n\
    \    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61\
    \ = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long\
    \ cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n\
    \    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72\
    \ = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long\
    \ cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n\
    \    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83\
    \ = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = n;\n    long cnm = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n    long cnn = n;\n    long cnn = n;\n   \
    \ long cnn = n;\n    long cnn = n;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n    \
    \        if(grid[i][j] == 1) {\n                cnt += 1;\n                if(cnt\
    \ > ans) {\n                    ans = cnt;\n                }\n            }\n\
    \        }\n    }\n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  long long ans_cnt = 0;\n    long long cnt2 = 0;\n    long long cnt3 = 0;\n\
    \    long long cnt4 = 0;\n    long long cnt5 = 0;\n    long long cnt6 = 0;\n \
    \   long long cnt7 = 0;\n    long long cnt8 = 0;\n    long long cnt9 = 0;\n  \
    \  long long cnt10 = 0;\n    long long cnt11 = 0;\n    long long cnt12 = 0;\n\
    \    long long cnt13 = 0;\n    long long cnt14 = 0;\n    long long cnt15 = 0;\n\
    \    long long cnt16 = 0;\n    long long cnt17 = 0;\n    long long cnt18 = 0;\n\
    \    long long cnt19 = 0;\n    long long cnt20 = 0;\n    long long cnt21 = 0;\n\
    \    long long cnt22 = 0;\n    long long cnt23 = 0;\n    long long cnt24 = 0;\n\
    \    long long cnt25 = 0;\n    long long cnt26 = 0;\n    long long cnt27 = 0;\n\
    \    long long cnt28 = 0;\n    long long cnt29 = 0;\n    long long cnt30 = 0;\n\
    \    long long cnt31 = 0;\n    long long cnt32 = 0;\n    long long cnt33 = 0;\n\
    \    long long cnt34 = 0;\n    long long cnt35 = 0;\n    long long cnt36 = 0;\n\
    \    long long cnt37 = 0;\n    long long cnt38 = 0;\n    long long cnt39 = 0;\n\
    \    long long cnt40 = 0;\n    long long cnt41 = 0;\n    long long cnt42 = 0;\n\
    \    long long cnt43 = 0;\n    long long cnt44 = 0;\n    long long cnt45 = 0;\n\
    \    long long cnt46 = 0;\n    long long cnt47 = 0;\n    long long cnt48 = 0;\n\
    \    long long cnt49 = 0;\n    long long cnt50 = 0;\n    long long cnt51 = 0;\n\
    \    long long cnt52 = 0;\n    long long cnt53 = 0;\n    long long cnt54 = 0;\n\
    \    long long cnt55 = 0;\n    long long cnt56 = 0;\n    long long cnt57 = 0;\n\
    \    long long cnt58 = 0;\n    long long cnt59 = 0;\n    long long cnt60 = 0;\n\
    \    long long cnt61 = 0;\n    long long cnt62 = 0;\n    long long cnt63 = 0;\n\
    \    long long cnt64 = 0;\n    long long cnt65 = 0;\n    long long cnt66 = 0;\n\
    \    long long cnt67 = 0;\n    long long cnt68 = 0;\n    long long cnt69 = 0;",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long cur_cap\
    \ = capacity;\n    long cur_ans = 0;\n    for(long i = 0; i < n; i++) {\n    \
    \    for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n      \
    \          cnt++;\n                if(cur_cap > 0) {\n                    cur_cap--;\n\
    \                    cur++;\n                    cur_ans = cur;\n            \
    \    }\n            }\n        }\n    }\n    ans = cur_ans;\n    return ans;",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long ", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_ans = 0;\n    long cur_n = n;\n    long cur_m\
    \ = m;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_ans = cur_ans;\n   \
    \ long cur_cur_n = cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_cap =\
    \ cur_cur_cap;\n    long cur_cur_ans = cur_cur_ans;\n    long cur_cur_cur_n =\
    \ cur_cur_n;\n    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_cap =\
    \ cur_cur_cur_cap;\n    long cur_cur_cur_ans = cur_cur_cur_ans;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_ans = cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_", "    // Write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long an = n * m;\n\
    \    long long ans = 0;\n    long long an = 0;\n    long long an2 = 0;\n    long\
    \ long an3 = 0;\n    long long an4 = 0;\n    long long an5 = 0;\n    long long\
    \ an6 = 0;\n    long long an7 = 0;\n    long long an8 = 0;\n    long long an9\
    \ = 0;\n    long long an10 = 0;\n    long long an11 = 0;\n    long long an12 =\
    \ 0;\n    long long an13 = 0;\n    long long an14 = 0;\n    long long an15 = 0;\n\
    \    long long an16 = 0;\n    long long an17 = 0;\n    long long an18 = 0;\n \
    \   long long an19 = 0;\n    long long an20 = 0;\n    long long an21 = 0;\n  \
    \  long long an22 = 0;\n    long long an23 = 0;\n    long long an24 = 0;\n   \
    \ long long an25 = 0;\n    long long an26 = 0;\n    long long an27 = 0;\n    long\
    \ long an28 = 0;\n    long long an29 = 0;\n    long long an30 = 0;\n    long long\
    \ an31 = 0;\n    long long an32 = 0;\n    long long an33 = 0;\n    long long an34\
    \ = 0;\n    long long an35 = 0;\n    long long an36 = 0;\n    long long an37 =\
    \ 0;\n    long long an38 = 0;\n    long long an39 = 0;\n    long long an40 = 0;\n\
    \    long long an41 = 0;\n    long long an42 = 0;\n    long long an43 = 0;\n \
    \   long long an44 = 0;\n    long long an45 = 0;\n    long long an46 = 0;\n  \
    \  long long an47 = 0;\n    long long an48 = 0;\n    long long an49 = 0;\n   \
    \ long long an50 = 0;\n    long long an51 = 0;\n    long long an52 = 0;\n    long\
    \ long an53 = 0;\n    long long an54 = 0;\n    long long an55 = 0;\n    long long\
    \ an56 = 0;\n    long long an57 = 0;\n    long long an58 = 0;\n    long long an59\
    \ = 0;\n    long long an60 = 0;\n    long long an61 = 0;\n    long long an62 =\
    \ 0;\n    long long an63 = 0;\n    long long an64 = 0;\n    long long an65 = 0;\n\
    \    long long an66 = 0;\n    long long an67 = 0;\n    long long an68 = 0;\n \
    \   long long ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans = INT_MAX;\n    \n    for(int i = 0; i < n; i++)\
    \ {\n        for(int j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cnt += 1;\n                if(cnt > ans) {\n                \
    \    ans = cnt;\n                }\n            }\n        }\n    }\n    \n  \
    \  for(int i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++) {\n      \
    \      if(grid[i][j] == 0) {\n                cnt -= 1;\n                if(cnt\
    \ < 0) {\n                    ans = cnt;\n                }\n            }\n \
    \       }\n    }\n    \n    return ans;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cnt2 = 0;\n    long\
    \ cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long\
    \ cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n   \
    \ long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 =\
    \ 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long\
    \ cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n\
    \    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25\
    \ = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long\
    \ cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n\
    \    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36\
    \ = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long\
    \ cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n\
    \    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47\
    \ = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long\
    \ cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n\
    \    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58\
    \ = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long\
    \ cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n\
    \    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69\
    \ = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long\
    \ cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n\
    \    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80\
    \ = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83 = 0;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long cn2\
    \ = n;\n    long dn2 = m;\n    long cn3 = n;\n    long dn3 = m;\n    long cn4\
    \ = n;\n    long dn4 = m;\n    long cn5 = n;\n    long dn5 = m;\n    long cn6\
    \ = n;\n    long dn6 = m;\n    long cn7 = n;\n    long dn7 = m;\n    long cn8\
    \ = n;\n    long dn8 = m;\n    long cn9 = n;\n    long dn9 = m;\n    long cn10\
    \ = n;\n    long dn10 = m;\n    long cn11 = n;\n    long dn11 = m;\n    long cn12\
    \ = n;\n    long dn12 = m;\n    long cn13 = n;\n    long dn13 = m;\n    long cn14\
    \ = n;\n    long dn14 = m;\n    long cn15 = n;\n    long dn15 = m;\n    long cn16\
    \ = n;\n    long dn16 = m;\n    long cn17 = n;\n    long dn17 = m;\n    long cn18\
    \ = n;\n    long dn18 = m;\n    long cn19 = n;\n    long dn19 = m;\n    long cn20\
    \ = n;\n    long dn20 = m;\n    long cn21 = n;\n    long dn21 = m;\n    long cn22\
    \ = n;\n    long dn22 = m;\n    long cn23 = n;\n    long dn23 = m;\n    long cn24\
    \ = n;\n    long dn24 = m;\n    long cn25 = n;\n    long dn25 = m;\n    long cn26\
    \ = n;\n    long dn26 = m;\n    long cn27 = n;\n    long dn27 = m;\n    long cn28\
    \ = n;\n    long dn28 = m;\n    long cn29 = n;\n    long dn29 = m;\n    long cn30\
    \ = n;\n    long dn30 = m;\n    long cn31 = n;\n    long dn31 = m;\n    long cn32\
    \ = n;\n    long dn32 = m;\n    long cn33 = n;\n    long dn33 = m;\n    long cn34\
    \ = n;\n    long dn34 = m;\n    long cn35 = n;\n    long dn35 = m;\n    long cn36\
    \ = n;\n    long dn36 = m;\n", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = n;\n \
    \   long bn = m;\n    long cn = capacity;\n    long cn2 = cn;\n    long cn3 =\
    \ cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n    long cn7\
    \ = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n    long\
    \ cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14 = cn;\n\
    \    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long cn18\
    \ = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n    long\
    \ cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25 = cn;\n\
    \    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long cn29\
    \ = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n    long\
    \ cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36 = cn;\n\
    \    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long cn40\
    \ = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n    long\
    \ cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47 = cn;\n\
    \    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long cn51\
    \ = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n    long\
    \ cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58 = cn;\n\
    \    long cn59 = cn;\n    long cn60 = cn;\n    long cn61 = cn;", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long count = 0;\n    long\
    \ temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long temp4 = 0;\n \
    \   long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n    long temp8\
    \ = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11 = 0;\n    long\
    \ temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n    long temp15 = 0;\n\
    \    long temp16 = 0;\n    long temp17 = 0;\n    long temp18 = 0;\n    long temp19\
    \ = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n    long temp22 = 0;\n   \
    \ long temp23 = 0;\n    long temp24 = 0;\n    long temp25 = 0;\n    long temp26\
    \ = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n    long temp29 = 0;\n   \
    \ long temp30 = 0;\n    long temp31 = 0;\n    long temp32 = 0;\n    long temp33\
    \ = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n    long temp36 = 0;\n   \
    \ long temp37 = 0;\n    long temp38 = 0;\n    long temp39 = 0;\n    long temp40\
    \ = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n    long temp43 = 0;\n   \
    \ long temp44 = 0;\n    long temp45 = 0;\n    long temp46 = 0;\n    long temp47\
    \ = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n    long temp50 = 0;\n   \
    \ long temp51 = 0;\n    long temp52 = 0;\n    long temp53 = 0;\n    long temp54\
    \ = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n    long temp57 = 0;\n   \
    \ long temp58 = 0;\n    long temp59 = 0;\n    long temp60 = 0;\n    long temp61\
    \ = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n    long temp64 = 0;\n   \
    \ long temp65 = 0;\n    long temp66 = 0;\n    long temp67 = 0;\n    long temp68\
    \ = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n    long temp71 = 0;\n   \
    \ long temp72 = 0;\n    long temp73 = 0;\n    long temp74 = 0;\n    long temp75\
    \ = 0;\n    long temp76 = 0;\n    long temp77 = 0;\n    long temp78 = 0;\n   \
    \ long temp79 = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long cnt2 = 0;\n\
    \    long cur2 = 0;\n    long cnt3 = 0;\n    long cur3 = 0;\n    long cnt4 = 0;\n\
    \    long cur4 = 0;\n    long cnt5 = 0;\n    long cur5 = 0;\n    long cnt6 = 0;\n\
    \    long cur6 = 0;\n    long cnt7 = 0;\n    long cur7 = 0;\n    long cnt8 = 0;\n\
    \    long cur8 = 0;\n    long cnt9 = 0;\n    long cur9 = 0;\n    long cnt10 =\
    \ 0;\n    long cur10 = 0;\n    long cnt11 = 0;\n    long cur11 = 0;\n    long\
    \ cnt12 = 0;\n    long cur12 = 0;\n    long cnt13 = 0;\n    long cur13 = 0;\n\
    \    long cnt14 = 0;\n    long cur14 = 0;\n    long cnt15 = 0;\n    long cur15\
    \ = 0;\n    long cnt16 = 0;\n    long cur16 = 0;\n    long cnt17 = 0;\n    long\
    \ cur17 = 0;\n    long cnt18 = 0;\n    long cur18 = 0;\n    long cnt19 = 0;\n\
    \    long cur19 = 0;\n    long cnt20 = 0;\n    long cur20 = 0;\n    long cnt21\
    \ = 0;\n    long cur21 = 0;\n    long cnt22 = 0;\n    long cur22 = 0;\n    long\
    \ cnt23 = 0;\n    long cur23 = 0;\n    long cnt24 = 0;\n    long cur24 = 0;\n\
    \    long cnt25 = 0;\n    long cur25 = 0;\n    long cnt26 = 0;\n    long cur26\
    \ = 0;\n    long cnt27 = 0;\n    long cur27 = 0;\n    long cnt28 = 0;\n    long\
    \ cur28 = 0;\n    long cnt29 = 0;\n    long cur29 = 0;\n    long cnt30 = 0;\n\
    \    long cur30 = 0;\n    long cnt31 = 0;\n    long cur31 = 0;\n    long cnt32\
    \ = 0;\n    long cur32 = 0;\n    long cnt33 = 0;\n    long cur33 = 0;\n    long\
    \ cnt34 = 0;\n    long cur34 = 0;\n    long cnt35 = 0;\n    long cur35 = 0;\n\
    \    long cnt36 = 0;\n    long cur36 = 0;\n    long cnt37 = 0;\n    long cur37\
    \ = 0;\n    long cnt38 = 0;\n    long cur38 = 0;\n    long cnt39 = 0;\n    long\
    \ cur39 = 0;\n    long cnt40 = 0;\n    long cur40 = 0;\n    long cnt41 = 0;\n\
    \    long cur41 = 0;\n    long cnt42 = 0;\n    long cur42", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans = INT_MAX;\n    long long ans = INT_MAX;\n  \
    \  long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n    long long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    long long cnt = 0;\n    long long ans = INT_MAX;\n\
    \    long long cnt = 0;\n    long long ans = INT_MAX;\n", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long max = 0;\n    long min = 0;\n    long cur = 0;\n    long cur2 = 0;\n\
    \    long cur3 = 0;\n    long cur4 = 0;\n    long cur5 = 0;\n    long cur6 = 0;\n\
    \    long cur7 = 0;\n    long cur8 = 0;\n    long cur9 = 0;\n    long cur10 =\
    \ 0;\n    long cur11 = 0;\n    long cur12 = 0;\n    long cur13 = 0;\n    long\
    \ cur14 = 0;\n    long cur15 = 0;\n    long cur16 = 0;\n    long cur17 = 0;\n\
    \    long cur18 = 0;\n    long cur19 = 0;\n    long cur20 = 0;\n    long cur21\
    \ = 0;\n    long cur22 = 0;\n    long cur23 = 0;\n    long cur24 = 0;\n    long\
    \ cur25 = 0;\n    long cur26 = 0;\n    long cur27 = 0;\n    long cur28 = 0;\n\
    \    long cur29 = 0;\n    long cur30 = 0;\n    long cur31 = 0;\n    long cur32\
    \ = 0;\n    long cur33 = 0;\n    long cur34 = 0;\n    long cur35 = 0;\n    long\
    \ cur36 = 0;\n    long cur37 = 0;\n    long cur38 = 0;\n    long cur39 = 0;\n\
    \    long cur40 = 0;\n    long cur41 = 0;\n    long cur42 = 0;\n    long cur43\
    \ = 0;\n    long cur44 = 0;\n    long cur45 = 0;\n    long cur46 = 0;\n    long\
    \ cur47 = 0;\n    long cur48 = 0;\n    long cur49 = 0;\n    long cur50 = 0;\n\
    \    long cur51 = 0;\n    long cur52 = 0;\n    long cur53 = 0;\n    long cur54\
    \ = 0;\n    long cur55 = 0;\n    long cur56 = 0;\n    long cur57 = 0;\n    long\
    \ cur58 = 0;\n    long cur59 = 0;\n    long cur60 = 0;\n    long cur61 = 0;\n\
    \    long cur62 = 0;\n    long cur63 = 0;\n    long cur64 = 0;\n    long cur65\
    \ = 0;\n    long cur66 = 0;\n    long cur67 = 0;\n    long cur68 = 0;\n    long\
    \ cur69 = 0;\n    long cur70 = 0;\n    long cur71 = 0;\n    long cur72 = 0;\n\
    \    long cur73 = 0;\n    long cur74 = 0;\n    long cur75 = 0;\n    long cur76\
    \ = 0;\n    long cur77 = 0;\n    long cur78 = 0;\n    long cur79 = 0;\n    long\
    \ cur80 = 0;\n    long ", "    // write your code here\n    long ans = 0;\n  \
    \  long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n  \
    \  long cur = 0;\n    long cur_cap = capacity;\n    long cur_n = n;\n    long\
    \ cur_m = m;\n    long cur_ans = 0;\n    while(cur_n != 0 && cur_m != 0) {\n \
    \       if(grid[cur_n-1][cur_m-1] == 1) {\n            cnt += 1;\n           \
    \ cur_cap -= 1;\n            if(cur_cap == 0) {\n                ans += 1;\n \
    \               cur_cap = capacity;\n                cur_n = cur_n - 1;\n    \
    \            cur_m = cur_m - 1;\n            }\n        } else {\n           \
    \ cur_cap += 1;\n            if(cur_cap > capacity) {\n                ans +=\
    \ 1;\n                cur_cap = capacity;\n                cur_n = cur_n - 1;\n\
    \                cur_m = cur_m - 1;\n            }\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = n;\n    long cnt = 0;\n    long\
    \ cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long\
    \ cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long\
    \ cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n\
    \    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17\
    \ = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long\
    \ cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n\
    \    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28\
    \ = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long\
    \ cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n\
    \    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39\
    \ = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long\
    \ cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n\
    \    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50\
    \ = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long\
    \ cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n\
    \    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61\
    \ = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long\
    \ cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n\
    \    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72\
    \ = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long\
    \ cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n\
    \    long cnt80 = 0;\n    long cnt81 = 0;\n", "    long ans = 0;\n    long n =\
    \ grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long cnt2\
    \ = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6\
    \ = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10\
    \ = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76\
    \ = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long\
    \ cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long cnt83 = 0;",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cur = 0;\n    long min = 0;\n    long max = 0;\n  \
    \  long cnt2 = 0;\n    long cur2 = 0;\n    long min2 = 0;\n    long max2 = 0;\n\
    \    long cnt3 = 0;\n    long cur3 = 0;\n    long min3 = 0;\n    long max3 = 0;\n\
    \    long cnt4 = 0;\n    long cur4 = 0;\n    long min4 = 0;\n    long max4 = 0;\n\
    \    long cnt5 = 0;\n    long cur5 = 0;\n    long min5 = 0;\n    long max5 = 0;\n\
    \    long cnt6 = 0;\n    long cur6 = 0;\n    long min6 = 0;\n    long max6 = 0;\n\
    \    long cnt7 = 0;\n    long cur7 = 0;\n    long min7 = 0;\n    long max7 = 0;\n\
    \    long cnt8 = 0;\n    long cur8 = 0;\n    long min8 = 0;\n    long max8 = 0;\n\
    \    long cnt9 = 0;\n    long cur9 = 0;\n    long min9 = 0;\n    long max9 = 0;\n\
    \    long cnt10 = 0;\n    long cur10 = 0;\n    long min10 = 0;\n    long max10\
    \ = 0;\n    long cnt11 = 0;\n    long cur11 = 0;\n    long min11 = 0;\n    long\
    \ max11 = 0;\n    long cnt12 = 0;\n    long cur12 = 0;\n    long min12 = 0;\n\
    \    long max12 = 0;\n    long cnt13 = 0;\n    long cur13 = 0;\n    long min13\
    \ = 0;\n    long max13 = 0;\n    long cnt14 = 0;\n    long cur14 = 0;\n    long\
    \ min14 = 0;\n    long max14 = 0;\n    long cnt15 = 0;\n    long cur15 = 0;\n\
    \    long min15 = 0;\n    long max15 = 0;\n    long cnt16 = 0;\n    long cur16\
    \ = 0;\n    long min16 = 0;\n    long max16 = 0;\n    long cnt17 = 0;\n    long\
    \ cur17 = 0;\n    long min17 = 0;\n    long max17 = 0;\n    long cnt18 = 0;\n\
    \    long cur18 = 0;\n    long min18 = 0;\n    long max18 = 0;\n    long cnt19\
    \ = 0;\n    long cur19 = 0;\n    long min19 = 0;\n    long max19 = 0;\n    long\
    \ cnt20 = 0;\n    long cur20 = 0;\n    long min20 = 0;\n    long max20 = 0;\n\
    \    long cnt21 = 0;\n    long cur21 = 0;\n    long min21 = 0;\n    long max21\
    \ = 0;\n    long cnt22 = 0;\n    long ", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = 0;\n    long cnt = 0;\n    long temp\
    \ = 0;\n    long cnt2 = 0;\n    long temp2 = 0;\n    long cnt3 = 0;\n    long\
    \ temp3 = 0;\n    long cnt4 = 0;\n    long temp4 = 0;\n    long cnt5 = 0;\n  \
    \  long temp5 = 0;\n    long cnt6 = 0;\n    long temp6 = 0;\n    long cnt7 = 0;\n\
    \    long temp7 = 0;\n    long cnt8 = 0;\n    long temp8 = 0;\n    long cnt9 =\
    \ 0;\n    long temp9 = 0;\n    long cnt10 = 0;\n    long temp10 = 0;\n    long\
    \ cnt11 = 0;\n    long temp11 = 0;\n    long cnt12 = 0;\n    long temp12 = 0;\n\
    \    long cnt13 = 0;\n    long temp13 = 0;\n    long cnt14 = 0;\n    long temp14\
    \ = 0;\n    long cnt15 = 0;\n    long temp15 = 0;\n    long cnt16 = 0;\n    long\
    \ temp16 = 0;\n    long cnt17 = 0;\n    long temp17 = 0;\n    long cnt18 = 0;\n\
    \    long temp18 = 0;\n    long cnt19 = 0;\n    long temp19 = 0;\n    long cnt20\
    \ = 0;\n    long temp20 = 0;\n    long cnt21 = 0;\n    long temp21 = 0;\n    long\
    \ cnt22 = 0;\n    long temp22 = 0;\n    long cnt23 = 0;\n    long temp23 = 0;\n\
    \    long cnt24 = 0;\n    long temp24 = 0;\n    long cnt25 = 0;\n    long temp25\
    \ = 0;\n    long cnt26 = 0;\n    long temp26 = 0;\n    long cnt27 = 0;\n    long\
    \ temp27 = 0;\n    long cnt28 = 0;\n    long temp28 = 0;\n    long cnt29 = 0;\n\
    \    long temp29 = 0;\n    long cnt30 = 0;\n    long temp30 = 0;\n    long cnt31\
    \ = 0;\n    long temp31 = 0;\n    long cnt32 = 0;\n    long temp32 = 0;\n    long\
    \ cnt33 = 0;\n    long temp33 = 0;\n    long cnt34 = 0;\n    long temp34 = 0;\n\
    \    long cnt35 = 0;\n    long temp35 = 0;\n    long cnt36 = 0;\n    long temp36\
    \ = 0;\n    long cnt37 = 0;\n    long temp37 = 0;\n    long cnt38 = 0;\n    long\
    \ temp38 = 0;\n    long cnt39 = 0;\n    long temp39 = 0;\n    long cnt40 = 0;\n\
    \    long temp40 = 0;\n    long cnt41 = 0;\n    long temp41 = 0;\n    long cnt42\
    \ = 0;", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long\
    \ e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n\
    \    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long A = 0;\n\
    \    long B = 0;\n    long C = 0;\n    long D = 0;\n    long E = 0;\n    long\
    \ F = 0;\n    long G = 0;\n    long H = 0;\n    long I = 0;\n    long J = 0;\n\
    \    long K = 0;\n    long L = 0;\n    long M = 0;\n    long N = 0;\n    long\
    \ O = 0;\n    long P = 0;\n    long Q = 0;\n    long R = 0;\n    long S = 0;\n\
    \    long T = 0;\n    long U = 0;\n    long V = 0;\n    long W = 0;\n    long\
    \ X = 0;\n    long Y = 0;\n    long Z = 0;\n    long aa = 0;\n    long bb = 0;\n\
    \    long cc = 0;\n    long dd = 0;\n    long ee = 0;\n    long ff = 0;\n    long\
    \ gg = 0;\n    long hh = 0;\n    long ii = 0;\n    long jj = 0;\n    long kk =\
    \ 0;\n    long ll = 0;\n    long mm = 0;\n    long nn = 0;\n    long oo = 0;\n\
    \    long pp = 0;\n    long qq = 0;\n    long rr = 0;\n    long ss = 0;\n    long\
    \ tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long ww = 0;\n    long xx =\
    \ 0;\n    long yy = 0;\n    long zz = 0;\n    long Aa = 0;\n    long Bb = 0;\n\
    \    long Cc = 0;\n    long Dd = 0;\n    long Ee = 0;\n    long Ff = 0;\n    long\
    \ Gg = 0;\n    long Hh = 0;\n    long Ii = 0;\n    long Jj = 0;\n    long Kk =\
    \ 0;\n    long Ll = 0;\n    long Mm = 0;\n    long Nn = 0;\n    long Oo = 0;\n\
    \    long Pp = 0;\n    long Qq = 0;\n    long Rr = 0;", "    long ans = 0;\n \
    \   long n = grid.size();\n    long m = grid[0].size();\n    long an = n;\n  \
    \  long bn = m;\n    long cn = capacity;\n    long cn1 = cn;\n    long cn2 = cn;\n\
    \    long cn3 = cn;\n    long cn4 = cn;\n    long cn5 = cn;\n    long cn6 = cn;\n\
    \    long cn7 = cn;\n    long cn8 = cn;\n    long cn9 = cn;\n    long cn10 = cn;\n\
    \    long cn11 = cn;\n    long cn12 = cn;\n    long cn13 = cn;\n    long cn14\
    \ = cn;\n    long cn15 = cn;\n    long cn16 = cn;\n    long cn17 = cn;\n    long\
    \ cn18 = cn;\n    long cn19 = cn;\n    long cn20 = cn;\n    long cn21 = cn;\n\
    \    long cn22 = cn;\n    long cn23 = cn;\n    long cn24 = cn;\n    long cn25\
    \ = cn;\n    long cn26 = cn;\n    long cn27 = cn;\n    long cn28 = cn;\n    long\
    \ cn29 = cn;\n    long cn30 = cn;\n    long cn31 = cn;\n    long cn32 = cn;\n\
    \    long cn33 = cn;\n    long cn34 = cn;\n    long cn35 = cn;\n    long cn36\
    \ = cn;\n    long cn37 = cn;\n    long cn38 = cn;\n    long cn39 = cn;\n    long\
    \ cn40 = cn;\n    long cn41 = cn;\n    long cn42 = cn;\n    long cn43 = cn;\n\
    \    long cn44 = cn;\n    long cn45 = cn;\n    long cn46 = cn;\n    long cn47\
    \ = cn;\n    long cn48 = cn;\n    long cn49 = cn;\n    long cn50 = cn;\n    long\
    \ cn51 = cn;\n    long cn52 = cn;\n    long cn53 = cn;\n    long cn54 = cn;\n\
    \    long cn55 = cn;\n    long cn56 = cn;\n    long cn57 = cn;\n    long cn58\
    \ = cn;\n    long cn59 = cn;\n    long cn60 = cn;\n    long cn61 = ", "    //\
    \ Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n\
    \        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n  \
    \              cnt += 1;\n                if(cnt > ans) {\n                  \
    \  ans = cnt;\n                }\n            }\n        }\n    }\n    return\
    \ ans;", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnnm = n;\n    long cnnn\
    \ = n;\n    long cnnnm = n;\n    long cnnnn = n;\n    long cnnnnm = n;\n    long\
    \ cnnnnn = n;\n    long cnnnnnm = n;\n    long cnnnnnn = n;\n    long cnnnnnnm\
    \ = n;\n    long cnnnnnnn = n;\n    long cnnnnnnnm = n;\n    long cnnnnnnnn =\
    \ n;\n    long cnnnnnnnnm = n;\n    long cnnnnnnnnn = n;\n    long cnnnnnnnnnm\
    \ = n;\n    long cnnnnnnnnnn = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn\
    \ = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm\
    \ = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn\
    \ = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm\
    \ = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn\
    \ = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm\
    \ = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn\
    \ = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm\
    \ = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn\
    \ = n;\n    long cnnnnnnnnnnm = n;\n    long cnnnnnnnnnnn = n;\n    long cnnnnnnnnnnm\
    \ = n;\n    long ", "    // write your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n    long\
    \ ans = INT_MAX;\n    long long ans_temp = 0;\n    long long ans_temp_temp = 0;\n\
    \    long long ans_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long\
    \ ans_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp =\
    \ 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long long ans_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long long an = 0;\n    long long an2 = 0;\n  \
    \  long long an3 = 0;\n    long long an4 = 0;\n    long long an5 = 0;\n    long\
    \ long an6 = 0;\n    long long an7 = 0;\n    long long an8 = 0;\n    long long\
    \ an9 = 0;\n    long long an10 = 0;\n    long long an11 = 0;\n    long long an12\
    \ = 0;\n    long long an13 = 0;\n    long long an14 = 0;\n    long long an15 =\
    \ 0;\n    long long an16 = 0;\n    long long an17 = 0;\n    long long an18 = 0;\n\
    \    long long an19 = 0;\n    long long an20 = 0;\n    long long an21 = 0;\n \
    \   long long an22 = 0;\n    long long an23 = 0;\n    long long an24 = 0;\n  \
    \  long long an25 = 0;\n    long long an26 = 0;\n    long long an27 = 0;\n   \
    \ long long an28 = 0;\n    long long an29 = 0;\n    long long an30 = 0;\n    long\
    \ long an31 = 0;\n    long long an32 = 0;\n    long long an33 = 0;\n    long long\
    \ an34 = 0;\n    long long an35 = 0;\n    long long an36 = 0;\n    long long an37\
    \ = 0;\n    long long an38 = 0;\n    long long an39 = 0;\n    long long an40 =\
    \ 0;\n    long long an41 = 0;\n    long long an42 = 0;\n    long long an43 = 0;\n\
    \    long long an44 = 0;\n    long long an45 = 0;\n    long long an46 = 0;\n \
    \   long long an47 = 0;\n    long long an48 = 0;\n    long long an49 = 0;\n  \
    \  long long an50 = 0;\n    long long an51 = 0;\n    long long an52 = 0;\n   \
    \ long long an53 = 0;\n    long long an54 = 0;\n    long long an55 = 0;\n    long\
    \ long an56 = 0;\n    long long an57 = 0;\n    long long an58 = 0;\n    long long\
    \ an59 = 0;\n    long long an60 = 0;\n    long long an61 = 0;\n    long long an62\
    \ = 0;\n    long long an63 = 0;\n    long long an64 = 0;\n    long long an65 =\
    \ 0;\n    long long an66 = 0;\n    long long an67 = 0;\n    long long an68 = 0;\n\
    \    long long an69 = 0;\n    long long an70 = 0;\n    long ", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long count\
    \ = 0;\n    long index = 0;\n    long cur_cap = capacity;\n    long cur_bucket\
    \ = 0;\n    long cur_well = 0;\n    long cur_buckets = 1;\n    long cur_wells\
    \ = 1;\n    long cur_buckets_left = capacity;\n    long cur_wells_left = capacity;\n\
    \    long cur_bucket_left = 0;\n    long cur_well_left = 0;\n    long cur_bucket_right\
    \ = 0;\n    long cur_well_right = 0;\n    long cur_bucket_right2 = 0;\n    long\
    \ cur_well_right2 = 0;\n    long cur_bucket_right3 = 0;\n    long cur_well_right3\
    \ = 0;\n    long cur_bucket_right4 = 0;\n    long cur_well_right4 = 0;\n    long\
    \ cur_bucket_right5 = 0;\n    long cur_well_right5 = 0;\n    long cur_bucket_right6\
    \ = 0;\n    long cur_well_right6 = 0;\n    long cur_bucket_right7 = 0;\n    long\
    \ cur_well_right7 = 0;\n    long cur_bucket_right8 = 0;\n    long cur_well_right8\
    \ = 0;\n    long cur_bucket_right9 = 0;\n    long cur_well_right9 = 0;\n    long\
    \ cur_bucket_right10 = 0;\n    long cur_well_right10 = 0;\n    long cur_bucket_right11\
    \ = 0;\n    long cur_well_right11 = 0;\n    long cur_bucket_right12 = 0;\n   \
    \ long cur_well_right12 = 0;\n    long cur_bucket_right13 = 0;\n    long cur_well_right13\
    \ = 0;\n    long cur_bucket_right14 = 0;\n    long cur_well_right14 = 0;\n   \
    \ long cur_bucket_right15 = 0;\n    long cur_well_right15 = 0;\n    long cur_bucket_right16\
    \ = 0;\n    long cur_well_right16 = 0;\n    long cur_bucket_right17 = 0;\n   \
    \ long cur_well_right17 = 0;\n    long cur_bucket_right18 = 0;\n    long cur_well_right18\
    \ = 0;\n    long cur_bucket_right19 = 0;\n    long cur_well_right19 = 0;\n   \
    \ long cur_bucket_right20 = 0;\n    long cur_well_right20 = 0;\n    long cur_bucket_right21\
    \ = 0;\n    long cur_well_right21 = 0;\n    long cur_bucket_right22 = 0;\n   \
    \ long cur_well_right22 = 0;\n    long cur_bucket_right23 = 0;\n    long cur_well_right23\
    \ = 0;\n    long cur_bucket_right24 = 0;\n    long cur_well_right24 = 0;\n   \
    \ long cur_bucket_right25 = 0;\n    long cur_well_right25 = 0;\n    ", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long\
    \ cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long\
    \ cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n \
    \   long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16\
    \ = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long\
    \ cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n\
    \    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27\
    \ = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long\
    \ cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n\
    \    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38\
    \ = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long\
    \ cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n\
    \    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49\
    \ = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long\
    \ cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n\
    \    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60\
    \ = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long\
    \ cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n\
    \    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71\
    \ = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long\
    \ cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n\
    \    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82\
    \ = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long l = grid[0][0];\n    long r = grid[0][0];\n\
    \    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long\
    \ g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long A = 1;\n    long B = 1;\n    long C = 1;\n\
    \    long D = 1;\n    long E = 1;\n    long F = 1;\n    long G = 1;\n    long\
    \ H = 1;\n    long I = 1;\n    long J = 1;\n    long K = 1;\n    long L = 1;\n\
    \    long M = 1;\n    long N = 1;\n    long O = 1;\n    long P = 1;\n    long\
    \ Q = 1;\n    long R = 1;\n    long S = 1;\n    long T = 1;\n    long U = 1;\n\
    \    long V = 1;\n    long W = 1;\n    long X = 1;\n    long Y = 1;\n    long\
    \ Z = 1;\n    long aa = 1;\n    long ab = 1;\n    long ac = 1;\n    long ad =\
    \ 1;\n    long ae = 1;\n    long af = 1;\n    long ag = 1;\n    long ah = 1;\n\
    \    long ai = 1;\n    long aj = 1;\n    long ak = 1;\n    long al = 1;\n    long\
    \ am = 1;\n    long an = 1;\n    long ao = 1;\n    long ap = 1;\n    long aq =\
    \ 1;\n    long ar = 1;\n    long as = 1;\n    long at = 1;\n    long au = 1;\n\
    \    long av = 1;\n    long aw = 1;\n    long ax = 1;\n    long ay = 1;\n    long\
    \ az = 1;\n    long aaa = 1;\n    long aab = 1;\n    long aac = 1;\n    long aad\
    \ = 1;\n    long aae = 1;\n    long aaf = 1;\n    long aag = 1;\n    long aah\
    \ = 1;\n    long aai = 1;\n    long aaj = 1;\n    long aak = 1;\n    long aal\
    \ = 1;\n    long aam = 1;\n    long aan = 1;\n    long aao = 1;\n    long aap\
    \ = 1;\n    long aq", "    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn = n;\n\
    \    long dn = m;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n    long cnt = 1;\n    long dcnt = 1;\n    long cnt = 1;\n\
    \    long dcnt = 1;\n", "    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long min\
    \ = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt2 = 0;\n    long cnt3\
    \ = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7\
    \ = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n    long\
    \ cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n\
    \    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18\
    \ = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n    long\
    \ cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n\
    \    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29\
    \ = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n    long\
    \ cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n\
    \    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40\
    \ = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n    long\
    \ cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n\
    \    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51\
    \ = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n    long\
    \ cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n\
    \    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62\
    \ = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n    long\
    \ cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n\
    \    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73\
    \ = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n    long\
    \ cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt", "    //\
    \ write your code here\n    long ans = 0;\n    long n = grid.size();\n    long\
    \ m = grid[0].size();\n    long cnt = 0;\n    long cur = grid[0][0];\n    long\
    \ cur_cap = grid[0][0];\n    long cur_ans = 1;\n    for(long i = 1; i < n; i++)\
    \ {\n        for(long j = 1; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cur_cap = cur_cap - grid[i][j];\n                if(cur_cap <\
    \ 0) cur_cap = 0;\n                cur = cur + grid[i][j];\n                cur_cap\
    \ = cur_cap + grid[i][j];\n                if(cur_cap > capacity) cur_cap = capacity;\n\
    \                cnt++;\n                if(cur > capacity) cur = capacity;\n\
    \                cur_ans = max(cur_ans, cur_ans - cur_cap);\n            }\n \
    \       }\n    }\n    ans = max(ans, cnt);\n    return ans;", "    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt =\
    \ 0;\n    long min = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt2 =\
    \ 0;\n    long min2 = 0;\n    long max2 = 0;\n    long cur2 = 0;\n    long cnt3\
    \ = 0;\n    long min3 = 0;\n    long max3 = 0;\n    long cur3 = 0;\n    long cnt4\
    \ = 0;\n    long min4 = 0;\n    long max4 = 0;\n    long cur4 = 0;\n    long cnt5\
    \ = 0;\n    long min5 = 0;\n    long max5 = 0;\n    long cur5 = 0;\n    long cnt6\
    \ = 0;\n    long min6 = 0;\n    long max6 = 0;\n    long cur6 = 0;\n    long cnt7\
    \ = 0;\n    long min7 = 0;\n    long max7 = 0;\n    long cur7 = 0;\n    long cnt8\
    \ = 0;\n    long min8 = 0;\n    long max8 = 0;\n    long cur8 = 0;\n    long cnt9\
    \ = 0;\n    long min9 = 0;\n    long max9 = 0;\n    long cur9 = 0;\n    long cnt10\
    \ = 0;\n    long min10 = 0;\n    long max10 = 0;\n    long cur10 = 0;\n    long\
    \ cnt11 = 0;\n    long min11 = 0;\n    long max11 = 0;\n    long cur11 = 0;\n\
    \    long cnt12 = 0;\n    long min12 = 0;\n    long max12 = 0;\n    long cur12\
    \ = 0;\n    long cnt13 = 0;\n    long min13 = 0;\n    long max13 = 0;\n    long\
    \ cur13 = 0;\n    long cnt14 = 0;\n    long min14 = 0;\n    long max14 = 0;\n\
    \    long cur14 = 0;\n    long cnt15 = 0;\n    long min15 = 0;\n    long max15\
    \ = 0;\n    long cur15 = 0;\n    long cnt16 = 0;\n    long min16 = 0;\n    long\
    \ max16 = 0;\n    long cur16 = 0;\n    long cnt17 = 0;\n    long min17 = 0;\n\
    \    long max17 = 0;\n    long cur17 = 0;\n    long cnt18 = 0;\n    long min18\
    \ = 0;\n    long max18 = 0;\n    long cur18 = 0;\n    long cnt19 = 0;\n    long\
    \ min19 = 0;\n    long max19 = 0;\n    long cur19 = 0;\n    long cnt20 = 0;\n\
    \    long min20 = 0;\n    long max20 = 0;\n    long cur20 = 0;\n    long cnt21\
    \ = 0;\n    long min21 = 0;\n    long max21 = 0;\n    long cur21 = 0;\n    long\
    \ cnt22 = 0;\n    long ", "    // Your code here\n    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long\
    \ cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long\
    \ cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n\
    \    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17\
    \ = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long\
    \ cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n\
    \    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28\
    \ = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long\
    \ cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n\
    \    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39\
    \ = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long\
    \ cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n\
    \    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50\
    \ = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long\
    \ cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n\
    \    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61\
    \ = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long\
    \ cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n\
    \    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72\
    \ = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long\
    \ cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n\
    \    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long ans = INT_MAX;\n    long cnt = 0;\n    long cnt2 = 0;\n    long\
    \ cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n    long\
    \ cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 = 0;\n   \
    \ long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long cnt14 =\
    \ 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n    long\
    \ cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21 = 0;\n\
    \    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long cnt25\
    \ = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n    long\
    \ cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32 = 0;\n\
    \    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long cnt36\
    \ = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n    long\
    \ cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43 = 0;\n\
    \    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long cnt47\
    \ = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n    long\
    \ cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54 = 0;\n\
    \    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long cnt58\
    \ = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n    long\
    \ cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65 = 0;\n\
    \    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long cnt69\
    \ = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n    long\
    \ cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76 = 0;\n\
    \    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long cnt80\
    \ = 0;\n    long cnt81", "    // write your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n   \
    \ long ans = std::numeric_limits<long>::max();\n    for(long i = 0; i < n; i++)\
    \ {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n\
    \                cnt += 1;\n                if(cnt > ans) {\n                \
    \    ans = cnt;\n                }\n            }\n        }\n    }\n    return\
    \ ans;", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long ans = std::numeric_limits<long>::max();\n\
    \    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;", "    long ans = 0;\n    long\
    \ n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long\
    \ cur = 0;\n    long cur_cap = capacity;\n    long cur_n = n;\n    long cur_m\
    \ = m;\n    long cur_ans = 1;\n    long cur_cur = 0;\n    long cur_cur_cap = capacity;\n\
    \    long cur_cur_n = n;\n    long cur_cur_m = m;\n    long cur_cur_ans = 1;\n\
    \    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = capacity;\n    long cur_cur_cur_n\
    \ = n;\n    long cur_cur_cur_m = m;\n    long cur_cur_cur_ans = 1;\n    long cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cap = capacity;\n    long cur_cur_cur_cur_n =\
    \ n;\n    long cur_cur_cur_cur_m = m;\n    long cur_cur_cur_cur_ans = 1;\n   \
    \ long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap = capacity;\n\
    \    long cur_cur_cur_cur_cur_n = n;\n    long cur_cur_cur_cur_cur_m = m;\n  \
    \  long cur_cur_cur_cur_cur_ans = 1;\n    long cur_cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cap = capacity;\n    long cur_cur_cur_cur_cur_n\
    \ = n;\n    long cur_cur_cur_cur_cur_m = m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 1;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap\
    \ = capacity;\n    long cur_cur_cur_cur_cur_n = n;\n    long cur_cur_cur_cur_cur_m\
    \ = m;\n    long cur_cur_cur_cur_cur_ans = 1;\n    long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = capacity;\n    long cur_cur_cur_cur_cur_n\
    \ = n;\n    long cur_cur_cur_cur_cur_m = m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 1;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap\
    \ = capacity;\n    long cur_cur_cur_cur_cur_n = n;\n    long cur_cur_cur_cur_cur_m\
    \ = m;\n    long cur_cur_cur_cur_cur_ans = 1;\n    long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap = capacity;\n    long cur_cur_cur_cur_cur_n\
    \ = n;\n    long cur_cur_cur_cur_cur_m = m;\n    long cur_cur_cur_cur_cur_ans\
    \ = 1;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long ", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long min = 0;\n    long max = 0;\n    long cur = 0;\n    long cnt2 = 0;\n\
    \    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long cnt6 = 0;\n\
    \    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long cnt10 =\
    \ 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n    long\
    \ cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17 = 0;\n\
    \    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long cnt21\
    \ = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n    long\
    \ cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28 = 0;\n\
    \    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long cnt32\
    \ = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n    long\
    \ cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39 = 0;\n\
    \    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long cnt43\
    \ = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n    long\
    \ cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50 = 0;\n\
    \    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long cnt54\
    \ = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n    long\
    \ cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61 = 0;\n\
    \    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long cnt65\
    \ = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n    long\
    \ cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72 = 0;\n\
    \    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long cnt76\
    \ = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n    long\
    \ cnt80 = 0;\n    long ", "    // Write your code here\n    long ans = 0;\n  \
    \  long n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n\
    \    long sum = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3 =\
    \ 0;\n    long temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long\
    \ temp7 = 0;\n    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n\
    \    long temp11 = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14\
    \ = 0;\n    long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n   \
    \ long temp18 = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21\
    \ = 0;\n    long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n   \
    \ long temp25 = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28\
    \ = 0;\n    long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n   \
    \ long temp32 = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35\
    \ = 0;\n    long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n   \
    \ long temp39 = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42\
    \ = 0;\n    long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n   \
    \ long temp46 = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49\
    \ = 0;\n    long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n   \
    \ long temp53 = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56\
    \ = 0;\n    long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n   \
    \ long temp60 = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63\
    \ = 0;\n    long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n   \
    \ long temp67 = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70\
    \ = 0;\n    long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n   \
    \ long temp74 = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77\
    \ = 0;\n    long temp78 = 0;\n    long temp79 = 0;\n    long temp80 = 0;\n   \
    \ long temp", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n\
    \    long cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n\
    \    long cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12\
    \ = 0;\n    long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long\
    \ cnt16 = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n\
    \    long cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23\
    \ = 0;\n    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long\
    \ cnt27 = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n\
    \    long cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34\
    \ = 0;\n    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long\
    \ cnt38 = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n\
    \    long cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45\
    \ = 0;\n    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long\
    \ cnt49 = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n\
    \    long cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56\
    \ = 0;\n    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long\
    \ cnt60 = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n\
    \    long cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67\
    \ = 0;\n    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long\
    \ cnt71 = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n\
    \    long cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78\
    \ = 0;\n    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long\
    \ cnt82 = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long ans = INT_MAX;\n  \
    \  for(long i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n    \
    \        if(grid[i][j] == 1) {\n                cnt += 1;\n                if(cnt\
    \ > ans) {\n                    ans = cnt;\n                }\n            }\n\
    \        }\n    }\n    ans = ans / capacity;\n    return ans;", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long ans = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long cnt = 0;\n    long cur = 0;\n    long cnt\
    \ = 0;\n    long cur = 0;\n    long ", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long cur = 0;\n    long max = 0;\n    long cur_cap = 0;\n    long\
    \ cur_max = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_max\
    \ = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = 0;\n   \
    \ long cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cap", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ max = 0;\n    long min = 0;\n    long cur_cap = 0;\n    long max_cap = 0;\n\
    \    long min_cap = 0;\n    long cur_max = 0;\n    long cur_min = 0;\n    long\
    \ cur_cur = 0;\n    long cur_max2 = 0;\n    long cur_min2 = 0;\n    long cur_cur2\
    \ = 0;\n    long cur_max3 = 0;\n    long cur_min3 = 0;\n    long cur_cur3 = 0;\n\
    \    long cur_max4 = 0;\n    long cur_min4 = 0;\n    long cur_cur4 = 0;\n    long\
    \ cur_max5 = 0;\n    long cur_min5 = 0;\n    long cur_cur5 = 0;\n    long cur_max6\
    \ = 0;\n    long cur_min6 = 0;\n    long cur_cur6 = 0;\n    long cur_max7 = 0;\n\
    \    long cur_min7 = 0;\n    long cur_cur7 = 0;\n    long cur_max8 = 0;\n    long\
    \ cur_min8 = 0;\n    long cur_cur8 = 0;\n    long cur_max9 = 0;\n    long cur_min9\
    \ = 0;\n    long cur_cur9 = 0;\n    long cur_max10 = 0;\n    long cur_min10 =\
    \ 0;\n    long cur_cur10 = 0;\n    long cur_max11 = 0;\n    long cur_min11 = 0;\n\
    \    long cur_cur11 = 0;\n    long cur_max12 = 0;\n    long cur_min12 = 0;\n \
    \   long cur_cur12 = 0;\n    long cur_max13 = 0;\n    long cur_min13 = 0;\n  \
    \  long cur_cur13 = 0;\n    long cur_max14 = 0;\n    long cur_min14 = 0;\n   \
    \ long cur_cur14 = 0;\n    long cur_max15 = 0;\n    long cur_min15 = 0;\n    long\
    \ cur_cur15 = 0;\n    long cur_max16 = 0;\n    long cur_min16 = 0;\n    long cur_cur16\
    \ = 0;\n    long cur_max17 = 0;\n    long cur_min17 = 0;\n    long cur_cur17 =\
    \ 0;\n    long cur_max18 = 0;\n    long cur_min18 = 0;\n    long cur_cur18 = 0;\n\
    \    long cur_max19 = 0;\n    long cur_min19 = 0;\n    long cur_cur19 = 0;\n \
    \   long cur_max20 = 0;\n    long cur_min20 = 0;\n    long cur_cur20 = 0;\n  \
    \  long cur_max21 = 0;\n    long cur_min21 = 0;\n    long cur_cur21 = 0;\n   \
    \ long cur_max22 = 0;\n    long cur_min22 = 0;\n    long cur_cur22 = 0;\n    long\
    \ cur_max23 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long an = n * m;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n\
    \    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n\
    \    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13\
    \ = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long\
    \ cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n\
    \    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24\
    \ = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long\
    \ cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n\
    \    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35\
    \ = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long\
    \ cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n\
    \    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46\
    \ = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long\
    \ cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n\
    \    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57\
    \ = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long\
    \ cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n\
    \    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68\
    \ = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long\
    \ cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n\
    \    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79\
    \ = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n    long\
    \ cnt83 = 0;", "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    for(long i = 0; i < n; i++) {\n        for(long j =\
    \ 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt++;\n\
    \                cur = grid[i][j];\n                cur_cap = capacity;\n    \
    \        }\n            else if(grid[i][j] == 0) {\n                if(cur_cap\
    \ > 0) {\n                    cur_cap--;\n                    grid[i][j] = cur;\n\
    \                    ans = max(ans, cnt - 1);\n                }\n           \
    \     cnt = 0;\n                cur = 0;\n                cur_cap = capacity;\n\
    \            }\n        }\n    }\n    return ans;", "    // write your code here\n\
    \    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n * m;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n\
    \    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n \
    \   long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n  \
    \  long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n   \
    \ long an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long\
    \ an = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an\
    \ = 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an =\
    \ 0;\n    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n\
    \    long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n \
    \   long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n  \
    \  long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n   \
    \ long cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long\
    \ cnt = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt\
    \ = 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt =\
    \ 0;\n    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n\
    \    long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n \
    \   long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n  \
    \  long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n   \
    \ long ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long\
    \ ans = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans\
    \ = 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans =\
    \ 0;\n    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n\
    \    long cnt = 0;\n    long an = 0;\n    long cnt = 0;\n    long ans = 0;\n \
    \   long cnt = 0;\n    long an = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = grid[0][0];\n\
    \    long an = grid[0][0];\n    long bn = grid[0][0];\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n   \
    \ long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    long cnt = 1;\n    ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long max_cnt = 0;\n    long max_cnt_cnt = 0;\n    long max_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt = 0;\n    long max_cnt_cnt_cnt_cnt_cnt =\
    \ 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n  \
    \  long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n\
    \    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n \
    \   long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n  \
    \  long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n   \
    \ long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n    long\
    \ max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n \
    \   long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt = 0;\n\
    \    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt\
    \ = 0;\n    long max_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_cnt_", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long count = 0;\n    long cur = 0;\n    long max = 0;\n    long min = 0;\n\
    \    long cur_cap = 0;\n    long max_cap = 0;\n    long min_cap = 0;\n    long\
    \ cur_cap_max = 0;\n    long max_cap_max = 0;\n    long min_cap_max = 0;\n   \
    \ long cur_cap_min = 0;\n    long max_cap_min = 0;\n    long min_cap_min = 0;\n\
    \    long cur_cap_max_min = 0;\n    long max_cap_max_min = 0;\n    long min_cap_max_min\
    \ = 0;\n    long cur_cap_min_min = 0;\n    long max_cap_min_min = 0;\n    long\
    \ min_cap_min_min = 0;\n    long cur_cap_max_min_min = 0;\n    long max_cap_max_min_min\
    \ = 0;\n    long min_cap_max_min_min = 0;\n    long cur_cap_min_min_min = 0;\n\
    \    long max_cap_min_min_min = 0;\n    long min_cap_min_min_min = 0;\n    long\
    \ cur_cap_max_min_min_min = 0;\n    long max_cap_max_min_min_min = 0;\n    long\
    \ min_cap_max_min_min_min = 0;\n    long cur_cap_min_min_min_min = 0;\n    long\
    \ max_cap_min_min_min_min = 0;\n    long min_cap_min_min_min_min = 0;\n    long\
    \ cur_cap_max_min_min_min_min = 0;\n    long max_cap_max_min_min_min_min = 0;\n\
    \    long min_cap_max_min_min_min_min = 0;\n    long cur_cap_min_min_min_min_min\
    \ = 0;\n    long max_cap_min_min_min_min_min = 0;\n    long min_cap_min_min_min_min_min\
    \ = 0;\n    long cur_cap_max_min_min_min_min_min = 0;\n    long max_cap_max_min_min_min_min_min\
    \ = 0;\n    long min_cap_max_min_min_min_min_min = 0;\n    long cur_cap_min_min_min_min_min_min\
    \ = 0;\n    long max_cap_min_min_min_min_min_min = 0;\n    long min_cap_min_min_min_min_min_min\
    \ = 0;\n    long cur_cap_max_min_min_min_min_min_min = 0;\n    long max_cap_max_min_min_min_min_min_min\
    \ = 0;\n    long min_cap_max_min_min_min_min_min_min = 0;\n    long cur_cap_min_min_min_min_min_min_min\
    \ = 0;\n    long max_cap_min_min_min_min_min_min_min = 0;\n    long ", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ an = n;\n    long bn = m;\n    long cn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n    long cnn = n;\n    long cnm = n;\n    long cnn\
    \ = n;\n    long cnm = n;\n", "    // write your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long n;\n\
    \    long o;\n    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n\
    \    long u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n\
    \    long A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n\
    \    long G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n\
    \    long M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n\
    \    long S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n\
    \    long Y;\n    long Z;\n    long AA;\n    long BB;\n    long CC;\n    long\
    \ DD;\n    long EE;\n    long FF;\n    long GG;\n    long HH;\n    long II;\n\
    \    long JJ;\n    long KK;\n    long LL;\n    long MM;\n    long NN;\n    long\
    \ OO;\n    long PP;\n    long QQ;\n    long RR;\n    long SS;\n    long TT;\n\
    \    long UU;\n    long VV;\n    long WW;\n    long XX;\n    long YY;\n    long\
    \ ZZ;\n    long AAA;\n    long BBB;\n    long CCC;\n    long DDD;\n    long EEE;\n\
    \    long FFF;\n    long GGG;\n    long HHH;\n    long III;\n    long JJJ;\n \
    \   long KKK;\n    long LLL;\n    long MMM;\n    long NNN;\n    long OOO;\n  \
    \  long PPP;\n    long QQQ;\n    long RRR;\n    long SSS;\n    long TTT;\n   \
    \ long UUU;\n    long VVV;\n    long WWW;\n    long XXX;\n    long YYY;\n    ",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long cur = 0;\n    long cur_cap = 0;\n    long cur_n = 0;\n\
    \    long cur_m = grid[0][0];\n    long cur_nm = 1;\n    long cur_nm2 = 1;\n \
    \   long cur_nm3 = 1;\n    long cur_nm4 = 1;\n    long cur_nm5 = 1;\n    long\
    \ cur_nm6 = 1;\n    long cur_nm7 = 1;\n    long cur_nm8 = 1;\n    long cur_nm9\
    \ = 1;\n    long cur_nm10 = 1;\n    long cur_nm11 = 1;\n    long cur_nm12 = 1;\n\
    \    long cur_nm13 = 1;\n    long cur_nm14 = 1;\n    long cur_nm15 = 1;\n    long\
    \ cur_nm16 = 1;\n    long cur_nm17 = 1;\n    long cur_nm18 = 1;\n    long cur_nm19\
    \ = 1;\n    long cur_nm20 = 1;\n    long cur_nm21 = 1;\n    long cur_nm22 = 1;\n\
    \    long cur_nm23 = 1;\n    long cur_nm24 = 1;\n    long cur_nm25 = 1;\n    long\
    \ cur_nm26 = 1;\n    long cur_nm27 = 1;\n    long cur_nm28 = 1;\n    long cur_nm29\
    \ = 1;\n    long cur_nm30 = 1;\n    long cur_nm31 = 1;\n    long cur_nm32 = 1;\n\
    \    long cur_nm33 = 1;\n    long cur_nm34 = 1;\n    long cur_nm35 = 1;\n    long\
    \ cur_nm36 = 1;\n    long cur_nm37 = 1;\n    long cur_nm38 = 1;\n    long cur_nm39\
    \ = 1;\n    long cur_nm40 = 1;\n    long cur_nm41 = 1;\n    long cur_nm42 = 1;\n\
    \    long cur_nm43 = 1;\n    long cur_nm44 = 1;\n    long cur_nm45 = 1;\n    long\
    \ cur_nm46 = 1;\n    long cur_nm47 = 1;\n    long cur_nm48 = 1;\n    long cur_nm49\
    \ = 1;\n    long cur_nm50 = 1;\n    long cur_nm51 = 1;\n    long cur_nm52 = 1;\n\
    \    long cur_nm53 = 1;\n    long cur_nm54 = 1;\n    long cur_nm55 = 1;\n    long\
    \ cur_nm56 = 1;\n    long cur_nm57 = 1;\n    long cur_nm58 = 1;\n    long cur_nm59\
    \ = 1;\n    long cur_nm60 = 1;\n    long cur_nm61 = 1;\n    long cur_nm62 = 1;\n\
    \    long cur_nm63 = 1;\n    long cur_nm64 = 1;\n    long cur_nm65 = 1;\n    long\
    \ cur_", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = grid[0][0];\n\
    \    long cur_cap = grid[0][0];\n    long cur_len = grid[0][0];\n    long cur_fill\
    \ = grid[0][0];\n    long cur_fill_cap = grid[0][0];\n    long cur_fill_len =\
    \ grid[0][0];\n    long cur_fill_cur = grid[0][0];\n    long cur_fill_cur_cap\
    \ = grid[0][0];\n    long cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cap = grid[0][0];\n    long cur_fill_cur_fill_len\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur = grid[0][0];\n    long cur_fill_cur_fill_cur_cap\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cap = grid[0][0];\n    long\
    \ cur_fill_cur_fill_cur_fill_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cap = grid[0][0];\n    long\
    \ cur_fill_cur_fill_cur_fill_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid[0][0];\n \
    \   long cur_fill_cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid[0][0];\n \
    \   long cur_fill_cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid[0][0];\n \
    \   long cur_fill_cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid[0][0];\n \
    \   long cur_fill_cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid[0][0];\n \
    \   long cur_fill_cur_fill_cur_fill_cur_len = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_fill\
    \ = grid[0][0];\n    long cur_fill_cur_fill_cur_fill_cur_cap = grid", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long cnt\
    \ = 1;\n    long dnt = 1;\n    long cntt = 1;\n    long dntt = 1;\n    long cntnt\
    \ = 1;\n    long dnnt = 1;\n    long cntntt = 1;\n    long dnntt = 1;\n    long\
    \ cntntnt = 1;\n    long dnntnt = 1;\n    long cntntntt = 1;\n    long dnntntt\
    \ = 1;\n    long cntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt =\
    \ 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt = 1;\n    long cntntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntntt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long ", "    // write your code here\n  \
    \  long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long curr = 0;\n    long curr2 = 0;\n    long curr3 = 0;\n\
    \    long curr4 = 0;\n    long curr5 = 0;\n    long curr6 = 0;\n    long curr7\
    \ = 0;\n    long curr8 = 0;\n    long curr9 = 0;\n    long curr10 = 0;\n    long\
    \ curr11 = 0;\n    long curr12 = 0;\n    long curr13 = 0;\n    long curr14 = 0;\n\
    \    long curr15 = 0;\n    long curr16 = 0;\n    long curr17 = 0;\n    long curr18\
    \ = 0;\n    long curr19 = 0;\n    long curr20 = 0;\n    long curr21 = 0;\n   \
    \ long curr22 = 0;\n    long curr23 = 0;\n    long curr24 = 0;\n    long curr25\
    \ = 0;\n    long curr26 = 0;\n    long curr27 = 0;\n    long curr28 = 0;\n   \
    \ long curr29 = 0;\n    long curr30 = 0;\n    long curr31 = 0;\n    long curr32\
    \ = 0;\n    long curr33 = 0;\n    long curr34 = 0;\n    long curr35 = 0;\n   \
    \ long curr36 = 0;\n    long curr37 = 0;\n    long curr38 = 0;\n    long curr39\
    \ = 0;\n    long curr40 = 0;\n    long curr41 = 0;\n    long curr42 = 0;\n   \
    \ long curr43 = 0;\n    long curr44 = 0;\n    long curr45 = 0;\n    long curr46\
    \ = 0;\n    long curr47 = 0;\n    long curr48 = 0;\n    long curr49 = 0;\n   \
    \ long curr50 = 0;\n    long curr51 = 0;\n    long curr52 = 0;\n    long curr53\
    \ = 0;\n    long curr54 = 0;\n    long curr55 = 0;\n    long curr56 = 0;\n   \
    \ long curr57 = 0;\n    long curr58 = 0;\n    long curr59 = 0;\n    long curr60\
    \ = 0;\n    long curr61 = 0;\n    long curr62 = 0;\n    long curr63 = 0;\n   \
    \ long curr64 = 0;\n    long curr65 = 0;\n    long curr66 = 0;\n    long curr67\
    \ = 0;\n    long curr68 = 0;\n    long curr69 = 0;\n    long curr70 = 0;\n   \
    \ long curr71 = 0;\n    long curr72 = 0;\n    long curr73 = 0;\n    long curr74\
    \ = 0;\n    long curr75 = 0;\n    long curr76 = 0;\n    long curr77 = 0;\n   \
    \ long curr78 = 0;\n    long curr79 = 0;\n    long curr80 = 0;\n    long curr81\
    \ = 0;\n    ", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long max = 0;\n    long min = 0;\n    long cur = 0;\n\
    \    long cur_cap = 0;\n    long cur_max = 0;\n    long cur_min = 0;\n    long\
    \ cur_cur = 0;\n    long cur_cur_cap = 0;\n    long cur_cur_max = 0;\n    long\
    \ cur_cur_min = 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = 0;\n\
    \    long cur_cur_cur_max = 0;\n    long cur_cur_cur_min = 0;\n    long cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_max = 0;\n\
    \    long cur_cur_cur_cur_min = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_cur_max = 0;\n    long\
    \ cur_cur_cur_cur_min = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cap\
    \ = 0;\n    long cur_cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_cur_min =\
    \ 0;\n    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = 0;\n    long\
    \ cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_min = 0;\n    long cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_cur_max = 0;\n    long\
    \ cur_cur_min = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = 0;\n    long\
    \ cur_cur_max = 0;\n    long cur_min = 0;\n    long cur = 0;\n    long cur_cap\
    \ = 0;\n    long cur_max = 0;\n    long min = 0;\n    long max = 0;\n    long\
    \ cnt = 0;\n    long cur_max = 0;\n    long cur_min = 0;\n    long cur_cur = 0;\n\
    \    long cur_cur_cap = 0;\n    long cur_cur_max = 0;\n    long cur_cur_min =\
    \ 0;\n    long cur_cur_cur = 0;\n    long cur_cur_cur_cap = 0;\n    long cur_cur_cur_max\
    \ = 0;\n    long cur_cur_cur_min = 0;\n    long cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_min\
    \ = 0;\n    long cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = 0;\n   \
    \ long cur_cur_cur_cur_max = 0;\n    long cur_cur_cur_min = 0;\n    long cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cap = 0;\n    long cur_cur_cur_cur_max = 0;",
  "    // Your code here\n    long ans = 0;\n    long n = grid.size();\n    long m\
    \ = grid[0].size();\n    long long an = 0;\n    long long an2 = 0;\n    long long\
    \ an3 = 0;\n    long long an4 = 0;\n    long long an5 = 0;\n    long long an6\
    \ = 0;\n    long long an7 = 0;\n    long long an8 = 0;\n    long long an9 = 0;\n\
    \    long long an10 = 0;\n    long long an11 = 0;\n    long long an12 = 0;\n \
    \   long long an13 = 0;\n    long long an14 = 0;\n    long long an15 = 0;\n  \
    \  long long an16 = 0;\n    long long an17 = 0;\n    long long an18 = 0;\n   \
    \ long long an19 = 0;\n    long long an20 = 0;\n    long long an21 = 0;\n    long\
    \ long an22 = 0;\n    long long an23 = 0;\n    long long an24 = 0;\n    long long\
    \ an25 = 0;\n    long long an26 = 0;\n    long long an27 = 0;\n    long long an28\
    \ = 0;\n    long long an29 = 0;\n    long long an30 = 0;\n    long long an31 =\
    \ 0;\n    long long an32 = 0;\n    long long an33 = 0;\n    long long an34 = 0;\n\
    \    long long an35 = 0;\n    long long an36 = 0;\n    long long an37 = 0;\n \
    \   long long an38 = 0;\n    long long an39 = 0;\n    long long an40 = 0;\n  \
    \  long long an41 = 0;\n    long long an42 = 0;\n    long long an43 = 0;\n   \
    \ long long an44 = 0;\n    long long an45 = 0;\n    long long an46 = 0;\n    long\
    \ long an47 = 0;\n    long long an48 = 0;\n    long long an49 = 0;\n    long long\
    \ an50 = 0;\n    long long an51 = 0;\n    long long an52 = 0;\n    long long an53\
    \ = 0;\n    long long an54 = 0;\n    long long an55 = 0;\n    long long an56 =\
    \ 0;\n    long long an57 = 0;\n    long long an58 = 0;\n    long long an59 = 0;\n\
    \    long long an60 = 0;\n    long long an61 = 0;\n    long long an62 = 0;\n \
    \   long long an63 = 0;\n    long long an64 = 0;\n    long long an65 = 0;\n  \
    \  long long an66 = 0;\n    long long an67 = 0;\n    long long an68 = 0;\n   \
    \ long long an69 = 0;\n    long long an70 = 0;\n    long ", "    // write your\
    \ code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnn = n;\n    long dm = m;\n    long cnn = n;\n    long dcn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn = n;\n    long dcnn\
    \ = n;\n    long dcnn = n;\n    long dcn", "    // Your code here\n    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5\
    \ = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9\
    \ = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long\
    \ cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n\
    \    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20\
    \ = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long\
    \ cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n\
    \    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31\
    \ = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long\
    \ cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n\
    \    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42\
    \ = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long\
    \ cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n\
    \    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53\
    \ = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long\
    \ cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n\
    \    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64\
    \ = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long\
    \ cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n\
    \    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75\
    \ = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long\
    \ cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82 = 0;\n",
  "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long an = 0;\n    long b = 0;\n    long c = 0;\n\
    \    long d = 0;\n    long e = 0;\n    long f = 0;\n    long g = 0;\n    long\
    \ h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n\
    \    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long\
    \ q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n\
    \    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long\
    \ z = 0;\n    long A = 0;\n    long B = 0;\n    long C = 0;\n    long D = 0;\n\
    \    long E = 0;\n    long F = 0;\n    long G = 0;\n    long H = 0;\n    long\
    \ I = 0;\n    long J = 0;\n    long K = 0;\n    long L = 0;\n    long M = 0;\n\
    \    long N = 0;\n    long O = 0;\n    long P = 0;\n    long Q = 0;\n    long\
    \ R = 0;\n    long S = 0;\n    long T = 0;\n    long U = 0;\n    long V = 0;\n\
    \    long W = 0;\n    long X = 0;\n    long Y = 0;\n    long Z = 0;\n    long\
    \ AA = 0;\n    long AB = 0;\n    long AC = 0;\n    long AD = 0;\n    long AE =\
    \ 0;\n    long AF = 0;\n    long AG = 0;\n    long AH = 0;\n    long AI = 0;\n\
    \    long AJ = 0;\n    long AK = 0;\n    long AL = 0;\n    long AM = 0;\n    long\
    \ AN = 0;\n    long AO = 0;\n    long AP = 0;\n    long AQ = 0;\n    long AR =\
    \ 0;\n    long AS = 0;\n    long AT = 0;\n    long AU = 0;\n    long AV = 0;\n\
    \    long AW = 0;\n    long AX = 0;\n    long AY = 0;\n    long AZ = 0;\n    long\
    \ BA = 0;\n    long BB = 0;\n    long BC = 0;\n    long BD = 0;\n    long BE =\
    \ 0;\n    long BF = 0;\n    long BG = 0;\n    long BH = 0;\n    long BI = 0;\n\
    \    long BJ = 0;\n    long BK = 0;\n    long BL = 0;\n    long BM = 0;\n    long\
    \ BN = 0;\n    long BO = 0;\n    long BP = 0;\n    long BQ = 0;\n    long BR =\
    \ 0;\n    long BS = 0;\n", "    long ans = 0;\n    long n = grid.size();\n   \
    \ long m = grid[0].size();\n    long cnt = 0;\n    std::vector<long> b(n);\n \
    \   std::vector<long> w(m);\n    std::vector<long> bs(capacity);\n    std::vector<long>\
    \ ws(capacity);\n    long i, j, k;\n    long cur = 0;\n    long cur_cap = 0;\n\
    \    long cur_w = 0;\n    long cur_ws = 0;\n    long cur_n = 0;\n    long cur_ns\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nws = 0;\n    long cur_nw = 0;\n  \
    \  long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw\
    \ = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_nw = 0;\n   \
    \ long cur_nw = 0;\n    long cur_nw = 0;\n    long cur_", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long count = 0;\n\
    \    long cur_cap = capacity;\n    long cur_bucket = 0;\n    long cur_well = 0;\n\
    \    long cur_bucket_size = 0;\n    long cur_bucket_capacity = 0;\n    long cur_bucket_size_cap\
    \ = 0;\n    long cur_bucket_capacity_cap = 0;\n    long cur_bucket_size_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap = 0;\n    long cur_bucket_size_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap = 0;\n  \
    \  long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap = 0;\n    long\
    \ cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_size_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap_cur_cap\
    \ = 0;\n    long cur_bucket_capacity_cur_cap_cur_cap_cur_cap_", "    long ans\
    \ = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt\
    \ = 0;\n    std::vector<long> b(n);\n    std::vector<long> w(m);\n    std::vector<long>\
    \ b1(m);\n    std::vector<long> w1(m);\n    std::vector<long> b2(m);\n    std::vector<long>\
    \ w2(m);\n    std::vector<long> b3(m);\n    std::vector<long> w3(m);\n    std::vector<long>\
    \ b4(m, capacity);\n    std::vector<long> w4(m, capacity);\n    std::vector<long>\
    \ b5(m, capacity);\n    std::vector<long> w5(m, capacity);\n    std::vector<long>\
    \ b6(m, capacity);\n    std::vector<long> w6(m, capacity);\n    std::vector<long>\
    \ b7(m, capacity);\n    std::vector<long> w7(m, capacity);\n    std::vector<long>\
    \ b8(m, capacity);\n    std::vector<long> w8(m, capacity);\n    std::vector<long>\
    \ b9(m, capacity);\n    std::vector<long> w9(m, capacity);\n    std::vector<long>\
    \ b10(m, capacity);\n    std::vector<long> w10(m, capacity);\n    std::vector<long>\
    \ b11(m, capacity);\n    std::vector<long> w11(m, capacity);\n    std::vector<long>\
    \ b12(m, capacity);\n    std::vector<long> w12(m, capacity);\n    std::vector<long>\
    \ b13(m, capacity);\n    std::vector<long> w13(m, capacity);\n    std::vector<long>\
    \ b14(m, capacity);\n    std::vector<long> w14(m, capacity);\n    std::vector<long>\
    \ b15(m, capacity);\n    std::vector<long> w15(m, capacity);\n    std::vector<long>\
    \ b16(m, capacity);\n    std::vector<long> w16(m, capacity);\n    std::vector<long>\
    \ b17(m, capacity);\n    std::vector<long> w17(m, capacity);\n    std::vector<long>\
    \ b18(m, capacity);\n    std::vector<long> w18(m, capacity);\n    std::vector<long>\
    \ b19(m, capacity);\n    std::vector<long> w19(m, capacity);\n    std::vector<long>\
    \ b20(m, capacity);\n    std::vector<long> w20(m, capacity);\n    std::vector<long>\
    \ b21(m, capacity);\n    std::vector<long> w21(m, capacity);\n    std::vector<long>\
    \ b22(m, capacity);\n    std::vector<long> w22(m, capacity);\n    std::vector<long>\
    \ b23(m, capacity);\n    std::vector<long> ", "    long ans = 0;\n    long n =\
    \ grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    long curr_cap\
    \ = capacity;\n    long curr_cap_used = 0;\n    long curr_used = 0;\n    long\
    \ curr_used_cnt = 0;\n    long curr_used_cnt2 = 0;\n    long curr_used_cnt3 =\
    \ 0;\n    long curr_used_cnt4 = 0;\n    long curr_used_cnt5 = 0;\n    long curr_used_cnt6\
    \ = 0;\n    long curr_used_cnt7 = 0;\n    long curr_used_cnt8 = 0;\n    long curr_used_cnt9\
    \ = 0;\n    long curr_used_cnt10 = 0;\n    long curr_used_cnt11 = 0;\n    long\
    \ curr_used_cnt12 = 0;\n    long curr_used_cnt13 = 0;\n    long curr_used_cnt14\
    \ = 0;\n    long curr_used_cnt15 = 0;\n    long curr_used_cnt16 = 0;\n    long\
    \ curr_used_cnt17 = 0;\n    long curr_used_cnt18 = 0;\n    long curr_used_cnt19\
    \ = 0;\n    long curr_used_cnt20 = 0;\n    long curr_used_cnt21 = 0;\n    long\
    \ curr_used_cnt22 = 0;\n    long curr_used_cnt23 = 0;\n    long curr_used_cnt24\
    \ = 0;\n    long curr_used_cnt25 = 0;\n    long curr_used_cnt26 = 0;\n    long\
    \ curr_used_cnt27 = 0;\n    long curr_used_cnt28 = 0;\n    long curr_used_cnt29\
    \ = 0;\n    long curr_used_cnt30 = 0;\n    long curr_used_cnt31 = 0;\n    long\
    \ curr_used_cnt32 = 0;\n    long curr_used_cnt33 = 0;\n    long curr_used_cnt34\
    \ = 0;\n    long curr_used_cnt35 = 0;\n    long curr_used_cnt36 = 0;\n    long\
    \ curr_used_cnt37 = 0;\n    long curr_used_cnt38 = 0;\n    long curr_used_cnt39\
    \ = 0;\n    long curr_used_cnt40 = 0;\n    long curr_used_cnt41 = 0;\n    long\
    \ curr_used_cnt42 = 0;\n    long curr_used_cnt43 = 0;\n    long curr_used_cnt44\
    \ = 0;\n    long curr_used_cnt45 = 0;\n    long curr_used_cnt46 = 0;\n    long\
    \ curr_used_cnt47 = 0;\n    long curr_used_cnt48 = 0;\n    long curr_used_cnt49\
    \ = 0;\n    long curr_used_cnt50 = 0;\n    long curr_used_cnt51 = 0;\n    long\
    \ curr_used_cnt52 = 0;\n    long curr_used_cnt53 = 0;\n    long curr_used_cnt54\
    \ = 0;\n    long curr_used_cnt55 = 0;\n    long curr_used_cnt56 = 0;\n    long\
    \ curr_used_cnt57 = 0;\n    long curr_used_cnt58 = 0;\n    long curr_used_cnt59",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    std::vector<long> b(n);\n    std::vector<long> w(m);\n \
    \   std::vector<long> b1(m);\n    std::vector<long> w1(m);\n    std::vector<long>\
    \ b2(m);\n    std::vector<long> w2(m);\n    std::vector<long> b3(m);\n    std::vector<long>\
    \ w3(m);\n    std::vector<long> b4(m, 0);\n    std::vector<long> w4(m, 0);\n \
    \   std::vector<long> b5(m, 0);\n    std::vector<long> w5(m, 0);\n    std::vector<long>\
    \ b6(m, 0);\n    std::vector<long> w6(m, 0);\n    std::vector<long> b7(m, 0);\n\
    \    std::vector<long> w7(m, 0);\n    std::vector<long> b8(m, 0);\n    std::vector<long>\
    \ w8(m, 0);\n    std::vector<long> b9(m, 0);\n    std::vector<long> w9(m, 0);\n\
    \    std::vector<long> b10(m, 0);\n    std::vector<long> w10(m, 0);\n    std::vector<long>\
    \ b11(m, 0);\n    std::vector<long> w11(m, 0);\n    std::vector<long> b12(m, 0);\n\
    \    std::vector<long> w12(m, 0);\n    std::vector<long> b13(m, 0);\n    std::vector<long>\
    \ w13(m, 0);\n    std::vector<long> b14(m, 0);\n    std::vector<long> w14(m, 0);\n\
    \    std::vector<long> b15(m, 0);\n    std::vector<long> w15(m, 0);\n    std::vector<long>\
    \ b16(m, 0);\n    std::vector<long> w16(m, 0);\n    std::vector<long> b17(m, 0);\n\
    \    std::vector<long> w17(m, 0);\n    std::vector<long> b18(m, 0);\n    std::vector<long>\
    \ w18(m, 0);\n    std::vector<long> b19(m, 0);\n    std::vector<long> w19(m, 0);\n\
    \    std::vector<long> b20(m, 0);\n    std::vector<long> w20(m, 0);\n    std::vector<long>\
    \ b21(m, 0);\n    std::vector<long> w21(m, 0);\n    std::vector<long> b22(m, 0);\n\
    \    std::vector<long> w22(m, 0);\n    std::vector<long> b23(m, 0);\n    std::vector<long>\
    \ w23(m, 0);\n    std::vector<long> b24(m, 0);\n    std::vector<long> w24(m, 0);\n\
    \    std::vector<long> b25(m, 0);\n    std::vector<long", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long ans1 = 0;\n    long ans2 = 0;\n    long ans3 = 0;\n    long ans4 = 0;\n\
    \    long ans5 = 0;\n    long ans6 = 0;\n    long ans7 = 0;\n    long ans8 = 0;\n\
    \    long ans9 = 0;\n    long ans10 = 0;\n    long ans11 = 0;\n    long ans12\
    \ = 0;\n    long ans13 = 0;\n    long ans14 = 0;\n    long ans15 = 0;\n    long\
    \ ans16 = 0;\n    long ans17 = 0;\n    long ans18 = 0;\n    long ans19 = 0;\n\
    \    long ans20 = 0;\n    long ansp = 0;\n    long ansp1 = 0;\n    long ansp2\
    \ = 0;\n    long ansp3 = 0;\n    long ansp4 = 0;\n    long ansp5 = 0;\n    long\
    \ ansp6 = 0;\n    long ansp7 = 0;\n    long ansp8 = 0;\n    long ansp9 = 0;\n\
    \    long ansp10 = 0;\n    long ansp11 = 0;\n    long ansp12 = 0;\n    long ansp13\
    \ = 0;\n    long ansp14 = 0;\n    long ansp15 = 0;\n    long ansp16 = 0;\n   \
    \ long ansp17 = 0;\n    long ansp18 = 0;\n    long ansp19 = 0;\n    long ansp20\
    \ = 0;\n    long ansp21 = 0;\n    long ansp22 = 0;\n    long ansp23 = 0;\n   \
    \ long ansp24 = 0;\n    long ansp25 = 0;\n    long ansp26 = 0;\n    long ansp27\
    \ = 0;\n    long ansp28 = 0;\n    long ansp29 = 0;\n    long ansp30 = 0;\n   \
    \ long ansp31 = 0;\n    long ansp32 = 0;\n    long ansp33 = 0;\n    long ansp34\
    \ = 0;\n    long ansp35 = 0;\n    long ansp36 = 0;\n    long ansp37 = 0;\n   \
    \ long ansp38 = 0;\n    long ansp39 = 0;\n    long ansp40 = 0;\n    long ansp41\
    \ = 0;\n    long ansp42 = 0;\n    long ansp43 = 0;\n    long ansp44 = 0;\n   \
    \ long ansp45 = 0;\n    long ansp46 = 0;\n    long ansp47 = 0;\n    long ansp48\
    \ = 0;\n    long ansp49 = 0;\n    long ansp50 = 0;\n    long ansp51 = 0;\n   \
    \ long ansp52 = 0;\n    long ansp", "    // Your code here\n    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt\
    \ += 1;\n                if(cnt > ans) {\n                    ans = cnt;\n   \
    \             }\n            }\n        }\n    }\n    return ans;", "    // write\
    \ your code here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = grid[0][0];\n    long ans = 1;\n    for(int\
    \ i = 1; i < n; i++) {\n        for(int j = 1; j < m; j++) {\n            if(grid[i][j]\
    \ == cur) {\n                cnt += 1;\n                cur = grid[i][j];\n  \
    \          } else {\n                ans = std::max(ans, cnt);\n             \
    \   cnt = 0;\n                cur = grid[i][j];\n            }\n        }\n  \
    \  }\n    ans = std::max(ans, cnt);\n    return ans;", "    // write your code\
    \ here\n    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long cnt = 0;\n    long\
    \ cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long cnt5 = 0;\n    long\
    \ cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long cnt9 = 0;\n    long\
    \ cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n    long cnt13 = 0;\n\
    \    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16 = 0;\n    long cnt17\
    \ = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long cnt20 = 0;\n    long\
    \ cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n    long cnt24 = 0;\n\
    \    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27 = 0;\n    long cnt28\
    \ = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long cnt31 = 0;\n    long\
    \ cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n    long cnt35 = 0;\n\
    \    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38 = 0;\n    long cnt39\
    \ = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long cnt42 = 0;\n    long\
    \ cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n    long cnt46 = 0;\n\
    \    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49 = 0;\n    long cnt50\
    \ = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long cnt53 = 0;\n    long\
    \ cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n    long cnt57 = 0;\n\
    \    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60 = 0;\n    long cnt61\
    \ = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long cnt64 = 0;\n    long\
    \ cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n    long cnt68 = 0;\n\
    \    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71 = 0;\n    long cnt72\
    \ = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long cnt75 = 0;\n    long\
    \ cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n    long cnt79 = 0;\n\
    \    long cnt", "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n\
    \    long cnt = 0;\n    long cur = 0;\n    long cur_cap = capacity;\n    long\
    \ cur_n = 0;\n    long cur_m = 1;\n    long cur_w = 0;\n    long cur_h = 1;\n\
    \    long cur_d = 1;\n    long cur_nn = 1;\n    long cur_mm = 1;\n    long cur_ww\
    \ = 1;\n    long cur_hh = 1;\n    long cur_dd = 1;\n    long cur_nnn = 1;\n  \
    \  long cur_mmm = 1;\n    long cur_www = 1;\n    long cur_hhh = 1;\n    long cur_ddd\
    \ = 1;\n    long cur_nnnn = 1;\n    long cur_mmmm = 1;\n    long cur_wwww = 1;\n\
    \    long cur_hhhh = 1;\n    long cur_ddddd = 1;\n    long cur_nnnnn = 1;\n  \
    \  long cur_mmmmm = 1;\n    long cur_wwwww = 1;\n    long cur_hhhhh = 1;\n   \
    \ long cur_dddddd = 0;\n    long cur_nnnnnn = 1;\n    long cur_mmmmmm = 1;\n \
    \   long cur_wwwwww = 1;\n    long cur_hhhhhh = 1;\n    long cur_dddddddd = 0;\n\
    \    long cur_nnnnnnn = 0;\n    long cur_mmmmmmm = 1;\n    long cur_wwwwwww =\
    \ 1;\n    long cur_hhhhhhh = 0;\n    long cur_ddddddddd = 1;\n    long cur_nnnnnnnn\
    \ = 0;\n    long cur_mmmmmmmm = 1;\n    long cur_wwwwwwww = 1;\n    long cur_hhhhhhhh\
    \ = 0;\n    long cur_dddddddddd = 0;\n    long cur_nnnnnnnnn = 0;\n    long cur_mmmmmmmmm\
    \ = 1;\n    long cur_wwwwwwwww = 1;\n    long cur_hhhhhhhhh = 0;\n    long cur_ddddddddddd\
    \ = 0;\n    long cur_nnnnnnnnnn = 0;\n    long cur_mmmmmmmmmm = 1;\n    long cur_wwwwwwwwww\
    \ = 1;\n    long cur_hhhhhhhhhh = 0;\n    long cur_dddddddddddd = 0;\n    long\
    \ cur_nnnnnnnnnnn = 0;\n    long cur_mmmmmmmmmmm = 1;\n    long cur_wwwwwwwwwww\
    \ = 1;\n    long cur_hhhhhhhhhhh = 0;\n    long cur_ddddddddddddd = 1;\n    long\
    \ cur_nnnnnnnnnnnn = 0;\n    long cur_mmmmmmmmmmm = 1;\n    long cur_", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long cnt2 = 0;\n    long cnt3 = 0;\n    long cnt4 = 0;\n    long\
    \ cnt5 = 0;\n    long cnt6 = 0;\n    long cnt7 = 0;\n    long cnt8 = 0;\n    long\
    \ cnt9 = 0;\n    long cnt10 = 0;\n    long cnt11 = 0;\n    long cnt12 = 0;\n \
    \   long cnt13 = 0;\n    long cnt14 = 0;\n    long cnt15 = 0;\n    long cnt16\
    \ = 0;\n    long cnt17 = 0;\n    long cnt18 = 0;\n    long cnt19 = 0;\n    long\
    \ cnt20 = 0;\n    long cnt21 = 0;\n    long cnt22 = 0;\n    long cnt23 = 0;\n\
    \    long cnt24 = 0;\n    long cnt25 = 0;\n    long cnt26 = 0;\n    long cnt27\
    \ = 0;\n    long cnt28 = 0;\n    long cnt29 = 0;\n    long cnt30 = 0;\n    long\
    \ cnt31 = 0;\n    long cnt32 = 0;\n    long cnt33 = 0;\n    long cnt34 = 0;\n\
    \    long cnt35 = 0;\n    long cnt36 = 0;\n    long cnt37 = 0;\n    long cnt38\
    \ = 0;\n    long cnt39 = 0;\n    long cnt40 = 0;\n    long cnt41 = 0;\n    long\
    \ cnt42 = 0;\n    long cnt43 = 0;\n    long cnt44 = 0;\n    long cnt45 = 0;\n\
    \    long cnt46 = 0;\n    long cnt47 = 0;\n    long cnt48 = 0;\n    long cnt49\
    \ = 0;\n    long cnt50 = 0;\n    long cnt51 = 0;\n    long cnt52 = 0;\n    long\
    \ cnt53 = 0;\n    long cnt54 = 0;\n    long cnt55 = 0;\n    long cnt56 = 0;\n\
    \    long cnt57 = 0;\n    long cnt58 = 0;\n    long cnt59 = 0;\n    long cnt60\
    \ = 0;\n    long cnt61 = 0;\n    long cnt62 = 0;\n    long cnt63 = 0;\n    long\
    \ cnt64 = 0;\n    long cnt65 = 0;\n    long cnt66 = 0;\n    long cnt67 = 0;\n\
    \    long cnt68 = 0;\n    long cnt69 = 0;\n    long cnt70 = 0;\n    long cnt71\
    \ = 0;\n    long cnt72 = 0;\n    long cnt73 = 0;\n    long cnt74 = 0;\n    long\
    \ cnt75 = 0;\n    long cnt76 = 0;\n    long cnt77 = 0;\n    long cnt78 = 0;\n\
    \    long cnt79 = 0;\n    long cnt80 = 0;\n    long cnt81 = 0;\n    long cnt82\
    \ = 0;\n    long cnt83 = 0;", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = 0;\n    long cnt = 0;\n    long cur\
    \ = 0;\n    long cur_cap = 0;\n    long cur_an = 0;\n    long cur_an_cap = 0;\n\
    \    long cur_an_cap_an = 0;\n    long cur_an_cap_an_an = 0;\n    long cur_an_cap_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an = 0;\n    long\
    \ cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an = 0;\n \
    \   long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an =\
    \ 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an =\
    \ 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an =\
    \ 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an_an\
    \ = 0;\n    long cur_an_cap_an_an_an_an_an_an_an_an_an_", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long an = n;\n \
    \   long bn = m;\n    long cn = n;\n    long dn = m;\n    long cnn = n;\n    long\
    \ dnm = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long\
    \ dnn = m;\n", "    // write your code here\n    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long dn = m;\n    long cnt = 1;\n    long dnt = 1;\n    long cntt\
    \ = 1;\n    long dntt = 1;\n    long cntnt = 1;\n    long dnnt = 1;\n    long\
    \ cntntt = 1;\n    long dnntt = 1;\n    long cntnttt = 1;\n    long dnnttt = 1;\n\
    \    long cntntttt = 1;\n    long dnntttt = 1;\n    long cntnttttt = 1;\n    long\
    \ dnnttttt = 1;\n    long cntntttttt = 1;\n    long dnntttttt = 1;\n    long cntnttttttt\
    \ = 1;\n    long dnnttttttt = 1;\n    long cntntttttttt = 1;\n    long dnntttttttt\
    \ = 1;\n    long cntnttttttttt = 1;\n    long dnnttttttttt = 1;\n    long cntntttttttttt\
    \ = 1;\n    long dnntttttttttt = 1;\n    long cntnttttttttttt = 1;\n    long dnnttttttttttt\
    \ = 1;\n    long cntntttttttttttt = 1;\n    long dnnttttttttttttt = 1;\n    long\
    \ cntntttttttttttttt = 1;\n    long dnntttttttttttttt = 1;\n    long cntnttttttttttttttt\
    \ = 1;\n    long dnntttttttttttttttt = 1;\n    long cntnttttttttttttttttt = 1;\n\
    \    long dnnttttttttttttttttt = 1;\n    long cntntttttttttttttttttt = 1;\n  \
    \  long dnntttttttttttttttttt = 1;\n    long cntnttttttttttttttttttt = 1;\n  \
    \  long dnntttttttttttttttttttt = 1;\n    long cntntttttttttttttttttttttt = 1;\n\
    \    long dnntttttttttttttttttttttt = 1;\n    long cntntttttttttttttttt", "  \
    \  long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long cnt = 0;\n    long ans = INT_MAX;\n    long long ans2 = 0;\n    long long\
    \ cnt2 = 0;\n    long long cnt3 = 0;\n    long long cnt4 = 0;\n    long long cnt5\
    \ = 0;\n    long long cnt6 = 0;\n    long long cnt7 = 0;\n    long long cnt8 =\
    \ 0;\n    long long cnt9 = 0;\n    long long cnt10 = 0;\n    long long cnt11 =\
    \ 0;\n    long long cnt12 = 0;\n    long long cnt13 = 0;\n    long long cnt14\
    \ = 0;\n    long long cnt15 = 0;\n    long long cnt16 = 0;\n    long long cnt17\
    \ = 0;\n    long long cnt18 = 0;\n    long long cnt19 = 0;\n    long long cnt20\
    \ = 0;\n    long long cnt21 = 0;\n    long long cnt22 = 0;\n    long long cnt23\
    \ = 0;\n    long long cnt24 = 0;\n    long long cnt25 = 0;\n    long long cnt26\
    \ = 0;\n    long long cnt27 = 0;\n    long long cnt28 = 0;\n    long long cnt29\
    \ = 0;\n    long long cnt30 = 0;\n    long long cnt31 = 0;\n    long long cnt32\
    \ = 0;\n    long long cnt33 = 0;\n    long long cnt34 = 0;\n    long long cnt35\
    \ = 0;\n    long long cnt36 = 0;\n    long long cnt37 = 0;\n    long long cnt38\
    \ = 0;\n    long long cnt39 = 0;\n    long long cnt40 = 0;\n    long long cnt41\
    \ = 0;\n    long long cnt42 = 0;\n    long long cnt43 = 0;\n    long long cnt44\
    \ = 0;\n    long long cnt45 = 0;\n    long long cnt46 = 0;\n    long long cnt47\
    \ = 0;\n    long long cnt48 = 0;\n    long long cnt49 = 0;\n    long long cnt50\
    \ = 0;\n    long long cnt51 = 0;\n    long long cnt52 = 0;\n    long long cnt53\
    \ = 0;\n    long long cnt54 = 0;\n    long long cnt55 = 0;\n    long long cnt56\
    \ = 0;\n    long long cnt57 = 0;\n    long long cnt58 = 0;\n    long long cnt59\
    \ = 0;\n    long long cnt60 = 0;\n    long long cnt61 = 0;\n    long long cnt62\
    \ = 0;\n    long long cnt63 = 0;\n    long long cnt64 = 0;\n    long long cnt65\
    \ = 0;\n    long long cnt66 = 0;\n    long long cnt67 = 0;\n    long long cnt68\
    \ = 0;\n    long long cnt69 = 0;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur = 0;\n    long\
    \ cur_cap = capacity;\n    long cur_n = n;\n    long cur_m = m;\n    long cur_ans\
    \ = 0;\n    long cur_cur = 0;\n    long cur_cur_cap = cur_cap;\n    long cur_cur_n\
    \ = cur_n;\n    long cur_cur_m = cur_m;\n    long cur_cur_ans = 0;\n    long cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cap = cur_cur_cap;\n    long cur_cur_cur_n = cur_cur_n;\n\
    \    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_ans = 0;\n    long\
    \ cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_n = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur = 0;\n    long\
    \ cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur = 0;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cap;\n    long\
    \ cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans = 0;\n  \
    \  long cur_cur_cur_cur_cur_cur_cur = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n   \
    \ long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur\
    \ = 0;\n    long cur_cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_cur_cur_ans = 0;\n    long cur_cur_cur_cur_cur_",
  "    long ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n  \
    \  long an = n;\n    long bn = m;\n    long cn = n;\n    long dn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n    long cnn = n;\n    long dnn = m;\n    long\
    \ cnn = n;\n    long dnn = m;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long an = n;\n    long bn = m;\n    long cn\
    \ = n;\n    long dn = m;\n    long cnt = 1;\n    long dnt = 1;\n    long cntt\
    \ = 1;\n    long dntt = 1;\n    long cntnt = 1;\n    long dnnt = 1;\n    long\
    \ cntntt = 1;\n    long dnntt = 1;\n    long cntntnt = 1;\n    long dnntnt = 1;\n\
    \    long cntntntt = 1;\n    long dnntntt = 1;\n    long cntntntnt = 1;\n    long\
    \ dnntntnt = 1;\n    long cntntntntt = 1;\n    long dnntntntt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt = 1;\n    long dnntntntntt\
    \ = 1;\n    long cntntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntntt\
    \ = 1;\n    long dnntntntt = 1;\n    long cntntntntnt = 1;\n    long dnntntnt\
    \ = 1;\n    long cntntntntt = 1;\n    long dnntntnt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt\
    \ = 1;\n    long dnntntntnt = 1;\n    long cntntntntnt = 1;\n    long dnntntntnt\
    \ = 1;\n    long cntntntntnt = 1;\n", "    long ans = 0;\n    long n = grid.size();\n\
    \    long m = grid[0].size();\n    long cnt = 0;\n    long cur_cap = capacity;\n\
    \    long cur_n = n;\n    long cur_m = m;\n    long cur_ans = 0;\n    long cur_cur_cap\
    \ = cur_cap;\n    long cur_cur_n = cur_n;\n    long cur_cur_m = cur_m;\n    long\
    \ cur_cur_ans = cur_ans;\n    long cur_cur_cur_cap = cur_cur_cap;\n    long cur_cur_cur_n\
    \ = cur_cur_n;\n    long cur_cur_cur_m = cur_cur_m;\n    long cur_cur_cur_ans\
    \ = cur_cur_ans;\n    long cur_cur_cur_cur_cap = cur_cur_cur_cap;\n    long cur_cur_cur_cur_n\
    \ = cur_cur_cur_n;\n    long cur_cur_cur_cur_m = cur_cur_cur_m;\n    long cur_cur_cur_cur_ans\
    \ = cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_n = cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m\
    \ = cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_ans;\n\
    \    long cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_n\
    \ = cur_cur_cur_cur_cur_n;\n    long cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n\
    \    long cur_cur_cur_cur_cur_ans = cur_cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = cur_cur_cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_cur_cap = cur_cur_cur_cur_cur_cur_cur_cap;\n\
    \    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n    long\
    \ cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_cur_cur_m;\n    long cur_cur_cur_cur_cur_cur_ans\
    \ = cur_cur_cur_cur_cur_cur_cur_ans;\n    long cur_cur_cur_cur_cur_cur_cur_cap\
    \ = cur_cur_cur_cur_cur_cur_cur_cap;\n    long cur_cur_cur_cur_cur_cur_n = cur_cur_cur_cur_cur_cur_cur_n;\n\
    \    long cur_cur_cur_cur_cur_cur_m = cur_cur_cur_cur_cur_", "    long ans = 0;\n\
    \    long n = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n\
    \    long ans = INT_MAX;\n    for(long i = 0; i < n; i++) {\n        for(long\
    \ j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n                cnt\
    \ += 1;\n                if(cnt > ans) {\n                    ans = cnt;\n   \
    \             }\n            }\n        }\n    }\n    return ans;", "    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    \n    for(int i = 0; i < n; i++) {\n\
    \        for(int j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n   \
    \             cnt += 1;\n                if(cnt > ans) {\n                   \
    \ ans = cnt;\n                }\n            }\n        }\n    }\n    \n    for(int\
    \ i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt -= 1;\n                if(cnt < 0) {\n        \
    \            ans = cnt;\n                }\n            }\n        }\n    }\n\
    \    \n    return ans;", "    // Your code here\n    long ans = 0;\n    long n\
    \ = grid.size();\n    long m = grid[0].size();\n    long cnt = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt2 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt3 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 0) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt4 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 0) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt5 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt6 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt7 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 0) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt8 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 0) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt9 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt10 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt11 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 0) {\n                cnt += 1;\n            }\n        }\n    }\n    long\
    \ cnt12 = cnt;\n    for(long i = 0; i < n; i++) {\n        for(long j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 0) {\n                cnt -= 1;\n  \
    \          }\n        }\n    }\n    long cnt13 = cnt;\n    for(long i = 0; i <\
    \ n; i++) {\n        for(long j = 0; j < m; j++) {\n            if(grid[i][j]\
    \ == 1) {\n                cnt += 1;\n", "    // write your code here\n    long\
    \ ans = 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long\
    \ cnt = 0;\n    long ans = INT_MAX;\n    for(int i = 0; i < n; i++) {\n      \
    \  for(int j = 0; j < m; j++) {\n            if(grid[i][j] == 1) {\n         \
    \       cnt += 1;\n            }\n        }\n    }\n    long ans = INT_MAX;\n\
    \    for(int i = 0; i < n; i++) {\n        for(int j = 0; j < m; j++) {\n    \
    \        if(grid[i][j] == 1) {\n                if(cnt > ans) {\n            \
    \        ans = cnt;\n                }\n            }\n        }\n    }\n    long\
    \ ans = INT_MAX;\n    for(int i = 0; i < n; i++) {\n        for(int j = 0; j <\
    \ m; j++) {\n            if(grid[i][j] == 1) {\n                if(cnt < ans)\
    \ {\n                    ans = cnt;\n                }\n            }\n      \
    \  }\n    }\n    return ans;", "    // Your code here\n    long ans = 0;\n   \
    \ long n = grid.size();\n    long m = grid[0].size();\n    long an = 0;\n    long\
    \ i;\n    long j;\n    long k;\n    long l;\n    long m;\n    long n;\n    long\
    \ o;\n    long p;\n    long q;\n    long r;\n    long s;\n    long t;\n    long\
    \ u;\n    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long\
    \ A;\n    long B;\n    long C;\n    long D;\n    long E;\n    long F;\n    long\
    \ G;\n    long H;\n    long I;\n    long J;\n    long K;\n    long L;\n    long\
    \ M;\n    long N;\n    long O;\n    long P;\n    long Q;\n    long R;\n    long\
    \ S;\n    long T;\n    long U;\n    long V;\n    long W;\n    long X;\n    long\
    \ Y;\n    long Z;\n    long AA;\n    long AB;\n    long AC;\n    long AD;\n  \
    \  long AE;\n    long AF;\n    long AG;\n    long AH;\n    long AI;\n    long\
    \ AJ;\n    long AK;\n    long AL;\n    long AM;\n    long AN;\n    long ao;\n\
    \    long bo;\n    long co;\n    long do;\n    long eo;\n    long fo;\n    long\
    \ go;\n    long ho;\n    long io;\n    long jo;\n    long ko;\n    long lo;\n\
    \    long mo;\n    long no;\n    long oo;\n    long po;\n    long qo;\n    long\
    \ ro;\n    long so;\n    long to;\n    long uo;\n    long vo;\n    long wo;\n\
    \    long xo;\n    long yo;\n    long zo;\n    long AO;\n    long BO;\n    long\
    \ CO;\n    long DO;\n    long EO;\n    long FO;\n    long GO;\n    long HO;\n\
    \    long IO;\n    long JO;\n    long KO;\n    long LO;\n    long MO;\n    long\
    \ NO;\n    long OO;\n    long ", "    // write your code here\n    long ans =\
    \ 0;\n    long n = grid.size();\n    long m = grid[0].size();\n    long cnt =\
    \ 0;\n    long curr = 0;\n    long max = 0;\n    long min = 0;\n    long curr\
    \ = 1;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    long max = 1;\n    long min = 0;\n    long cnt = 0;\n    long curr\
    \ = 0;\n    "]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= (n / 2); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_ao8eq0.cpp: In function 'int main()':\n/tmp/tmpp_ao8eq0.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp_ao8eq0.cpp:2:\n/tmp/tmpp_ao8eq0.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \  for (long i = 3; i * i <= n; i += 2) {\n    if (n % i == 0 || n % (i + 2) ==\
    \ 0) return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate =\
    \ is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuo2g4g0m.cpp: In function 'int main()':\n/tmp/tmpuo2g4g0m.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuo2g4g0m.cpp:2:\n/tmp/tmpuo2g4g0m.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 3;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3jaget87.cpp: In function 'int main()':\n/tmp/tmp3jaget87.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3jaget87.cpp:2:\n/tmp/tmp3jaget87.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    if (n % 5 == 0) return false;\n    if (n\
    \ % 7 == 0) return false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <=\
    \ sqr; i += 6) {\n        if (n % i == 0) return false;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqny66cf7.cpp: In function 'int main()':\n/tmp/tmpqny66cf7.cpp:32:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqny66cf7.cpp:2:\n/tmp/tmpqny66cf7.cpp:33:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= n / 3) {\n\
    \        if (n % i == 0 || n % (i + 2) == 0) return false;\n        i += 6;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfaxdalrl.cpp: In function 'int main()':\n/tmp/tmpfaxdalrl.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfaxdalrl.cpp:2:\n/tmp/tmpfaxdalrl.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  if (n % 5 == 0)\n    return\
    \ false;\n  int i = 5;\n  while (i <= sqrt(n))\n    if (n % i == 0)\n      return\
    \ false;\n    i += 6;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0d312v0.cpp: In function 'int main()':\n/tmp/tmph0d312v0.cpp:37:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0d312v0.cpp:2:\n/tmp/tmph0d312v0.cpp:38:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpohdpgs6g.cpp: In function 'int main()':\n/tmp/tmpohdpgs6g.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpohdpgs6g.cpp:2:\n/tmp/tmpohdpgs6g.cpp:29:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n)) {\n   \
    \     if (n % i == 0)\n            return false;\n        i += 2;\n    }\n   \
    \ return true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy55e2ii6.cpp: In function 'int main()':\n/tmp/tmpy55e2ii6.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy55e2ii6.cpp:2:\n/tmp/tmpy55e2ii6.cpp:35:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjlrhm8f.cpp: In function 'int main()':\n/tmp/tmpwjlrhm8f.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwjlrhm8f.cpp:2:\n/tmp/tmpwjlrhm8f.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792779
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= (n / 2); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpp_ao8eq0.cpp: In function 'int main()':\n/tmp/tmpp_ao8eq0.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpp_ao8eq0.cpp:2:\n/tmp/tmpp_ao8eq0.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 3;\n    while (i <= sqrt(n)) {\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return false;\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  int i = 3;\n  while (i <= sqrt(n)) {\n    if (n % i == 0)\n      return\
    \ false;\n    i += 2;\n  }\n  return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  int i = 3;\n  while (i <= sqrt(n))\n\
    \    if (n % i == 0)\n      return false;\n    i += 2;\n  return true;\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792779
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \  for (long i = 5; i * i <= n; i += 6) {\n    if (n % i == 0 || n % (i + 2) ==\
    \ 0) return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate =\
    \ is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  int i = 3;\n  while (i <= sqrt(n))\
    \ {\n    if (n % i == 0)\n      return false;\n    i += 2;\n  }\n  return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Base case\n\
    \    if (n < 2) return false;\n    // If n is even, return false\n    if (n %\
    \ 2 == 0) return false;\n    // If n is odd, return true if it is prime (odd numbers\
    \ are not\n    // primes)\n    long m = sqrt(n);\n    for (long i = 3; i <= m;\
    \ i += 2) {\n        if (n % i == 0) return false;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  int i = 3;\n  while (i <= sqrt(n))\n\
    \    if (n % i == 0)\n      return false;\n    i += 2;\n  return true;\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792779
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  if (n % 5 == 0)\n    return\
    \ false;\n  if (n % 7 == 0)\n    return false;\n  if (n % 11 == 0)\n    return\
    \ false;\n  if (n % 13 == 0)\n    return false;\n  if (n % 17 == 0)\n    return\
    \ false;\n  if (n % 19 == 0)\n    return false;\n  if (n % 23 == 0)\n    return\
    \ false;\n  if (n % 29 == 0)\n    return false;\n  if (n % 31 == 0)\n    return\
    \ false;\n  if (n % 37 == 0)\n    return false;\n  if (n % 41 == 0)\n    return\
    \ false;\n  if (n % 43 == 0)\n    return false;\n  if (n % 47 == 0)\n    return\
    \ false;\n  if (n % 53 == 0)\n    return false;\n  if (n % 59 == 0)\n    return\
    \ false;\n  if (n % 61 == 0)\n    return false;\n  if (n % 67 == 0)\n    return\
    \ false;\n  if (n % 71 == 0)\n    return false;\n  if (n % 73 == 0)\n    return\
    \ false;\n  if (n % 79 == 0)\n    return false;\n  if (n % 83 == 0)\n    return\
    \ false;\n  if (n % 89 == 0)\n    return false;\n  if (n % 97 == 0)\n    return\
    \ false;\n  if (n % 101 == 0)\n    return false;\n  if (n % 103 == 0)\n    return\
    \ false;\n  if (n % 107 == 0)\n    return false;\n  if (n % 109 == 0)\n    return\
    \ false;\n  if (n % 113 == 0)\n    return false;\n  if (n % 117 == 0)\n    return\
    \ false;\n  if (n % 121 == 0)\n    return false;\n  if (n % 123 == 0)\n    return\
    \ false;\n  if (n % 127 == 0)\n    return false;\n  if (n % 131 == 0)\n    return\
    \ false;\n  if (n % 137 == 0)\n    return false;\n  if (n % 139 == 0)\n    return\
    \ false;\n  if (n % 143 == 0)\n    return false;\n  if (n % 147 == 0)\n    return\
    \ false;\n  if (n % 151 == 0)\n    return false;\n  if (n % 157 == 0)\n    return\
    \ false;\n  if (n % 161 == 0)\n    return false;\n  if (n % 165 == 0)\n    return\
    \ false;\n  if (n % 169 == 0)\n    return false;\n  if (n % 173 == 0)\n    return\
    \ false;\n  if (n % 177 == 0)\n    return false;\n  if (n % 181 == 0)\n    return\
    \ false;\n  if (n % 185 == 0)\n    return false;\n  if (n % 189 == 0)\n    return\
    \ false;\n  if (n % 193 == 0)\n    return false;\n  if (n % 197 == 0)\n    return\
    \ false;\n  if (n % 201 == 0)\n    return false;\n  if (n % 207 == 0)\n    return\
    \ false;\n  if (n % 211 == 0)\n    return false;\n  if (n % 215 == 0)\n    return\
    \ false;\n  if (n % 219 == 0)\n    return false;\n  if (n % 223 == 0)\n    return\
    \ false;\n  if (n % 227 == 0)\n    return false;\n  if (n % 231 == 0)\n    return\
    \ false;\n  if (n % 235 == 0)\n    return false;\n  if (n % 239 == 0)\n    return\
    \ false;\n  if (n % 243 == 0)\n    return false;\n  if (n % 247 == 0)\n\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8a30o1fm.cpp: In function \u2018bool is_prime(long int)\u2019:\n\
    /tmp/tmp8a30o1fm.cpp:149:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n  149 | }\n      | ^\n/tmp/tmp8a30o1fm.cpp:149:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n  149 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (int i = 3; i <= (n / 2); i += 2)\n    if (n % i == 0)\n     \
    \ return false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  if (n % 7 == 0)\
    \ return false;\n  if (n % 11 == 0) return false;\n  if (n % 13 == 0) return false;\n\
    \  if (n % 17 == 0) return false;\n  if (n % 19 == 0) return false;\n  if (n %\
    \ 23 == 0) return false;\n  if (n % 29 == 0) return false;\n  if (n % 31 == 0)\
    \ return false;\n  if (n % 37 == 0) return false;\n  if (n % 41) == 0) return\
    \ false;\n  if (n % 43) == 0) return false;\n  if (n % 47) == 0) return false;\n\
    \  if (n % 53) == 0) return false;\n  if (n % 59) == 0) return false;\n  if (n\
    \ % 61) == 0) return false;\n  if (n % 67) == 0) return false;\n  if (n % 71)\
    \ == 0) return false;\n  if (n % 73) == 0) return false;\n  if (n % 79) == 0)\
    \ return false;\n  if (n % 83) == 0) return false;\n  if (n % 89) == 0) return\
    \ false;\n  if (n % 97) == 0) return false;\n  if (n % 103) == 0) return false;\n\
    \  if (n % 109) == 0) return false;\n  if (n % 113) == 0) return false;\n  if\
    \ (n % 127) == 0) return false;\n  if (n % 131) == 0) return false;\n  if (n %\
    \ 139) == 0) return false;\n  if (n % 147) == 0) return false;\n  if (n % 151)\
    \ == 0) return false;\n  if (n % 157) == 0) return false;\n  if (n % 163) == 0)\
    \ return false;\n  if (n % 167) == 0) return false;\n  if (n % 173) == 0) return\
    \ false;\n  if (n % 179) == 0) return false;\n  if (n % 181) == 0) return false;\n\
    \  if (n % 185) == 0) return false;\n  if (n % 189) == 0) return false;\n  if\
    \ (n % 193) == 0) return false;\n  if (n % 197) == 0) return false;\n  if (n %\
    \ 201) == 0) return false;\n  if (n % 207) == 0) return false;\n  if (n % 211)\
    \ == 0) return false;\n  if (n % 215) == 0) return false;\n  if (n % 217) == 0)\
    \ return false;\n  if (n % 223) == 0) return false;\n  if (n % 227) == 0) return\
    \ false;\n  if (n % 231) == 0) return false;\n  if (n % 237) == 0) return false;\n\
    \  if (n % 241) == 0) return false;\n  if (n % 247) == 0) return false;\n  if\
    \ (n % 251) == 0) return false;\n  if (n % 257) == 0) return false;\n  if (n %\
    \ 263) == 0) return false;\n  if (n % 269) == 0) return false;\n  if (n % 271)\
    \ == 0) return false;\n  if (n % 277) == 0) return false;\n  if (n % 283) == 0)\
    \ return false;\n  if (n % 289) == 0) return false;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeisqjqjy.cpp: In function \u2018bool is_prime(long int)\u2019:\n\
    /tmp/tmpeisqjqjy.cpp:33:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   33 |   if (n % 41) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:34:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   34 |   if (n % 43) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:35:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   35 |   if (n % 47) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:36:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   36 |   if (n % 53) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:37:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   37 |   if (n % 59) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:38:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   38 |   if (n % 61) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:39:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   39 |   if (n % 67) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:40:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   40 |   if (n % 71) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:41:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   41 |   if (n % 73) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:42:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   42 |   if (n % 79) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:43:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   43 |   if (n % 83) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:44:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   44 |   if (n % 89) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:45:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   45 |   if (n % 97) == 0) return false;\n      |               ^~\n\
    /tmp/tmpeisqjqjy.cpp:46:16: error: expected primary-expression "
  stdout: ''
  timestamp: 1659792773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return false;\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sq = sqrt(n);\n    for (long i = 3; i <= sq; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  int i = 5;\n  while\
    \ (i <= sqrt(n)) {\n    if (n % i == 0) return false;\n    i += 6;\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpq7jctccv: /tmp/tmpq7jctccv.cpp:40: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjlrhm8f.cpp: In function 'int main()':\n/tmp/tmpwjlrhm8f.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwjlrhm8f.cpp:2:\n/tmp/tmpwjlrhm8f.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  int i = 5;\n  while (i <= sqrt(n)) {\n    if (n %\
    \ i == 0) return false;\n    i += 6;\n  }\n  return true;\n}\nint main() {\n \
    \   auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbow32nek: /tmp/tmpbow32nek.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= n / 3) {\n\
    \        if (n % i == 0 || n % (i + 2) == 0) return false;\n        i += 6;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfaxdalrl.cpp: In function 'int main()':\n/tmp/tmpfaxdalrl.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpfaxdalrl.cpp:2:\n/tmp/tmpfaxdalrl.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  int i = 3;\n  while (i <= sqrt(n)) {\n    if (n % i == 0)\n      return\
    \ false;\n    i += 2;\n  }\n  return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Write your code\
    \ here.\n    long i=2;\n    long m=n;\n    while(i<m){\n        if(n%i==0){\n\
    \            return false;\n        }\n        i++;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp7mzozp8l: /tmp/tmp7mzozp8l.cpp:38: int main(): Assertion `candidate((1))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  if (n % 5 == 0)\n    return\
    \ false;\n  if (n % 7 == 0)\n    return false;\n  if (n % 11 == 0)\n    return\
    \ false;\n  if (n % 13 == 0)\n    return false;\n  if (n % 17 == 0)\n    return\
    \ false;\n  if (n % 19 == 0)\n    return false;\n  if (n % 23 == 0)\n    return\
    \ false;\n  if (n % 29 == 0)\n    return false;\n  if (n % 31 == 0)\n    return\
    \ false;\n  if (n % 37 == 0)\n    return false;\n  if (n % 41 == 0)\n    return\
    \ false;\n  if (n % 43 == 0)\n    return false;\n  if (n % 47 == 0)\n    return\
    \ false;\n  if (n % 53 == 0)\n    return false;\n  if (n % 59 == 0)\n    return\
    \ false;\n  if (n % 61 == 0)\n    return false;\n  if (n % 67 == 0)\n    return\
    \ false;\n  if (n % 71 == 0)\n    return false;\n  if (n % 73 == 0)\n    return\
    \ false;\n  if (n % 79 == 0)\n    return false;\n  if (n % 83 == 0)\n    return\
    \ false;\n  if (n % 89 == 0)\n    return false;\n  if (n % 97 == 0)\n    return\
    \ false;\n  if (n % 101 == 0)\n    return false;\n  if (n % 103 == 0)\n    return\
    \ false;\n  if (n % 105 == 0)\n    return false;\n  if (n % 107 == 0)\n    return\
    \ false;\n  if (n % 109 == 0)\n    return false;\n  if (n % 111 == 0)\n    return\
    \ false;\n  if (n % 113 == 0)\n    return false;\n  if (n % 115 == 0)\n    return\
    \ false;\n  if (n % 117 == 0)\n    return false;\n  if (n % 119 == 0)\n    return\
    \ false;\n  if (n % 121 == 0)\n    return false;\n  if (n % 123 == 0)\n    return\
    \ false;\n  if (n % 127 == 0)\n    return false;\n  if (n % 129 == 0)\n    return\
    \ false;\n  if (n % 131 == 0)\n    return false;\n  if (n % 133 == 0)\n    return\
    \ false;\n  if (n % 135 == 0)\n    return false;\n  if (n % 137 == 0)\n    return\
    \ false;\n  if (n % 139 == 0)\n    return false;\n  if (n % 141 == 0)\n    return\
    \ false;\n  if (n % 143 == 0)\n    return false;\n  if (n % 145 == 0)\n    return\
    \ false;\n  if (n % 147 == 0)\n    return false;\n  if (n % 149 == 0)\n    return\
    \ false;\n  if (n % 151 == 0)\n    return false;\n  if (n % 153 == 0)\n    return\
    \ false;\n  if (n % 155 == 0)\n    return false;\n  if (n % 157 == 0)\n    return\
    \ false;\n  if (n % 159 == 0)\n    return false;\n  if (n % 161 == 0)\n    return\
    \ false;\n  if (n % 163 == 0)\n    return false;\n  if (n % 165 == 0)\n    return\
    \ false;\n  if (n % 167 == 0)\n    return false;\n  if (n % 169 == 0)\n    return\
    \ false;\n  if (n % 171 == 0)\n    return false;\n  if (n % 173 == 0)\n    return\
    \ false;\n  if (n % 175 == 0)\n    return false;\n  if (n % 177 == 0)\n\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmplf4qtn02.cpp: In function \u2018bool is_prime(long int)\u2019:\n\
    /tmp/tmplf4qtn02.cpp:149:1: error: expected primary-expression before \u2018}\u2019\
    \ token\n  149 | }\n      | ^\n/tmp/tmplf4qtn02.cpp:149:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n  149 | }\n      | ^\n"
  stdout: ''
  timestamp: 1659792773
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    long m = sqrt(n);\n   \
    \ while (i <= m) {\n        if (n % i == 0) return false;\n        i += 6;\n \
    \   }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n   \
    \ assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp54hg5bk3: /tmp/tmp54hg5bk3.cpp:44: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long sq = sqrt(n);\n    for (long i = 3; i <=\
    \ sq; i += 2)\n        if (n % i == 0)\n            return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long m = (long) sqrt(n);\n    for (long\
    \ i = 5; i <= m; i += 6) {\n        if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp4s7xg3s4: /tmp/tmp4s7xg3s4.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long m = sqrt(n);\n    for (long i = 2; i <= m; i++) {\n       \
    \ if (n % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n  \
    \  auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i < n) {\n     \
    \   if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpaxp7yfwj: /tmp/tmpaxp7yfwj.cpp:44: int main(): Assertion `candidate((255379))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  if (n % 7 == 0)\
    \ return false;\n  if (n != 11) return false;\n  if (n != 13441) return false;\n\
    \  if (n != 61) return false;\n  if (n != 4) return false;\n  if (n != 1) return\
    \ false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpc3ura9s0: /tmp/tmpc3ura9s0.cpp:35: int main(): Assertion `candidate((101))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 3;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 2;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long m = (long) sqrt(n);\n    for (long\
    \ i = 5; i <= m; i += 6) {\n        if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \  for (int i = 5; (i * i) <= n; i += 6) {\n    if (n % i == 0 || n % (i + 2)\
    \ == 0) return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  int i = 3;\n  while (i <= sqrt(n))\n\
    \    if (n % i == 0)\n      return false;\n    i += 2;\n  return true;\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792779
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2)\n        if (n % i == 0)\n          \
    \  return false;\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmplmu1snr0: /tmp/tmplmu1snr0.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Check for even\
    \ numbers.\n    if (n % 2 == 0) return false;\n    // Check for composite numbers.\n\
    \    for (long i = 5; i <= sqrt(n); i += 6) {\n        if (n % i == 0) return\
    \ false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpey_50331: /tmp/tmpey_50331.cpp:35: int main(): Assertion `candidate((1))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  if (n % 7 == 0)\
    \ return false;\n  if (n % 11 == 0) return false;\n  if (n % 13 == 0) return false;\n\
    \  if (n % 17 == 0) return false;\n  if (n % 19 == 0) return false;\n  if (n %\
    \ 23 == 0) return false;\n  if (n % 29 == 0) return false;\n  if (n % 31 == 0)\
    \ return false;\n  if (n % 37 == 0) return false;\n  if (n % 41) == 0) return\
    \ false;\n  if (n % 43) == 0) return false;\n  if (n % 47) == 0) return false;\n\
    \  if (n % 53) == 0) return false;\n  if (n % 59) == 0) return false;\n  if (n\
    \ % 61) == 0) return false;\n  if (n % 67) == 0) return false;\n  if (n % 73)\
    \ == 0) return false;\n  if (n % 79) == 0) return false;\n  if (n % 83) == 0)\
    \ return false;\n  if (n % 89) == 0) return false;\n  if (n % 97) == 0) return\
    \ false;\n  if (n % 103) == 0) return false;\n  if (n % 111 == 0) return false;\n\
    \  if (n % 127) == 0) return false;\n  if (n % 131) == 0) return false;\n  if\
    \ (n % 139) == 0) return false;\n  if (n % 147) == 0) return false;\n  if (n %\
    \ 153) == 0) return false;\n  if (n % 159) == 0) return false;\n  if (n % 161)\
    \ == 0) return false;\n  if (n % 163) == 0) return false;\n  if (n % 167) == 0)\
    \ return false;\n  if (n % 173) == 0) return false;\n  if (n % 179) == 0) return\
    \ false;\n  if (n % 181) == 0) return false;\n  if (n % 185) == 0) return false;\n\
    \  if (n % 189) == 0) return false;\n  if (n % 193) == 0) return false;\n  if\
    \ (n % 197) == 0) return false;\n  if (n % 201) == 0) return false;\n  if (n %\
    \ 207) == 0) return false;\n  if (n % 211) == 0) return false;\n  if (n % 215)\
    \ == 0) return false;\n  if (n % 217) == 0) return false;\n  if (n % 223) == 0)\
    \ return false;\n  if (n % 229) == 0) return false;\n  if (n % 233) == 0) return\
    \ false;\n  if (n % 239) == 0) return false;\n  if (n % 241) == 0) return false;\n\
    \  if (n % 247) == 0) return false;\n  if (n % 251) == 0) return false;\n  if\
    \ (n % 257) == 0) return false;\n  if (n % 263) == 0) return false;\n  if (n %\
    \ 269) == 0) return false;\n  if (n % 271) == 0) return false;\n  if (n % 277)\
    \ == 0) return false;\n  if (n % 283) == 0) return false;\n  if (n % 289) == 0)\
    \ return false;\n  if (n % 291) == 0) return false;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp703kd90j.cpp: In function \u2018bool is_prime(long int)\u2019:\n\
    /tmp/tmp703kd90j.cpp:33:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   33 |   if (n % 41) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:34:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   34 |   if (n % 43) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:35:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   35 |   if (n % 47) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:36:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   36 |   if (n % 53) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:37:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   37 |   if (n % 59) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:38:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   38 |   if (n % 61) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:39:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   39 |   if (n % 67) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:40:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   40 |   if (n % 73) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:41:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   41 |   if (n % 79) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:42:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   42 |   if (n % 83) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:43:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   43 |   if (n % 89) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:44:15: error: expected primary-expression before \u2018==\u2019\
    \ token\n   44 |   if (n % 97) == 0) return false;\n      |               ^~\n\
    /tmp/tmp703kd90j.cpp:45:16: error: expected primary-expression before \u2018==\u2019\
    \ token\n   45 |   if (n % 103) == 0) return false;\n      |                ^~\n\
    /tmp/tmp703kd90j.cpp:47:16: error: expected primary-expressio"
  stdout: ''
  timestamp: 1659792775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp4s7xg3s4: /tmp/tmp4s7xg3s4.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (long i = 3; i * i <= n; i += 2)\n    if (n % i == 0)\n      return\
    \ false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n <= 3)\n        return true;\n    if (n\
    \ % 3 == 0)\n        return false;\n    if (n % 5 == 0)\n        return false;\n\
    \    long m = sqrt(n);\n    for (long i = 5; i <= m; i += 6)\n        if (n %\
    \ i == 0)\n            return false;\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8g5gs8xi: /tmp/tmp8g5gs8xi.cpp:46: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  if (n % 7 == 0)\
    \ return false;\n  if (n != 11) return false;\n  for (int i = 3; i <= n / i; i\
    \ += 2) {\n    if (n % i == 0) return false;\n  }\n  return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpiczfdx95: /tmp/tmpiczfdx95.cpp:34: int main(): Assertion `candidate((101))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  if (n % 3 == 0)\n    return false;\n  int i = 3;\n  while (i <= sqrt(n))\
    \ {\n    if (n % i == 0)\n      return false;\n    i += 2;\n  }\n  return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Check for small\
    \ primes.\n    if (n < 2) return false;\n    // Check for even numbers.\n    if\
    \ (n % 2 == 0) return false;\n    // Check odd numbers.\n    for (long i = 3;\
    \ i * i <= n; i += 2) {\n        if (n % i == 0) return false;\n    }\n    //\
    \ If we get here, then n is a prime number.\n    return true;\n}\nint main() {\n\
    \    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long sq = sqrt(n);\n    for (long i = 3; i <=\
    \ sq; i += 2)\n        if (n % i == 0)\n            return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long m = sqrt(n);\n    for (long i = 2; i <= m; i++) {\n        if (n % i ==\
    \ 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n <= 3) return true;\n    if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n    int i = 5;\n    while (i <= sqrt(n)) {\n        if (n % i == 0 ||\
    \ n % (i + 2) == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792779
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  for (long\
    \ i = 3; i * i <= n; i += 2) {\n    if (n % i == 0) return false;\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    if (n % 5 == 0) return false;\n    long\
    \ i = 5;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) return false;\n\
    \        i += 6;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1n87zp5d: /tmp/tmp1n87zp5d.cpp:40: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    int i = 3;\n    while (i < n / 3) {\n  \
    \      if (n % i == 0) return false;\n        i += 2;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 3;\n    while (i <= sqrt(n)) {\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Write your code\
    \ here.\n    long i = 2;\n    long flag = 0;\n    while (i * i <= n) {\n     \
    \   if (n % i == 0) {\n            flag = 1;\n            break;\n        }\n\
    \        i++;\n    }\n    if (flag == 1) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpu2gdrvlm: /tmp/tmpu2gdrvlm.cpp:36: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (long i = 3; i * i <= n; i += 2)\n    if (n % i == 0)\n      return\
    \ false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjlrhm8f.cpp: In function 'int main()':\n/tmp/tmpwjlrhm8f.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwjlrhm8f.cpp:2:\n/tmp/tmpwjlrhm8f.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= n / i; i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long m = sqrt(n);\n    for (long i = 3; i <= m; i += 2) {\n        if (n %\
    \ i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    int i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmproa6cw0s: /tmp/tmproa6cw0s.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \  for (long i = 5; i * i <= n; i += 6) {\n    if (n % i == 0 || n % (i + 2) ==\
    \ 0) return false;\n  }\n  return true;\n}\nint main() {\n    auto candidate =\
    \ is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n))\n     \
    \   if (n % i == 0)\n            return false;\n        i += 2;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792780
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (long i = 3; i <= n / i; i += 2)\n    if (n % i == 0)\n      return\
    \ false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i < n) {\n        if (n % i == 0)\n            return false;\n\
    \        i += 6;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpo1num52a: /tmp/tmpo1num52a.cpp:49: int main(): Assertion `candidate((255379))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n))\n     \
    \   if (n % i == 0)\n            return false;\n        else\n            i +=\
    \ 2;\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n <= 3) return true;\n  if (n % 2 == 0 || n % 3 == 0) return false;\n\
    \  long m = ((long) sqrt(n) + 1);\n  for (long i = 3; i <= m; i += 2) {\n    if\
    \ (n % i == 0 || n % (i + 2) == 0) return false;\n  }\n  return true;\n}\nint\
    \ main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: Exception
  stderr: 'tmpeov8xiyv: /tmp/tmpeov8xiyv.cpp:37: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i < n) {\n     \
    \   if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpaxp7yfwj: /tmp/tmpaxp7yfwj.cpp:44: int main(): Assertion `candidate((255379))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <=\
    \ sqr; i += 2)\n        if (n % i == 0)\n            return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i <= n / 3) {\n        if (n % i == 0)\n            return\
    \ false;\n        i += 6;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_3d2fl1h: /tmp/tmp_3d2fl1h.cpp:49: int main(): Assertion `candidate((255379))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i * i <= n; i += 2)\n        if (n % i == 0)\n            return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n < 2) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  long i = 5;\n  while\
    \ (i <= sqrt(n)) {\n    if (n % i == 0) return false;\n    i += 6;\n  }\n  return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpmr82ohgy: /tmp/tmpmr82ohgy.cpp:40: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <= sqr; i += 2) {\n\
    \        if (n % i == 0) return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv3pep2st.cpp: In function 'int main()':\n/tmp/tmpv3pep2st.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv3pep2st.cpp:2:\n/tmp/tmpv3pep2st.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n)) {\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp4s7xg3s4: /tmp/tmp4s7xg3s4.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    long\
    \ i = 5;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 6;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792781
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    long sq = sqrt(n);\n    for (long i = 3; i <= sq; i += 2) {\n  \
    \      if (n % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n\
    \    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa0z_yqjq: /tmp/tmpa0z_yqjq.cpp:28: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n))\n     \
    \   if (n % i == 0)\n            return false;\n        i += 2;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792780
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    // Write your code\
    \ here.\n    long i = 2;\n    long flag = 0;\n    while (i * i <= n) {\n     \
    \   if (n % i == 0) {\n            flag = 1;\n            break;\n        }\n\
    \        i++;\n    }\n    return flag;\n}\nint main() {\n    auto candidate =\
    \ is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdro_9_mr: /tmp/tmpdro_9_mr.cpp:33: int main(): Assertion `candidate((6))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / i; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  if (n % 7 == 0)\
    \ return false;\n  if (n <= 3) return true;\n  if (n <= 5) return true;\n  if\
    \ (n <= 7) return true;\n  if (n <= 11) return true;\n  if (n <= 13) return true;\n\
    \  if (n <= 17) return true;\n  if (n <= 19) return true;\n  if (n <= 23) return\
    \ true;\n  if (n <= 29) return true;\n  if (n <= 31) return true;\n  if (n <=\
    \ 37) return true;\n  if (n <= 43) return true;\n  if (n <= 49) return true;\n\
    \  if (n <= 53) return true;\n  if (n <= 59) return true;\n  if (n <= 61) return\
    \ true;\n  if (n <= 67) return true;\n  if (n <= 71) return true;\n  if (n <=\
    \ 73) return true;\n  if (n <= 79) return true;\n  if (n <= 83) return true;\n\
    \  if (n <= 89) return true;\n  if (n <= 97) return true;\n  if (n <= 101) return\
    \ true;\n  if (n <= 103) return true;\n  if (n <= 109) return true;\n  if (n <=\
    \ 113) return true;\n  if (n <= 127) return true;\n  if (n <= 131) return true;\n\
    \  if (n <= 137) return true;\n  if (n <= 139) return true;\n  if (n <= 147) return\
    \ true;\n  if (n <= 151) return true;\n  if (n <= 157) return true;\n  if (n <=\
    \ 163) return true;\n  if (n <= 169) return true;\n  if (n <= 173) return true;\n\
    \  if (n <= 179) return true;\n  if (n <= 181) return true;\n  if (n <= 191) return\
    \ true;\n  if (n <= 193) return true;\n  if (n <= 197) return true;\n  if (n <=\
    \ 199) return true;\n  if (n <= 203) return true;\n  if (n <= 209) return true;\n\
    \  if (n <= 211) return true;\n  if (n <= 217) return true;\n  if (n <= 221) return\
    \ true;\n  if (n <= 227) return true;\n  if (n <= 229) return true;\n  if (n <=\
    \ 233) return true;\n  if (n <= 239) return true;\n  if (n <= 241) return true;\n\
    \  if (n <= 243) return true;\n  if (n <= 247) return true;\n  if (n <= 251) return\
    \ true;\n  if (n <= 253) return true;\n  if (n <= 257) return true;\n  if (n <=\
    \ 263) return true;\n  if (n <= 269) return true;\n  if (n <= 271) return true;\n\
    \  if (n <= 273) return true;\n  if (n <= 279) return true;\n  if (n <= 281) return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmp9oflgr8n: /tmp/tmp9oflgr8n.cpp:99: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  if (n % 3 == 0) return false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n\
    \        if (n % i == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmplmu1snr0: /tmp/tmplmu1snr0.cpp:43: int main(): Assertion `candidate((77))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792775
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1) return\
    \ false;\n  if (n == 2) return true;\n  if (n % 2 == 0) return false;\n  if (n\
    \ % 3 == 0) return false;\n  if (n % 5 == 0) return false;\n  long sq = sqrt(n);\n\
    \  for (long i = 3; i <= sq; i += 2) {\n    if (n % i == 0) return false;\n  }\n\
    \  return true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Exception
  stderr: 'tmpnvyo21tk: /tmp/tmpnvyo21tk.cpp:39: int main(): Assertion `candidate((5))
    == (true)'' failed.

    '
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n <= 3) return true;\n    if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n    long i = 5;\n    while (i <= n / i) {\n        if (n % i == 0 ||\
    \ n % (i + 2) == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwjlrhm8f.cpp: In function 'int main()':\n/tmp/tmpwjlrhm8f.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpwjlrhm8f.cpp:2:\n/tmp/tmpwjlrhm8f.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 3;\n    while (i <= sqrt(n))\n        if (n % i == 0)\n            return\
    \ false;\n        i += 2;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpic9yh2oo.cpp: In function 'int main()':\n/tmp/tmpic9yh2oo.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpic9yh2oo.cpp:2:\n/tmp/tmpic9yh2oo.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n))\n     \
    \   if (n % i == 0)\n            return false;\n        i += 2;\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792780
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= n / 2; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ltifth7.cpp: In function 'int main()':\n/tmp/tmp0ltifth7.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0ltifth7.cpp:2:\n/tmp/tmp0ltifth7.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n == 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (long i = 3; i <= n / 2; i += 2)\n    if (n % i == 0)\n      return\
    \ false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i * i <= n; i += 2)\n        if (n % i == 0)\n            return\
    \ false;\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  long sq = sqrt(n);\n    for (long i = 3; i <= sq; i += 2) {\n        if (n\
    \ % i == 0) return false;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792776
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n == 2) return true;\n    if (n % 2 == 0) return false;\n  \
    \  for (int i = 3; i <= sqrt(n); i += 2) {\n        if (n % i == 0) return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = is_prime;\n  \
    \  assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792774
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1)\n   \
    \ return false;\n  if (n == 2)\n    return true;\n  if (n % 2 == 0)\n    return\
    \ false;\n  for (int i = 3; i <= sqrt(n); i += 2)\n    if (n % i == 0)\n     \
    \ return false;\n  return true;\n}\nint main() {\n    auto candidate = is_prime;\n\
    \    assert(candidate((6)) == (false));\n    assert(candidate((101)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((13441)) == (true));\n\
    \    assert(candidate((61)) == (true));\n    assert(candidate((4)) == (false));\n\
    \    assert(candidate((1)) == (false));\n    assert(candidate((5)) == (true));\n\
    \    assert(candidate((11)) == (true));\n    assert(candidate((17)) == (true));\n\
    \    assert(candidate((85)) == (false));\n    assert(candidate((77)) == (false));\n\
    \    assert(candidate((255379)) == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792777
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n  if (n <= 1)\n   \
    \ return false;\n  if (n <= 3)\n    return true;\n  if (n % 2 == 0 || n % 3 ==\
    \ 0)\n    return false;\n  int i = 5;\n  while (i <= sqrt(n))\n    if (n % i ==\
    \ 0 || n % (i + 2) == 0)\n      return false;\n  return true;\n}\nint main() {\n\
    \    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659792782
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    if (n % 3 == 0)\n        return false;\n    int\
    \ i = 5;\n    while (i <= n / 3) {\n        if (n % i == 0)\n            return\
    \ false;\n        i += 6;\n    }\n    return true;\n}\nint main() {\n    auto\
    \ candidate = is_prime;\n    assert(candidate((6)) == (false));\n    assert(candidate((101))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((13441))\
    \ == (true));\n    assert(candidate((61)) == (true));\n    assert(candidate((4))\
    \ == (false));\n    assert(candidate((1)) == (false));\n    assert(candidate((5))\
    \ == (true));\n    assert(candidate((11)) == (true));\n    assert(candidate((17))\
    \ == (true));\n    assert(candidate((85)) == (false));\n    assert(candidate((77))\
    \ == (false));\n    assert(candidate((255379)) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5wp7ps6_: /tmp/tmp5wp7ps6_.cpp:49: int main(): Assertion `candidate((255379))
    == (false)'' failed.

    '
  stdout: ''
  timestamp: 1659792777
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i <= sqrt(n); i += 2)\n     \
    \   if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpzedduxvb.cpp: In function 'int main()':\n/tmp/tmpzedduxvb.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzedduxvb.cpp:2:\n/tmp/tmpzedduxvb.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    for (int i = 3; i * i <= n; i += 2)\n       \
    \ if (n % i == 0)\n            return false;\n    return true;\n}\nint main()\
    \ {\n    auto candidate = is_prime;\n    assert(candidate((6)) == (false));\n\
    \    assert(candidate((101)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((13441)) == (true));\n    assert(candidate((61)) == (true));\n\
    \    assert(candidate((4)) == (false));\n    assert(candidate((1)) == (false));\n\
    \    assert(candidate((5)) == (true));\n    assert(candidate((11)) == (true));\n\
    \    assert(candidate((17)) == (true));\n    assert(candidate((85)) == (false));\n\
    \    assert(candidate((77)) == (false));\n    assert(candidate((255379)) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpc1cotw6d.cpp: In function 'int main()':\n/tmp/tmpc1cotw6d.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc1cotw6d.cpp:2:\n/tmp/tmpc1cotw6d.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long sqr = sqrt(n);\n    for (long i = 3; i <=\
    \ sqr; i += 2)\n        if (n % i == 0)\n            return false;\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792777
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n == 1)\n \
    \       return false;\n    if (n == 2)\n        return true;\n    if (n % 2 ==\
    \ 0)\n        return false;\n    long i = 3;\n    while (i <= sqrt(n)) {\n   \
    \     if (n % i == 0)\n            return false;\n        i += 2;\n    }\n   \
    \ return true;\n}\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6))\
    \ == (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy55e2ii6.cpp: In function 'int main()':\n/tmp/tmpy55e2ii6.cpp:34:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_prime;\n \
    \         ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n    \
    \             from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpy55e2ii6.cpp:2:\n/tmp/tmpy55e2ii6.cpp:35:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((6)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return true if a given\
    \ number is prime, and false otherwise.\n// >>> is_prime((6))\n// (false)\n//\
    \ >>> is_prime((101))\n// (true)\n// >>> is_prime((11))\n// (true)\n// >>> is_prime((13441))\n\
    // (true)\n// >>> is_prime((61))\n// (true)\n// >>> is_prime((4))\n// (false)\n\
    // >>> is_prime((1))\n// (false)\nbool is_prime(long n) {\n    if (n <= 1) return\
    \ false;\n    if (n <= 3) return true;\n    if (n % 2 == 0 || n % 3 == 0) return\
    \ false;\n    long i = 5;\n    while (i <= sqrt(n)) {\n        if (n % i == 0\
    \ || n % (i + 2) == 0) return false;\n        i += 6;\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = is_prime;\n    assert(candidate((6)) ==\
    \ (false));\n    assert(candidate((101)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((13441)) == (true));\n    assert(candidate((61))\
    \ == (true));\n    assert(candidate((4)) == (false));\n    assert(candidate((1))\
    \ == (false));\n    assert(candidate((5)) == (true));\n    assert(candidate((11))\
    \ == (true));\n    assert(candidate((17)) == (true));\n    assert(candidate((85))\
    \ == (false));\n    assert(candidate((77)) == (false));\n    assert(candidate((255379))\
    \ == (false));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659792777

name: HumanEval_92_any_int
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that takes\
  \ 3 numbers.\n// Returns true if one of the numbers is equal to the sum of the other\
  \ two, and all numbers are integers.\n// Returns false in any other cases.\n// Examples\n\
  // >>> any_int((float(5)), (float(2)), (float(7)))\n// (true)\n// >>> any_int((float(3)),\
  \ (float(2)), (float(2)))\n// (false)\n// >>> any_int((float(3)), (float(-2)), (float(1)))\n\
  // (true)\n// >>> any_int((3.6), (-2.2), (float(2)))\n// (false)\nbool any_int(float\
  \ x, float y, float z) {\n"
tests: "}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
  \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
  \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n  \
  \  assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
  \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
  \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
  \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
  \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
  \ == (false));\n}\n"
completions: ["    // Write your code here\n    if (x == y + z && y == z && z == x)\n\
    \        return true;\n    else\n        return false;", "    float sum = (x +\
    \ y + z);\n    if (sum == 0)\n        return false;\n    if (x == sum)\n     \
    \   return true;\n    if (y == sum)\n        return true;\n    if (z == sum)\n\
    \        return true;\n    return false;", "    // Write your code here\n    float\
    \ sum=x+y+z;\n    if(sum==(x+y+z)){\n        return true;\n    }\n    return false;",
  "    if (x == y + z) {\n        return true;\n    }\n    return false;", "    //\
    \ Write your code here\n    float sum;\n    sum=x+y;\n    if (sum==z){\n     \
    \   return true;\n    }\n    else{\n        return false;\n    }", "    float\
    \ sum = x + y + z;\n    if (sum == x) {\n        return true;\n    } else if (sum\
    \ == y) {\n        return true;\n    } else if (sum == z) {\n        return true;\n\
    \    } else {\n        return false;\n    }", '    return ((x == x + y) && (x
    == x + z) && (y == y + z));', '    return ((x == x + y) && (x == x + z) && (x
    == y + z));', "    // Write your code here\n    float sum=x+y+z;\n    if(sum==(x+y+z)){\n\
    \        return true;\n    }\n    return false;", '    return ((x == x + y) &&
    (x == x + z) && (y == y + z));', "    // Write your code here\n    return ((x\
    \ == x + y) && (x == x + z) && (y == y + z));", "    int xx = x;\n    int yy =\
    \ y;\n    int zz = z;\n    int xy = x * y;\n    int yz = y * z;\n    int zx =\
    \ z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int\
    \ xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n\
    \    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y\
    \ * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int\
    \ zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n\
    \    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x\
    \ * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int\
    \ yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n\
    \    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z\
    \ * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int\
    \ xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n\
    \    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y\
    \ * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int\
    \ zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n\
    \    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x\
    \ * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int\
    \ yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n\
    \    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z\
    \ * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int\
    \ xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n\
    \    int yx = y * x;\n    int zy = z * y;\n    int xy = ", "    int ix = x;\n\
    \    int iy = y;\n    int iz = z;\n    if (ix < iy + iz)\n        return true;\n\
    \    return false;", "    if (x < y && x < z) {\n        return true;\n    } else\
    \ if (y < x && y < z) {\n        return true;\n    } else if (z < x && z < y)\
    \ {\n        return true;\n    } else {\n        return false;\n    }", "    assert(x\
    \ >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    if (x + y == z) {\n  \
    \      return true;\n    }\n    return false;", '    return (x == x + y && y ==
    y + z && z == z);', "    // Declare and initialize variables.\n    int xx = x;\n\
    \    int yy = y;\n    int zz = z;\n    int xx_plus_yy = xx + yy;\n    int xx_plus_yz_minus_zz\
    \ = xx + yz - zz;\n    int xx_plus_yz_minus_zz_xy = xx + yz - zz - xy;\n    int\
    \ xx_plus_yz_minus_zz_xy_plus_zz = xx + yz - zz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz\
    \ = xx + yz - zz - xy - zz - xz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz\
    \ = xx + yz - zz - xy - zz - xz - yz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy\
    \ = xx + yz - zz - xy - zz - xz - yz - xy;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz_minus_xy\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz - xy;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz_minus_xy_minus_zz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_min",
  "    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return ((x ==\
    \ y + z) || (x == z) || (y == z));", "    assert(x >= 0);\n    assert(y >= 0);\n\
    \    assert(z >= 0);\n    return (x == y + z);", "    int x_int = static_cast<int>(x);\n\
    \    int y_int = static_cast<int>(y);\n    int z_int = static_cast<int>(z);\n\
    \    return x_int + y_int + z_int == static_cast<int>(x + y + z);"]
stop_tokens:
- "\n}"

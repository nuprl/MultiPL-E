language: cpp
name: HumanEval_47_median
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0.0;\n    long long\
    \ mid = n / 2;\n    long long left = 0, right = mid;\n    while (left < right)\
    \ {\n        long long mid = (left + right) / 2;\n        if (l[mid] < l[mid+1])\
    \ left = mid + 1;\n        else right = mid - 1;\n    }\n    if (left == right)\
    \ return l[left];\n    return l[left] + (l[right] - l[left]) / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxx2txxxu: /tmp/tmpxx2txxxu.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ l[n / 2];\n    }\n    else {\n        return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgbnyu9ic: /tmp/tmpgbnyu9ic.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return ((l[n/2]\
    \ + l[n/2-1])/2.0);\n    } else {\n        return l[n/2];\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa5h4mh1z: /tmp/tmpa5h4mh1z.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092137
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ mid = n / 2;\n        long long left = l[mid];\n        long long right = l[n\
    \ - 1];\n        return (left + right) / 2.0;\n    }\n    else {\n        long\
    \ long mid = n / 2;\n        long long left = l[mid];\n        long long right\
    \ = l[n - 1];\n        return (left + right) / 2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsnyp1ua2: /tmp/tmpsnyp1ua2.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ l[n/2];\n    }\n    else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6ky2dv8c: /tmp/tmp6ky2dv8c.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    long long\
    \ l3 = mid;\n    long long l4 = n - mid;\n    long long l5 = mid;\n    long long\
    \ l6 = n - mid;\n    long long l7 = mid;\n    long long l8 = n - mid;\n    long\
    \ long l9 = mid;\n    long long l10 = n - mid;\n    long long l11 = mid;\n   \
    \ long long l12 = n - mid;\n    long long l13 = mid;\n    long long l14 = n -\
    \ mid;\n    long long l15 = mid;\n    long long l16 = n - mid;\n    long long\
    \ l17 = mid;\n    long long l18 = n - mid;\n    long long l19 = mid;\n    long\
    \ long l20 = n - mid;\n    long long l21 = 0;\n    long long l22 = 0;\n    long\
    \ long l23 = 0;\n    long long l24 = 0;\n    long long l25 = 0;\n    long long\
    \ l26 = 0;\n    long long l27 = 0;\n    long long l28 = 0;\n    long long l29\
    \ = 0;\n    long long l30 = 0;\n    long long l31 = 0;\n    long long l32 = 0;\n\
    \    long long l33 = 0;\n    long long l34 = 0;\n    long long l35 = 0;\n    long\
    \ long l36 = 0;\n    long long l37 = 0;\n    long long l38 = 0;\n    long long\
    \ l39 = 0;\n    long long l40 = 0;\n    long long l41 = 0;\n    long long l42\
    \ = 0;\n    long long l43 = 0;\n    long long l44 = 0;\n    long long l45 = 0;\n\
    \    long long l46 = 0;\n    long long l47 = 0;\n    long long l48 = 0;\n    long\
    \ long l49 = 0;\n    long long l50 = 0;\n    long long l51 = 0;\n    long long\
    \ l52 = 0;\n    long long l53 = 0;\n    long long l54 = 0;\n    long long l55\
    \ = 0;\n    long long l56 = 0;\n    long long l57 = 0;\n    long long l58 = 0;\n\
    \    long long l59 = 0;\n    long long l60 = 0;\n    long long l61 = 0;\n    long\
    \ long l62 = 0;\n    long long l63 = 0;\n    long long l64 = 0;\n    long long\
    \ l\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3upmpyre.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp3upmpyre.cpp:77:1: error: expected initializer before \u2018}\u2019\
    \ token\n   77 | }\n      | ^\n/tmp/tmp3upmpyre.cpp:77:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   77 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - 1];\n\
    \    if (left < right) {\n        return left;\n    } else {\n        return right;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1h06l91n: /tmp/tmp1h06l91n.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return a +\
    \ (b - a) * ((float)n / (float)2);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpykk5oyzw: /tmp/tmpykk5oyzw.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_6h5gfdg: /tmp/tmp_6h5gfdg.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    if (l2 == 0) return l[0];\n  \
    \  if (l2 > 0) return median(l, l1, l2);\n    long l3 = mid;\n    long l4 = n\
    \ - mid;\n    if (l4 > 0) return median(l, l3, l4);\n    long l5 = mid;\n    long\
    \ l6 = n - mid;\n    if (l6 > 0) return median(l, l5, l6);\n    long l7 = mid;\n\
    \    long l8 = n - mid;\n    if (l8 > 0) return median(l, l7, l8);\n    long l9\
    \ = mid;\n    long l10 = n - mid;\n    if (l10 > 0) return median(l, l9, l10);\n\
    \    long l11 = mid;\n    long l12 = n - mid;\n    if (l12 > 0) return median(l,\
    \ l11, l12);\n    long l13 = mid;\n    long l14 = n - mid;\n    if (l14 > 0) return\
    \ median(l, l13, l14);\n    long l15 = mid;\n    long l16 = n - mid;\n    if (l16\
    \ > 0) return median(l, l15, l16);\n    long l17 = mid;\n    long l18 = n - mid;\n\
    \    if (l18 > 0) return median(l, l17, l18);\n    long l19 = mid;\n    long l20\
    \ = n - mid;\n    if (l20 > 0) return median(l, l19, l20);\n    long l21 = mid;\n\
    \    long l22 = n - mid;\n    if (l22 > 0) return median(l, l21, l22);\n    long\
    \ l23 = mid;\n    long l24 = n - mid;\n    if (l24 > 0) return median(l, l23,\
    \ l24);\n    long l25 = mid;\n    long l26 = n - mid;\n    if (l26 > 0) return\
    \ median(l, l25, l26);\n    long l27 = mid;\n    long l28 = n - mid;\n    if (l28\
    \ > 0) return median(l, l27, l28);\n    long l29 = mid;\n    long l30 = n - mid;\n\
    \    if (l30 > 0) return median(l, l29, l30);\n    long l31 = mid;\n    long l32\
    \ = n - mid;\n    if (l32 > 0) return median(l, \n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_k8_6k5o.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp_k8_6k5o.cpp:15:40: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   15 |     if (l2 > 0) return median(l,\
    \ l1, l2);\n      |                                        ^\n/tmp/tmp_k8_6k5o.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:18:40: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   18 |     if (l4 > 0) return\
    \ median(l, l3, l4);\n      |                                        ^\n/tmp/tmp_k8_6k5o.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:21:40: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   21 |     if (l6 > 0) return\
    \ median(l, l5, l6);\n      |                                        ^\n/tmp/tmp_k8_6k5o.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:24:40: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   24 |     if (l8 > 0) return\
    \ median(l, l7, l8);\n      |                                        ^\n/tmp/tmp_k8_6k5o.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:27:42: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   27 |     if (l10 > 0) return\
    \ median(l, l9, l10);\n      |                                          ^\n/tmp/tmp_k8_6k5o.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:30:43: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   30 |     if (l12 > 0) return\
    \ median(l, l11, l12);\n      |                                           ^\n\
    /tmp/tmp_k8_6k5o.cpp:8:7: note: declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmp_k8_6k5o.cpp:33:43: error: too many arguments"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    if (a > b) std::swap(a,\
    \ b);\n    float c = a + b;\n    return c / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp77smocog: /tmp/tmp77smocog.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int mid = l.size() / 2;\n    float midVal = l[mid];\n  \
    \  float leftMedian = median(l.subvector(0, mid));\n    float rightMedian = median(l.subvector(mid\
    \ + 1, l.size()));\n    return midVal + (leftMedian + rightMedian) / 2;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmple7bsaqp.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmple7bsaqp.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n\
    \   11 |     float leftMedian = median(l.subvector(0, mid));\n      |        \
    \                         ^~~~~~~~~\n      |                                 vector\n\
    /tmp/tmple7bsaqp.cpp:12:34: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n  \
    \ 12 |     float rightMedian = median(l.subvector(mid + 1, l.size()));\n     \
    \ |                                  ^~~~~~~~~\n      |                      \
    \            vector\n"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8v33qsk2: /tmp/tmp8v33qsk2.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 1);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = mid;\n    long l5 = mid;\n    long l6 = n - 1;\n    long l7 = mid;\n    long\
    \ l8 = n - 1;\n    long l9 = mid;\n    long l10 = n - 1;\n    long l11 = mid;\n\
    \    long l12 = mid;\n    long l13 = n - 1;\n    long l14 = mid;\n    long l15\
    \ = mid;\n    long l16 = n - 1;\n    long l17 = mid;\n    long l18 = mid;\n  \
    \  long l19 = n - 1;\n    long l20 = mid;\n    long l21 = mid;\n    long l22 =\
    \ n - 1;\n    long l23 = mid;\n    long l24 = mid;\n    long l25 = n - 1;\n  \
    \  long l26 = mid;\n    long l27 = mid;\n    long l28 = n - 1;\n    long l29 =\
    \ mid;\n    long l30 = mid;\n    long l31 = n - 1;\n    long l32 = mid;\n    long\
    \ l33 = mid;\n    long l34 = n - 1;\n    long l35 = mid;\n    long l36 = mid;\n\
    \    long l37 = n - 1;\n    long l38 = mid;\n    long l39 = mid;\n    long l40\
    \ = n - 1;\n    long l41 = mid;\n    long l42 = mid;\n    long l43 = n - 1;\n\
    \    long l44 = mid;\n    long l45 = mid;\n    long l46 = n - 1;\n    long l47\
    \ = mid;\n    long l48 = mid;\n    long l49 = n - 1;\n    long l50 = mid;\n  \
    \  long l51 = mid;\n    long l52 = n - 1;\n    long l53 = mid;\n    long l54 =\
    \ mid;\n    long l55 = n - 1;\n    long l56 = mid;\n    long l57 = mid;\n    long\
    \ l58 = n - 1;\n    long l59 = mid;\n    long l60 = mid;\n    long l61 = n - 1;\n\
    \    long l62 = mid;\n    long l63 = mid;\n\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmstjwqgs: /tmp/tmpmstjwqgs.cpp:79: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    long long int left = l[mid];\n    long long int right\
    \ = l[n - 1];\n    if (left > right) return median(l);\n    return left;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0_ul3xf3: /tmp/tmp0_ul3xf3.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    }\n    return leftval;\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_u6zxgdz: /tmp/tmp_u6zxgdz.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = (float)sum / l.size();\n    return median;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6z7xe4ei: /tmp/tmp6z7xe4ei.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midVal = l[mid];\n    float\
    \ leftMedian = median(l.slice(0, mid));\n    float rightMedian = median(l.slice(mid\
    \ + 1, l.size()));\n    return midVal + (leftMedian + rightMedian) / 2.0;\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpukaeie3u.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpukaeie3u.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018slice\u2019\n   11 |     float leftMedian = median(l.slice(0,\
    \ mid));\n      |                                 ^~~~~\n/tmp/tmpukaeie3u.cpp:12:34:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018slice\u2019\
    \n   12 |     float rightMedian = median(l.slice(mid + 1, l.size()));\n      |\
    \                                  ^~~~~\n"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjso0pact: /tmp/tmpjso0pact.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid];\n    float\
    \ rightval = l[n - 1];\n    for (long long i = mid + 1; i < n; i++) {\n      \
    \  if (l[i] < leftval) leftval = l[i];\n        if (l[i] > rightval) rightval\
    \ = l[i];\n    }\n    return (leftval + rightval) / 2.0;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp15il7vm5: /tmp/tmp15il7vm5.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midVal = l[mid];\n    float\
    \ leftMedian = median(l.substr(0, mid));\n    float rightMedian = median(l.substr(mid\
    \ + 1, l.size() - mid));\n    return (midVal + leftMedian + rightMedian) / 3;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2ubjqbm.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpq2ubjqbm.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018substr\u2019\n   11 |     float leftMedian = median(l.substr(0,\
    \ mid));\n      |                                 ^~~~~~\n/tmp/tmpq2ubjqbm.cpp:12:34:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018substr\u2019\
    \n   12 |     float rightMedian = median(l.substr(mid + 1, l.size() - mid));\n\
    \      |                                  ^~~~~~\n"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return 0;\n    long long\
    \ int mid = n / 2;\n    long long int left = 0, right = mid;\n    float midVal\
    \ = l[mid];\n    while (left < right) {\n        while (l[left] < midVal) left++;\n\
    \        while (l[right] > midVal) right--;\n        if (left >= right) break;\n\
    \        long long int temp = left;\n        left = right;\n        right = temp;\n\
    \    }\n    if (left >= right) return midVal;\n    else return l[left];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpq7huykvo: /tmp/tmpq7huykvo.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - 1];\n\
    \    if (left == right) {\n        return left;\n    }\n    if (left > right)\
    \ {\n        return left;\n    }\n    return right;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwe_rm64h: /tmp/tmpwe_rm64h.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    else\n        return l[ll\
    \ / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr_bhyhww: /tmp/tmpr_bhyhww.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n    float\
    \ rightval = l[mid+1];\n    if (leftval > rightval)\n        return midval;\n\
    \    else\n        return rightval;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4cgfnxak: /tmp/tmp4cgfnxak.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1i8bnqr1: /tmp/tmp1i8bnqr1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = mid;\n    long\
    \ long right = mid;\n    while (left < l.size()) {\n        mid = (left + right)\
    \ / 2;\n        if (l[mid] < l[left]) {\n            left = mid + 1;\n       \
    \ } else {\n            right = mid;\n        }\n    }\n    return l[left];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n % 2 == 0);\n  long long mid = n\
    \ / 2;\n  long long l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n  for (long i = 0; i < n;\
    \ i++) {\n    if (i == mid) {\n      l1 = l2 = l3 = l4 = l[i];\n    } else {\n\
    \      l1 = l2;\n      l2 = l3;\n      l3 = l4;\n      l4 = l[i];\n    }\n  }\n\
    \  float median1 = l1 + l2 + l3 + l4;\n  float median2 = l1 + l2 + l3 + l4;\n\
    \  if (n % 2 == 0) {\n    median2 = median1;\n  }\n  return median2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8qpg8fo6: /tmp/tmp8qpg8fo6.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size == 0) return 0.0;\n    long\
    \ long mid = size / 2;\n    float left = (float)l[mid];\n    float right = (float)l[size\
    \ - 1];\n    return left + (right - left) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphftwoktd: /tmp/tmphftwoktd.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long int n = l.size();\n  long long int mid = n / 2;\n  long long\
    \ int left = 0, right = mid;\n  float midVal = l[mid];\n  while (left < right)\
    \ {\n    while (left < right && l[left] <= midVal) left++;\n    while (left <\
    \ right && l[right] > midVal) right--;\n    if (left < right) {\n      long long\
    \ int temp = l[left];\n      l[left] = l[right];\n      l[right] = temp;\n   \
    \ }\n  }\n  return l[left];\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaixcwdmv: /tmp/tmpaixcwdmv.cpp:27: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long n = l.size();\n  if (n % 2 == 0) return l[n/2];\n  else return\
    \ (float(l[n/2 - 1]) + float(l[n/2]))/2.0;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpwb3zy05a: /tmp/tmpwb3zy05a.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll/2]\
    \ + l[ll/2-1];\n    return l[ll/2];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0sg63vfz: /tmp/tmp0sg63vfz.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long mid = l.size() / 2;\n    if (l.size()\
    \ % 2 == 0) {\n        return l[mid];\n    } else {\n        return (l[mid] +\
    \ l[mid]) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpu3_r7yy5: /tmp/tmpu3_r7yy5.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n\
    \    while (left < right) {\n        while (left < right && l[left] <= midval)\
    \ left++;\n        while (left < right && l[right] >= midval) right--;\n     \
    \   if (left < right) std::swap(l[left], l[right]);\n    }\n    return midval;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp__daxwmp: /tmp/tmp__daxwmp.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left < right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsp190zxl: /tmp/tmpsp190zxl.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    float median = 0;\n    for (long long i =\
    \ 0; i < l.size(); i++) {\n        sum += l[i];\n    }\n    median = (float)sum\
    \ / l.size();\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpy6kmk89q: /tmp/tmpy6kmk89q.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    if (l2 == 0) return l[0];\n  \
    \  if (l1 > l2) std::swap(l1, l2);\n    long mid1 = l1 + l2 / 2;\n    long mid2\
    \ = mid1 + l2 / 2;\n    long mid3 = mid1 + l2 / 2;\n    long mid4 = mid1 + l2\
    \ / 2;\n    long mid5 = mid1 + l2 / 2;\n    long mid6 = mid1 + l2 / 2;\n    long\
    \ mid7 = mid1 + l2 / 2;\n    long mid8 = mid1 + l2 / 2;\n    long mid9 = mid1\
    \ + l2 / 2;\n    long mid10 = mid1 + l2 / 2;\n    long mid11 = mid1 + l2 / 2;\n\
    \    long mid12 = mid1 + l2 / 2;\n    long mid13 = mid1 + l2 / 2;\n    long mid14\
    \ = mid1 + l2 / 2;\n    long mid15 = mid1 + l2 / 2;\n    long mid16 = mid1 + l2\
    \ / 2;\n    long mid17 = mid1 + l2 / 2;\n    long mid18 = mid1 + l2 / 2;\n   \
    \ long mid19 = mid1 + l2 / 2;\n    long mid20 = mid1 + l2 / 2;\n    long mid21\
    \ = mid1 + l2 / 2;\n    long mid22 = mid1 + l2 / 2;\n    long mid23 = mid1 + l2\
    \ / 2;\n    long mid24 = mid1 + l2 / 2;\n    long mid25 = mid1 + l2 / 2;\n   \
    \ long mid26 = mid1 + l2 / 2;\n    long mid27 = mid1 + l2 / 2;\n    long mid28\
    \ = mid1 + l2 / 2;\n    long mid29 = mid1 + l2 / 2;\n    long mid30 = mid1 + l2\
    \ / 2;\n    long mid31 = mid1 + l2 / 2;\n    long mid32 = mid1 + l2 / 2;\n   \
    \ long mid33 = mid1 + l2 / 2;\n    long mid34 = mid1 + l2 / 2;\n    long mid35\
    \ = mid1 + l2 / 2;\n    long mid36 = mid1 + l2 / 2;\n    long mid37 = mid1 + l2\
    \ / 2;\n    long mid38 = mid1 + l2 / 2;\n    long mid39 = mid1 + l2 / 2;\n   \
    \ long mid40 = mid1 + l2 / 2;\n    long mid41 = mid1 + l2 / 2;\n    long mid42\
    \ = mid1 + l2 / 2;\n    long mid43 = mid1 + \n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdh84di2f.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpdh84di2f.cpp:59:1: error: expected primary-expression before \u2018\
    }\u2019 token\n   59 | }\n      | ^\n/tmp/tmpdh84di2f.cpp:59:1: warning: control\
    \ reaches end of non-void function [-Wreturn-type]\n   59 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    assert(ll > 0);\n    if (ll % 2 == 0)\n\
    \        return ((l[ll / 2 - 1] + l[ll / 2]) / 2.0);\n    else\n        return\
    \ l[ll / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjuckeypq: /tmp/tmpjuckeypq.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n    float\
    \ rightval = l[mid+1];\n    if (leftval > rightval) {\n        return midval;\n\
    \    } else {\n        return rightval;\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpfb5g4tf6: /tmp/tmpfb5g4tf6.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = mid;\n    long\
    \ long right = mid;\n    while (left < l.size()) {\n        mid = (left + right)\
    \ / 2;\n        if (l[mid] < l[left]) {\n            left = mid + 1;\n       \
    \ } else {\n            right = mid;\n        }\n    }\n    return l[left];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[0];\n    if (l1 < l2) return l1;\n    return l2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6tb2ca32: /tmp/tmp6tb2ca32.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    assert(size % 2 == 0);\n    float\
    \ mid = size / 2;\n    float left = 0;\n    float right = mid;\n    float median;\n\
    \    while (left < right) {\n        median = l[left] + l[right];\n        if\
    \ (median > mid) {\n            right = mid;\n        } else {\n            left\
    \ = mid;\n        }\n        mid = (left + right) / 2;\n    }\n    return median;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0g5dlrf4: /tmp/tmp0g5dlrf4.cpp:10: float median(std::vector<long int>):
    Assertion `size % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return 0;\n    long long\
    \ int mid = n / 2;\n    float median = l[mid];\n    for (long long int i = 1;\
    \ i < n; i++) {\n        if (l[i] < median) {\n            median = l[i];\n  \
    \      }\n    }\n    return median;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4hyit98t: /tmp/tmp4hyit98t.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n    float\
    \ rightval = l[mid+1];\n    if (leftval > rightval)\n        return midval;\n\
    \    else\n        return rightval;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4cgfnxak: /tmp/tmp4cgfnxak.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    long long mid = n / 2;\n    long long\
    \ l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n    for (long i = 0; i < n; i++) {\n      \
    \  if (l2 < l1) {\n            l3 = l2;\n            l2 = l1;\n            l1\
    \ = l3;\n        }\n        if (l4 < l3) {\n            l4 = l3;\n           \
    \ l3 = l4;\n            l4 = l2;\n        }\n        if (l[i] < l1) {\n      \
    \      l2 = l1;\n            l1 = l[i];\n        } else if (l[i] < l2) {\n   \
    \         l3 = l2;\n            l2 = l[i];\n        } else if (l[i] < l3) {\n\
    \            l4 = l3;\n            l3 = l[i];\n        } else if (l[i] < l4) {\n\
    \            l2 = l3;\n            l3 = l[i];\n            l2 = l4;\n        }\n\
    \    }\n    if (l1 < l2) {\n        return l1;\n    } else if (l2 < l3) {\n  \
    \      return l2;\n    } else if (l3 < l4) {\n        return l3;\n    } else {\n\
    \        return l4;\n    }\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphibqaqo6: /tmp/tmphibqaqo6.cpp:50: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    assert(size % 2 == 0);\n    float\
    \ mid = size / 2;\n    float left = 0;\n    float right = mid;\n    float median;\n\
    \    while (left < right) {\n        median = l[left] + l[right];\n        if\
    \ (median > mid) {\n            right = mid;\n        } else {\n            left\
    \ = mid;\n        }\n        mid = (left + right) / 2;\n    }\n    return median;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0g5dlrf4: /tmp/tmp0g5dlrf4.cpp:10: float median(std::vector<long int>):
    Assertion `size % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return a + (b - a)\
    \ / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaipayojs: /tmp/tmpaipayojs.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    else\n        return (l[ll / 2]);\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp45v2gtdi: /tmp/tmp45v2gtdi.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    assert(size % 2 == 0);\n    float\
    \ mid = size / 2;\n    float left = l[mid];\n    float right = l[size - 1];\n\
    \    if (left > right) {\n        return left;\n    } else {\n        return right;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpvmwik2j2: /tmp/tmpvmwik2j2.cpp:10: float median(std::vector<long int>):
    Assertion `size % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    if (l2 ==\
    \ 0) return l[0];\n    if (l2 == 1) return l[0];\n    if (l1 < l2) std::swap(l1,\
    \ l2);\n    float mid1 = l1 / n;\n    float mid2 = l2 / n;\n    float mid = mid1\
    \ + mid2;\n    return mid;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpofolo1ls.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpofolo1ls.cpp:19:11: error: conflicting declaration \u2018float mid\u2019\
    \n   19 |     float mid = mid1 + mid2;\n      |           ^~~\n/tmp/tmpofolo1ls.cpp:11:15:\
    \ note: previous declaration as \u2018long long int mid\u2019\n   11 |     long\
    \ long mid = n / 2;\n      |               ^~~\n"
  stdout: ''
  timestamp: 1660092140
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    while (left < right) {\n \
    \       long long mid1 = (left + right) / 2;\n        long long mid2 = mid + 1;\n\
    \        if (mid2 > n) {\n            mid2 = n;\n        }\n        if (mid2 >\
    \ mid1) {\n            long long mid3 = mid2 + 1;\n            if (mid3 > n) {\n\
    \                mid3 = n;\n            }\n            long long mid4 = mid3 +\
    \ 1;\n            if (mid4 > n) {\n                mid4 = n;\n            }\n\
    \            long long mid5 = mid4 + 1;\n            if (mid5 > n) {\n       \
    \         mid5 = n;\n            }\n            long long mid6 = mid5 + 1;\n \
    \           if (mid6 > n) {\n                mid6 = n;\n            }\n      \
    \      long long mid7 = mid6 + 1;\n            if (mid7 > n) {\n             \
    \   mid7 = n;\n            }\n            long long mid8 = mid7 + 1;\n       \
    \     if (mid8 > n) {\n                mid8 = n;\n            }\n            long\
    \ long mid9 = mid8 + 1;\n            if (mid9 > n) {\n                mid9 = n;\n\
    \            }\n            long long mid10 = mid9 + 1;\n            if (mid10\
    \ > n) {\n                mid10 = n;\n            }\n            long long mid11\
    \ = mid10 + 1;\n            if (mid11 > n) {\n                mid11 = n;\n   \
    \         }\n            long long mid12 = mid11 + 1;\n            if (mid12 >\
    \ n) {\n                mid12 = n;\n            }\n            long long mid13\
    \ = mid12 + 1;\n            if (mid13 > n) {\n                mid13 = n;\n   \
    \         }\n            long long mid14 = mid13 + 1;\n            if (mid14 >\
    \ n) {\n                mid14 = n;\n            }\n            long long mid15\
    \ = mid14 + 1;\n            if (mid15 > n) {\n                mid15 = n;\n   \
    \         }\n            long long mid16 = mid15 + 1;\n            if (mid16 >\
    \ n) {\n                mid16 = n;\n            }\n            long long mid17\
    \ = mid16 + 1;\n            if (mid17 > n) {\n                mid17 = n;\n   \
    \         }\n            long long mid18 = mid17 + 1;\n            if (mid18 >\
    \ n) {\n                mid18 = n;\n            }\n            long long mid19\
    \ = mid18 + 1;\n            if (mid19 > n) {\n                mid19 = n;\n   \
    \         }\n            long long mid20 = mid19 + 1;\n            if (mid20 >\
    \ n) {\n                mid20 = n;\n            }\n            long long mid21\
    \ = mid20 + 1;\n            if (mid21 > n) {\n                mid21 = n;\n   \
    \         }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxmiuq36t.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpxmiuq36t.cpp:97:12: error: a function-definition is not allowed here\
    \ before \u2018{\u2019 token\n   97 | int main() {\n      |            ^\n/tmp/tmpxmiuq36t.cpp:104:1:\
    \ error: expected \u2018}\u2019 at end of input\n  104 | }\n      | ^\n/tmp/tmpxmiuq36t.cpp:13:26:\
    \ note: to match this \u2018{\u2019\n   13 |     while (left < right) {\n    \
    \  |                          ^\n/tmp/tmpxmiuq36t.cpp:104:1: error: expected \u2018\
    }\u2019 at end of input\n  104 | }\n      | ^\n/tmp/tmpxmiuq36t.cpp:8:35: note:\
    \ to match this \u2018{\u2019\n    8 | float median(std::vector<long> l) {\n \
    \     |                                   ^\n/tmp/tmpxmiuq36t.cpp:104:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n  104 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660092140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        return\
    \ ((l[size / 2 - 1] + l[size / 2]) / 2.0);\n    } else {\n        return l[size\
    \ / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpk6r9s8ha: /tmp/tmpk6r9s8ha.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    float a = l[mid];\n    float b = l[n - 1];\n    return a + (b - a) * (0.5f\
    \ / n);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgcfi2sbo: /tmp/tmpgcfi2sbo.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    long mid = n / 2;\n    if (n % 2 == 0) {\n\
    \        return std::min(l[mid], l[mid-1]);\n    }\n    else {\n        return\
    \ std::max(l[mid], l[mid-1]);\n    }\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmph106ldrj: /tmp/tmph106ldrj.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - mid];\n\
    \    return left + (right - left) / 2;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpowoi87t1: /tmp/tmpowoi87t1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[n - 1];\n    float\
    \ rightval = l[0];\n    if (leftval > midval) {\n        return midval;\n    }\
    \ else if (rightval < midval) {\n        return midval;\n    } else {\n      \
    \  return leftval;\n    }\n}\nint main() {\n    auto candidate = median;\n   \
    \ assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpj7pknn8o: /tmp/tmpj7pknn8o.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1)\n        return l[ll\
    \ / 2 - 1] + l[ll / 2];\n    float mid = l[ll / 2];\n    float left = (l[ll /\
    \ 2 - 1] + l[ll / 2 - 1]) / 2;\n    float right = (l[ll / 2] + l[ll / 2]) / 2;\n\
    \    return left < right ? left : right;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpalnu3sjr: /tmp/tmpalnu3sjr.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    long\
    \ long left = l[mid];\n    long long right = l[mid+1];\n    if (left > right)\
    \ {\n        return left;\n    } else {\n        return right;\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_auj_7w9: /tmp/tmp_auj_7w9.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n    float\
    \ rightval = l[mid+1];\n    if (leftval < midval && midval < rightval) {\n   \
    \     return midval;\n    }\n    if (leftval < midval) {\n        return median(l,\
    \ mid - 1, mid);\n    }\n    if (midval < rightval) {\n        return median(l,\
    \ mid, mid+1);\n    }\n    return midval;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqzfmnq24.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpqzfmnq24.cpp:19:38: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   19 |         return median(l, mid -\
    \ 1, mid);\n      |                                      ^\n/tmp/tmpqzfmnq24.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n/tmp/tmpqzfmnq24.cpp:22:36: error: too many arguments to function\
    \ \u2018float median(std::vector<long int>)\u2019\n   22 |         return median(l,\
    \ mid, mid+1);\n      |                                    ^\n/tmp/tmpqzfmnq24.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n"
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return l[0];\n    long\
    \ long int mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[n -\
    \ 1];\n    float rightval = l[mid];\n    if (leftval > rightval) return midval;\n\
    \    else return rightval;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_ujgesrh: /tmp/tmp_ujgesrh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    if (a > b)\
    \ return median(l);\n    return a + 0.5 * (b - a);\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjxrh0gcd: /tmp/tmpjxrh0gcd.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long left = 0, right = mid;\n    while (left < right) {\n\
    \        long long mid = (left + right) / 2;\n        if (l[mid] <= l[mid+1])\
    \ left = mid + 1;\n        else right = mid - 1;\n    }\n    return l[mid];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpcng5cgma: /tmp/tmpcng5cgma.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    if (a > b)\
    \ std::swap(a, b);\n    float c = a + b / 2;\n    return c;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpolgzub2d: /tmp/tmpolgzub2d.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp66nb65gf: /tmp/tmp66nb65gf.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval < midval\
    \ && rightval < midval) {\n        return midval;\n    }\n    if (leftval < midval)\
    \ {\n        return leftval;\n    }\n    return rightval;\n}\nint main() {\n \
    \   auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp9ih7nbrp: /tmp/tmp9ih7nbrp.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    float mid = static_cast<float>(l[0]\
    \ + l[n-1]) / 2.0;\n    float low = l[0];\n    float high = l[n-1];\n    for (long\
    \ i = 1; i < n; i++) {\n        float mid2 = static_cast<float>(l[i] + l[i-1])\
    \ / 2.0;\n        if (mid > mid2) {\n            low = l[i];\n        } else if\
    \ (mid < mid2) {\n            high = l[i];\n        }\n    }\n    return low +\
    \ (high - low) / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqkmcnz38: /tmp/tmpqkmcnz38.cpp:26: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_6h5gfdg: /tmp/tmp_6h5gfdg.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid + 1];\n    if (left > right) {\n        return left;\n  \
    \  } else {\n        return right;\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpktfob_j1: /tmp/tmpktfob_j1.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 1);\n    long long int\
    \ mid = n / 2;\n    long long int left = 0, right = mid;\n    float midval = l[mid];\n\
    \    while (left < right) {\n        long long int midval1 = l[left];\n      \
    \  long long int midval2 = l[right];\n        if (midval1 < midval2) {\n     \
    \       left++;\n        } else if (midval1 > midval2) {\n            right--;\n\
    \        } else {\n            return midval;\n        }\n    }\n    return midval;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaqowu83n: /tmp/tmpaqowu83n.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   float left = (float)l[mid];\n    float right = (float)l[n - 1];\n    if (left\
    \ > right) {\n        return left;\n    }\n    return right;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnk01z_9e: /tmp/tmpnk01z_9e.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midVal = l[mid];\n    float\
    \ leftMedian = median(l.subvector(0, mid));\n    float rightMedian = median(l.subvector(mid,\
    \ l.size()));\n    return midVal + (leftMedian + rightMedian) / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp010glvof.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp010glvof.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n\
    \   11 |     float leftMedian = median(l.subvector(0, mid));\n      |        \
    \                         ^~~~~~~~~\n      |                                 vector\n\
    /tmp/tmp010glvof.cpp:12:34: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n  \
    \ 12 |     float rightMedian = median(l.subvector(mid, l.size()));\n      |  \
    \                                ^~~~~~~~~\n      |                          \
    \        vector\n"
  stdout: ''
  timestamp: 1660092140
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float m1 = l[mid];\n    float m2 = l[n - 1];\n    if (m2 <\
    \ m1) return m1;\n    return m2;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpuu6jeesi: /tmp/tmpuu6jeesi.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    assert(count != 0);\n   \
    \ return static_cast<float>(sum) / count;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbb3hhvom: /tmp/tmpbb3hhvom.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8yi3_1g5: /tmp/tmp8yi3_1g5.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  long long mid = n / 2;\n  long long left\
    \ = 0, right = mid;\n  float midval = l[mid];\n  while (left < right) {\n    midval\
    \ = (l[left] + l[right]) / 2;\n    if (midval < mid) {\n      left++;\n    } else\
    \ {\n      right--;\n    }\n  }\n  return midval;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbv6d7ydn: /tmp/tmpbv6d7ydn.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ ((l[n/2] + l[n/2-1])/2.0);\n    }\n    else {\n        return (l[n/2-1] + l[n/2])\
    \ / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1emw1eiw: /tmp/tmp1emw1eiw.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return 0;\n    long long\
    \ int mid = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n\
    \ - 1];\n    if (left > right) return left;\n    return right;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxs0dkvjn: /tmp/tmpxs0dkvjn.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n\
    \    float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n\
    \    else return rightval;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd92umgyo: /tmp/tmpd92umgyo.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n  \
    \  return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpeypm94d_: /tmp/tmpeypm94d_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return std::median(l.begin(),\
    \ l.begin() + n / 2);\n    } else {\n        return std::median(l.begin(), l.begin()\
    \ + n / 2 + 1);\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppk0_lb0o.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmppk0_lb0o.cpp:11:21: error: \u2018median\u2019 is not a member of \u2018\
    std\u2019; did you mean \u2018median\u2019?\n   11 |         return std::median(l.begin(),\
    \ l.begin() + n / 2);\n      |                     ^~~~~~\n/tmp/tmppk0_lb0o.cpp:8:7:\
    \ note: \u2018median\u2019 declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmppk0_lb0o.cpp:13:21: error: \u2018median\u2019\
    \ is not a member of \u2018std\u2019; did you mean \u2018median\u2019?\n   13\
    \ |         return std::median(l.begin(), l.begin() + n / 2 + 1);\n      |   \
    \                  ^~~~~~\n/tmp/tmppk0_lb0o.cpp:8:7: note: \u2018median\u2019\
    \ declared here\n    8 | float median(std::vector<long> l) {\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        long\
    \ long mid = size / 2;\n        float midval = l[mid];\n        float leftval\
    \ = l[mid-1];\n        float rightval = l[mid+1];\n        if (leftval > rightval)\
    \ {\n            return midval;\n        } else {\n            return rightval;\n\
    \        }\n    } else {\n        long long mid = size / 2;\n        float midval\
    \ = l[mid];\n        float leftval = l[mid-1];\n        float rightval = l[mid+1];\n\
    \        if (leftval < rightval) {\n            return midval;\n        } else\
    \ {\n            return rightval;\n        }\n    }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmtk42yv7: /tmp/tmpmtk42yv7.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    long long int\
    \ mid = n / 2;\n    float midval = l[mid];\n    float lower = l[mid-1];\n    float\
    \ upper = l[mid];\n    if (n == 1) {\n        return midval;\n    }\n    if (midval\
    \ < lower) {\n        return median(l);\n    }\n    if (midval > upper) {\n  \
    \      return median(l);\n    }\n    if (midval == lower) {\n        return midval;\n\
    \    }\n    if (midval == upper) {\n        return midval;\n    }\n    return\
    \ ((midval + lower)/2);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl_ngwe6l: /tmp/tmpl_ngwe6l.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long sum = 0;\n  long long count = 0;\n  for (long long i = 0;\
    \ i < l.size(); i++) {\n    sum += l[i];\n    count++;\n  }\n  if (count == 0)\
    \ return 0.0;\n  float avg = sum / count;\n  long long mid = count / 2;\n  float\
    \ median = l[mid];\n  while (count > 1) {\n    if (l[mid - 1] < l[mid]) mid -=\
    \ 1;\n    else mid += 1;\n    count--;\n  }\n  return avg + median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpeikz2uxu: /tmp/tmpeikz2uxu.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    float median = 0;\n    for (auto i : l) {\n\
    \        sum += i;\n    }\n    median = (float)sum / l.size();\n    return median;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnfiqvxzz: /tmp/tmpnfiqvxzz.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l[0] / 2;\n    float low\
    \ = l[0];\n    float high = l[0];\n    for (long long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] < low) {\n            low = l[i];\n        } else if (l[i]\
    \ > high) {\n            high = l[i];\n        }\n    }\n    if (low == high)\
    \ {\n        return low;\n    }\n    if (low + high == mid) {\n        return\
    \ low;\n    }\n    if (mid - low == high - mid) {\n        return mid;\n    }\n\
    \    if (mid - low < high - mid) {\n        return low;\n    }\n    return high;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp53r0xnjr: /tmp/tmp53r0xnjr.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        float x =\
    \ (l[n/2-1] + l[n/2]) / 2.0;\n        return x;\n    }\n    else {\n        float\
    \ x = (l[n/2-1] + l[n/2]) / 2.0;\n        float y = (l[n/2+1] + l[n/2]) / 2.0;\n\
    \        return (x == y) ? x : y;\n    }\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp8u_x8p3k: /tmp/tmp8u_x8p3k.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n\
    \ - mid];\n    if (left > right) return left;\n    return right;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp7baotnks: /tmp/tmp7baotnks.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    float\
    \ a = l[mid];\n    float b = l[mid+1];\n    if (a > b) return a;\n    return b;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp2a8o0gak: /tmp/tmp2a8o0gak.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ mid = n / 2;\n        float a = l[mid];\n        float b = l[mid-1];\n     \
    \   return (b + a) / 2.0;\n    }\n    else {\n        long long mid = n / 2;\n\
    \        float a = l[mid];\n        float b = l[mid-1];\n        return (b + a\
    \ + 1) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxnrek0p1: /tmp/tmpxnrek0p1.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int mid = l.size() / 2;\n    long long int left = l[mid];\n\
    \    long long int right = l[mid+1];\n    if (left > right) {\n        return\
    \ left;\n    }\n    return right;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjtswjhjm: /tmp/tmpjtswjhjm.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp28bjgnjh: /tmp/tmp28bjgnjh.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return 0;\n    long long\
    \ int mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return\
    \ ((a + b) / 2.0);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpoa7gs33d: /tmp/tmpoa7gs33d.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return (l[ll/2]\
    \ + l[ll/2-1])/2.0;\n    return l[ll/2];\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpg_rjdkb9: /tmp/tmpg_rjdkb9.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2-1]\
    \ + (l[n/2] - l[n/2-1])/2.0;\n    } else {\n        return l[n/2];\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdii_f3p4: /tmp/tmpdii_f3p4.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    long long int left = l[mid];\n    long long int right\
    \ = l[n - mid];\n    if (left > right) return median(l);\n    else return (left\
    \ + right) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpz5zk9jaj: /tmp/tmpz5zk9jaj.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    } else {\n        return leftval;\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp64f1g2wb: /tmp/tmp64f1g2wb.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    long long int\
    \ mid = n / 2;\n    long long int left = 0, right = mid;\n    long long int midVal\
    \ = l[mid];\n    while (left < right) {\n        long long int midVal1 = l[left];\n\
    \        long long int midVal2 = l[right];\n        if (midVal1 < midVal2) {\n\
    \            left++;\n        } else if (midVal1 > midVal2) {\n            right--;\n\
    \        } else {\n            return midVal1;\n        }\n    }\n    return midVal;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpx3b0w4ks: /tmp/tmpx3b0w4ks.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ l[n / 2];\n    } else {\n        return (l[n / 2] + l[n / 2 - 1]) / 2.0;\n \
    \   }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpngbgedlk: /tmp/tmpngbgedlk.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = (float)sum / l.size();\n    return median;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6z7xe4ei: /tmp/tmp6z7xe4ei.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_6h5gfdg: /tmp/tmp_6h5gfdg.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp66nb65gf: /tmp/tmp66nb65gf.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float m = (float)l[mid];\n    for (long long i = mid; i <\
    \ n; i++) {\n        if (l[i] < m) m = l[i];\n    }\n    return m;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl515dbru: /tmp/tmpl515dbru.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    assert(size % 2 == 0);\n    float\
    \ mid = size / 2;\n    float left = 0;\n    float right = mid;\n    float median;\n\
    \    while (left < right) {\n        median = (left + right) / 2;\n        if\
    \ (l[mid] < median) {\n            right = median - 1;\n        } else {\n   \
    \         left = median + 1;\n        }\n    }\n    return left;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplcood3rs: /tmp/tmplcood3rs.cpp:10: float median(std::vector<long int>):
    Assertion `size % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long m1 = mid;\n    long long m2 = mid + 1;\n    long long\
    \ m3 = mid + 2;\n    long long m4 = mid + 3;\n    long long m5 = mid + 4;\n  \
    \  long long m6 = mid + 5;\n    long long m7 = mid + 6;\n    long long m8 = mid\
    \ + 7;\n    long long m9 = mid + 8;\n    long long m10 = mid + 9;\n    long long\
    \ m11 = mid + 10;\n    long long m12 = mid + 11;\n    long long m13 = mid + 12;\n\
    \    long long m14 = mid + 13;\n    long long m15 = mid + 14;\n    long long m16\
    \ = mid + 15;\n    long long m17 = mid + 16;\n    long long m18 = mid + 17;\n\
    \    long long m19 = mid + 18;\n    long long m20 = mid + 19;\n    long long m21\
    \ = mid + 20;\n    long long m22 = mid + 21;\n    long long m23 = mid + 22;\n\
    \    long long m24 = mid + 23;\n    long long m25 = mid + 24;\n    long long m26\
    \ = mid + 25;\n    long long m27 = mid + 26;\n    long long m28 = mid + 27;\n\
    \    long long m29 = mid + 28;\n    long long m30 = mid + 29;\n    long long m31\
    \ = mid + 30;\n    long long m32 = mid + 31;\n    long long m33 = mid + 32;\n\
    \    long long m34 = mid + 33;\n    long long m35 = mid + 34;\n    long long m36\
    \ = mid + 35;\n    long long m37 = mid + 36;\n    long long m38 = mid + 37;\n\
    \    long long m39 = mid + 38;\n    long long m40 = mid + 39;\n    long long m41\
    \ = mid + 40;\n    long long m42 = mid + 41;\n    long long m43 = mid + 42;\n\
    \    long long m44 = mid + 43;\n    long long m45 = mid + 44;\n    long long m46\
    \ = mid + 45;\n    long long m47 = mid + 46;\n    long long m48 = mid + 47;\n\
    \    long long m49 = mid + 48;\n    long long m50 = mid + 49;\n    long long m51\
    \ = m\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5f5jw8u.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpr5f5jw8u.cpp:62:21: error: \u2018m\u2019 was not declared in this scope;\
    \ did you mean \u2018m9\u2019?\n   62 |     long long m51 = m\n      |       \
    \              ^\n      |                     m9\n/tmp/tmpr5f5jw8u.cpp:63:1: warning:\
    \ control reaches end of non-void function [-Wreturn-type]\n   63 | }\n      |\
    \ ^\n"
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n  \
    \  float rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n  \
    \  return rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpeypm94d_: /tmp/tmpeypm94d_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 1) {\n        return l[n/2];\n\
    \    }\n    float mid = l[n/2];\n    float leftMedian = median(l.sublist(0, n/2));\n\
    \    float rightMedian = median(l.sublist(n/2, n));\n    return mid+((leftMedian+rightMedian)/2.0);\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplbvmq4t5.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmplbvmq4t5.cpp:14:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018sublist\u2019\n   14 |     float leftMedian = median(l.sublist(0,\
    \ n/2));\n      |                                 ^~~~~~~\n/tmp/tmplbvmq4t5.cpp:15:34:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018sublist\u2019\
    \n   15 |     float rightMedian = median(l.sublist(n/2, n));\n      |        \
    \                          ^~~~~~~\n"
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1i8bnqr1: /tmp/tmp1i8bnqr1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    return l[ll / 2];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpl8b5li3v: /tmp/tmpl8b5li3v.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    } else {\n        return (l[n/2] + l[n/2-1])/2.0;\n    }\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjso0pact: /tmp/tmpjso0pact.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size == 0) return 0.0;\n    long\
    \ long mid = size / 2;\n    long long l1 = mid;\n    long long l2 = size - mid;\n\
    \    float l3 = l1;\n    float l4 = l2;\n    float l5 = l1;\n    float l6 = l2;\n\
    \    float l7 = l1;\n    float l8 = l2;\n    float l9 = l1;\n    float l10 = l2;\n\
    \    float l11 = l1;\n    float l12 = l2;\n    float l13 = l1;\n    float l14\
    \ = l2;\n    float l15 = l1;\n    float l16 = l2;\n    float l17 = l1;\n    float\
    \ l18 = l2;\n    float l19 = l1;\n    float l20 = l2;\n    float l21 = l1;\n \
    \   float l22 = l2;\n    float l23 = l1;\n    float l24 = l2;\n    float l25 =\
    \ l1;\n    float l26 = l2;\n    float l27 = l1;\n    float l28 = l2;\n    float\
    \ l29 = l1;\n    float l30 = l2;\n    float l31 = l1;\n    float l32 = l2;\n \
    \   float l33 = l1;\n    float l34 = l2;\n    float l35 = l1;\n    float l36 =\
    \ l2;\n    float l37 = l1;\n    float l38 = l2;\n    float l39 = l1;\n    float\
    \ l40 = l2;\n    float l41 = l1;\n    float l42 = l2;\n    float l43 = l1;\n \
    \   float l44 = l2;\n    float l45 = l1;\n    float l46 = l2;\n    float l47 =\
    \ l1;\n    float l48 = l2;\n    float l49 = l1;\n    float l50 = l2;\n    float\
    \ l51 = l1;\n    float l52 = l2;\n    float l53 = l1;\n    float l54 = l2;\n \
    \   float l55 = l1;\n    float l56 = l2;\n    float l57 = l1;\n    float l58 =\
    \ l2;\n    float l59 = l1;\n    float l60 = l2;\n    float l61 = l1;\n    float\
    \ l62 = l2;\n    float l\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxw81l5ca.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpxw81l5ca.cpp:75:1: error: expected initializer before \u2018}\u2019\
    \ token\n   75 | }\n      | ^\n/tmp/tmpxw81l5ca.cpp:75:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   75 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    long long int left = l[mid];\n    long long int right\
    \ = l[n - 1];\n    if (left >= right) return left;\n    return left + 0.5 * (right\
    \ - left);\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxatnxc_c: /tmp/tmpxatnxc_c.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 1) return 0;\n    long mid = n / 2;\n\
    \    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return l1;\n\
    \    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkn5troh9: /tmp/tmpkn5troh9.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5uvbiw_e: /tmp/tmp5uvbiw_e.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmptri371k6: /tmp/tmptri371k6.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long sum = 0;\n  for (auto i : l) {\n    sum += i;\n  }\n  assert(sum\
    \ % 2 == 0);\n  float mid = sum / 2;\n  float left = 0;\n  float right = mid;\n\
    \  while (left < right) {\n    mid = (left + right) / 2;\n    if (mid < 0)\n \
    \     mid += 1;\n    if (mid > sum / 2)\n      mid -= 1;\n    if (mid < sum /\
    \ 2)\n      left = mid + 1;\n    else\n      right = mid - 1;\n  }\n  return mid;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmphj8o7gnr: /tmp/tmphj8o7gnr.cpp:13: float median(std::vector<long int>):
    Assertion `sum % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long mid = l.size() / 2;\n    long left\
    \ = l[mid];\n    long right = l[mid+1];\n    if (left > right) {\n        return\
    \ left;\n    } else {\n        return right;\n    }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxgcv6_h8: /tmp/tmpxgcv6_h8.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll/2\
    \ - 1] + l[ll/2]) / 2.0);\n    } else {\n        return l[ll/2];\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnltr05se: /tmp/tmpnltr05se.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = static_cast<float>(sum) / static_cast<float>(l.size());\n\
    \    return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1i8bnqr1: /tmp/tmp1i8bnqr1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long left = l[mid];\n    long long right = l[n - 1];\n\
    \    if (left > right) return median(l);\n    if (left == right) return left;\n\
    \    return left + 0.5 * (right - left);\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpneqzojgc: /tmp/tmpneqzojgc.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  long long n = l.size();\n  assert(n >= 2);\n  long long mid = n / 2;\n\
    \  long long l1 = 0, l2 = mid;\n  float l3 = 0, l4 = 0;\n  for (long long i =\
    \ 0; i < n; i++) {\n    if (l2 < l1) {\n      l3 = l2;\n      l2 = l1;\n     \
    \ l1 = l3;\n    }\n    l4 = (l1 + l2) / 2;\n    if (l4 < l[i]) {\n      l3 = l4;\n\
    \    } else {\n      l2 = l4;\n    }\n  }\n  return l3;\n}\nint main() {\n   \
    \ auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpgs6s_6oz: /tmp/tmpgs6s_6oz.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = 0, l2 = mid;\n    float median = 0;\n    while (true)\
    \ {\n        if (l1 < l2) {\n            median = l1;\n            l1 += 1;\n\
    \        } else if (l1 > l2) {\n            median = l2;\n            l2 -= 1;\n\
    \        } else {\n            return median;\n        }\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpusbfbo6i: /tmp/tmpusbfbo6i.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    } else {\n        return rightval;\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplf8io4md: /tmp/tmplf8io4md.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    else\n        return l[ll\
    \ / 2];\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr_bhyhww: /tmp/tmpr_bhyhww.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    long long int\
    \ mid = n / 2;\n    long long int left = 0, right = mid;\n    long long int midVal\
    \ = l[mid];\n    while (left < right) {\n        long long int midValLeft = l[left];\n\
    \        long long int midValRight = l[right];\n        if (midVal < midValLeft)\
    \ {\n            left++;\n        } else if (midVal > midValRight) {\n       \
    \     right--;\n        } else {\n            return midVal;\n        }\n    }\n\
    \    return midVal;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdk4fsl38: /tmp/tmpdk4fsl38.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() > 0);\n    long long mid = l.size() / 2;\n    long\
    \ long left = mid;\n    long long right = mid;\n    while (left < l.size()) {\n\
    \        mid = (left + right) / 2;\n        if (l[mid] <= l[left]) {\n       \
    \     left = mid + 1;\n        } else {\n            right = mid;\n        }\n\
    \    }\n    if (left >= l.size()) {\n        return l[left];\n    }\n    if (right\
    \ >= l.size()) {\n        return l[right];\n    }\n    return l[left] + l[right]\
    \ / 2.0;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092148
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = sum / l.size();\n    return median;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpg10uylc3: /tmp/tmpg10uylc3.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midval = l[mid];\n    float\
    \ leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval > rightval)\
    \ {\n        return midval;\n    } else {\n        return rightval;\n    }\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmplf8io4md: /tmp/tmplf8io4md.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midVal = l[mid];\n    float\
    \ leftMedian = median(l.subvector(0, mid));\n    float rightMedian = median(l.subvector(mid+1,\
    \ l.size()));\n    return midVal + (leftMedian + rightMedian) / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7ru1qdv.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp_7ru1qdv.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n\
    \   11 |     float leftMedian = median(l.subvector(0, mid));\n      |        \
    \                         ^~~~~~~~~\n      |                                 vector\n\
    /tmp/tmp_7ru1qdv.cpp:12:34: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n  \
    \ 12 |     float rightMedian = median(l.subvector(mid+1, l.size()));\n      |\
    \                                  ^~~~~~~~~\n      |                        \
    \          vector\n"
  stdout: ''
  timestamp: 1660092143
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    long long int\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    if (a > b)\
    \ {\n        return a;\n    } else {\n        return b;\n    }\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsnowp1fc: /tmp/tmpsnowp1fc.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n - mid];\n\
    \    return left + (right - left) / 2;\n}\nint main() {\n    auto candidate =\
    \ median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmilh3xti: /tmp/tmpmilh3xti.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int mid = l.size() / 2;\n    float midval = l[mid];\n  \
    \  float leftval = l[mid-1];\n    float rightval = l[mid+1];\n    if (leftval\
    \ > rightval) {\n        return midval;\n    } else {\n        return rightval;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpz347e9dd: /tmp/tmpz347e9dd.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        std::swap(left, right);\n\
    \    }\n    return left + (right - left) / 2;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqagqjoda: /tmp/tmpqagqjoda.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    if (l.size() % 2 == 0) {\n    \
    \    return l[mid];\n    }\n    float a = l[mid];\n    float b = l[mid+1];\n \
    \   return ((a + b) / 2.0);\n}\nint main() {\n    auto candidate = median;\n \
    \   assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpppu9rei_: /tmp/tmpppu9rei_.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        return left;\n    }\n\
    \    return right;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp_6h5gfdg: /tmp/tmp_6h5gfdg.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float midVal = l[mid];\n    float\
    \ leftMedian = median(l.subvector(0, mid));\n    float rightMedian = median(l.subvector(mid\
    \ + 1, l.size()));\n    return midVal + (leftMedian + rightMedian) / 2;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcm71225k.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpcm71225k.cpp:11:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n\
    \   11 |     float leftMedian = median(l.subvector(0, mid));\n      |        \
    \                         ^~~~~~~~~\n      |                                 vector\n\
    /tmp/tmpcm71225k.cpp:12:34: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n  \
    \ 12 |     float rightMedian = median(l.subvector(mid + 1, l.size()));\n     \
    \ |                                  ^~~~~~~~~\n      |                      \
    \            vector\n"
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    return a +\
    \ (b - a) * ((n - 1) / 2.0);\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1yxctzri: /tmp/tmp1yxctzri.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 2);\n    float m = l[0];\n\
    \    for (long long int i = 1; i < n; i++) {\n        if (l[i] < m) {\n      \
    \      m = l[i];\n        }\n    }\n    return m;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpx5plmrq8: /tmp/tmpx5plmrq8.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l2 < l1) return\
    \ l1;\n    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpsi4tj7ja: /tmp/tmpsi4tj7ja.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (i == mid) {\n            if (l2 == l1) {\n      \
    \          l3 = l2;\n                l4 = l1;\n            } else {\n        \
    \        l3 = l1;\n                l4 = l2;\n            }\n        } else if\
    \ (i == mid - 1) {\n            if (l2 == l1) {\n                l3 = l2;\n  \
    \              l4 = l1;\n            } else {\n                l3 = l1;\n    \
    \            l4 = l2;\n            }\n        } else {\n            if (l2 ==\
    \ l1) {\n                l3 = l2;\n                l4 = l1;\n            } else\
    \ {\n                l3 = l1;\n                l4 = l2;\n            }\n     \
    \   }\n        l1 += l[i];\n        l2 += l[i];\n    }\n    if (l2 == l1) {\n\
    \        l3 = l2;\n        l4 = l1;\n    } else {\n        l3 = l1;\n        l4\
    \ = l2;\n    }\n    return ((float)(l3 + l4) / 2.0);\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpbp35tcez: /tmp/tmpbp35tcez.cpp:53: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp66nb65gf: /tmp/tmp66nb65gf.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n\
    \ / 2];\n    }\n    float mid = l[n / 2];\n    float left = l[n / 2 - 1];\n  \
    \  float right = l[n / 2];\n    if (left > right) {\n        return mid;\n   \
    \ }\n    return left;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6j8tr2ef: /tmp/tmp6j8tr2ef.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    return l[ll / 2];\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmph5gzwksl: /tmp/tmph5gzwksl.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = (float)sum / l.size();\n    return median;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6z7xe4ei: /tmp/tmp6z7xe4ei.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid];\n    float\
    \ rightval = l[n - 1];\n    for (long long i = mid + 1; i < n; i++) {\n      \
    \  if (l[i] < leftval) leftval = l[i];\n        if (l[i] > rightval) rightval\
    \ = l[i];\n    }\n    return (leftval + rightval) / 2.0;\n}\nint main() {\n  \
    \  auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp5rzq0ewb: /tmp/tmp5rzq0ewb.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = (float)sum / l.size();\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpa15q53t7: /tmp/tmpa15q53t7.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092138
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int mid = l.size() / 2;\n    long long int l1 = mid;\n \
    \   long long int l2 = mid + 1;\n    long long int l3 = mid + 2;\n    long long\
    \ int l4 = mid + 3;\n    long long int l5 = mid + 4;\n    long long int l6 = mid\
    \ + 5;\n    long long int l7 = mid + 6;\n    long long int l8 = mid + 7;\n   \
    \ long long int l9 = mid + 8;\n    long long int l10 = mid + 9;\n    long long\
    \ int l11 = mid + 10;\n    long long int l12 = mid + 11;\n    long long int l13\
    \ = mid + 12;\n    long long int l14 = mid + 13;\n    long long int l15 = mid\
    \ + 14;\n    long long int l16 = mid + 15;\n    long long int l17 = mid + 16;\n\
    \    long long int l18 = mid + 17;\n    long long int l19 = mid + 18;\n    long\
    \ long int l20 = mid + 19;\n    long long int l21 = mid + 20;\n    long long int\
    \ l22 = mid + 21;\n    long long int l23 = mid + 22;\n    long long int l24 =\
    \ mid + 23;\n    long long int l25 = mid + 24;\n    long long int l26 = mid +\
    \ 25;\n    long long int l27 = mid + 26;\n    long long int l28 = mid + 27;\n\
    \    long long int l29 = mid + 28;\n    long long int l30 = mid + 29;\n    long\
    \ long int l31 = mid + 30;\n    long long int l32 = mid + 31;\n    long long int\
    \ l33 = mid + 32;\n    long long int l34 = mid + 33;\n    long long int l35 =\
    \ mid + 34;\n    long long int l36 = mid + 35;\n    long long int l37 = mid +\
    \ 36;\n    long long int l38 = mid + 37;\n    long long int l39 = mid + 38;\n\
    \    long long int l40 = mid + 39;\n    long long int l41 = mid + 40;\n    long\
    \ long int l42 = mid + 41;\n    long long int l43 = mid + 42;\n    long long int\
    \ l44 = mid + 43;\n    long long int l45 = mid + 44;\n    long long int l46 =\
    \ mid + 45;\n    long long int l47 = mid + 46;\n\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpnvjierj6: /tmp/tmpnvjierj6.cpp:61: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midval = l[mid];\n \
    \   while (left < right) {\n        long long midmid = left + (right - left) /\
    \ 2;\n        long long midval = l[midmid];\n        if (midval < mid) {\n   \
    \         right = midmid;\n        } else {\n            left = midmid;\n    \
    \    }\n    }\n    return midval;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660092149
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    long mid = n / 2;\n \
    \   long l1 = mid;\n    long l2 = n - mid;\n    long l3 = n - 1;\n    long l4\
    \ = mid;\n    long l5 = mid;\n    long l6 = mid;\n    long l7 = mid;\n    long\
    \ l8 = mid;\n    long l9 = mid;\n    long l10 = mid;\n    long l11 = mid;\n  \
    \  long l12 = mid;\n    long l13 = mid;\n    long l14 = mid;\n    long l15 = mid;\n\
    \    long l16 = mid;\n    long l17 = mid;\n    long l18 = mid;\n    long l19 =\
    \ mid;\n    long l20 = mid;\n    long l21 = mid;\n    long l22 = mid;\n    long\
    \ l23 = mid;\n    long l24 = mid;\n    long l25 = mid;\n    long l26 = mid;\n\
    \    long l27 = mid;\n    long l28 = mid;\n    long l29 = mid;\n    long l30 =\
    \ mid;\n    long l31 = mid;\n    long l32 = mid;\n    long l33 = mid;\n    long\
    \ l34 = mid;\n    long l35 = mid;\n    long l36 = mid;\n    long l37 = mid;\n\
    \    long l38 = mid;\n    long l39 = mid;\n    long l40 = mid;\n    long l41 =\
    \ mid;\n    long l42 = mid;\n    long l43 = mid;\n    long l44 = mid;\n    long\
    \ l45 = mid;\n    long l46 = mid;\n    long l47 = mid;\n    long l48 = mid;\n\
    \    long l49 = mid;\n    long l50 = mid;\n    long l51 = mid;\n    long l52 =\
    \ mid;\n    long l53 = mid;\n    long l54 = mid;\n    long l55 = mid;\n    long\
    \ l56 = mid;\n    long l57 = mid;\n    long l58 = mid;\n    long l59 = mid;\n\
    \    long l60 = mid;\n    long l61 = mid;\n    long l62 = mid;\n    long l63 =\
    \ mid;\n\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpeqkm2nzu: /tmp/tmpeqkm2nzu.cpp:79: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    float left = 0;\n    float right = 0;\n    for (long i = 0; i < mid; i++)\
    \ {\n        left += l[i];\n    }\n    for (long i = mid; i < n; i++) {\n    \
    \    right += l[i];\n    }\n    return left + (right - left) / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpuvv3p2nn: /tmp/tmpuvv3p2nn.cpp:24: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    float median = (float)sum / l.size();\n    return\
    \ median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp66nb65gf: /tmp/tmp66nb65gf.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092141
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return\
    \ l1;\n    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmdywlyp1: /tmp/tmpmdywlyp1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ mid = n / 2;\n        float a = l[mid];\n        float b = l[mid-1];\n     \
    \   return ((a + b) / 2.0);\n    }\n    else {\n        long long mid = n / 2;\n\
    \        float a = l[mid];\n        float b = l[mid-1];\n        return ((b -\
    \ a) / 2.0);\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpz_l3e2mt: /tmp/tmpz_l3e2mt.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    assert(l.size() >= 2);\n    long mid = l.size() / 2;\n    float midVal\
    \ = l[mid];\n    float leftMedian = median(l.subvector(0, mid));\n    float rightMedian\
    \ = median(l.subvector(mid+1, l.size()));\n    return midVal + (leftMedian + rightMedian)\
    \ / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptekrsncr.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmptekrsncr.cpp:12:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n\
    \   12 |     float leftMedian = median(l.subvector(0, mid));\n      |        \
    \                         ^~~~~~~~~\n      |                                 vector\n\
    /tmp/tmptekrsncr.cpp:13:34: error: \u2018class std::vector<long int>\u2019 has\
    \ no member named \u2018subvector\u2019; did you mean \u2018vector\u2019?\n  \
    \ 13 |     float rightMedian = median(l.subvector(mid+1, l.size()));\n      |\
    \                                  ^~~~~~~~~\n      |                        \
    \          vector\n"
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n < 2) return 0;\n    long mid = n / 2;\n\
    \    float median = 0;\n    for (long i = 0; i < mid; i++) {\n        median +=\
    \ l[i];\n    }\n    median /= mid;\n    for (long i = mid; i < n; i++) {\n   \
    \     median += l[i];\n    }\n    median /= n;\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpxlc1ttww: /tmp/tmpxlc1ttww.cpp:25: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n  assert(l.size() > 0);\n  long mid = l.size() / 2;\n  long l1 = mid;\n\
    \  long l2 = mid + 1;\n  long l3 = mid + 2;\n  long l4 = mid + 3;\n  long l5 =\
    \ mid + 4;\n  long l6 = mid + 5;\n  long l7 = mid + 6;\n  long l8 = mid + 7;\n\
    \  long l9 = mid + 8;\n  long l10 = mid + 9;\n  long l11 = mid + 10;\n  long l12\
    \ = mid + 11;\n  long l13 = mid + 12;\n  long l14 = mid + 13;\n  long l15 = mid\
    \ + 14;\n  long l16 = mid + 15;\n  long l17 = mid + 16;\n  long l18 = mid + 17;\n\
    \  long l19 = mid + 18;\n  long l20 = mid + 19;\n  long l21 = mid + 20;\n  long\
    \ l22 = mid + 21;\n  long l23 = mid + 22;\n  long l24 = mid + 23;\n  long l25\
    \ = mid + 24;\n  long l26 = mid + 25;\n  long l27 = mid + 26;\n  long l28 = mid\
    \ + 27;\n  long l29 = mid + 28;\n  long l30 = mid + 29;\n  long l31 = mid + 30;\n\
    \  long l32 = mid + 31;\n  long l33 = mid + 32;\n  long l34 = mid + 33;\n  long\
    \ l35 = mid + 34;\n  long l36 = mid + 35;\n  long l37 = mid + 36;\n  long l38\
    \ = mid + 37;\n  long l39 = mid + 38;\n  long l40 = mid + 39;\n  long l41 = mid\
    \ + 40;\n  long l42 = mid + 41;\n  long l43 = mid + 42;\n  long l44 = mid + 43;\n\
    \  long l45 = mid + 44;\n  long l46 = mid + 45;\n  long l47 = mid + 46;\n  long\
    \ l48 = mid + 47;\n  long l49 = mid + 48;\n  long l50 = mid + 49;\n  long l51\
    \ = mid + 50;\n  long l52 = mid + 51;\n  long l53 = mid + 52;\n  long l54 = mid\
    \ + 53;\n  long l55 = mid + 54;\n  long l56 = mid + 55;\n  long l57\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6nqxjoxs.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp6nqxjoxs.cpp:68:1: error: expected initializer before \u2018}\u2019\
    \ token\n   68 | }\n      | ^\n/tmp/tmp6nqxjoxs.cpp:68:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   68 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (auto i : l) {\n        sum += i;\n  \
    \  }\n    float median = sum / l.size();\n    return median;\n}\nint main() {\n\
    \    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpg10uylc3: /tmp/tmpg10uylc3.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092144
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int mid = l.size() / 2;\n    long long int left = l[mid];\n\
    \    long long int right = l[mid+1];\n    if (left > right) {\n        return\
    \ left;\n    }\n    return right;\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpjtswjhjm: /tmp/tmpjtswjhjm.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return std::median(l.begin(),\
    \ l.begin() + ll / 2);\n    }\n    return std::median(l.begin(), l.end());\n}\n\
    int main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg1u59jwj.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpg1u59jwj.cpp:11:21: error: \u2018median\u2019 is not a member of \u2018\
    std\u2019; did you mean \u2018median\u2019?\n   11 |         return std::median(l.begin(),\
    \ l.begin() + ll / 2);\n      |                     ^~~~~~\n/tmp/tmpg1u59jwj.cpp:8:7:\
    \ note: \u2018median\u2019 declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmpg1u59jwj.cpp:13:17: error: \u2018median\u2019\
    \ is not a member of \u2018std\u2019; did you mean \u2018median\u2019?\n   13\
    \ |     return std::median(l.begin(), l.end());\n      |                 ^~~~~~\n\
    /tmp/tmpg1u59jwj.cpp:8:7: note: \u2018median\u2019 declared here\n    8 | float\
    \ median(std::vector<long> l) {\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n/2];\n\
    \    }\n    float mid = l[n/2-1] + l[n/2];\n    return mid / 2;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpd5ljerup: /tmp/tmpd5ljerup.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0)\n        return l[ll/2]\
    \ + l[ll/2-1];\n    return l[ll/2];\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp0sg63vfz: /tmp/tmp0sg63vfz.cpp:16: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n % 2 == 0);\n    long long mid\
    \ = n / 2;\n    long long left = 0, right = mid;\n    float midVal = l[mid];\n\
    \    while (left < right) {\n        long long midVal2 = l[mid];\n        if (midVal2\
    \ > midVal) {\n            right = mid;\n        } else {\n            left =\
    \ mid + 1;\n        }\n        mid = (left + right) / 2;\n        midVal = midVal2;\n\
    \    }\n    return midVal;\n}\nint main() {\n    auto candidate = median;\n  \
    \  assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4, (long)5})))\
    \ == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10, (long)4,\
    \ (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdrkt2sel: /tmp/tmpdrkt2sel.cpp:10: float median(std::vector<long int>):
    Assertion `n % 2 == 0'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        return\
    \ ((l[size/2] + l[size/2-1])/2.0);\n    }\n    else {\n        return (l[size/2-1]\
    \ + l[size/2]) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqdjp2_55: /tmp/tmpqdjp2_55.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    assert(ll > 0);\n    long long mid =\
    \ ll / 2;\n    long long left = ll;\n    long long right = ll;\n    long long\
    \ midVal = l[mid];\n    while (left > 0 && midVal < l[left - 1]) {\n        midVal\
    \ = l[left - 1];\n        left--;\n    }\n    while (right < ll && midVal > l[right\
    \ + 1]) {\n        midVal = l[right + 1];\n        right++;\n    }\n    if (left\
    \ > right) {\n        return l[left];\n    }\n    return midVal;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpdyc2ko2a: /tmp/tmpdyc2ko2a.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    float mid\
    \ = l[n/2];\n    float leftMedian = median(l.sublist(0,n/2));\n    float rightMedian\
    \ = median(l.sublist(n/2,n));\n    return mid*(leftMedian + rightMedian)/2.0;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpskctp528.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpskctp528.cpp:12:33: error: \u2018class std::vector<long int>\u2019\
    \ has no member named \u2018sublist\u2019\n   12 |     float leftMedian = median(l.sublist(0,n/2));\n\
    \      |                                 ^~~~~~~\n/tmp/tmpskctp528.cpp:13:34:\
    \ error: \u2018class std::vector<long int>\u2019 has no member named \u2018sublist\u2019\
    \n   13 |     float rightMedian = median(l.sublist(n/2,n));\n      |         \
    \                         ^~~~~~~\n"
  stdout: ''
  timestamp: 1660092146
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n <= 1) return l[0];\n    long\
    \ long int mid = n / 2;\n    float left = (float)l[mid];\n    float right = (float)l[n\
    \ - 1];\n    if (left == right) return left;\n    if (left > right) return median(l,\
    \ mid + 1, n - 1);\n    return median(l, mid - 1, n - 1);\n}\nint main() {\n \
    \   auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiza3c7i_.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpiza3c7i_.cpp:15:54: error: too many arguments to function \u2018float\
    \ median(std::vector<long int>)\u2019\n   15 |     if (left > right) return median(l,\
    \ mid + 1, n - 1);\n      |                                                  \
    \    ^\n/tmp/tmpiza3c7i_.cpp:8:7: note: declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmpiza3c7i_.cpp:16:36: error: too many arguments\
    \ to function \u2018float median(std::vector<long int>)\u2019\n   16 |     return\
    \ median(l, mid - 1, n - 1);\n      |                                    ^\n/tmp/tmpiza3c7i_.cpp:8:7:\
    \ note: declared here\n    8 | float median(std::vector<long> l) {\n      |  \
    \     ^~~~~~\n"
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    if (count == 0)\n       \
    \ return 0;\n    float median = (float)sum / count;\n    return median;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp4xx4cgym: /tmp/tmp4xx4cgym.cpp:23: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    float median = (float)sum / l.size();\n    return median;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6z7xe4ei: /tmp/tmp6z7xe4ei.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092139
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    } else {\n        return\
    \ l[ll / 2];\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpntj9dwm2: /tmp/tmpntj9dwm2.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 1);\n    long long mid =\
    \ n / 2;\n    long long left = 0, right = mid;\n    float midVal = l[mid];\n \
    \   while (left < right) {\n        long long midVal1 = l[left];\n        long\
    \ long midVal2 = l[right];\n        if (midVal1 < midVal2) {\n            left++;\n\
    \        } else if (midVal1 > midVal2) {\n            right--;\n        } else\
    \ {\n            return midVal1;\n        }\n    }\n    return midVal;\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpi_cjcisl: /tmp/tmpi_cjcisl.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    float midval = l[mid];\n    float leftval = l[mid-1];\n    float\
    \ rightval = l[mid+1];\n    if (leftval > rightval) return midval;\n    else return\
    \ rightval;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp17xku2qh: /tmp/tmp17xku2qh.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    assert(n >= 2);\n    long long mid =\
    \ n / 2;\n    long long l1 = 0, l2 = 0, l3 = 0, l4 = 0;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (i < mid) {\n            l1 += l[i];\n        } else\
    \ if (i > mid) {\n            l2 += l[i];\n        } else {\n            l3 +=\
    \ l[i];\n        }\n    }\n    l4 += l2;\n    l4 += l3;\n    return l4 / n;\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpkvz87dp5: /tmp/tmpkvz87dp5.cpp:28: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        return l[n\
    \ / 2];\n    } else {\n        return (l[n / 2] + l[n / 2 - 1]) / 2;\n    }\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpp1hdfvyl: /tmp/tmpp1hdfvyl.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll/2\
    \ - 1] + (l[ll/2] + l[ll/2-1])/2.0;\n    }\n    return l[ll/2];\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpqk41usly: /tmp/tmpqk41usly.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        long long\
    \ int mid = n / 2;\n        long long int left = l[mid];\n        long long int\
    \ right = l[n - 1];\n        if (left > right) {\n            return left;\n \
    \       } else {\n            return right;\n        }\n    } else {\n       \
    \ long long int mid = n / 2;\n        long long int left = l[mid];\n        long\
    \ long int right = l[n - 1];\n        if (left < right) {\n            return\
    \ left;\n        } else {\n            return right;\n        }\n    }\n}\nint\
    \ main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpaxudvp8d: /tmp/tmpaxudvp8d.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    float median = l[mid];\n    for\
    \ (long long i = mid; i < l.size(); i++) {\n        if (l[i] < median) {\n   \
    \         median = l[i];\n        }\n    }\n    return median;\n}\nint main()\
    \ {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpiv323uzv: /tmp/tmpiv323uzv.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    if (n <= 1) return l[0];\n    long mid = n\
    \ / 2;\n    long l1 = l[mid];\n    long l2 = l[n - 1];\n    if (l1 < l2) return\
    \ l1;\n    return l2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpmdywlyp1: /tmp/tmpmdywlyp1.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092145
- exit_code: -11
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n < 2) return l[0];\n    long\
    \ long int mid = n / 2;\n    long long int left = l[mid];\n    long long int right\
    \ = l[n - 1];\n    if (left > right) return median(l);\n    else return (left\
    \ + right) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n % 2 == 0) {\n        float x =\
    \ (l[n-1] + l[n-1]) / 2;\n        return x;\n    }\n    else {\n        float\
    \ x = (l[n-1] + l[n-2]) / 2;\n        return x;\n    }\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpr_x8bg24: /tmp/tmpr_x8bg24.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return 0;\n    long long mid\
    \ = n / 2;\n    long long l1 = mid;\n    long long l2 = n - mid;\n    float l3\
    \ = l1;\n    float l4 = l2;\n    float l5 = l1;\n    float l6 = l2;\n    float\
    \ l7 = l1;\n    float l8 = l2;\n    float l9 = l1;\n    float l10 = l2;\n    float\
    \ l11 = l1;\n    float l12 = l2;\n    float l13 = l1;\n    float l14 = l2;\n \
    \   float l15 = l1;\n    float l16 = l2;\n    float l17 = l1;\n    float l18 =\
    \ l2;\n    float l19 = l1;\n    float l20 = l2;\n    float l21 = l1;\n    float\
    \ l22 = l2;\n    float l23 = l1;\n    float l24 = l2;\n    float l25 = l1;\n \
    \   float l26 = l2;\n    float l27 = l1;\n    float l28 = l2;\n    float l29 =\
    \ l1;\n    float l30 = l2;\n    float l31 = l1;\n    float l32 = l2;\n    float\
    \ l33 = l1;\n    float l34 = l2;\n    float l35 = l1;\n    float l36 = l2;\n \
    \   float l37 = l1;\n    float l38 = l2;\n    float l39 = l1;\n    float l40 =\
    \ l2;\n    float l41 = l1;\n    float l42 = l2;\n    float l43 = l1;\n    float\
    \ l44 = l2;\n    float l45 = l1;\n    float l46 = l2;\n    float l47 = l1;\n \
    \   float l48 = l2;\n    float l49 = l1;\n    float l50 = l2;\n    float l51 =\
    \ l1;\n    float l52 = l2;\n    float l53 = l1;\n    float l54 = l2;\n    float\
    \ l55 = l1;\n    float l56 = l2;\n    float l57 = l1;\n    float l58 = l2;\n \
    \   float l59 = l1;\n    float l60 = l2;\n    float l61 = l1;\n    float l62 =\
    \ l2;\n    float l\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1_re2w0i.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp1_re2w0i.cpp:75:1: error: expected initializer before \u2018}\u2019\
    \ token\n   75 | }\n      | ^\n/tmp/tmp1_re2w0i.cpp:75:1: warning: control reaches\
    \ end of non-void function [-Wreturn-type]\n   75 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return ((l[ll\
    \ / 2 - 1] + l[ll / 2]) / 2.0);\n    } else {\n        return l[ll / 2];\n   \
    \ }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp61zhcs_m: /tmp/tmp61zhcs_m.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long n = l.size();\n    assert(n >= 2);\n    float mid = static_cast<float>(l[n-1]\
    \ + l[n-1]) / 2;\n    float low = l[n-1];\n    float high = l[n-1];\n    for (long\
    \ i = 2; i < n; ++i) {\n        low = std::min(low, l[i-1]);\n        high = std::max(high,\
    \ l[i-1]);\n    }\n    return mid + ((high - low) / 2.0);\n}\nint main() {\n \
    \   auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyo1me4ky.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpyo1me4ky.cpp:15:35: error: no matching function for call to \u2018\
    min(float&, __gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type&)\u2019\
    \n   15 |         low = std::min(low, l[i-1]);\n      |                      \
    \             ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpyo1me4ky.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:198:5:\
    \ note: candidate: \u2018template<class _Tp> constexpr const _Tp& std::min(const\
    \ _Tp&, const _Tp&)\u2019\n  198 |     min(const _Tp& __a, const _Tp& __b)\n \
    \     |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:198:5: note:   template\
    \ argument deduction/substitution failed:\n/tmp/tmpyo1me4ky.cpp:15:35: note: \
    \  deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018float\u2019\
    \ and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long int>::value_type\u2019\
    \ {aka \u2018long int\u2019})\n   15 |         low = std::min(low, l[i-1]);\n\
    \      |                                   ^\nIn file included from /usr/include/c++/9/bits/specfun.h:45,\n\
    \                 from /usr/include/c++/9/cmath:1927,\n                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:41,\n\
    \                 from /tmp/tmpyo1me4ky.cpp:2:\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note: candidate: \u2018template<class _Tp, class _Compare> constexpr const _Tp&\
    \ std::min(const _Tp&, const _Tp&, _Compare)\u2019\n  246 |     min(const _Tp&\
    \ __a, const _Tp& __b, _Compare __comp)\n      |     ^~~\n/usr/include/c++/9/bits/stl_algobase.h:246:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyo1me4ky.cpp:15:35:\
    \ note:   deduced conflicting types for parameter \u2018const _Tp\u2019 (\u2018\
    float\u2019 and \u2018__gnu_cxx::__alloc_traits<std::allocator<long int>, long\
    \ int>::value_type\u2019 {aka \u2018long int\u2019})\n   15 |         low = std::min(low,\
    \ l[i-1]);\n      |                        "
  stdout: ''
  timestamp: 1660092145
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long mid = l.size() / 2;\n    long long left = l[mid];\n    long\
    \ long right = l[mid+1];\n    if (left > right) {\n        long long temp = left;\n\
    \        left = right;\n        right = temp;\n    }\n    return left + (right\
    \ - left) / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp6e67arlj: /tmp/tmp6e67arlj.cpp:22: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    long long m = n / 2;\n    if (n % 2 ==\
    \ 0) {\n        return l[m];\n    }\n    else {\n        return (l[m] + l[n -\
    \ 1]) / 2.0;\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpn_z7o358: /tmp/tmpn_z7o358.cpp:20: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    assert(n >= 1);\n    long long int\
    \ mid = n / 2;\n    long long int left = 0, right = mid;\n    long long int midVal\
    \ = 0;\n    float median = 0;\n    while (left < right) {\n        midVal = l[mid];\n\
    \        if (midVal < 0)\n            midVal += n;\n        if (midVal > 0)\n\
    \            midVal -= n;\n        if (midVal < left)\n            left = mid\
    \ + 1;\n        else if (midVal > right)\n            right = mid - 1;\n     \
    \   else\n            mid = mid;\n    }\n    median = (left + right) / 2;\n  \
    \  return median;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpzhbnuvyb: /tmp/tmpzhbnuvyb.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092147
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) return (l.at(n /\
    \ 2) - l.at(n / 2 - 1)) / 2;\n    else return (l.at(n / 2) + l.at(n / 2 - 1))\
    \ / 2;\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp73kmgiyo: /tmp/tmp73kmgiyo.cpp:15: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long size = l.size();\n    if (size % 2 == 0) {\n        long\
    \ long mid = size / 2;\n        long long left = l[mid];\n        long long right\
    \ = l[mid + 1];\n        if (left > right) {\n            return left;\n     \
    \   } else {\n            return right;\n        }\n    } else {\n        long\
    \ long mid = size / 2;\n        long long left = l[mid];\n        long long right\
    \ = l[mid - 1];\n        if (left > right) {\n            return left;\n     \
    \   } else {\n            return right;\n        }\n    }\n}\nint main() {\n \
    \   auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpftgjhtag: /tmp/tmpftgjhtag.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long sum = 0;\n    long long count = 0;\n    for (auto i : l)\
    \ {\n        sum += i;\n        ++count;\n    }\n    float median = static_cast<float>(sum)\
    \ / static_cast<float>(count);\n    return median;\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpp5y625od: /tmp/tmpp5y625od.cpp:21: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092147
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ std::median(l.begin(), l.begin() + n / 2);\n    } else {\n        return std::median(l.begin(),\
    \ l.end());\n    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp52qs5u0n.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmp52qs5u0n.cpp:11:21: error: \u2018median\u2019 is not a member of \u2018\
    std\u2019; did you mean \u2018median\u2019?\n   11 |         return std::median(l.begin(),\
    \ l.begin() + n / 2);\n      |                     ^~~~~~\n/tmp/tmp52qs5u0n.cpp:8:7:\
    \ note: \u2018median\u2019 declared here\n    8 | float median(std::vector<long>\
    \ l) {\n      |       ^~~~~~\n/tmp/tmp52qs5u0n.cpp:13:21: error: \u2018median\u2019\
    \ is not a member of \u2018std\u2019; did you mean \u2018median\u2019?\n   13\
    \ |         return std::median(l.begin(), l.end());\n      |                 \
    \    ^~~~~~\n/tmp/tmp52qs5u0n.cpp:8:7: note: \u2018median\u2019 declared here\n\
    \    8 | float median(std::vector<long> l) {\n      |       ^~~~~~\n"
  stdout: ''
  timestamp: 1660092146
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n < 2) return l[0];\n    long long\
    \ mid = n / 2;\n    float a = l[mid];\n    float b = l[n - 1];\n    float c =\
    \ l[mid];\n    float d = l[n - 1];\n    float e = l[mid];\n    float f = l[n -\
    \ 1];\n    float g = l[mid];\n    float h = l[n - 1];\n    float i = l[mid];\n\
    \    float j = l[n - 1];\n    float k = l[mid];\n    float l = l[n - 1];\n   \
    \ float m = l[mid];\n    float n = l[n - 1];\n    float o = l[mid];\n    float\
    \ p = l[n - 1];\n    float q = l[mid];\n    float r = l[n - 1];\n    float s =\
    \ l[mid];\n    float t = l[n - 1];\n    float u = l[mid];\n    float v = l[n -\
    \ 1];\n    float w = l[mid];\n    float x = l[n - 1];\n    float y = l[mid];\n\
    \    float z = l[n - 1];\n    float a = a + b + c + d + e + f + g + h + i + j\
    \ + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;\n    float\
    \ b = b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s +\
    \ t + u + v + w + x + y + z;\n    float c = c + d + e + f + g + h + i + j + k\
    \ + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;\n    float d =\
    \ d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v +\
    \ w + x + y + z;\n    float e = e + f + g + h + i + j + k + l + m + n + o + p\
    \ + q + r + s + t + u + v + w + x + y + z;\n    float f = f + g + h + i + j +\
    \ k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z;\n    float g\
    \ = g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y\
    \ + z;\n    float h = h + i + j + \n}\nint main() {\n    auto candidate = median;\n\
    \    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2, (long)4,\
    \ (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbdxma2nc.cpp: In function \u2018float median(std::vector<long int>)\u2019\
    :\n/tmp/tmpbdxma2nc.cpp:23:11: error: declaration of \u2018float l\u2019 shadows\
    \ a parameter\n   23 |     float l = l[n - 1];\n      |           ^\n/tmp/tmpbdxma2nc.cpp:23:22:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   23 |     float l = l[n - 1];\n      |                      ^\n/tmp/tmpbdxma2nc.cpp:24:20:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   24 |     float m = l[mid];\n      |                    ^\n/tmp/tmpbdxma2nc.cpp:25:11:\
    \ error: conflicting declaration \u2018float n\u2019\n   25 |     float n = l[n\
    \ - 1];\n      |           ^\n/tmp/tmpbdxma2nc.cpp:9:15: note: previous declaration\
    \ as \u2018long long int n\u2019\n    9 |     long long n = l.size();\n      |\
    \               ^\n/tmp/tmpbdxma2nc.cpp:25:22: error: invalid types \u2018float[long\
    \ long int]\u2019 for array subscript\n   25 |     float n = l[n - 1];\n     \
    \ |                      ^\n/tmp/tmpbdxma2nc.cpp:26:20: error: invalid types \u2018\
    float[long long int]\u2019 for array subscript\n   26 |     float o = l[mid];\n\
    \      |                    ^\n/tmp/tmpbdxma2nc.cpp:27:22: error: invalid types\
    \ \u2018float[long long int]\u2019 for array subscript\n   27 |     float p =\
    \ l[n - 1];\n      |                      ^\n/tmp/tmpbdxma2nc.cpp:28:20: error:\
    \ invalid types \u2018float[long long int]\u2019 for array subscript\n   28 |\
    \     float q = l[mid];\n      |                    ^\n/tmp/tmpbdxma2nc.cpp:29:22:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   29 |     float r = l[n - 1];\n      |                      ^\n/tmp/tmpbdxma2nc.cpp:30:20:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   30 |     float s = l[mid];\n      |                    ^\n/tmp/tmpbdxma2nc.cpp:31:22:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   31 |     float t = l[n - 1];\n      |                      ^\n/tmp/tmpbdxma2nc.cpp:32:20:\
    \ error: invalid types \u2018float[long long int]\u2019 for array subscript\n\
    \   32 |     float u = l[mid];\n      |                    ^\n/"
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long int n = l.size();\n    if (n % 2 == 0) {\n        return\
    \ l[n / 2];\n    }\n    else {\n        return (l[n / 2] + l[n / 2 - 1]) / 2;\n\
    \    }\n}\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpc23mbu4z: /tmp/tmpc23mbu4z.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 1) {\n        return l[ll\
    \ / 2 - 1] + l[ll / 2];\n    }\n    return l[ll / 2];\n}\nint main() {\n    auto\
    \ candidate = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1,\
    \ (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmpe8e6312v: /tmp/tmpe8e6312v.cpp:18: int main(): Assertion `candidate((std::vector<long>({(long)-10,
    (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0)'' failed.

    '
  stdout: ''
  timestamp: 1660092147
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long n = l.size();\n    if (n <= 1) return l[0];\n    long long\
    \ mid = n / 2;\n    long long l1 = l[mid];\n    long long l2 = l[n - 1];\n   \
    \ if (l2 < l1) return l2;\n    return l1;\n}\nint main() {\n    auto candidate\
    \ = median;\n    assert(candidate((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp1a6utrnk: /tmp/tmp1a6utrnk.cpp:19: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092146
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return median of elements\
    \ in the list l.\n// >>> median((std::vector<long>({(long)3, (long)1, (long)2,\
    \ (long)4, (long)5})))\n// (float(3))\n// >>> median((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20})))\n// (15.0)\nfloat median(std::vector<long>\
    \ l) {\n    long long ll = l.size();\n    if (ll % 2 == 0) {\n        return l[ll\
    \ / 2 - 1] + (l[ll / 2] + l[ll / 2 - 1]) / 2.0;\n    }\n    return l[ll / 2];\n\
    }\nint main() {\n    auto candidate = median;\n    assert(candidate((std::vector<long>({(long)3,\
    \ (long)1, (long)2, (long)4, (long)5}))) == (float(3)));\n    assert(candidate((std::vector<long>({(long)-10,\
    \ (long)4, (long)6, (long)1000, (long)10, (long)20}))) == (8.0));\n    assert(candidate((std::vector<long>({(long)5})))\
    \ == (float(5)));\n    assert(candidate((std::vector<long>({(long)6, (long)5})))\
    \ == (5.5));\n    assert(candidate((std::vector<long>({(long)8, (long)1, (long)3,\
    \ (long)9, (long)9, (long)2, (long)7}))) == (float(7)));\n}\n"
  status: Exception
  stderr: 'tmp28bjgnjh: /tmp/tmp28bjgnjh.cpp:17: int main(): Assertion `candidate((std::vector<long>({(long)3,
    (long)1, (long)2, (long)4, (long)5}))) == (float(3))'' failed.

    '
  stdout: ''
  timestamp: 1660092142

language: cpp
name: HumanEval_15_string_sequence
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsorillb8: /tmp/tmpsorillb8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkp6kyqp7: /tmp/tmpkp6kyqp7.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprus_apkz: /tmp/tmprus_apkz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpbjga7nv8: /tmp/tmpbjga7nv8.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuo9zo0r7.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpuo9zo0r7.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuo9zo0r7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkp6kyqp7: /tmp/tmpkp6kyqp7.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprus_apkz: /tmp/tmprus_apkz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsorillb8: /tmp/tmpsorillb8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++){\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpbjga7nv8: /tmp/tmpbjga7nv8.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfx5j7kgk.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfx5j7kgk.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfx5j7kgk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfx5j7kgk.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfx5j7kgk.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfx5j7kgk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpje1htgcw: /tmp/tmpje1htgcw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprus_apkz: /tmp/tmprus_apkz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp34iz_wt9: /tmp/tmp34iz_wt9.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfx5j7kgk.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfx5j7kgk.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfx5j7kgk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpiz7fc26s: /tmp/tmpiz7fc26s.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpje1htgcw: /tmp/tmpje1htgcw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_0bxwl1x: /tmp/tmp_0bxwl1x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmph2menirw: /tmp/tmph2menirw.cpp:16: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = 1;\n    while (i <= n) {\n   \
    \     s += std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqwbxan2o: /tmp/tmpqwbxan2o.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphuky0dt6: /tmp/tmphuky0dt6.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfx5j7kgk.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfx5j7kgk.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfx5j7kgk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvb2gf5qw.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpvb2gf5qw.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpvb2gf5qw.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_0bxwl1x: /tmp/tmp_0bxwl1x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_0bxwl1x: /tmp/tmp_0bxwl1x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxntjpl2c: /tmp/tmpxntjpl2c.cpp:17: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_0bxwl1x: /tmp/tmp_0bxwl1x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpje1htgcw: /tmp/tmpje1htgcw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp_0bxwl1x: /tmp/tmp_0bxwl1x.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfx5j7kgk.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpfx5j7kgk.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfx5j7kgk.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8utuiqf7: /tmp/tmp8utuiqf7.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpsorillb8: /tmp/tmpsorillb8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; ++i) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp1it28djd: /tmp/tmp1it28djd.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpiz7fc26s: /tmp/tmpiz7fc26s.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxntjpl2c: /tmp/tmpxntjpl2c.cpp:17: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; ++i) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpe9hwskjy: /tmp/tmpe9hwskjy.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkp6kyqp7: /tmp/tmpkp6kyqp7.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjtmajtvt: /tmp/tmpjtmajtvt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8utuiqf7: /tmp/tmp8utuiqf7.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq9fmbuir.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpq9fmbuir.cpp:11:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s += to_string(i);\n      |              ^~~~~~~~~\n      | \
    \             std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpq9fmbuir.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpa1y72y12: /tmp/tmpa1y72y12.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjtmajtvt: /tmp/tmpjtmajtvt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprus_apkz: /tmp/tmprus_apkz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpiz7fc26s: /tmp/tmpiz7fc26s.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i < n; i++) {\n        s += std::to_string(i)\
    \ + \" \";\n    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpn1t61jr4: /tmp/tmpn1t61jr4.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (long i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiyggh3i8: /tmp/tmpiyggh3i8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpje1htgcw: /tmp/tmpje1htgcw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8utuiqf7: /tmp/tmp8utuiqf7.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    for (long i = 0; i < n; i++) {\n      \
    \  s += std::to_string(i);\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = string_sequence;\n    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3))\
    \ == (\"0 1 2 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"\
    ));\n}\n"
  status: Exception
  stderr: 'tmpiyggh3i8: /tmp/tmpiyggh3i8.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; ++i) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpe9hwskjy: /tmp/tmpe9hwskjy.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i <= n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpxntjpl2c: /tmp/tmpxntjpl2c.cpp:17: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpkp6kyqp7: /tmp/tmpkp6kyqp7.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i = 0; i < n; ++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpiz7fc26s: /tmp/tmpiz7fc26s.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpc3iut14i: /tmp/tmpc3iut14i.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuo9zo0r7.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpuo9zo0r7.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpuo9zo0r7.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s+=std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmphuky0dt6: /tmp/tmphuky0dt6.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for (long i = 0; i < n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpcmong87y: /tmp/tmpcmong87y.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = 1;\n    while (i <= n) {\n   \
    \     s += std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqwbxan2o: /tmp/tmpqwbxan2o.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmp8nqo48y4: /tmp/tmp8nqo48y4.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long i = 1;\n    while (i <= n) {\n   \
    \     s += std::to_string(i);\n        i++;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpqwbxan2o: /tmp/tmpqwbxan2o.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096869
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgc0aau0b: /tmp/tmpgc0aau0b.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;++i)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpjtmajtvt: /tmp/tmpjtmajtvt.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s+=std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpje1htgcw: /tmp/tmpje1htgcw.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;++i)\n        s+=to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeyd9hfgb.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpeyd9hfgb.cpp:11:12: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s+=to_string(i);\n      |            ^~~~~~~~~\n      |     \
    \       std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpeyd9hfgb.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096835
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += to_string(i)\
    \ + \" \";\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdozc8o3m.cpp: In function \u2018std::string string_sequence(long\
    \ int)\u2019:\n/tmp/tmpdozc8o3m.cpp:11:14: error: \u2018to_string\u2019 was not\
    \ declared in this scope; did you mean \u2018std::__cxx11::to_string\u2019?\n\
    \   11 |         s += to_string(i) + \" \";\n      |              ^~~~~~~~~\n\
    \      |              std::__cxx11::to_string\nIn file included from /usr/include/c++/9/string:55,\n\
    \                 from /usr/include/c++/9/bits/locale_classes.h:40,\n        \
    \         from /usr/include/c++/9/bits/ios_base.h:41,\n                 from /usr/include/c++/9/ios:42,\n\
    \                 from /usr/include/c++/9/istream:38,\n                 from /usr/include/c++/9/sstream:38,\n\
    \                 from /usr/include/c++/9/complex:45,\n                 from /usr/include/c++/9/ccomplex:39,\n\
    \                 from /usr/include/x86_64-linux-gnu/c++/9/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdozc8o3m.cpp:2:\n/usr/include/c++/9/bits/basic_string.h:6601:3:\
    \ note: \u2018std::__cxx11::to_string\u2019 declared here\n 6601 |   to_string(long\
    \ double __val)\n      |   ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(long i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmprus_apkz: /tmp/tmprus_apkz.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s = \"\";\n    long m = n;\n    while (m > 0) {\n    \
    \    s += std::to_string(m);\n        m -= 1;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = string_sequence;\n    assert(candidate((0)) == (\"0\"\
    ));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzubi7w14: /tmp/tmpzubi7w14.cpp:19: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096868
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i = 0; i <= n; i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpzawn04pq: /tmp/tmpzawn04pq.cpp:18: int main(): Assertion `candidate((3))
    == ("0 1 2 3")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++) {\n        s += std::to_string(i);\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n\
    \    assert(candidate((0)) == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2\
    \ 3\"));\n    assert(candidate((10)) == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpgjhh2_ot: /tmp/tmpgjhh2_ot.cpp:17: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096834
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return a string containing\
    \ space-delimited numbers starting from 0 upto n inclusive.\n// >>> string_sequence((0))\n\
    // (\"0\")\n// >>> string_sequence((5))\n// (\"0 1 2 3 4 5\")\nstd::string string_sequence(long\
    \ n) {\n    std::string s;\n    for(int i=0;i<n;i++)\n        s += std::to_string(i);\n\
    \    return s;\n}\nint main() {\n    auto candidate = string_sequence;\n    assert(candidate((0))\
    \ == (\"0\"));\n    assert(candidate((3)) == (\"0 1 2 3\"));\n    assert(candidate((10))\
    \ == (\"0 1 2 3 4 5 6 7 8 9 10\"));\n}\n"
  status: Exception
  stderr: 'tmpguzl0c3n: /tmp/tmpguzl0c3n.cpp:16: int main(): Assertion `candidate((0))
    == ("0")'' failed.

    '
  stdout: ''
  timestamp: 1660096835

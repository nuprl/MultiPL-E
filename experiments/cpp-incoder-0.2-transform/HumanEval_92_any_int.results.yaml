language: cpp
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Write your code here\n    if (x == y + z && y == z && z == x)\n      \
    \  return true;\n    else\n        return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmplv_9z65p.cpp: In function 'int main()':\n/tmp/tmplv_9z65p.cpp:23:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplv_9z65p.cpp:2:\n/tmp/tmplv_9z65p.cpp:24:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    float sum = (x + y + z);\n    if (sum == 0)\n        return false;\n    if\
    \ (x == sum)\n        return true;\n    if (y == sum)\n        return true;\n\
    \    if (z == sum)\n        return true;\n    return false;\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0klq3imp.cpp: In function 'int main()':\n/tmp/tmp0klq3imp.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0klq3imp.cpp:2:\n/tmp/tmp0klq3imp.cpp:29:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Write your code here\n    float sum=x+y+z;\n    if(sum==(x+y+z)){\n  \
    \      return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpapnfwzst.cpp: In function 'int main()':\n/tmp/tmpapnfwzst.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpapnfwzst.cpp:2:\n/tmp/tmpapnfwzst.cpp:25:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    if (x == y + z) {\n        return true;\n    }\n    return false;\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpu4h65aez.cpp: In function 'int main()':\n/tmp/tmpu4h65aez.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpu4h65aez.cpp:2:\n/tmp/tmpu4h65aez.cpp:23:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Write your code here\n    float sum;\n    sum=x+y;\n    if (sum==z){\n\
    \        return true;\n    }\n    else{\n        return false;\n    }\n}\nint\
    \ main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptsvmpanr.cpp: In function 'int main()':\n/tmp/tmptsvmpanr.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptsvmpanr.cpp:2:\n/tmp/tmptsvmpanr.cpp:28:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    float sum = x + y + z;\n    if (sum == x) {\n        return true;\n    }\
    \ else if (sum == y) {\n        return true;\n    } else if (sum == z) {\n   \
    \     return true;\n    } else {\n        return false;\n    }\n}\nint main()\
    \ {\n    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)),\
    \ (float(1))) == (true));\n    assert(candidate((2.5), (float(2)), (float(3)))\
    \ == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n\
    \    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)),\
    \ (float(2)), (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2))\
    \ == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n\
    \    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)),\
    \ (float(4)), (float(7))) == (true));\n    assert(candidate((3.0), (float(4)),\
    \ (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyxof651p.cpp: In function 'int main()':\n/tmp/tmpyxof651p.cpp:28:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyxof651p.cpp:2:\n/tmp/tmpyxof651p.cpp:29:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    return ((x == x + y) && (x == x + z) && (y == y + z));\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpza9m_cu8.cpp: In function 'int main()':\n/tmp/tmpza9m_cu8.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpza9m_cu8.cpp:2:\n/tmp/tmpza9m_cu8.cpp:20:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    return ((x == x + y) && (x == x + z) && (x == y + z));\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeexp8cti.cpp: In function 'int main()':\n/tmp/tmpeexp8cti.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpeexp8cti.cpp:2:\n/tmp/tmpeexp8cti.cpp:20:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Write your code here\n    float sum=x+y+z;\n    if(sum==(x+y+z)){\n  \
    \      return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpapnfwzst.cpp: In function 'int main()':\n/tmp/tmpapnfwzst.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpapnfwzst.cpp:2:\n/tmp/tmpapnfwzst.cpp:25:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    return ((x == x + y) && (x == x + z) && (y == y + z));\n}\nint main() {\n\
    \    auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpza9m_cu8.cpp: In function 'int main()':\n/tmp/tmpza9m_cu8.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpza9m_cu8.cpp:2:\n/tmp/tmpza9m_cu8.cpp:20:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Write your code here\n    return ((x == x + y) && (x == x + z) && (y ==\
    \ y + z));\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcdclf3ak.cpp: In function 'int main()':\n/tmp/tmpcdclf3ak.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcdclf3ak.cpp:2:\n/tmp/tmpcdclf3ak.cpp:21:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    int xx = x;\n    int yy = y;\n    int zz = z;\n    int xy = x * y;\n    int\
    \ yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n\
    \    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z\
    \ * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int\
    \ xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n\
    \    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y\
    \ * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int\
    \ zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n\
    \    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x\
    \ * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int\
    \ yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n\
    \    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z\
    \ * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int\
    \ xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n\
    \    int yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y\
    \ * x;\n    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int\
    \ zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n\
    \    int xy = x * y;\n    int yz = y * z;\n    int zx = z * x;\n    int xz = x\
    \ * z;\n    int yx = y * x;\n    int zy = z * y;\n    int xy = x * y;\n    int\
    \ yz = y * z;\n    int zx = z * x;\n    int xz = x * z;\n    int yx = y * x;\n\
    \    int zy = z * y;\n    int xy = x * y;\n    int yz = y * z;\n    int zx = z\
    \ * x;\n    int xz = x * z;\n    int yx = y * x;\n    int zy = z * y;\n    int\
    \ xy = \n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpysv8thfh.cpp: In function 'bool any_int(float, float, float)':\n\
    /tmp/tmpysv8thfh.cpp:25:9: error: redeclaration of 'int xy'\n     int xy = x *\
    \ y;\n         ^\n/tmp/tmpysv8thfh.cpp:19:9: error: 'int xy' previously declared\
    \ here\n     int xy = x * y;\n         ^\n/tmp/tmpysv8thfh.cpp:26:9: error: redeclaration\
    \ of 'int yz'\n     int yz = y * z;\n         ^\n/tmp/tmpysv8thfh.cpp:20:9: error:\
    \ 'int yz' previously declared here\n     int yz = y * z;\n         ^\n/tmp/tmpysv8thfh.cpp:27:9:\
    \ error: redeclaration of 'int zx'\n     int zx = z * x;\n         ^\n/tmp/tmpysv8thfh.cpp:21:9:\
    \ error: 'int zx' previously declared here\n     int zx = z * x;\n         ^\n\
    /tmp/tmpysv8thfh.cpp:28:9: error: redeclaration of 'int xz'\n     int xz = x *\
    \ z;\n         ^\n/tmp/tmpysv8thfh.cpp:22:9: error: 'int xz' previously declared\
    \ here\n     int xz = x * z;\n         ^\n/tmp/tmpysv8thfh.cpp:29:9: error: redeclaration\
    \ of 'int yx'\n     int yx = y * x;\n         ^\n/tmp/tmpysv8thfh.cpp:23:9: error:\
    \ 'int yx' previously declared here\n     int yx = y * x;\n         ^\n/tmp/tmpysv8thfh.cpp:30:9:\
    \ error: redeclaration of 'int zy'\n     int zy = z * y;\n         ^\n/tmp/tmpysv8thfh.cpp:24:9:\
    \ error: 'int zy' previously declared here\n     int zy = z * y;\n         ^\n\
    /tmp/tmpysv8thfh.cpp:31:9: error: redeclaration of 'int xy'\n     int xy = x *\
    \ y;\n         ^\n/tmp/tmpysv8thfh.cpp:19:9: error: 'int xy' previously declared\
    \ here\n     int xy = x * y;\n         ^\n/tmp/tmpysv8thfh.cpp:32:9: error: redeclaration\
    \ of 'int yz'\n     int yz = y * z;\n         ^\n/tmp/tmpysv8thfh.cpp:20:9: error:\
    \ 'int yz' previously declared here\n     int yz = y * z;\n         ^\n/tmp/tmpysv8thfh.cpp:33:9:\
    \ error: redeclaration of 'int zx'\n     int zx = z * x;\n         ^\n/tmp/tmpysv8thfh.cpp:21:9:\
    \ error: 'int zx' previously declared here\n     int zx = z * x;\n         ^\n\
    /tmp/tmpysv8thfh.cpp:34:9: error: redeclaration of 'int xz'\n     int xz = x *\
    \ z;\n         ^\n/tmp/tmpysv8thfh.cpp:22:9: error: 'int xz' previously declared\
    \ here\n     int xz = x * z;\n         ^\n/tmp/tmpysv8thfh.cpp:35:9: error: redeclaration\
    \ of 'int y"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    int ix = x;\n    int iy = y;\n    int iz = z;\n    if (ix < iy + iz)\n  \
    \      return true;\n    return false;\n}\nint main() {\n    auto candidate =\
    \ any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxijamhry.cpp: In function 'int main()':\n/tmp/tmpxijamhry.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxijamhry.cpp:2:\n/tmp/tmpxijamhry.cpp:25:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    if (x < y && x < z) {\n        return true;\n    } else if (y < x && y <\
    \ z) {\n        return true;\n    } else if (z < x && z < y) {\n        return\
    \ true;\n    } else {\n        return false;\n    }\n}\nint main() {\n    auto\
    \ candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf_m4u50f.cpp: In function 'int main()':\n/tmp/tmpf_m4u50f.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf_m4u50f.cpp:2:\n/tmp/tmpf_m4u50f.cpp:28:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    if (x + y\
    \ == z) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1)))\
    \ == (true));\n    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n\
    \    assert(candidate((1.5), (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)),\
    \ (float(6)), (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)),\
    \ (float(2))) == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n\
    \    assert(candidate((float(-4)), (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)),\
    \ (float(1)), (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)),\
    \ (float(7))) == (true));\n    assert(candidate((3.0), (float(4)), (float(7)))\
    \ == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdqcyr2n2.cpp: In function 'int main()':\n/tmp/tmpdqcyr2n2.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdqcyr2n2.cpp:2:\n/tmp/tmpdqcyr2n2.cpp:26:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    return (x == x + y && y == y + z && z == z);\n}\nint main() {\n    auto candidate\
    \ = any_int;\n    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n\
    \    assert(candidate((2.5), (float(2)), (float(3))) == (false));\n    assert(candidate((1.5),\
    \ (float(5)), (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)),\
    \ (float(2))) == (false));\n    assert(candidate((float(4)), (float(2)), (float(2)))\
    \ == (true));\n    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmplme222lp.cpp: In function 'int main()':\n/tmp/tmplme222lp.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmplme222lp.cpp:2:\n/tmp/tmplme222lp.cpp:20:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    // Declare and initialize variables.\n    int xx = x;\n    int yy = y;\n\
    \    int zz = z;\n    int xx_plus_yy = xx + yy;\n    int xx_plus_yz_minus_zz =\
    \ xx + yz - zz;\n    int xx_plus_yz_minus_zz_xy = xx + yz - zz - xy;\n    int\
    \ xx_plus_yz_minus_zz_xy_plus_zz = xx + yz - zz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz\
    \ = xx + yz - zz - xy - zz - xz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz\
    \ = xx + yz - zz - xy - zz - xz - yz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy\
    \ = xx + yz - zz - xy - zz - xz - yz - xy;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz_minus_xy\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz - xy;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_minus_yz_minus_xy_minus_zz\
    \ = xx + yz - zz - xy - zz - xz - yz - xy - zz - xz - yz - xy - zz;\n    int xx_plus_yz_minus_zz_xy_plus_zz_xz_minus_yz_minus_xy_minus_zz_xz_min\n\
    }\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcsmplatt.cpp: In function 'bool any_int(float, float, float)':\n\
    /tmp/tmpcsmplatt.cpp:21:36: error: 'yz' was not declared in this scope\n     int\
    \ xx_plus_yz_minus_zz = xx + yz - zz;\n                                    ^\n\
    /tmp/tmpcsmplatt.cpp:22:49: error: 'xy' was not declared in this scope\n     int\
    \ xx_plus_yz_minus_zz_xy = xx + yz - zz - xy;\n                              \
    \                   ^\n/tmp/tmpcsmplatt.cpp:24:70: error: 'xz' was not declared\
    \ in this scope\n     int xx_plus_yz_minus_zz_xy_plus_zz_xz = xx + yz - zz - xy\
    \ - zz - xz;\n                                                               \
    \       ^\n/tmp/tmpcsmplatt.cpp:33:1: error: expected initializer before '}' token\n\
    \ }\n ^\n/tmp/tmpcsmplatt.cpp: In function 'int main()':\n/tmp/tmpcsmplatt.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcsmplatt.cpp:2:\n/tmp/tmpcsmplatt.cpp:36:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return ((x\
    \ == y + z) || (x == z) || (y == z));\n}\nint main() {\n    auto candidate = any_int;\n\
    \    assert(candidate((float(2)), (float(3)), (float(1))) == (true));\n    assert(candidate((2.5),\
    \ (float(2)), (float(3))) == (false));\n    assert(candidate((1.5), (float(5)),\
    \ (3.5)) == (false));\n    assert(candidate((float(2)), (float(6)), (float(2)))\
    \ == (false));\n    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n\
    \    assert(candidate((2.2), (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)),\
    \ (float(6)), (float(2))) == (true));\n    assert(candidate((float(2)), (float(1)),\
    \ (float(1))) == (true));\n    assert(candidate((float(3)), (float(4)), (float(7)))\
    \ == (true));\n    assert(candidate((3.0), (float(4)), (float(7))) == (false));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmppk_hqxtk.cpp: In function 'int main()':\n/tmp/tmppk_hqxtk.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppk_hqxtk.cpp:2:\n/tmp/tmppk_hqxtk.cpp:23:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    assert(x >= 0);\n    assert(y >= 0);\n    assert(z >= 0);\n    return (x\
    \ == y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpz65omb8c.cpp: In function 'int main()':\n/tmp/tmpz65omb8c.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpz65omb8c.cpp:2:\n/tmp/tmpz65omb8c.cpp:23:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Create a function that\
    \ takes 3 numbers.\n// Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n// Returns false in any other\
    \ cases.\n// Examples\n// >>> any_int((float(5)), (float(2)), (float(7)))\n//\
    \ (true)\n// >>> any_int((float(3)), (float(2)), (float(2)))\n// (false)\n// >>>\
    \ any_int((float(3)), (float(-2)), (float(1)))\n// (true)\n// >>> any_int((3.6),\
    \ (-2.2), (float(2)))\n// (false)\nbool any_int(float x, float y, float z) {\n\
    \    int x_int = static_cast<int>(x);\n    int y_int = static_cast<int>(y);\n\
    \    int z_int = static_cast<int>(z);\n    return x_int + y_int + z_int == static_cast<int>(x\
    \ + y + z);\n}\nint main() {\n    auto candidate = any_int;\n    assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n    assert(candidate((2.5), (float(2)),\
    \ (float(3))) == (false));\n    assert(candidate((1.5), (float(5)), (3.5)) ==\
    \ (false));\n    assert(candidate((float(2)), (float(6)), (float(2))) == (false));\n\
    \    assert(candidate((float(4)), (float(2)), (float(2))) == (true));\n    assert(candidate((2.2),\
    \ (2.2), (2.2)) == (false));\n    assert(candidate((float(-4)), (float(6)), (float(2)))\
    \ == (true));\n    assert(candidate((float(2)), (float(1)), (float(1))) == (true));\n\
    \    assert(candidate((float(3)), (float(4)), (float(7))) == (true));\n    assert(candidate((3.0),\
    \ (float(4)), (float(7))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3va4x6_e.cpp: In function 'int main()':\n/tmp/tmp3va4x6_e.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = any_int;\n  \
    \        ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n     \
    \            from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3va4x6_e.cpp:2:\n/tmp/tmp3va4x6_e.cpp:23:56: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((float(2)),\
    \ (float(3)), (float(1))) == (true));\n                                      \
    \                  ^\n"
  stdout: ''

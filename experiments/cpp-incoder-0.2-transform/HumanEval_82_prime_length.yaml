name: HumanEval_82_prime_length
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that takes\
  \ a string and returns True if the string\n// length is a prime number or False\
  \ otherwise\n// Examples\n// >>> prime_length((\"Hello\"))\n// (true)\n// >>> prime_length((\"\
  abcdcba\"))\n// (true)\n// >>> prime_length((\"kittens\"))\n// (true)\n// >>> prime_length((\"\
  orange\"))\n// (false)\nbool prime_length(std::string string) {\n"
tests: "}\nint main() {\n    auto candidate = prime_length;\n    assert(candidate((\"\
  Hello\")) == (true));\n    assert(candidate((\"abcdcba\")) == (true));\n    assert(candidate((\"\
  kittens\")) == (true));\n    assert(candidate((\"orange\")) == (false));\n    assert(candidate((\"\
  wow\")) == (true));\n    assert(candidate((\"world\")) == (true));\n    assert(candidate((\"\
  MadaM\")) == (true));\n    assert(candidate((\"Wow\")) == (true));\n    assert(candidate((\"\
  \")) == (false));\n    assert(candidate((\"HI\")) == (true));\n    assert(candidate((\"\
  go\")) == (true));\n    assert(candidate((\"gogo\")) == (false));\n    assert(candidate((\"\
  aaaaaaaaaaaaaaa\")) == (false));\n    assert(candidate((\"Madam\")) == (true));\n\
  \    assert(candidate((\"M\")) == (false));\n    assert(candidate((\"0\")) == (false));\n\
  }\n"
completions: ["    int n = string.length();\n    for(int i = 2; i <= n/2; i++) {\n\
    \        if(n % i == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;", "    int n = string.length();\n    int count = 0;\n    for (int i =\
    \ 0; i < n; i++) {\n        if (string[i] == 'a' || string[i] == 'e' || string[i]\
    \ == 'i' || string[i] == 'o' || string[i] == 'u') {\n            count++;\n  \
    \      }\n    }\n    if (count == 0) {\n        return true;\n    }\n    for (int\
    \ i = 2; i < n; i++) {\n        if (string[i] == 'a' || string[i] == 'e' || string[i]\
    \ == 'i' || string[i] == 'o' || string[i] == 'u') {\n            count--;\n  \
    \      }\n    }\n    if (count == 0) {\n        return true;\n    }\n    return\
    \ false;", "    int n = string.length();\n    int count = 0;\n    for (int i =\
    \ 0; i < n; i++) {\n        if (string[i] == '.') {\n            count++;\n  \
    \      }\n    }\n    if (count == 0) {\n        return true;\n    }\n    for (int\
    \ i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;", "    int n = string.length();\n    for(int\
    \ i = 2; i <= n/2; i++) {\n        if(string[i] == '0') {\n            return\
    \ false;\n        }\n    }\n    return true;", "    int n = string.length();\n\
    \    if (n == 0)\n        return true;\n    if (n == 1)\n        return false;\n\
    \    for (int i = 2; i <= n / 2; i++) {\n        if (n % i == 0)\n           \
    \ return false;\n    }\n    return true;", "    int n = string.length();\n   \
    \ for (int i = 2; i < n; i++) {\n        if (string[i] != string[n - 1]) {\n \
    \           int count = 0;\n            for (int j = i; j < n; j++) {\n      \
    \          if (string[j] == string[i]) {\n                    count++;\n     \
    \           }\n            }\n            if (count == i) {\n                return\
    \ true;\n            }\n        }\n    }\n    return false;", "    int n = string.length();\n\
    \    for (int i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n         \
    \   return false;\n        }\n    }\n    return true;", "    int n = string.length();\n\
    \    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;", "    int n = string.length();\n\
    \    if (n == 0) return false;\n    for (int i = 2; i < n; i++) {\n        if\
    \ (string[i] == '\\0') return false;\n        for (int j = i + 1; j < n; j++)\
    \ {\n            if (string[i] + string[j] == '\\0') return false;\n        }\n\
    \    }\n    return true;", "    int n = string.length();\n    bool flag = true;\n\
    \    for (int i = 1; i <= n; i++) {\n        if (string[i - 1] == '\\0' || string[i]\
    \ == '\\0' || string[i] > '\\0' || string[i] < '\\0' || string[i] % 2 == 0) {\n\
    \            flag = false;\n            break;\n        }\n    }\n    return flag;",
  "    int n = string.length();\n    for (int i = 2; i < n; i++) {\n        if (string[i]\
    \ != string[n - 1]) {\n            int count = 0;\n            for (int j = i;\
    \ j < n; j++) {\n                if (string[j] == string[i]) {\n             \
    \       count++;\n                }\n            }\n            if (count == i)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;", "    int n = string.length();\n    for (int i = 2; i <= n / 2; i++)\
    \ {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;", "    int n = string.length();\n    for (int i = 2; i <= n\
    \ / 2; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "    int n = string.length();\n    for(int i=2; i<=n;\
    \ i++) {\n        if(string[i] == '\\0') return true;\n        if(string[i] !=\
    \ string[n/i]) return false;\n    }\n    return false;", "    int n = string.length();\n\
    \    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (string[i]\
    \ == '\\0') {\n            break;\n        }\n        for (int j = i + 1; j <\
    \ n; j++) {\n            if (string[i] + string[j] == '\\0') {\n             \
    \   count++;\n                break;\n            }\n        }\n    }\n    if\
    \ (count == 0) {\n        return true;\n    }\n    return false;", "    int n\
    \ = string.length();\n    for (int i = 2; i <= n / 2; i++) {\n        if (string[n\
    \ - i] != '\\0') {\n            if (string[n - i - 1] == '\\0') {\n          \
    \      return false;\n            }\n            if (string[n - i - 1] != string[n\
    \ - i]) {\n                return false;\n            }\n        }\n    }\n  \
    \  return true;", "    int n = string.length();\n    for (int i = 2; i <= n /\
    \ 2; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n\
    \    }\n    return true;", "    int n = string.size();\n    for (int i = 1; i\
    \ <= n; i++) {\n        if (string[i] != '\\0') {\n            for (int j = i\
    \ + i; j <= n; j += i) {\n                if (string[j] != '\\0') {\n        \
    \            return false;\n                }\n            }\n        }\n    }\n\
    \    return true;", "    int n = string.length();\n    for (int i = 2; i < n;\
    \ i++) {\n        if (string[i] != string[n - 1]) {\n            int count = 0;\n\
    \            for (int j = i; j < n; j++) {\n                if (string[j] == string[n\
    \ - 1]) {\n                    count++;\n                }\n            }\n  \
    \          if (count == i) {\n                return true;\n            }\n  \
    \      }\n    }\n    return false;", "    int n = string.length();\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            return false;\n\
    \        }\n    }\n    return true;"]
stop_tokens:
- "\n}"

name: HumanEval_114_minSubArraySum
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an array of integers\
  \ nums, find the minimum sum of any non-empty sub-array\n// of nums.\n// Example\n\
  // >>> minSubArraySum((std::vector<long>({(long)2, (long)3, (long)4, (long)1, (long)2,\
  \ (long)4})))\n// (1)\n// >>> minSubArraySum((std::vector<long>({(long)-1, (long)-2,\
  \ (long)-3})))\n// (-6)\nlong minSubArraySum(std::vector<long> nums) {\n"
tests: "}\nint main() {\n    auto candidate = minSubArraySum;\n    assert(candidate((std::vector<long>({(long)2,\
  \ (long)3, (long)4, (long)1, (long)2, (long)4}))) == (1));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3}))) == (-6));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3, (long)2, (long)-10}))) == (-14));\n    assert(candidate((std::vector<long>({(long)-9999999999999999})))\
  \ == (-9999999999999999));\n    assert(candidate((std::vector<long>({(long)0, (long)10,\
  \ (long)20, (long)1000000}))) == (0));\n    assert(candidate((std::vector<long>({(long)-1,\
  \ (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)-1, (long)-2, (long)-3, (long)10, (long)-5}))) == (-6));\n    assert(candidate((std::vector<long>({(long)10,\
  \ (long)11, (long)13, (long)8, (long)3, (long)4}))) == (3));\n    assert(candidate((std::vector<long>({(long)100,\
  \ (long)-33, (long)32, (long)-1, (long)0, (long)-2}))) == (-33));\n    assert(candidate((std::vector<long>({(long)-10})))\
  \ == (-10));\n    assert(candidate((std::vector<long>({(long)7}))) == (7));\n  \
  \  assert(candidate((std::vector<long>({(long)1, (long)-1}))) == (-1));\n}\n"
completions: ["    long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1, nums.size()\
    \ - i)));\n    }\n    return ans;", "    long ans = nums[0];\n    for (long i\
    \ = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + nums[i - 1]);\n\
    \    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans)\n            ans = sum;\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    return max;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min)\n            min = sum;\n        if (sum > max)\n         \
    \   max = sum;\n    }\n    return max;", "    long ans = nums[0];\n    for (long\
    \ i = 1; i < nums.size(); i++) {\n        long curr = nums[i];\n        ans =\
    \ std::min(ans, curr + nums[i - 1]);\n    }\n    return ans;", "    long ans =\
    \ INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n\
    \    long cur = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \       if (sum > 0) {\n            cur += nums[i];\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1)));\n\
    \    }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long\
    \ minSum = std::numeric_limits<long>::max();\n    long minSumIndex = 0;\n    for\
    \ (size_t i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if\
    \ (sum < minSum) {\n            minSum = sum;\n            minSumIndex = i;\n\
    \        }\n    }\n    return minSum;", "    long ans = INT_MAX;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long j =\
    \ 0; j < nums.size(); j++) {\n            if (i != j && nums[j] >= nums[i]) {\n\
    \                sum += nums[j];\n            }\n        }\n        if (sum <\
    \ ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    //\
    \ Your code here\n    long ans = INT_MIN;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    // Write your code here\n    long sum\
    \ = 0;\n    long min = std::numeric_limits<long>::max();\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long ans = INT_MIN;\n    long sum = 0;\n    for (long i : nums) {\n\
    \        sum += i;\n        if (sum < ans) {\n            ans = sum;\n       \
    \ }\n    }\n    return ans;", "    // Write your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    for(long i = 0; i < nums.size(); i++) {\n      \
    \  sum += nums[i];\n        if(sum < min) {\n            min = sum;\n        }\n\
    \    }\n    return min;", "    long ans = INT_MAX;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n\
    \    long i = 0;\n    while (i < n) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n        i++;\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    long min = nums[0];\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        long curr = nums[i];\n        long min =\
    \ std::min(min, curr);\n        ans = std::min(ans, curr + min);\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;",
  "    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Write your code here\n    long ans = INT_MIN;\n    long sum =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1, nums.size()\
    \ - i)));\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n       \
    \ ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(0, i + 1)));\n    }\n\
    \    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\n\
    \            ans = sum;\n    }\n    return ans;", "    long ans = nums[0];\n \
    \   for (long i = 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + minSubArraySum(nums.substr(i + 1, nums.size() - i)));\n    }\n    return ans;",
  "    // Write your code here\n    long ans = INT_MAX;\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min)\n            min = sum;\n        if (sum > max)\n         \
    \   max = sum;\n    }\n    return sum;", "    long ans = INT_MAX;\n    long sum\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long ans = INT_MAX;\n    long sum = 0;\n\
    \    long n = nums.size();\n    for(int i = 0; i < n; i++) {\n        sum += nums[i];\n\
    \        if(sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    for(long i = 0; i < nums.size(); i++){\n       \
    \ sum += nums[i];\n        if(sum < min){\n            min = sum;\n        }\n\
    \        if(sum > max){\n            max = sum;\n        }\n    }\n    return\
    \ min;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Your code here\n    long sum\
    \ = 0;\n    long minSum = std::numeric_limits<long>::max();\n    long minSumIndex\
    \ = 0;\n    long minSumVal = std::numeric_limits<long>::max();\n    long minSumValIndex\
    \ = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < minSum) {\n            minSum = sum;\n            minSumIndex\
    \ = i;\n            minSumVal = nums[i];\n            minSumValIndex = i;\n  \
    \      }\n    }\n    return minSum;", "    long ans = nums[0];\n    for (long\
    \ i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i\
    \ - 1]);\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    long n = nums.size();\n    for (int i = 1; i < n; i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i +\
    \ 1, nums.size() - i)));\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long min\
    \ = INT_MAX;\n    long max = INT_MIN;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < min) {\n            min = sum;\n\
    \        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n\
    \    return max;", "    // Your code here\n    long min = INT_MAX;\n    long sum\
    \ = 0;\n    long n = nums.size();\n    long start = 0;\n    long end = n - 1;\n\
    \    while (start < end) {\n        sum += nums[start];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        sum -= nums[end];\n        if\
    \ (sum < min) {\n            min = sum;\n        }\n        start += 1;\n    \
    \    end -= 1;\n    }\n    return min;", "    // Your code here\n    long min\
    \ = std::numeric_limits<long>::max();\n    long sum = 0;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min) {\n\
    \            min = sum;\n        }\n    }\n    return min;", "    // Your code\
    \ here\n    long minSum = nums[0];\n    long sum = 0;\n    long n = nums.size();\n\
    \    for (int i = 1; i < n; i++) {\n        sum += nums[i];\n        if (sum <\
    \ minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max\
    \ = INT_MIN;\n    long sumOfMin = INT_MAX;\n    long sumOfMax = INT_MIN;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if\
    \ (sum < min) {\n            min = sum;\n            sumOfMin = sum;\n       \
    \ }\n        if (sum > max) {\n            max = sum;\n            sumOfMax =\
    \ sum;\n        }\n    }\n    return sumOfMin + sumOfMax;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long sum = 0;\n    long minSum\
    \ = std::numeric_limits<long>::max();\n    long minIndex = -1;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n            minIndex = i;\n        }\n    }\n\
    \    return minSum;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i : nums) {\n        sum += i;\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    long n = nums.size();\n    long start = 0;\n    long end = n -\
    \ 1;\n    while (start < end) {\n        sum += nums[start];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n        sum -= nums[end];\n   \
    \     if (sum < ans) {\n            ans = sum;\n        }\n        start++;\n\
    \        end--;\n    }\n    return ans;", "    long ans = nums[0];\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i\
    \ + 1, nums.size() - i)));\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.subvector(i\
    \ + 1, nums.size())));\n    }\n    return ans;", "    long ans = INT_MAX;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (auto\
    \ i : nums) {\n        sum += i;\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    long sum = 0;\n    for(long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans) {\n    \
    \        ans = sum;\n        }\n    }\n    return ans;", "    // Your code here\n\
    \    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < min)\n            min = sum;\n        if (sum > max)\n            max = sum;\n\
    \    }\n    return sum;", "    // Your code here\n    long sum = 0;\n    long\
    \ min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n        if(sum > max) {\n\
    \            max = sum;\n        }\n    }\n    return max;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long ans = nums[0];\n   \
    \ long sum = 0;\n    for(int i = 1; i < nums.size(); i++){\n        sum += nums[i];\n\
    \        if(sum < ans){\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    // Your code here\n\
    \    long ans = INT_MIN;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    // Write your code here\n   \
    \ long sum = 0;\n    long min = INT_MAX;\n    long max = 0;\n    for(long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < min) {\n\
    \            min = sum;\n        }\n        if(sum > max) {\n            max =\
    \ sum;\n        }\n    }\n    return max;", "    // Your code here\n    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    long ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n    long\
    \ i = 0;\n    while (i < n) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n        i++;\n    }\n    return ans;",
  "    // Your code here\n    long ans = INT_MIN;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        long cur = nums[i];\n \
    \       long min = ans;\n        for (long j = i; j < nums.size(); j++) {\n  \
    \          min = std::min(min, cur + nums[j]);\n        }\n        ans = std::min(ans,\
    \ min);\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans)\n            ans = sum;\n    }\n    return ans;", "    long\
    \ ans = INT_MAX;\n    long sum = 0;\n    for (long i : nums) {\n        sum +=\
    \ i;\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n   \
    \ return ans;", "    // Your code here\n    long ans = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + minSubArraySum(nums.subvector(i\
    \ + 1, nums.size())));\n    }\n    return ans;", "    // Your code here\n    long\
    \ sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n        if (sum > max) {\n           \
    \ max = sum;\n        }\n    }\n    return max;", "    long ans = INT_MAX;\n \
    \   for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for\
    \ (long j = 0; j < nums.size(); j++) {\n            if (i != j) {\n          \
    \      sum += nums[j];\n            }\n        }\n        if (sum < ans) {\n \
    \           ans = sum;\n        }\n    }\n    return ans;", "    // Your code\
    \ here\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n   \
    \         if (i != j) {\n                sum += nums[j];\n            }\n    \
    \    }\n        if (sum < min) {\n            min = sum;\n        }\n    }\n \
    \   return min;", "    // Your code here\n    long sum = 0;\n    long minSum =\
    \ std::numeric_limits<long>::max();\n    long minSumIndex = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n            minSumIndex = i;\n        }\n    }\n\
    \    return minSum;", "    // Write your code here\n    long sum = 0;\n    long\
    \ min = INT_MAX;\n    long index = 0;\n    long sumOfSubArray = 0;\n    for(auto\
    \ num : nums) {\n        if(sumOfSubArray > sum) {\n            sumOfSubArray\
    \ = sum;\n            min = index;\n        }\n        sum += num;\n        index++;\n\
    \    }\n    return sumOfSubArray;", "    // Your code here\n    long ans = INT_MIN;\n\
    \    long sum = 0;\n    for (auto i : nums) {\n        sum += i;\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = INT_MIN;\n    long sum = 0;\n    for (auto num : nums) {\n        sum\
    \ += num;\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n\
    \    for (long i = 0; i < n; i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum =\
    \ 0;\n    for (long i : nums) {\n        sum += i;\n        if (sum < ans) {\n\
    \            ans = sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    for (long i : nums) {\n        sum += i;\n        if (sum\
    \ < ans)\n            ans = sum;\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long ans = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0;\
    \ j < nums.size(); j++) {\n            if (i != j) {\n                sum += nums[j];\n\
    \            }\n        }\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long min = INT_MAX;\n    long max = INT_MIN;\n    long sumOfMin = INT_MAX;\n\
    \    long sumOfMax = INT_MIN;\n    for(long i = 0; i < nums.size(); i++) {\n \
    \       sum += nums[i];\n        if(sum < min) {\n            min = sum;\n   \
    \         sumOfMin = sum;\n        }\n        if(sum > max) {\n            max\
    \ = sum;\n            sumOfMax = sum;\n        }\n    }\n    if(sumOfMin == INT_MAX)\
    \ {\n        return sumOfMax;\n    }\n    return sumOfMin + sumOfMax;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    long cur = 0;\n    for (auto i : nums) {\n\
    \        sum += i;\n        cur += i;\n        if (sum < ans) {\n            ans\
    \ = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans)\n            ans = sum;\n    }\n    return ans;", "  \
    \  long ans = INT_MIN;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    long sum = 0;\n    long n = nums.size();\n\
    \    for(long i = 0; i < n; i++) {\n        sum += nums[i];\n        if(sum <\
    \ ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans =\
    \ std::min(ans, nums[i] + minSubArraySum(nums.subvector(i + 1, nums.size())));\n\
    \    }\n    return ans;", "    long ans = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        long curSum = nums[i];\n        for (long j = i + 1; j < nums.size();\
    \ j++) {\n            curSum += nums[j];\n            if (curSum < ans) {\n  \
    \              ans = curSum;\n            }\n        }\n    }\n    return ans;",
  "    long ans = INT_MAX;\n    for (long i = 0; i < nums.size(); i++) {\n       \
    \ long sum = 0;\n        for (long j = 0; j < nums.size(); j++) {\n          \
    \  if (i != j) {\n                sum += nums[j];\n            }\n        }\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    long i = 0;\n    long j = nums.size() - 1;\n    while (i < j)\
    \ {\n        sum += nums[i];\n        while (sum > ans) {\n            ans = sum;\n\
    \            i++;\n        }\n        sum -= nums[j];\n        while (sum > ans)\
    \ {\n            ans = sum;\n            j--;\n        }\n    }\n    return ans;",
  "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n    }\n    return min;",
  "    // Your code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    for (auto i : nums) {\n        sum += i;\n        if (sum < minSum) {\n \
    \           minSum = sum;\n        }\n    }\n    return minSum;", "    // Your\
    \ code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long minSumIndex = 0;\n    for (long i = 0; i < nums.size(); i++) {\n   \
    \     sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \            minSumIndex = i;\n        }\n    }\n    return minSum;", "    long\
    \ ans = INT_MAX;\n    long sum = 0;\n    for (long i : nums) {\n        sum +=\
    \ i;\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n   \
    \ return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for(long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans)\n\
    \            ans = sum;\n    }\n    return ans;", "    long ans = nums[0];\n \
    \   long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long ans = INT_MAX;\n    long sum\
    \ = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n \
    \   long m = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q\
    \ = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n \
    \   long v = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z\
    \ = 0;\n    long a = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n \
    \   long e = 0;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i\
    \ = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n \
    \   long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r\
    \ = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n \
    \   long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a\
    \ = 0;\n    long b = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n \
    \   long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j\
    \ = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n \
    \   long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s\
    \ = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n \
    \   long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = 0;\n    long b\
    \ = 0;\n    long c = 0;\n    long d = 0;\n    long e = 0;\n    long f = 0;\n \
    \   long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k\
    \ = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n \
    \   long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t\
    \ = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n \
    \   long y = 0;\n    long z = 0;\n    long a = 0;\n    long b = 0;\n    long c\
    \ = 0;\n    long d = 0;\n    long e = 0;\n    ", "    long ans = INT_MAX;\n  \
    \  long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum +=\
    \ nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    // Your code here\n    long ans = nums[0];\n    for(long\
    \ i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i\
    \ - 1]);\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long minSum = INT_MAX;\n    long maxSum = INT_MIN;\n    for (long i = 0;\
    \ i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n        if (sum > maxSum) {\n     \
    \       maxSum = sum;\n        }\n    }\n    return minSum;", "    long sum =\
    \ 0;\n    long min = std::numeric_limits<long>::max();\n    for (auto i : nums)\
    \ {\n        sum += i;\n        if (sum < min) {\n            min = sum;\n   \
    \     }\n    }\n    return min;", "    long ans = nums[0];\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i\
    \ + 1, nums.size() - i)));\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + minSubArraySum(nums.substr(0, i)));\n    }\n    return ans;", "    // Your\
    \ code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < minSum) {\n            minSum = sum;\n        }\n    }\n    return\
    \ minSum;", "    // Your code here\n    long ans = INT_MIN;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    // Your code here\n    long minSum = nums[0];\n    long sum = 0;\n    long\
    \ sumOfSubArray = 0;\n    long sumOfSubArraySum = 0;\n    long currentSum = 0;\n\
    \    long currentSumOfSubArray = 0;\n    long currentSumOfSubArraySum = 0;\n \
    \   long currentMinSum = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n\
    \    long currentMinSumOfSubArraySum = nums[0];\n    long currentMaxSum = nums[0];\n\
    \    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = nums[0];\n    long currentMaxSumOfSubArraySum\
    \ = nums[0];\n    long currentMinSumOfSubArray = nums[0];\n    long currentMinSumOfSubArraySum\
    \ = nums[0];\n    long currentMaxSumOfSubArray = ", "    // Your code here\n \
    \   long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\n\
    \            min = sum;\n        if (sum > max)\n            max = sum;\n    }\n\
    \    return max;", "    long ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n\
    \    long i = 0;\n    long j = 0;\n    while (i < n) {\n        sum += nums[i];\n\
    \        while (j < n && nums[j] < sum) {\n            j++;\n        }\n     \
    \   if (j == n) {\n            ans = std::min(ans, sum);\n            sum = 0;\n\
    \            j = 0;\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ ans = INT_MAX;\n    long sum = 0;\n    for (auto i : nums) {\n        sum +=\
    \ i;\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n   \
    \ return ans;", "    // Your code here\n    long ans = INT_MIN;\n    for (auto\
    \ i : nums) {\n        ans = std::min(ans, i + i);\n    }\n    return ans;", " \
    \   long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++) {\n      \
    \  ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(i + 1, nums.size()\
    \ - i)));\n    }\n    return ans;", "    long ans = nums[0];\n    for (long i\
    \ = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i] + nums[i -\
    \ 1]);\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n \
    \   long minSum = INT_MAX;\n    long minIndex = -1;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        if (nums[i] <= 0) {\n            continue;\n  \
    \      }\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n            minIndex = i;\n        }\n    }\n    return minSum;", " \
    \   long ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n      \
    \  ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(0, i)));\n    }\n\
    \    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    long n = nums.size();\n\
    \    long start = 0;\n    long end = n - 1;\n    while (start < end) {\n     \
    \   sum += nums[start];\n        if (sum < ans) {\n            ans = sum;\n  \
    \      }\n        sum -= nums[end];\n        end -= 1;\n        start += 1;\n\
    \    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for(long\
    \ i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    // Write\
    \ your code here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n        if(sum > max) {\n\
    \            max = sum;\n        }\n    }\n    return min;", "    long ans = INT_MIN;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long sum = 0;\n       \
    \ for (long j = 0; j < nums.size(); j++) {\n            if (i == j) {\n      \
    \          sum += nums[j];\n            }\n            else if (nums[j] < nums[i])\
    \ {\n                sum += nums[j];\n            }\n        }\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum =\
    \ 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        long curSum = nums[i];\n\
    \        for (long j = i + 1; j < nums.size(); j++) {\n            curSum += nums[j];\n\
    \            if (curSum < ans) {\n                ans = curSum;\n            }\n\
    \        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        long sum = 0;\n        for (long j = 0;\
    \ j < nums.size(); j++) {\n            if (i != j && nums[j] >= nums[i]) {\n \
    \               sum += nums[j];\n            }\n        }\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + minSubArraySum(nums.subvector(i, nums.size() - i)));\n    }\n    return\
    \ ans;", "    long ans = INT_MIN;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans, nums[i]\
    \ + minSubArraySum(nums.subvector(1, i)));\n    }\n    return ans;", "    // Your\
    \ code here\n    long minSum = nums[0];\n    long minSumIndex = 0;\n    long sum\
    \ = 0;\n    for (int i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < minSum) {\n            minSum = sum;\n            minSumIndex\
    \ = i;\n        }\n    }\n    return minSum;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    long sum = 0;\n    for(long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if(sum < ans) {\n    \
    \        ans = sum;\n        }\n    }\n    return ans;", "    // Your code here\n\
    \    long ans = nums[0];\n    long sum = 0;\n    for(long i = 1; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if(sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.subvector(i + 1,\
    \ nums.size())));\n    }\n    return ans;", "    // Write your code here\n   \
    \ long sum = 0;\n    long min = INT_MAX;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n        }\n    }\n    return min;", "    // Your code here\n    long ans\
    \ = INT_MIN;\n    long sum = 0;\n    long n = nums.size();\n    for(long i = 0;\
    \ i < n; i++) {\n        sum += nums[i];\n        if(sum < ans) {\n          \
    \  ans = sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    long start = 0;\n    long end = nums.size() - 1;\n   \
    \ while (start < end) {\n        sum += nums[start];\n        ans = min(ans, sum);\n\
    \        sum -= nums[end];\n        ans = min(ans, sum);\n        sum = 0;\n \
    \       ++start;\n        --end;\n    }\n    return ans;", "    long ans = INT_MAX;\n\
    \    long sum = 0;\n    long long sumOfSubArray = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        sumOfSubArray += nums[i];\n\
    \        if (sumOfSubArray < ans) {\n            ans = sumOfSubArray;\n      \
    \  }\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n \
    \   for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + nums[i - 1]);\n    }\n    return ans;", "    long ans = INT_MAX;\n    long\
    \ sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Write your code here\n    long sum = 0;\n    long min = INT_MAX;\n\
    \    long max = INT_MIN;\n    long mid = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < min) {\n            min =\
    \ sum;\n            mid = i;\n        }\n        if (sum > max) {\n          \
    \  max = sum;\n            mid = i;\n        }\n    }\n    long ans = sum - min;\n\
    \    if (mid != nums.size() - 1) {\n        ans += minSubArraySum(nums.begin()\
    \ + mid + 1);\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum\
    \ = 0;\n    long sum2 = 0;\n    for (long i = 0; i < nums.size(); i++) {\n   \
    \     sum += nums[i];\n        sum2 += nums[i];\n        if (sum2 < sum) {\n \
    \           ans = sum;\n            sum = sum2;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    // Write your code\
    \ here\n    long sum = 0;\n    long min = INT_MAX;\n    long max = INT_MIN;\n\
    \    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n      \
    \  if(sum < min) {\n            min = sum;\n        }\n        if(sum > max) {\n\
    \            max = sum;\n        }\n    }\n    return max;", "    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n    }\n\
    \    return sum;", "    // Write your code here\n    long ans = INT_MIN;\n   \
    \ long sum = 0;\n    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    // Write your code here\n    long minSum = nums[0];\n    long sum\
    \ = 0;\n    for(long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n\
    \        if(sum < minSum) {\n            minSum = sum;\n        }\n    }\n   \
    \ return minSum;", "    // Your code here\n    long sum = 0;\n    long minSum\
    \ = INT_MAX;\n    long minIndex = -1;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < minSum) {\n            minSum\
    \ = sum;\n            minIndex = i;\n        }\n    }\n    return minSum;", " \
    \   long ans = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size();\
    \ i++) {\n        sum += nums[i];\n        if (sum < ans) {\n            ans =\
    \ sum;\n        }\n    }\n    return ans;", "    // Your code here\n    long ans\
    \ = INT_MIN;\n    long sum = 0;\n    long n = nums.size();\n    long i = 0;\n\
    \    long j = 0;\n    while (i < n) {\n        sum += nums[i];\n        while\
    \ (j < n && nums[j] < sum) {\n            j++;\n        }\n        ans = min(ans,\
    \ sum);\n        sum = sum - nums[j];\n        i++;\n        j = 0;\n    }\n \
    \   return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = INT_MAX;\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n\
    \    long cur = 0;\n    for (auto i : nums) {\n        sum += i;\n        cur\
    \ += i;\n        if (sum < ans) {\n            ans = sum;\n        }\n    }\n\
    \    return ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + minSubArraySum(nums.substr(0,\
    \ i + 1)));\n    }\n    return ans;", "    // Your code here\n    long sum = 0;\n\
    \    long min = std::numeric_limits<long>::max();\n    long max = std::numeric_limits<long>::min();\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < min) {\n            min = sum;\n        }\n        if (sum > max)\
    \ {\n            max = sum;\n        }\n    }\n    return sum;", "    long ans\
    \ = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n\
    \        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n \
    \       }\n    }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;",
  "    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < minSum) {\n            minSum = sum;\n        }\n    }\n    return minSum;",
  "    long ans = INT_MAX;\n    for (auto i : nums) {\n        ans = min(ans, i +\
    \ minSubArraySum(nums.subvector(0, i + 1)));\n    }\n    return ans;", "    //\
    \ Your code here\n    long sum = 0;\n    long min = INT_MAX;\n    for (long i\
    \ = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans = min(ans,\
    \ nums[i] + minSubArraySum(nums.substr(0, i + 1)));\n    }\n    return ans;",
  "    // Your code here\n    long sum = 0;\n    long minSum = std::numeric_limits<long>::max();\n\
    \    long minSumIndex = 0;\n    for (long i = 0; i < nums.size(); i++) {\n   \
    \     sum += nums[i];\n        if (sum < minSum) {\n            minSum = sum;\n\
    \            minSumIndex = i;\n        }\n    }\n    return minSum;", "    //\
    \ Write your code here\n    long min = INT_MAX;\n    long sum = 0;\n    for (long\
    \ i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < min)\
    \ {\n            min = sum;\n        }\n    }\n    return min;", "    long ans\
    \ = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        long curr\
    \ = nums[i];\n        long min = std::min(ans, curr);\n        ans = std::max(ans,\
    \ curr + min);\n    }\n    return ans;", "    long ans = INT_MIN;\n    long sum\
    \ = 0;\n    for (auto num : nums) {\n        sum += num;\n        if (sum < ans)\
    \ {\n            ans = sum;\n        }\n    }\n    return ans;", "    long ans\
    \ = nums[0];\n    long sum = 0;\n    long size = nums.size();\n    for (int i\
    \ = 1; i < size; i++) {\n        sum += nums[i];\n        if (sum < ans) {\n \
    \           ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    long ans = nums[0];\n    long sum = 0;\n    for\
    \ (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum\
    \ < ans) {\n            ans = sum;\n        }\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    for (long i = 1; i < nums.size(); i++) {\n        ans =\
    \ std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return ans;", "    // Your\
    \ code here\n    long minSum = nums[0];\n    long sum = 0;\n    for (long i =\
    \ 0; i < nums.size(); i++) {\n        sum += nums[i];\n        if (sum < minSum)\
    \ {\n            minSum = sum;\n        }\n    }\n    return minSum;", "    long\
    \ ans = nums[0];\n    for (long i = 0; i < nums.size(); i++) {\n        ans =\
    \ min(ans, nums[i] + minSubArraySum(nums.subvector(i + 1, nums.size())));\n  \
    \  }\n    return ans;", "    long ans = nums[0];\n    for (long i = 1; i < nums.size();\
    \ i++) {\n        ans = std::min(ans, nums[i] + nums[i - 1]);\n    }\n    return\
    \ ans;", "    long ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i <\
    \ nums.size(); i++) {\n        sum += nums[i];\n        if (sum < ans) {\n   \
    \         ans = sum;\n        }\n    }\n    return ans;", "    long ans = nums[0];\n\
    \    long sum = 0;\n    for (long i = 0; i < nums.size(); i++) {\n        sum\
    \ += nums[i];\n        if (sum < ans) {\n            ans = sum;\n        }\n \
    \   }\n    return ans;", "    // Your code here\n    long ans = INT_MIN;\n   \
    \ for (long i = 0; i < nums.size(); i++) {\n        ans = min(ans, nums[i] + minSubArraySum(nums.subvector(i\
    \ + 1, nums.size())));\n    }\n    return ans;", "    long ans = nums[0];\n  \
    \  for (long i = 1; i < nums.size(); i++) {\n        ans = std::min(ans, nums[i]\
    \ + minSubArraySum(nums.substr(0, i + 1)));\n    }\n    return ans;", "    long\
    \ ans = nums[0];\n    long sum = 0;\n    for (long i = 0; i < nums.size(); i++)\
    \ {\n        sum += nums[i];\n        if (sum < ans) {\n            ans = sum;\n\
    \        }\n    }\n    return ans;", "    long ans = nums[0];\n    long sum =\
    \ 0;\n    for(long i = 1; i < nums.size(); i++) {\n        sum += nums[i];\n \
    \       if(sum < ans) {\n            ans = sum;\n        }\n    }\n    return\
    \ ans;", "    long ans = INT_MAX;\n    long sum = 0;\n    for (auto i : nums)\
    \ {\n        sum += i;\n        if (sum < ans) {\n            ans = sum;\n   \
    \     }\n    }\n    return ans;", "    long ans = INT_MAX;\n    long sum = 0;\n\
    \    for (long i = 0; i < nums.size(); i++) {\n        sum += nums[i];\n     \
    \   if (sum < ans) {\n            ans = sum;\n        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

name: HumanEval_91_is_bored
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You'll be given a string\
  \ of words, and your task is to count the number\n// of boredoms. A boredom is a\
  \ sentence that starts with the word \"I\".\n// Sentences are delimited by '.',\
  \ '?' or '!'.\n// For example:\n// >>> is_bored((\"Hello world\"))\n// (0)\n// >>>\
  \ is_bored((\"The sky is blue. The sun is shining. I love this weather\"))\n// (1)\n\
  long is_bored(std::string S) {\n"
tests: "}\nint main() {\n    auto candidate = is_bored;\n    assert(candidate((\"\
  Hello world\")) == (0));\n    assert(candidate((\"Is the sky blue?\")) == (0));\n\
  \    assert(candidate((\"I love It !\")) == (1));\n    assert(candidate((\"bIt\"\
  )) == (0));\n    assert(candidate((\"I feel good today. I will be productive. will\
  \ kill It\")) == (2));\n    assert(candidate((\"You and I are going for a walk\"\
  )) == (0));\n}\n"
completions: ["    long boredoms = 0;\n    std::string word;\n    std::string sentence;\n\
    \    std::string delimiters = \".?!\";\n    std::string delimiters_lowercase =\
    \ \"i.e\";\n    std::string delimiters_uppercase = \"I.E\";\n    std::string delimiters_numbers\
    \ = \"1234567890\";\n    std::string delimiters_specials = \"!@#$%^&*()_+\";\n\
    \    std::string delimiters_all = \".?!1234567890\";\n    std::string delimiters_all_lowercase\
    \ = \"i.e\";\n    std::string delimiters_all_uppercase = \"I.E\";\n    std::string\
    \ delimiters_all_numbers = \"1234567890\";\n    std::string delimiters_all_specials\
    \ = \"!@#$%^&*()_+\";\n    std::string delimiters_all_all = \".?!1234567890\"\
    ;\n    std::string delimiters_all_all_lowercase = \"i.e\";\n    std::string delimiters_all_all_uppercase\
    \ = \"I.E\";\n    std::string delimiters_all_all_numbers = \"1234567890\";\n \
    \   std::string delimiters_all_all_specials = \"!@#$%^&*()_+\";\n    std::string\
    \ delimiters_all_all_all = \".?!1234567890\";\n    std::string delimiters_all_all_all_lowercase\
    \ = \"i.e\";\n    std::string delimiters_all_all_all_uppercase = \"I.E\";\n  \
    \  std::string delimiters_all_all_all_numbers = \"1234567890\";\n    std::string\
    \ delimiters_all_all_all_specials = \"!@#$%^&*()_+\";\n    std::string delimiters_all_all_all_all\
    \ = \".?!1234567890\";\n    std::string delimiters_all_all_all_all_lowercase =\
    \ \"i.e\";\n    std::string delimiters_all_all_all_all_uppercase = \"I.E\";\n\
    \    std::string delimiters_all_all_all_all_numbers = \"1234567890\";\n    std::string\
    \ delimiters_all_all_all_all_specials = \"!@#$%^&*()_+\";\n    std::string delimiters_all_all_all_all_all\
    \ = \".?!1234567890\";\n    std::string delimiters_all_all_all_all_all_lowercase\
    \ = \"i.e\";\n    std::string delimiters_all_all_all_all_all_uppercase = \"I.E\"\
    ;\n    std::string delimiters_all_all_all_all_all_numbers = \"1234567890\";\n\
    \    std::string delimiters_all_all_all_all_all_specials = \"!@#$%^&*()_+\";\n\
    \    std::string delimiters_all_all_all_all_all_all = \".?!1234567890\";\n   \
    \ std::string delimiters_all_all_all_all_all_all_lowercase = \"i.e\";\n    std::string\
    \ delimiters_all_all_all_all_all_all_uppercase = \"I.E\";\n    std::string delimiters_all_all_all_all_all_all_numbers\
    \ = \"123456789", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiter = \" .?!\";\n    std::string delimiter2 = \".\";\n    std::string\
    \ delimiter3 = \"?\";\n    std::string delimiter4 = \"!\";\n    std::string delimiter5\
    \ = \".?!\";\n    std::string delimiter6 = \".\";\n    std::string delimiter7\
    \ = \"?\";\n    std::string delimiter8 = \"!\";\n    std::string delimiter9 =\
    \ \".?!\";\n    std::string delimiter10 = \".\";\n    std::string delimiter11\
    \ = \"?\";\n    std::string delimiter12 = \"!\";\n    std::string delimiter13\
    \ = \".?!\";\n    std::string delimiter14 = \".\";\n    std::string delimiter15\
    \ = \"?\";\n    std::string delimiter16 = \"!\";\n    std::string delimiter17\
    \ = \".?!\";\n    std::string delimiter18 = \".\";\n    std::string delimiter19\
    \ = \"?\";\n    std::string delimiter20 = \"!\";\n    std::string delimiter21\
    \ = \".?!\";\n    std::string delimiter22 = \".\";\n    std::string delimiter23\
    \ = \"?\";\n    std::string delimiter24 = \"!\";\n    std::string delimiter25\
    \ = \".?!\";\n    std::string delimiter26 = \".\";\n    std::string delimiter27\
    \ = \"?\";\n    std::string delimiter28 = \"!\";\n    std::string delimiter29\
    \ = \".?!\";\n    std::string delimiter30 = \".\";\n    std::string delimiter31\
    \ = \"?\";\n    std::string delimiter32 = \"!\";\n    std::string delimiter33\
    \ = \".?!\";\n    std::string delimiter34 = \".\";\n    std::string delimiter35\
    \ = \"?\";\n    std::string delimiter36 = \"!\";\n    std::string delimiter37\
    \ = \".?!\";\n    std::string delimiter38 = \".\";\n    std::string delimiter39\
    \ = \"?\";\n    std::string delimiter40 = \"!\";\n    std::string delimiter41\
    \ = \".?!\";\n    std::string delimiter42 = \".\";\n    std::string delimiter43\
    \ = \"?\";\n    std::string delimiter44 = \"!\";\n    std::string delimiter45\
    \ = \".?!\";\n    std::string delimiter46 = \".\";\n    std::string delimiter47\
    \ = \"?\";\n    std::string delimiter48 = \"!\";\n    std::string delimiter49\
    \ = \".?!\";\n    std::string delimiter50 = \".\";\n    std::string delimiter51\
    \ = \"?\";\n    std::string delimiter52 = \"!\";\n    std::string delimiter53\
    \ = \".?!\";\n    std::string delimiter54 = \".\";\n    std::string delimiter55\
    \ = \"?\";\n    std::string delimiter56 = \"!\";\n    std::string delimiter57\
    \ = \".?!\";\n    std::string delimiter58 = \".\";\n    std::string delimiter59",
  "    long boredoms = 0;\n    std::string word;\n    for (auto &c : S) {\n      \
    \  if (c == '.' || c == '?' || c == '!') {\n            boredoms++;\n        }\n\
    \        else {\n            word = word + c;\n        }\n    }\n    if (word\
    \ == \"I\") {\n        boredoms++;\n    }\n    return boredoms;", "    long count\
    \ = 0;\n    std::string word;\n    for(int i = 0; i < S.size(); i++){\n      \
    \  word = S[i];\n        if(word == \"I\"){\n            count++;\n        }\n\
    \    }\n    return count;", "    long boredoms = 0;\n    std::string word;\n \
    \   std::string boredom_word;\n    std::string boredom_word_2;\n    std::string\
    \ boredom_word_3;\n    std::string boredom_word_4;\n    std::string boredom_word_5;\n\
    \    std::string boredom_word_6;\n    std::string boredom_word_7;\n    std::string\
    \ boredom_word_8;\n    std::string boredom_word_9;\n    std::string boredom_word_10;\n\
    \    std::string boredom_word_11;\n    std::string boredom_word_12;\n    std::string\
    \ boredom_word_13;\n    std::string boredom_word_14;\n    std::string boredom_word_15;\n\
    \    std::string boredom_word_16;\n    std::string boredom_word_17;\n    std::string\
    \ boredom_word_18;\n    std::string boredom_word_19;\n    std::string boredom_word_20;\n\
    \    std::string boredom_word_21;\n    std::string boredom_word_22;\n    std::string\
    \ boredom_word_23;\n    std::string boredom_word_24;\n    std::string boredom_word_25;\n\
    \    std::string boredom_word_26;\n    std::string boredom_word_27;\n    std::string\
    \ boredom_word_28;\n    std::string boredom_word_29;\n    std::string boredom_word_30;\n\
    \    std::string boredom_word_31;\n    std::string boredom_word_32;\n    std::string\
    \ boredom_word_33;\n    std::string boredom_word_34;\n    std::string boredom_word_35;\n\
    \    std::string boredom_word_36;\n    std::string boredom_word_37;\n    std::string\
    \ boredom_word_38;\n    std::string boredom_word_39;\n    std::string boredom_word_40;\n\
    \    std::string boredom_word_41;\n    std::string boredom_word_42;\n    std::string\
    \ boredom_word_43;\n    std::string boredom_word_44;\n    std::string boredom_word_45;\n\
    \    std::string boredom_word_46;\n    std::string boredom_word_47;\n    std::string\
    \ boredom_word_48;\n    std::string boredom_word_49;\n    std::string boredom_word_50;\n\
    \    std::string boredom_word_51;\n    std::string boredom_word_52;\n    std::string\
    \ boredom_word_53;\n    std::string boredom_word_54;\n    std::string boredom_word_55;\n\
    \    std::string boredom_word_56;\n    std::string boredom_word_57;\n    std::string\
    \ boredom_word_", "    // Write your code here\n    long boredoms = 0;\n    std::string\
    \ word;\n    std::string boredom_word = \"I\";\n    std::string boredom_sentence\
    \ = \"I\";\n    std::string sentence;\n    std::string sentence_word;\n    std::string\
    \ sentence_sentence;\n    std::string sentence_boredom_word;\n    std::string\
    \ sentence_boredom_sentence;\n    std::string sentence_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_sentence;\n    std::string sentence_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_sentence;\n    std::string sentence_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_sentence;\n    std::string\
    \ sentence_boredom_boredom_boredom_boredom_boredom_word;\n    std::string sentence_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_sentence;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_word;\n\
    \    std::string sentence_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_boredom_bore",
  "    long boredoms = 0;\n    std::string word;\n    std::string delimiters = \"\
    .?!\";\n    std::string delimiters_lowercase = \"i.e\";\n    std::string delimiters_uppercase\
    \ = \"I.E\";\n    std::string delimiters_numbers = \"1.\";\n    std::string delimiters_specials\
    \ = \"!\";\n    std::string delimiters_special_lowercase = \"i.e\";\n    std::string\
    \ delimiters_special_uppercase = \"I.E\";\n    std::string delimiters_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_specials = \"!\";\n    std::string\
    \ delimiters_special_special_lowercase = \"i.e\";\n    std::string delimiters_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_numbers = \"1.\";\n \
    \   std::string delimiters_special_special_specials = \"!\";\n    std::string\
    \ delimiters_special_special_special_lowercase = \"i.e\";\n    std::string delimiters_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_numbers = \"\
    1.\";\n    std::string delimiters_special_special_special_specials = \"!\";\n\
    \    std::string delimiters_special_special_special_special_lowercase = \"i.e\"\
    ;\n    std::string delimiters_special_special_special_special_uppercase = \"I.E\"\
    ;\n    std::string delimiters_special_special_special_special_numbers = \"1.\"\
    ;\n    std::string delimiters_special_special_special_special_specials = \"!\"\
    ;\n    std::string delimiters_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiters_special_special_special_special_special_special_special_special_lowercase\
    \ = \"i.e\";\n    std::string delimiters_special_special_special_special_special_special_special_special_special_uppercase\
    \ = \"I.E\";\n    std::string delimiters_special_special_special_special_special_special_special_special_special_numbers\
    \ = \"1.\";\n    std::string delimiters_special_special_special_special_special_special_special_special_specials\
    \ = \"!\";\n    std::string delimiter", "    long count = 0;\n    for(int i =\
    \ 0; i < S.size(); i++) {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\
    \ {\n            count++;\n        }\n    }\n    return count;", "    long boredoms\
    \ = 0;\n    std::string word;\n    std::string delimiter = \" .?!\";\n    std::string\
    \ delimiter1 = \" \";\n    std::string delimiter2 = \" \";\n    std::string delimiter3\
    \ = \" \";\n    std::string delimiter4 = \" \";\n    std::string delimiter5 =\
    \ \" \";\n    std::string delimiter6 = \" \";\n    std::string delimiter7 = \"\
    \ \";\n    std::string delimiter8 = \" \";\n    std::string delimiter9 = \" \"\
    ;\n    std::string delimiter10 = \" \";\n    std::string delimiter11 = \" \";\n\
    \    std::string delimiter12 = \" \";\n    std::string delimiter13 = \" \";\n\
    \    std::string delimiter14 = \" \";\n    std::string delimiter15 = \" \";\n\
    \    std::string delimiter16 = \" \";\n    std::string delimiter17 = \" \";\n\
    \    std::string delimiter18 = \" \";\n    std::string delimiter19 = \" \";\n\
    \    std::string delimiter20 = \" \";\n    std::string delimiter21 = \" \";\n\
    \    std::string delimiter22 = \" \";\n    std::string delimiter23 = \" \";\n\
    \    std::string delimiter24 = \" \";\n    std::string delimiter25 = \" \";\n\
    \    std::string delimiter26 = \" \";\n    std::string delimiter27 = \" \";\n\
    \    std::string delimiter28 = \" \";\n    std::string delimiter29 = \" \";\n\
    \    std::string delimiter30 = \" \";\n    std::string delimiter31 = \" \";\n\
    \    std::string delimiter32 = \" \";\n    std::string delimiter33 = \" \";\n\
    \    std::string delimiter34 = \" \";\n    std::string delimiter35 = \" \";\n\
    \    std::string delimiter36 = \" \";\n    std::string delimiter37 = \" \";\n\
    \    std::string delimiter38 = \" \";\n    std::string delimiter39 = \" \";\n\
    \    std::string delimiter40 = \" \";\n    std::string delimiter41 = \" \";\n\
    \    std::string delimiter42 = \" \";\n    std::string delimiter43 = \" \";\n\
    \    std::string delimiter44 = \" \";\n    std::string delimiter45 = \" \";\n\
    \    std::string delimiter46 = \" \";\n    std::string delimiter47 = \" \";\n\
    \    std::string delimiter48 = \" \";\n    std::string delimiter49 = \" \";\n\
    \    std::string delimiter50 = \" \";\n    std::string delimiter51 = \" \";\n\
    \    std::string delimiter52 = \" \";\n    std::string delimiter53 = \" \";\n\
    \    std::string delimiter54 = \" \";\n    std::string delimiter55 = \" \";\n\
    \    std::string delimiter56 = \" \";\n    std::string delimiter57 = \" \";\n\
    \    std::string delimiter58 = \" \";\n    std::string delimiter59 = \" \";\n\
    \    std::string delimiter60 = \" \";\n    std::string delimiter61 = \" \";\n\
    \    std::string delimiter62 = \" \";\n    std::string delimiter63 = \" ", " \
    \   int boredoms = 0;\n    for(int i = 0; i < S.size(); i++) {\n        if(S[i]\
    \ == '.' || S[i] == '?' || S[i] == '!') {\n            boredoms++;\n        }\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string delimiters = \".?!\";\n    for (size_t i = 0; i < S.size(); i++)\
    \ {\n        word = S[i];\n        if (word.compare(0, 2, \"I\") == 0) {\n   \
    \         boredoms++;\n        }\n    }\n    return boredoms;", "    long boredoms\
    \ = 0;\n    std::string word;\n    for (auto &i : S) {\n        if (i == '.')\
    \ {\n            boredoms += 1;\n        }\n        else if (i == '?') {\n   \
    \         boredoms += 1;\n        }\n        else if (i == '!') {\n          \
    \  boredoms += 1;\n        }\n        else if (i == 'I') {\n            boredoms\
    \ += 1;\n        }\n        else {\n            word = i;\n        }\n    }\n\
    \    return boredoms;", "    long boredoms = 0;\n    std::string word;\n    std::string\
    \ delimiters = \".?!\";\n    std::string delimiters_lower = \".?!\";\n    for\
    \ (size_t i = 0; i < S.size(); i++) {\n        word = S[i];\n        if (word[0]\
    \ == 'I')\n            boredoms += 1;\n    }\n    return boredoms;", "    // Write\
    \ your code here\n    long boredom = 0;\n    for(int i = 0; i < S.size(); i++)\
    \ {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!') {\n            boredom++;\n\
    \        }\n    }\n    return boredom;", "    int boredom = 0;\n    int i = 0;\n\
    \    while (i < S.length()) {\n        if (S[i] == '.') {\n            boredom++;\n\
    \        }\n        if (S[i] == '?') {\n            boredom++;\n        }\n  \
    \      if (S[i] == '!') {\n            boredom++;\n        }\n        i++;\n \
    \   }\n    return boredom;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string boredom_word = \"I\";\n    std::string delimiter = \".?!\";\n\
    \    std::string delimiter2 = \".?!\";\n    std::string delimiter3 = \".?!\";\n\
    \    std::string delimiter4 = \".?!\";\n    std::string delimiter5 = \".?!\";\n\
    \    std::string delimiter6 = \".?!\";\n    std::string delimiter7 = \".?!\";\n\
    \    std::string delimiter8 = \".?!\";\n    std::string delimiter9 = \".?!\";\n\
    \    std::string delimiter10 = \".?!\";\n    std::string delimiter11 = \".?!\"\
    ;\n    std::string delimiter12 = \".?!\";\n    std::string delimiter13 = \".?!\"\
    ;\n    std::string delimiter14 = \".?!\";\n    std::string delimiter15 = \".?!\"\
    ;\n    std::string delimiter16 = \".?!\";\n    std::string delimiter17 = \".?!\"\
    ;\n    std::string delimiter18 = \".?!\";\n    std::string delimiter19 = \".?!\"\
    ;\n    std::string delimiter20 = \".?!\";\n    std::string delimiter21 = \".?!\"\
    ;\n    std::string delimiter22 = \".?!\";\n    std::string delimiter23 = \".?!\"\
    ;\n    std::string delimiter24 = \".?!\";\n    std::string delimiter25 = \".?!\"\
    ;\n    std::string delimiter26 = \".?!\";\n    std::string delimiter27 = \".?!\"\
    ;\n    std::string delimiter28 = \".?!\";\n    std::string delimiter29 = \".?!\"\
    ;\n    std::string delimiter30 = \".?!\";\n    std::string delimiter31 = \".?!\"\
    ;\n    std::string delimiter32 = \".?!\";\n    std::string delimiter33 = \".?!\"\
    ;\n    std::string delimiter34 = \".?!\";\n    std::string delimiter35 = \".?!\"\
    ;\n    std::string delimiter36 = \".?!\";\n    std::string delimiter37 = \".?!\"\
    ;\n    std::string delimiter38 = \".?!\";\n    std::string delimiter39 = \".?!\"\
    ;\n    std::string delimiter40 = \".?!\";\n    std::string delimiter41 = \".?!\"\
    ;\n    std::string delimiter42 = \".?!\";\n    std::string delimiter43 = \".?!\"\
    ;\n    std::string delimiter44 = \".?!\";\n    std::string delimiter45 = \".?!\"\
    ;\n    std::string delimiter46 = \".?!\";\n    std::string delimiter47 = \".?!\"\
    ;\n    std::string delimiter48 = \".?!\";\n    std::string delimiter49 = \".?!\"\
    ;\n    ", "    long boredoms = 0;\n    std::string word;\n    std::string sentence;\n\
    \    std::string delimiters = \".?!\";\n    size_t pos = 0;\n    size_t count\
    \ = 0;\n    while(pos < S.length()) {\n        word = S.substr(pos, 1);\n    \
    \    pos = pos + 1;\n        pos = S.find(delimiters, pos);\n        sentence\
    \ = S.substr(0, pos);\n        boredoms += (sentence.find(word) != std::string::npos);\n\
    \    }\n    return boredoms;", "    long boredoms = 0;\n    std::string word;\n\
    \    std::string delimiters = \".?!\";\n    std::string::size_type pos;\n    std::string\
    \ temp;\n    pos = 0;\n    temp = S;\n    while (pos != std::string::npos) {\n\
    \        pos = temp.find(delimiters, pos);\n        word = temp.substr(0, pos);\n\
    \        if (word == \"I\") {\n            boredoms++;\n        }\n        temp\
    \ = temp.substr(pos + 1);\n    }\n    return boredoms;", "    int boredom = 0;\n\
    \    int i = 0;\n    while (i < S.size()) {\n        if (S[i] == '.' || S[i] ==\
    \ '?' || S[i] == '!') {\n            boredom++;\n        }\n        i++;\n   \
    \ }\n    return boredom;", "    long boredoms = 0;\n    std::string word;\n  \
    \  std::string delimiters = \".?!\";\n    size_t pos = 0;\n    std::string temp;\n\
    \    while(pos < S.size()) {\n        word = S.substr(pos, 1);\n        pos =\
    \ 0;\n        temp = S;\n        for(size_t i = 0; i < delimiters.size(); i++)\
    \ {\n            pos = temp.find(delimiters[i]);\n            if(pos != std::string::npos)\
    \ {\n                temp = temp.substr(0, pos);\n                break;\n   \
    \         }\n        }\n        if(word == \"I\") {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;"]
stop_tokens:
- "\n}"

name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
  \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
  \ numbers that are negative or not integers.\n// >>> double_the_difference((std::vector<float>({(long)1,\
  \ (long)3, (long)2, (long)0})))\n// (10)\n// >>> double_the_difference((std::vector<float>({(long)-1,\
  \ (long)-2, (long)0})))\n// (0)\n// >>> double_the_difference((std::vector<float>({(long)9,\
  \ (long)-2})))\n// (81)\n// >>> double_the_difference((std::vector<float>({(long)0})))\n\
  // (0)\n// If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)5.0, (float)4.0})))\
  \ == (25));\n    assert(candidate((std::vector<float>({(float)0.1, (float)0.2, (float)0.3})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-10.0, (float)-20.0,\
  \ (float)-30.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)-1.0,\
  \ (float)-2.0, (float)8.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)0.2,\
  \ (float)3.0, (float)5.0}))) == (34));\n    assert(candidate((std::vector<float>({(float)-9.0,\
  \ (float)-7.0, (float)-5.0, (float)-3.0, (float)-1.0, (float)1.0, (float)3.0, (float)5.0,\
  \ (float)7.0, (float)9.0}))) == (165));\n}\n"
completions: ["  long sum = 0;\n  for (float f : lst) {\n    if (f > 0) sum += (long)(f*f);\n\
    \  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if\
    \ (x > 0) {\n            sum += x * x;\n        } else if (x < 0) {\n        \
    \    sum += x * x;\n        } else {\n            sum += x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ >= 0) sum += i * i;\n        else sum += i;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if ((int)x != x) {\n          \
    \  sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (float i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n  \
    \      }\n    }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n\
    \    if (x < 0) {\n      sum += std::abs(x);\n    } else {\n      sum += x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (float f : lst) {\n \
    \       if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n        \
    \    sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n \
    \   long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n\
    \        long sum2 = sum;\n        for (long i = 1; i < n; i++) {\n          \
    \  sum2 += lst[i] * lst[i];\n        }\n        sum = sum2 - sum * sum / n;\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (float f : lst) {\n    if (f\
    \ > 0)\n      sum += (long)f*f;\n  }\n  return sum;", "    long sum = 0;\n   \
    \ for (float x : lst) {\n        if (x > 0) {\n            sum += x * x;\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n         \
    \   sum += x * x;\n        } else {\n            sum += x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f\
    \ > 0)\n            sum += f * f;\n    }\n    return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (lst[i] % 2 != 0) {\n           \
    \     sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (float f : lst) {\n    if (f < 0) {\n      sum += f * f;\n\
    \    } else {\n      sum += f;\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x % 2 != 0) {\n            sum += x *\
    \ x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float f : lst)\
    \ {\n    if (f > 0) sum += f*f;\n  }\n  return sum;", "  long sum = 0;\n  for\
    \ (float x : lst) {\n    if (x < 0) {\n      sum += x;\n    } else {\n      sum\
    \ += x * x;\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        if (x > 0) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ % 2 == 1) {\n            sum += i;\n        }\n    }\n    return sum;", "  long\
    \ sum = 0;\n  for (float i : lst) {\n    if (i >= 0) {\n      sum += i * i;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n \
    \       if ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ sum_squares = 0;\n    long i;\n    for(i = 0; i < n; i++) {\n        if(lst[i]\
    \ < 0) {\n            sum += lst[i];\n            sum_squares += lst[i] * lst[i];\n\
    \        } else {\n            sum += lst[i];\n            sum_squares += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum_squares / n;", "    long sum = 0;\n\
    \    long n = lst.size();\n    if (n > 0) {\n        float sumOfSquares = 0;\n\
    \        for (long i = 0; i < n; i++) {\n            if (lst[i] > 0)\n       \
    \         sumOfSquares += lst[i] * lst[i];\n        }\n        sum = sumOfSquares;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    if (x < 0) continue;\n        if (x > 0) sum += x * x;\n        else sum\
    \ += x;\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x != 0.0f && x != 0.0l) {\n            sum += x * x;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long sum_square = 0;\n    long sum_square_of_squares = 0;\n    long sum_square_of_squares_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared = 0;\n    long sum_square_of_squares_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared = 0;\n\
    \    long sum_square_of_squares_squared_squared_squared_squared_squared = 0;\n\
    \    long sum_square_of_squares_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared_squared\
    \ = 0;\n    long sum_square_of_squares_squared_squared_squared_", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n            sum\
    \ += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto\
    \ i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n       \
    \ if (i >= 0) {\n            sum += i * i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float num : lst) {\n        if (num > 0) {\n      \
    \      sum += num * num;\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float x : lst) {\n        if (x >= 0) {\n            sum += x *\
    \ x;\n        } else {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 != 0)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;", "  long sum =\
    \ 0;\n  for (float i : lst) {\n    if (i >= 0) {\n      sum += i * i;\n    }\n\
    \  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if\
    \ ((x > 0) && (x % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n \
    \   return sum;", "    long sum = 0;\n    long n = lst.size();\n    for (long\
    \ i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if\
    \ (n == 0)\n        return 0;\n    long sum_squares = 0;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (lst[i] % 2 != 0)\n            sum_squares += lst[i]\
    \ * lst[i];\n    }\n    sum = sum_squares / n;\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if ((int)x > 0)\n            sum +=\
    \ x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n            sum\
    \ += i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x > 0) {\n            sum += x * x;\n        }\n   \
    \ }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n       \
    \ if ((int)x == x) {\n            sum += x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 !=\
    \ 0)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n            sum\
    \ += x * x;\n        } else {\n            sum += x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    if (lst.size()\
    \ == 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x > 0) {\n            sum += x * x;\n        } else if (x < 0)\
    \ {\n            sum += x * x;\n        } else {\n            sum += x;\n    \
    \    }\n    }\n    return sum;", "  long sum = 0;\n  for (float f : lst) {\n \
    \   if (f > 0) sum += (long)(f*f);\n  }\n  return sum;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n\
    \        }\n    }\n    return sum;", "    if (lst.size() == 0) {\n        return\
    \ 0;\n    }\n    long sum = 0;\n    for (float x : lst) {\n        if (x % 2 ==\
    \ 1) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float num : lst) {\n        if (num > 0) {\n            sum\
    \ += num * num;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float\
    \ f : lst) {\n    if (f > 0) sum += f * f;\n  }\n  return sum;", "    long sum\
    \ = 0;\n    for (float f : lst) {\n        if (f > 0)\n            sum += (long)f*f;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    if (x > 0) {\n            sum += x * x;\n        } else if (x < 0) {\n  \
    \          sum += x * x;\n        } else {\n            sum += x;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float i : lst) {\n    \
    \    if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (auto x : lst) {\n        if (x % 2 == 1) {\n      \
    \      sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if ((int)x > 0)\n            sum += x * x;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    if (x > 0) sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (float i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x < 0)\n            sum += x * x;\n        else\n           \
    \ sum += x;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0)\n        return 0;\n    long sum2 = 0;\n    for (long i = 0;\
    \ i < n; i++) {\n        if (lst[i] % 2 != 0) {\n            sum += lst[i] * lst[i];\n\
    \            sum2 += lst[i] * lst[i];\n        }\n    }\n    return sum - sum2;",
  "    long sum = 0;\n    for (float f : lst) {\n        if (f < 0) {\n          \
    \  sum += std::abs(f);\n        } else {\n            sum += f;\n        }\n \
    \   }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n     \
    \   if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n        }\n   \
    \ }\n    return sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n\
    \    long sum = 0;\n    for (float f : lst) {\n        if (f < 0) {\n        \
    \    continue;\n        }\n        if (f % 2 == 1) {\n            sum += f * f;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 == 1) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float num : lst) {\n        if (num > 0)\
    \ {\n            sum += num * num;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n   \
    \     if (lst[i] >= 0) {\n            sum += lst[i] * lst[i];\n        }\n   \
    \ }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x >=\
    \ 0) {\n      sum += x * x;\n    } else {\n      sum += x;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        } else {\n            sum += x;\n        }\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (float f : lst) {\n    if (f\
    \ > 0)\n      sum += f * f;\n  }\n  return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for (long\
    \ i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n     \
    \   sum = sum - lst[n-1] * lst[n-1];\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float x : lst) {\n        if (x < 0) continue;\n        if (x >\
    \ 0) sum += x * x;\n        else sum += x;\n    }\n    return sum;", "  long sum\
    \ = 0;\n  for (float i : lst) {\n    if (i >= 0) sum += i * i;\n  }\n  return\
    \ sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x < 0) {\n      sum\
    \ += x * x;\n    } else {\n      sum += x;\n    }\n  }\n  return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    if (n == 0)\n        return 0;\n   \
    \ long sum_square = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ % 2 == 1)\n            sum_square += lst[i] * lst[i];\n    }\n    sum = sum_square;\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if ((int)(x)\
    \ % 2 != 0) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 ==\
    \ 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if (x < 0) continue;\n        if\
    \ (x % 2 == 1) sum += x;\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n            sum +=\
    \ x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x < 0) continue;\n        if (x > 9) continue;\n   \
    \     sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ num : lst) {\n        if (num > 0) {\n            sum += num * num;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n > 0) {\n        long sum = 0;\n        for (long i = 0; i < n; i++)\
    \ {\n            if (lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n\
    \            }\n        }\n        return sum;\n    }\n    return 0;", "    long\
    \ sum = 0;\n    for (auto i : lst) {\n        if (i >= 0) {\n            sum +=\
    \ i * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ num : lst) {\n        if (num > 0) {\n            sum += num * num;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if (x > 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n     \
    \   return 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n \
    \           sum += lst[i] * lst[i];\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (float f : lst) {\n    if (f > 0) sum += (f - f) / 2;\n  }\n  return sum;",
  "    long sum = 0;\n    for (float f : lst) {\n        if (f < 0) {\n          \
    \  sum += f * f;\n        } else {\n            sum += f;\n        }\n    }\n\
    \    return sum;", "    if (lst.size() == 0)\n        return 0;\n    long long\
    \ sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1))\n\
    \            sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float x : lst) {\n        if (x >= 0) {\n            sum += x * x;\n      \
    \  } else {\n            sum += x;\n        }\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n\
    \        for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += lst[i];\n            }\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float num : lst) {\n        if (num >= 0) {\n     \
    \       sum += num * num;\n        }\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float x : lst) {\n        if (x >= 0) {\n            sum += x *\
    \ x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (auto i\
    \ : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f\
    \ > 0)\n            sum += std::pow(f, 2);\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float f : lst) {\n        if (f > 0)\n            sum +=\
    \ (long)f*f;\n    }\n    return sum;", "    long sum = 0;\n    for (float x :\
    \ lst) {\n        if (x >= 0) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if (n > 0)\
    \ {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n         \
    \   if (lst[i] % 2 != 0) {\n                sum += lst[i] * lst[i];\n        \
    \    }\n        }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0)\n        return 0;\n    long sum_square = 0;\n    for (long i\
    \ = 0; i < n; i++) {\n        float x = lst[i];\n        if (x < 0)\n        \
    \    x += n;\n        if (x % 2 == 1)\n            sum_square += x * x;\n    }\n\
    \    sum = sum_square;\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n == 0)\n        return 0;\n    long sum_square = 0;\n    for (long i\
    \ = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n\
    \        else\n            sum -= lst[i] * lst[i];\n        sum_square += lst[i]\
    \ * lst[i];\n    }\n    return sum - sum_square;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for (long\
    \ i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n     \
    \   sum -= lst[n-1] * lst[n-1];\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (auto it = lst.begin(); it != lst.end(); ++it) {\n        if (*it < 0)\
    \ {\n            sum += *it * -1;\n        } else {\n            sum += *it;\n\
    \        }\n    }\n    return sum;", "    if (lst.empty()) return 0;\n    long\
    \ ans = 0;\n    for (float x : lst) {\n        if (x % 2 == 1) ans += x * x;\n\
    \    }\n    return ans;", "    long sum = 0;\n    for (float num : lst) {\n  \
    \      if (num > 0) {\n            sum += num * num;\n        }\n    }\n    return\
    \ sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n    long sum =\
    \ 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n    \
    \        sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    if (n > 0) {\n        sum += lst[0] * lst[0];\n\
    \        for (long i = 1; i < n; i++) {\n            sum += lst[i] * lst[i];\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float num :\
    \ lst) {\n        if (num > 0) {\n            sum += num * num;\n        }\n \
    \   }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if\
    \ (n > 0) {\n        float sumOfSquares = 0;\n        for (long i = 0; i < n;\
    \ i++) {\n            float x = lst[i];\n            if (x >= 0) {\n         \
    \       sumOfSquares += x * x;\n            }\n        }\n        sum = sumOfSquares/n;\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    if\
    \ (n == 0) {\n        return 0;\n    }\n    for (long i = 0; i < n; i++) {\n \
    \       if (lst[i] < 0) {\n            sum += lst[i] * lst[i];\n        } else\
    \ {\n            sum += lst[i];\n        }\n    }\n    return sum;", "  long sum\
    \ = 0;\n  for (float num : lst) {\n    if (num > 0) {\n      sum += num * num;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n \
    \       if (x > 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n  \
    \          sum += x * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n\
    \  for (float x : lst) {\n    if (x >= 0) {\n      sum += x * x;\n    } else {\n\
    \      sum += x * x;\n    }\n  }\n  return sum;", "    long sum = 0;\n    for\
    \ (float x : lst) {\n        if (x >= 0) {\n            sum += x * x;\n      \
    \  } else {\n            sum += x * x;\n        }\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n        \
    \    sum += x * x;\n        } else {\n            sum += x * x;\n        }\n \
    \   }\n    return sum;", "  long sum = 0;\n  for (float i : lst) {\n    if (i\
    \ >= 0) {\n      sum += i * i;\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        if (i % 2 == 1) {\n            sum += i;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long\
    \ sum_squares_squared = 0;\n    long sum_of_squares = 0;\n    long sum_of_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum = 0;\n    long sum_of_squares_squared_sum_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares = 0;\n\
    \    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared = 0;\n\
    \    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum =\
    \ 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared\
    \ = 0;\n    long sum_of_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_sum_squares_squared_",
  "    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long m =\
    \ lst[n-1];\n        for (long i = n-2; i >= 0; i--) {\n            sum += lst[i]\
    \ * lst[i];\n            if (lst[i] % m == 0) {\n                sum -= lst[i]\
    \ / m;\n            }\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float f : lst) {\n        if (f > 0)\n            sum += (long)f*f;\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ sum_squares = 0;\n    long sum_squares_squared = 0;\n    long sum_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares = 0;\n    long sum_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum = 0;\n    long\
    \ sum_squares_squared_sum_of_squares_squared_sum_of_squares = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_", "    if (lst.size() ==\
    \ 0) {\n        return 0;\n    }\n    long sum = 0;\n    for (float x : lst) {\n\
    \        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n        }\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    for\
    \ (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += lst[i]\
    \ * lst[i];\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    if (n > 0) {\n        long sum = 0;\n        for (long i = 0; i < n; i++)\
    \ {\n            sum += lst[i] * lst[i];\n        }\n        sum = std::sqrt(sum);\n\
    \        for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 == 1) {\n\
    \                sum += lst[i];\n            }\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n        long sum\
    \ = 0;\n        for (long i = 0; i < n; i++) {\n            if (lst[i] % 2 !=\
    \ 0) {\n                sum += lst[i] * lst[i];\n            }\n        }\n  \
    \      sum = sum / 2;\n    }\n    return sum;", "    long sum = 0;\n    long n\
    \ = lst.size();\n    long sum_squares = 0;\n    long i;\n    for(i = 0; i < n;\
    \ i++) {\n        if(lst[i] > 0)\n            sum += lst[i];\n        else\n \
    \           sum_squares += lst[i] * lst[i];\n    }\n    return sum_squares / n;",
  "    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > 0)\n            sum += lst[i] * lst[i];\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    long n = lst.size();\n    long i = 0;\n    while (i < n) {\n     \
    \   if (lst[i] % 2 == 1) {\n            sum += lst[i] * lst[i];\n        }\n \
    \       i++;\n    }\n    return sum;", "    long sum = 0;\n    for (float i :\
    \ lst) {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (float i : lst) {\n    if (i >= 0)\
    \ sum += i * i;\n  }\n  return sum;", "    long sum = 0;\n    for (float num :\
    \ lst) {\n        if (num < 0) {\n            continue;\n        }\n        if\
    \ (num % 2 != 0) {\n            sum += num * num;\n        }\n    }\n    return\
    \ sum;", "    if (lst.size() == 0) {\n        return 0;\n    }\n    long sum =\
    \ 0;\n    for (float f : lst) {\n        if (f < 0) {\n            continue;\n\
    \        }\n        if (f % 2 != 0) {\n            sum += f * f;\n        }\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (float num : lst) {\n    if\
    \ (num < 0) {\n      continue;\n    }\n    if (num % 2 != 0) {\n      sum += num\
    \ * num;\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        if (i % 2 != 0) {\n            sum += i;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    long count = 0;\n    for (auto it = lst.begin();\
    \ it != lst.end(); ++it) {\n        if (*it > 0) count++;\n        sum += *it\
    \ * it;\n    }\n    if (count == 0) return 0;\n    return sum / count;", "  long\
    \ sum = 0;\n  for (float i : lst) {\n    if (i >= 0) {\n      sum += i * i;\n\
    \    } else {\n      sum += i;\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  for (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n \
    \       }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if ((int)x > 0)\n            sum += x * x;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n         \
    \   sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n           \
    \ sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    for (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum\
    \ += lst[i] * lst[i];\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if ((x > 0) && (x % 2 != 0)) {\n            sum += x * x;\n\
    \        }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x != 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 == 1)\
    \ {\n            sum += i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n            sum += i\
    \ * i;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float f :\
    \ lst) {\n    if (f < 0) {\n      sum += f * f;\n    } else {\n      sum += f;\n\
    \    }\n  }\n  return sum;", "    if (lst.size() == 0) {\n        return 0;\n\
    \    }\n    long sum = 0;\n    for (float f : lst) {\n        if (f < 0) {\n \
    \           continue;\n        }\n        if (f % 2 == 1) {\n            sum +=\
    \ f * f;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float num\
    \ : lst) {\n    if (num > 0) {\n      sum += num * num;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x < 0) continue;\n\
    \        if (x % 2 != 0) sum += x * x;\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n            sum += i\
    \ * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        if (f > 0)\n            sum += f * f;\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if (x > 0) {\n            sum += x\
    \ * x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float x :\
    \ lst) {\n    if (x >= 0) {\n      sum += x * x;\n    } else {\n      sum += x\
    \ * x;\n    }\n  }\n  return sum;", "    if (lst.size() == 0)\n        return\
    \ 0;\n    long sum = 0;\n    for (float f : lst) {\n        if (f > 0)\n     \
    \       sum += (long)f*f;\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float x : lst) {\n        if (x != 0) {\n            sum += x * x;\n      \
    \  }\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        if (x == (float)x) {\n            sum += x;\n        }\n        else\
    \ if (x % 2 == 1) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n\
    \        if (lst[i] > 0)\n            sum += (lst[i] * lst[i]);\n    }\n    return\
    \ sum;", "    long sum = 0;\n    long n = lst.size();\n    long sum_squares =\
    \ 0;\n    long max_value = std::numeric_limits<long>::max();\n    long min_value\
    \ = std::numeric_limits<long>::min();\n    long max_square = std::numeric_limits<long>::max();\n\
    \    long min_square = std::numeric_limits<long>::min();\n    for (long i = 0;\
    \ i < n; i++) {\n        if (lst[i] < 0)\n            continue;\n        if (lst[i]\
    \ > max_value)\n            max_value = lst[i];\n        if (lst[i] < min_value)\n\
    \            min_value = lst[i];\n        if (lst[i] * lst[i] > max_square)\n\
    \            max_square = lst[i] * lst[i];\n        if (lst[i] * lst[i] < min_square)\n\
    \            min_square = lst[i] * lst[i];\n    }\n    for (long i = 0; i < n;\
    \ i++) {\n        if (lst[i] < 0)\n            continue;\n        sum += lst[i]\
    \ * lst[i];\n        sum_squares += lst[i] * lst[i];\n    }\n    if (sum_squares\
    \ == 0)\n        return 0;\n    return sum / sum_squares;", "    long sum = 0;\n\
    \    for (float f : lst) {\n        if (f > 0)\n            sum += (long)f*f;\n\
    \        else\n            sum += (long)f*f;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long sum_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum = 0;\n    long sum_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares = 0;\n\
    \    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared =\
    \ 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum_of_squares_squared_sum\
    \ = 0;\n    long sum_squares_squared_sum_of_squares_", "    long sum = 0;\n  \
    \  for (float x : lst) {\n        if ((x > 0) && (x % 2 == 1)) {\n           \
    \ sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n      \
    \  }\n    }\n    return sum;", "    if (lst.size() == 0)\n        return 0;\n\
    \    long sum = 0;\n    for (float f : lst) {\n        if (f > 0)\n          \
    \  sum += f * f;\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x >= 0) {\n            sum += x * x;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    for\
    \ (long i = 0; i < n; i++) {\n        if (lst[i] >= 0) {\n            sum += lst[i]\
    \ * lst[i];\n        }\n    }\n    return sum;", "    if (lst.size() == 0)\n \
    \       return 0;\n    long ans = 0;\n    for (float x : lst)\n        if (x >=\
    \ 0)\n            ans += x * x;\n        else\n            ans -= x * x;\n   \
    \ return ans;", "    long sum = 0;\n    long n = lst.size();\n    if (n > 0) {\n\
    \        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum\
    \ += lst[i] * lst[i];\n        }\n        sum = sum - lst[n] * lst[n];\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x\
    \ > 0) {\n            sum += x * x;\n        }\n    }\n    return sum;", "   \
    \ long sum = 0;\n    for (float num : lst) {\n        if (num > 0) {\n       \
    \     sum += num * num;\n        }\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float i : lst) {\n        if (i % 2 != 0) {\n            sum += i;\n\
    \        }\n    }\n    return sum;", "  long sum = 0;\n  for (float num : lst)\
    \ {\n    if (num > 0) {\n      sum += num * num;\n    }\n  }\n  return sum;",
  "  long sum = 0;\n  for (float x : lst) {\n    if (x > 0) sum += x * x;\n  }\n \
    \ return sum;", "    long sum = 0;\n    long n = lst.size();\n    long sum_square\
    \ = 0;\n    long max_value = std::numeric_limits<long>::max();\n    for (long\
    \ i = 0; i < n; i++) {\n        long value = lst[i];\n        if (value < 0) {\n\
    \            continue;\n        }\n        if (value > max_value) {\n        \
    \    max_value = value;\n        }\n        sum += value;\n        sum_square\
    \ += value * value;\n    }\n    if (sum == 0) {\n        return 0;\n    }\n  \
    \  return sum_square * sum / n;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        if (x >= 0) {\n            sum += x * x;\n        }\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n\
    \            sum += i * i;\n        }\n    }\n    return sum;", "    if (lst.size()\
    \ == 0)\n        return 0;\n    long long sum = 0;\n    for (float x : lst) {\n\
    \        if (x >= 0)\n            sum += x * x;\n        else\n            sum\
    \ += x * x;\n    }\n    return sum;", "    if (lst.size() == 0) {\n        return\
    \ 0;\n    }\n    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 !=\
    \ 0) {\n            sum += i;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float x : lst) {\n        if (x > 0) {\n            sum += x\
    \ * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long i = 0;\n    long sum_squares = 0;\n    long sum_squares_even = 0;\n\
    \    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long\
    \ sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd\
    \ = 0;\n    long sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long\
    \ sum_squares_even = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even\
    \ = 0;\n    long sum_squares_odd = 0;\n    long sum_squares_even = 0;\n    ",
  "    long sum = 0;\n    long n = lst.size();\n    if (n == 0)\n        return 0;\n\
    \    long sum_square = 0;\n    for (long i = 0; i < n; i++) {\n        if (lst[i]\
    \ % 2 == 1)\n            sum_square += lst[i] * lst[i];\n    }\n    sum = sum_square\
    \ / 2;\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    if (f > 0) sum += (f*f);\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (float f : lst) {\n        if (f > 0 && f % 2 != 0) {\n            sum\
    \ += f * f;\n        }\n    }\n    return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for (long\
    \ i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n     \
    \   sum = sum / n;\n        if (sum % 2 == 1) {\n            sum = 0;\n      \
    \  }\n    }\n    return sum;", "    if (lst.size() == 0) {\n        return 0;\n\
    \    }\n    long sum = 0;\n    for (float x : lst) {\n        if ((x > 0) && (x\
    \ % 2 == 1)) {\n            sum += x * x;\n        }\n    }\n    return sum;",
  "    long sum = 0;\n    for (float i : lst) {\n        if (i % 2 != 0) {\n     \
    \       sum += i;\n        }\n    }\n    return sum;", "    long sum = 0;\n  \
    \  for (float f : lst) {\n        if (f > 0 && f % 2 != 0) {\n            sum\
    \ += f * f;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        if (x > 0) sum += x * x;\n        else sum += x;\n    }\n\
    \    return sum;", "  long sum = 0;\n  for (float x : lst) {\n    if (x >= 0)\
    \ {\n      sum += x * x;\n    } else {\n      sum += x * x;\n    }\n  }\n  return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        if (x > 0) {\n\
    \            sum += x * x;\n        }\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float i : lst) {\n        if (i >= 0) {\n            sum += i\
    \ * i;\n        }\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n        }\n  \
    \  }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    for\
    \ (long i = 0; i < n; i++) {\n        if (lst[i] > 0)\n            sum += (long)lst[i]\
    \ * lst[i];\n    }\n    return sum;", "  long sum = 0;\n  for (float f : lst)\
    \ {\n    if (f > 0) sum += (long)(f*f);\n  }\n  return sum;"]
stop_tokens:
- "\n}"

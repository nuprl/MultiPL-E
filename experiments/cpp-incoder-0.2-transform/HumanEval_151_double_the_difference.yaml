name: HumanEval_151_double_the_difference
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a list of numbers,\
  \ return the sum of squares of the numbers\n// in the list that are odd. Ignore\
  \ numbers that are negative or not integers.\n// >>> double_the_difference((std::vector<float>({(long)1,\
  \ (long)3, (long)2, (long)0})))\n// (10)\n// >>> double_the_difference((std::vector<float>({(long)-1,\
  \ (long)-2, (long)0})))\n// (0)\n// >>> double_the_difference((std::vector<float>({(long)9,\
  \ (long)-2})))\n// (81)\n// >>> double_the_difference((std::vector<float>({(long)0})))\n\
  // (0)\n// If the input list is empty, return 0.\nlong double_the_difference(std::vector<float>\
  \ lst) {\n"
tests: "}\nint main() {\n    auto candidate = double_the_difference;\n    assert(candidate((std::vector<float>()))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)5.0, (float)4.0})))\
  \ == (25));\n    assert(candidate((std::vector<float>({(float)0.1, (float)0.2, (float)0.3})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-10.0, (float)-20.0,\
  \ (float)-30.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)-1.0,\
  \ (float)-2.0, (float)8.0}))) == (0));\n    assert(candidate((std::vector<float>({(float)0.2,\
  \ (float)3.0, (float)5.0}))) == (34));\n    assert(candidate((std::vector<float>({(float)-9.0,\
  \ (float)-7.0, (float)-5.0, (float)-3.0, (float)-1.0, (float)1.0, (float)3.0, (float)5.0,\
  \ (float)7.0, (float)9.0}))) == (165));\n}\n"
completions: ["  long sum = 0;\n  for (float f : lst) {\n    if (f > 0) sum += (long)(f*f);\n\
    \  }\n  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        if\
    \ (x > 0) {\n            sum += x * x;\n        } else if (x < 0) {\n        \
    \    sum += x * x;\n        } else {\n            sum += x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n        if (i\
    \ >= 0) sum += i * i;\n        else sum += i;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        if ((int)x != x) {\n          \
    \  sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (float i : lst) {\n        if (i >= 0) {\n            sum += i * i;\n  \
    \      }\n    }\n    return sum;", "  long sum = 0;\n  for (float x : lst) {\n\
    \    if (x < 0) {\n      sum += std::abs(x);\n    } else {\n      sum += x;\n\
    \    }\n  }\n  return sum;", "    long sum = 0;\n    for (float f : lst) {\n \
    \       if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n        \
    \    sum += x * x;\n        }\n    }\n    return sum;", "    long sum = 0;\n \
    \   long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            sum += lst[i] * lst[i];\n        }\n\
    \        long sum2 = sum;\n        for (long i = 1; i < n; i++) {\n          \
    \  sum2 += lst[i] * lst[i];\n        }\n        sum = sum2 - sum * sum / n;\n\
    \    }\n    return sum;", "  long sum = 0;\n  for (float f : lst) {\n    if (f\
    \ > 0)\n      sum += (long)f*f;\n  }\n  return sum;", "    long sum = 0;\n   \
    \ for (float x : lst) {\n        if (x > 0) {\n            sum += x * x;\n   \
    \     }\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        if (f > 0)\n            sum += (long)f*f;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        if (x >= 0) {\n         \
    \   sum += x * x;\n        } else {\n            sum += x;\n        }\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        if (f\
    \ > 0)\n            sum += f * f;\n    }\n    return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    if (n > 0) {\n        long sum = 0;\n        for\
    \ (long i = 0; i < n; i++) {\n            if (lst[i] % 2 != 0) {\n           \
    \     sum += lst[i] * lst[i];\n            }\n        }\n    }\n    return sum;",
  "  long sum = 0;\n  for (float f : lst) {\n    if (f < 0) {\n      sum += f * f;\n\
    \    } else {\n      sum += f;\n    }\n  }\n  return sum;", "    long sum = 0;\n\
    \    for (float x : lst) {\n        if (x % 2 != 0) {\n            sum += x *\
    \ x;\n        }\n    }\n    return sum;", "  long sum = 0;\n  for (float f : lst)\
    \ {\n    if (f > 0) sum += f*f;\n  }\n  return sum;", "  long sum = 0;\n  for\
    \ (float x : lst) {\n    if (x < 0) {\n      sum += x;\n    } else {\n      sum\
    \ += x * x;\n    }\n  }\n  return sum;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        if (x > 0) {\n            sum += x * x;\n        }\n    }\n\
    \    return sum;"]
stop_tokens:
- "\n}"

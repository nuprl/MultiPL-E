language: cpp
name: HumanEval_103_rounded_avg
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp77q64zey.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp77q64zey.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp77q64zey.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp77q64zey.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp77q64zey.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp77q64zey.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp77q64zey.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp77q64zey.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp77q64zey.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp77q64zey.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected unqualified-id before '}' token\n }\n ^\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected ';' before '}' token\n/tmp/tmp77q64zey.cpp: In function 'int\
    \ main()':\n/tmp/tmp77q64zey.cpp:88:10: error: 'candidate' does not name a type\n\
    \     auto candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77q64zey.cpp:2:\n/tmp/tmp77q64zey.cpp:89:30: err"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = (u.f1 + u.f1)/2;\n    u.f1 = u.f1 & 1;\n    return u;\n}\nint main()\
    \ {\n    auto candidate = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\"\
    );\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpiel383yt.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpiel383yt.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpiel383yt.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpiel383yt.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpiel383yt.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpiel383yt.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpiel383yt.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpiel383yt.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpiel383yt.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpiel383yt.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpiel383yt.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpiel383yt.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpiel383yt.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpiel383yt.cpp: In function\
    \ 'int main()':\n/tmp/tmpiel383yt.cpp:36:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpiel383yt.cpp:2:\n/tmp/tmpiel383yt.cpp:37:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    return u;\n}\nint main() {\n \
    \   auto candidate = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\"\
    );\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppo9cxbxi.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmppo9cxbxi.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmppo9cxbxi.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmppo9cxbxi.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmppo9cxbxi.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmppo9cxbxi.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmppo9cxbxi.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmppo9cxbxi.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmppo9cxbxi.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmppo9cxbxi.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmppo9cxbxi.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmppo9cxbxi.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmppo9cxbxi.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmppo9cxbxi.cpp: In function\
    \ 'int main()':\n/tmp/tmppo9cxbxi.cpp:36:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmppo9cxbxi.cpp:2:\n/tmp/tmppo9cxbxi.cpp:37:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long ans;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = (n + m) / 2;\n    long mid2 = mid * mid;\n    long mid3\
    \ = mid2 * mid;\n    long mid4 = mid3 * mid;\n    long mid5 = mid4 * mid;\n  \
    \  long mid6 = mid5 * mid;\n    long mid7 = mid6 * mid;\n    long mid8 = mid7\
    \ * mid;\n    long mid9 = mid8 * mid;\n    long mid10 = mid9 * mid;\n    long\
    \ mid11 = mid10 * mid;\n    long mid12 = mid11 * mid;\n    long mid13 = mid12\
    \ * mid;\n    long mid14 = mid13 * mid;\n    long mid15 = mid14 * mid;\n    long\
    \ mid16 = mid15 * mid;\n    long mid17 = mid16 * mid;\n    long mid18 = mid17\
    \ * mid;\n    long mid19 = mid18 * mid;\n    long mid20 = mid19 * mid;\n    long\
    \ mid21 = mid20 * mid;\n    long mid22 = mid21 * mid;\n    long mid23 = mid22\
    \ * mid;\n    long mid24 = mid23 * mid;\n    long mid25 = mid24 * mid;\n    long\
    \ mid26 = mid25 * mid;\n    long mid27 = mid26 * mid;\n    long mid28 = mid27\
    \ * mid;\n    long mid29 = mid28 * mid;\n    long mid30 = mid29 * mid;\n    long\
    \ mid31 = mid30 * mid;\n    long mid32 = mid31 * mid;\n    long mid33 = mid32\
    \ * mid;\n    long mid34 = mid33 * mid;\n    long mid35 = mid34 * mid;\n    long\
    \ mid36 = mid35 * mid;\n    long mid37 = mid36 * mid;\n    long mid38 = mid37\
    \ * mid;\n    long mid39 = mid38 * mid;\n    long mid40 = mid39 * mid;\n    long\
    \ mid41 = mid40 * mid;\n    long mid42 = mid41 * mid;\n    long mid43 = mid42\
    \ * mid;\n    long mid44 = mid43 * mid;\n    long mid45 = mid44 * mid;\n    long\
    \ mid46 = mid45 * mid;\n    long mid47 = mid46\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprfj8u098.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmprfj8u098.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmprfj8u098.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmprfj8u098.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmprfj8u098.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmprfj8u098.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long ans;\n                           ^\n/tmp/tmprfj8u098.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmprfj8u098.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmprfj8u098.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmprfj8u098.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmprfj8u098.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmprfj8u098.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmprfj8u098.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmprfj8u098.cpp:78:1:\
    \ error: expected ',' or ';' before '}' token\n }\n ^\n/tmp/tmprfj8u098.cpp: In\
    \ function 'int main()':\n/tmp/tmprfj8u098.cpp:80:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = rounded_avg;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprfj8u098.cpp:2:\n/tmp/tmprfj8u098.cpp:81:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candida"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = m / 2;\n    long left = n;\n    long right = m;\n    while\
    \ (left <= right) {\n        sum += left;\n        count += 1;\n        left +=\
    \ mid;\n        right -= mid;\n    }\n    u.f1 = sum / count;\n    u.f0 = to_binary(u.f1);\n\
    \    return u;\n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph4jn0vn2.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmph4jn0vn2.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmph4jn0vn2.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmph4jn0vn2.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmph4jn0vn2.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmph4jn0vn2.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmph4jn0vn2.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmph4jn0vn2.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmph4jn0vn2.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmph4jn0vn2.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmph4jn0vn2.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmph4jn0vn2.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmph4jn0vn2.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmph4jn0vn2.cpp:41:26:\
    \ error: 'to_binary' was not declared in this scope\n     u.f0 = to_binary(u.f1);\n\
    \                          ^\n/tmp/tmph4jn0vn2.cpp: In function 'int main()':\n\
    /tmp/tmph4jn0vn2.cpp:45:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph4jn0vn2.cpp:2:\n/tmp/tmph4jn0vn2.cpp:46:30: error:\
    \ 'candi"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long n = n;\n    long m = m;\n    long mid = m / 2;\n    long left\
    \ = n;\n    long right = m;\n    long mid = m / 2;\n    long mid2 = mid / 2;\n\
    \    long mid3 = mid2 / 2;\n    long mid4 = mid3 / 2;\n    long mid5 = mid4 /\
    \ 2;\n    long mid6 = mid5 / 2;\n    long mid7 = mid6 / 2;\n    long mid8 = mid7\
    \ / 2;\n    long mid9 = mid8 / 2;\n    long mid10 = mid9 / 2;\n    long mid11\
    \ = mid10 / 2;\n    long mid12 = mid11 / 2;\n    long mid13 = mid12 / 2;\n   \
    \ long mid14 = mid13 / 2;\n    long mid15 = mid14 / 2;\n    long mid16 = mid15\
    \ / 2;\n    long mid17 = mid16 / 2;\n    long mid18 = mid17 / 2;\n    long mid19\
    \ = mid18 / 2;\n    long mid20 = mid19 / 2;\n    long mid21 = mid20 / 2;\n   \
    \ long mid22 = mid21 / 2;\n    long mid23 = mid22 / 2;\n    long mid24 = mid23\
    \ / 2;\n    long mid25 = mid24 / 2;\n    long mid26 = mid25 / 2;\n    long mid27\
    \ = mid26 / 2;\n    long mid28 = mid27 / 2;\n    long mid29 = mid28 / 2;\n   \
    \ long mid30 = mid29 / 2;\n    long mid31 = mid30 / 2;\n    long mid32 = mid31\
    \ / 2;\n    long mid33 = mid32 / 2;\n    long mid34 = mid33 / 2;\n    long mid35\
    \ = mid34 / 2;\n    long mid36 = mid35 / 2;\n    long mid37 = mid36 / 2;\n   \
    \ long mid38 = mid37 / 2;\n    long mid39 = mid38 / 2;\n    long mid40 = mid39\
    \ / 2;\n    long mid41 = mid40 / 2;\n    long mid42 = mid41 / 2;\n    long mid43\
    \ = mid42 / 2;\n    long mid44 = mid43 / 2;\n    long mid45 = mid44 / 2;\n   \
    \ long mid46 = mid45 / 2;\n    long mid47 = mid46 / 2;\n    long mid48 = mid47\
    \ / 2;\n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe3himdfb.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpe3himdfb.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpe3himdfb.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpe3himdfb.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpe3himdfb.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpe3himdfb.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpe3himdfb.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpe3himdfb.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpe3himdfb.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpe3himdfb.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpe3himdfb.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpe3himdfb.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpe3himdfb.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpe3himdfb.cpp:31:10:\
    \ error: declaration of 'long int n' shadows a parameter\n     long n = n;\n \
    \         ^\n/tmp/tmpe3himdfb.cpp:32:10: error: declaration of 'long int m' shadows\
    \ a parameter\n     long m = m;\n          ^\n/tmp/tmpe3himdfb.cpp:36:10: error:\
    \ redeclaration of 'long int mid'\n     long mid = m / 2;\n          ^\n/tmp/tmpe3himdfb.cpp:33:10:\
    \ error: 'long int mid' previously declared here\n     long mid = m / 2;\n   \
    \       ^\n/tmp/tmpe3himdfb.cpp: In function 'int main()':\n/tmp/tmpe3himdfb.cpp:86:10:\
    \ error: 'candida"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp77q64zey.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp77q64zey.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp77q64zey.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp77q64zey.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp77q64zey.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp77q64zey.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp77q64zey.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp77q64zey.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp77q64zey.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp77q64zey.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected unqualified-id before '}' token\n }\n ^\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected ';' before '}' token\n/tmp/tmp77q64zey.cpp: In function 'int\
    \ main()':\n/tmp/tmp77q64zey.cpp:88:10: error: 'candidate' does not name a type\n\
    \     auto candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77q64zey.cpp:2:\n/tmp/tmp77q64zey.cpp:89:30: err"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpavnzrhnx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpavnzrhnx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpavnzrhnx.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpavnzrhnx.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpavnzrhnx.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpavnzrhnx.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpavnzrhnx.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpavnzrhnx.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpavnzrhnx.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpavnzrhnx.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpavnzrhnx.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpavnzrhnx.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpavnzrhnx.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpavnzrhnx.cpp:86:1:\
    \ error: expected unqualified-id before '}' token\n }\n ^\n/tmp/tmpavnzrhnx.cpp:86:1:\
    \ error: expected ';' before '}' token\n/tmp/tmpavnzrhnx.cpp: In function 'int\
    \ main()':\n/tmp/tmpavnzrhnx.cpp:88:10: error: 'candidate' does not name a type\n\
    \     auto candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpavnzrhnx.cpp:2:\n/tmp/tmpavnzrhnx.cpp:89:30: err"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ % 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpavnzrhnx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpavnzrhnx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpavnzrhnx.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpavnzrhnx.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpavnzrhnx.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpavnzrhnx.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpavnzrhnx.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpavnzrhnx.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpavnzrhnx.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpavnzrhnx.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpavnzrhnx.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpavnzrhnx.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpavnzrhnx.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpavnzrhnx.cpp:86:1:\
    \ error: expected unqualified-id before '}' token\n }\n ^\n/tmp/tmpavnzrhnx.cpp:86:1:\
    \ error: expected ';' before '}' token\n/tmp/tmpavnzrhnx.cpp: In function 'int\
    \ main()':\n/tmp/tmpavnzrhnx.cpp:88:10: error: 'candidate' does not name a type\n\
    \     auto candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpavnzrhnx.cpp:2:\n/tmp/tmpavnzrhnx.cpp:89:30: err"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = (n + m) / 2;\n    long mid2 = mid * mid;\n    long mid3\
    \ = mid2 * mid;\n    long mid4 = mid3 * mid;\n    long mid5 = mid4 * mid;\n  \
    \  long mid6 = mid5 * mid;\n    long mid7 = mid6 * mid;\n    long mid8 = mid7\
    \ * mid;\n    long mid9 = mid8 * mid;\n    long mid10 = mid9 * mid;\n    long\
    \ mid11 = mid10 * mid;\n    long mid12 = mid11 * mid;\n    long mid13 = mid12\
    \ * mid;\n    long mid14 = mid13 * mid;\n    long mid15 = mid14 * mid;\n    long\
    \ mid16 = mid15 * mid;\n    long mid17 = mid16 * mid;\n    long mid18 = mid17\
    \ * mid;\n    long mid19 = mid18 * mid;\n    long mid20 = mid19 * mid;\n    long\
    \ mid21 = mid20 * mid;\n    long mid22 = mid21 * mid;\n    long mid23 = mid22\
    \ * mid;\n    long mid24 = mid23 * mid;\n    long mid25 = mid24 * mid;\n    long\
    \ mid26 = mid25 * mid;\n    long mid27 = mid26 * mid;\n    long mid28 = mid27\
    \ * mid;\n    long mid29 = mid28 * mid;\n    long mid30 = mid29 * mid;\n    long\
    \ mid31 = mid30 * mid;\n    long mid32 = mid31 * mid;\n    long mid33 = mid32\
    \ * mid;\n    long mid34 = mid33 * mid;\n    long mid35 = mid34 * mid;\n    long\
    \ mid36 = mid35 * mid;\n    long mid37 = mid36 * mid;\n    long mid38 = mid37\
    \ * mid;\n    long mid39 = mid38 * mid;\n    long mid40 = mid39 * mid;\n    long\
    \ mid41 = mid40 * mid;\n    long mid42 = mid41 * mid;\n    long mid43 = mid42\
    \ * mid;\n    long mid44 = mid43 * mid;\n    long mid45 = mid44 * mid;\n    long\
    \ mid46 = mid45 * mid;\n    long mid47 = mid46\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8wly2ozx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp8wly2ozx.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp8wly2ozx.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp8wly2ozx.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp8wly2ozx.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp8wly2ozx.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp8wly2ozx.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp8wly2ozx.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp8wly2ozx.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp8wly2ozx.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp8wly2ozx.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp8wly2ozx.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp8wly2ozx.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp8wly2ozx.cpp:78:1:\
    \ error: expected ',' or ';' before '}' token\n }\n ^\n/tmp/tmp8wly2ozx.cpp: In\
    \ function 'int main()':\n/tmp/tmp8wly2ozx.cpp:80:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = rounded_avg;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8wly2ozx.cpp:2:\n/tmp/tmp8wly2ozx.cpp:81:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = n + (m - 1) / 2;\n    long mid1 = mid - 1;\n    long mid2\
    \ = mid + 1;\n    long mid3 = mid * 2;\n    long mid4 = mid * 3;\n    long mid5\
    \ = mid * 4;\n    long mid6 = mid * 5;\n    long mid7 = mid * 6;\n    long mid8\
    \ = mid * 7;\n    long mid9 = mid * 8;\n    long mid10 = mid * 9;\n    long mid11\
    \ = mid * 10;\n    long mid12 = mid * 11;\n    long mid13 = mid * 12;\n    long\
    \ mid14 = mid * 13;\n    long mid15 = mid * 14;\n    long mid16 = mid * 15;\n\
    \    long mid17 = mid * 16;\n    long mid18 = mid * 17;\n    long mid19 = mid\
    \ * 18;\n    long mid20 = mid * 19;\n    long mid21 = mid * 20;\n    long mid22\
    \ = mid * 21;\n    long mid23 = mid * 22;\n    long mid24 = mid * 23;\n    long\
    \ mid25 = mid * 24;\n    long mid26 = mid * 25;\n    long mid27 = mid * 26;\n\
    \    long mid28 = mid * 27;\n    long mid29 = mid * 28;\n    long mid30 = mid\
    \ * 29;\n    long mid31 = mid * 30;\n    long mid32 = mid * 31;\n    long mid33\
    \ = mid * 32;\n    long mid34 = mid * 33;\n    long mid35 = mid * 34;\n    long\
    \ mid36 = mid * 35;\n    long mid37 = mid * 36;\n    long mid38 = mid * 37;\n\
    \    long mid39 = mid * 38;\n    long mid40 = mid * 39;\n    long mid41 = mid\
    \ * 40;\n    long mid42 = mid * 41;\n    long mid43 = mid * 42;\n    long mid44\
    \ = mid * 43;\n    long mid45 = mid * 44;\n    long mid46 = mid * 45;\n    long\
    \ mid47 = mid * 46;\n    long mid48 = mid * 47;\n    long mid49 = mid * 48;\n\
    \    long mid50 = mid * 49\n}\nint main() {\n    auto candidate = rounded_avg;\n\
    \    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7), (13))\
    \ == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\");\n\
    \    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqxxcaawg.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpqxxcaawg.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpqxxcaawg.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpqxxcaawg.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpqxxcaawg.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpqxxcaawg.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpqxxcaawg.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpqxxcaawg.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpqxxcaawg.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpqxxcaawg.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpqxxcaawg.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpqxxcaawg.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpqxxcaawg.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpqxxcaawg.cpp:82:1:\
    \ error: expected ',' or ';' before '}' token\n }\n ^\n/tmp/tmpqxxcaawg.cpp: In\
    \ function 'int main()':\n/tmp/tmpqxxcaawg.cpp:84:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = rounded_avg;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqxxcaawg.cpp:2:\n/tmp/tmpqxxcaawg.cpp:85:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n   \
    \ u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1\
    \ * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n   \
    \ u.f1 = u.f1 * 2;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.f1\
    \ / 2;\n    u.f1 = u.f1 * 2;\n    u.f1 = u.\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp77q64zey.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp77q64zey.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp77q64zey.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp77q64zey.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp77q64zey.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp77q64zey.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp77q64zey.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp77q64zey.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp77q64zey.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp77q64zey.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp77q64zey.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected unqualified-id before '}' token\n }\n ^\n/tmp/tmp77q64zey.cpp:86:1:\
    \ error: expected ';' before '}' token\n/tmp/tmp77q64zey.cpp: In function 'int\
    \ main()':\n/tmp/tmp77q64zey.cpp:88:10: error: 'candidate' does not name a type\n\
    \     auto candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp77q64zey.cpp:2:\n/tmp/tmp77q64zey.cpp:89:30: err"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1\
    \ + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n    u.f1 = (u.f1 + u.f1) >> 1;\n\
    \    \n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpuc7leg89.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpuc7leg89.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpuc7leg89.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpuc7leg89.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpuc7leg89.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpuc7leg89.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpuc7leg89.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpuc7leg89.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpuc7leg89.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpuc7leg89.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpuc7leg89.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpuc7leg89.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpuc7leg89.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpuc7leg89.cpp: In function\
    \ 'int main()':\n/tmp/tmpuc7leg89.cpp:69:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpuc7leg89.cpp:2:\n/tmp/tmpuc7leg89.cpp:70:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = (u.f1 + u.f1)/2;\n    u.f1 = u.f1 >> 1;\n    u.f1 = u.f1.to_string(2);\n\
    \    return u;\n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpq2_hrgrn.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpq2_hrgrn.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpq2_hrgrn.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpq2_hrgrn.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpq2_hrgrn.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpq2_hrgrn.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpq2_hrgrn.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpq2_hrgrn.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpq2_hrgrn.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpq2_hrgrn.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpq2_hrgrn.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpq2_hrgrn.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpq2_hrgrn.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpq2_hrgrn.cpp:33:17:\
    \ error: request for member 'to_string' in 'u.Union_std_string_long::f1', which\
    \ is of non-class type 'long int'\n     u.f1 = u.f1.to_string(2);\n          \
    \       ^\n/tmp/tmpq2_hrgrn.cpp: In function 'int main()':\n/tmp/tmpq2_hrgrn.cpp:37:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = rounded_avg;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpq2_h"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long mid = (n + m) / 2;\n  \
    \  long sum = 0;\n    long count = 0;\n    long i = n;\n    long j = m;\n    while\
    \ (i <= mid) {\n        sum += i;\n        count += 1;\n        i += 1;\n    }\n\
    \    while (j <= mid) {\n        sum += j;\n        count += 1;\n        j +=\
    \ 1;\n    }\n    if (count == 0) {\n        return u;\n    }\n    long average\
    \ = sum / count;\n    long remainder = average % 2;\n    if (remainder == 0) {\n\
    \        u.f0 = std::to_string(average);\n        return u;\n    }\n    u.f0 =\
    \ std::to_string(average + 1);\n    return u;\n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4tzuvt6n.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp4tzuvt6n.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp4tzuvt6n.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp4tzuvt6n.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp4tzuvt6n.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp4tzuvt6n.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp4tzuvt6n.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp4tzuvt6n.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp4tzuvt6n.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp4tzuvt6n.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp4tzuvt6n.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp4tzuvt6n.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp4tzuvt6n.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp4tzuvt6n.cpp:50:16:\
    \ error: 'to_string' is not a member of 'std'\n         u.f0 = std::to_string(average);\n\
    \                ^\n/tmp/tmp4tzuvt6n.cpp:53:12: error: 'to_string' is not a member\
    \ of 'std'\n     u.f0 = std::to_string(average + 1);\n            ^\n/tmp/tmp4tzuvt6n.cpp:\
    \ In function 'int main()':\n/tmp/tmp4tzuvt6n.cpp:57:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = rounded_avg;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = m / 2;\n    long left = n;\n    long right = m;\n    while\
    \ (left <= right) {\n        sum += left;\n        ++count;\n        left += mid;\n\
    \    }\n    if (left > right) {\n        u.f0 = \"\";\n        u.f1 = -1;\n  \
    \      return u;\n    }\n    u.f0 = to_binary(sum);\n    u.f1 = count;\n    return\
    \ u;\n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdx2q8_vr.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpdx2q8_vr.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpdx2q8_vr.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpdx2q8_vr.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpdx2q8_vr.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpdx2q8_vr.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpdx2q8_vr.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpdx2q8_vr.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpdx2q8_vr.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpdx2q8_vr.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpdx2q8_vr.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpdx2q8_vr.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpdx2q8_vr.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpdx2q8_vr.cpp:44:25:\
    \ error: 'to_binary' was not declared in this scope\n     u.f0 = to_binary(sum);\n\
    \                         ^\n/tmp/tmpdx2q8_vr.cpp: In function 'int main()':\n\
    /tmp/tmpdx2q8_vr.cpp:49:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = rounded_avg;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpdx2q8_vr.cpp:2:\n/tmp/tmpdx2q8_vr.cpp:50:30: error:\
    \ 'candida"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    u.f1 = n;\n    u.f1 = m;\n \
    \   u.f1 = u.f1 + u.f1;\n    u.f1 = u.f1 / 2;\n    u.f1 = u.f1 % 2;\n    return\
    \ u;\n}\nint main() {\n    auto candidate = rounded_avg;\n    assert(candidate((1),\
    \ (5)) == \"0b11\");\n    assert(candidate((7), (13)) == \"0b1010\");\n    assert(candidate((964),\
    \ (977)) == \"0b1111001010\");\n    assert(candidate((996), (997)) == \"0b1111100100\"\
    );\n    assert(candidate((560), (851)) == \"0b1011000010\");\n    assert(candidate((185),\
    \ (546)) == \"0b101101110\");\n    assert(candidate((362), (496)) == \"0b110101101\"\
    );\n    assert(candidate((350), (902)) == \"0b1001110010\");\n    assert(candidate((197),\
    \ (233)) == \"0b11010111\");\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5),\
    \ (1)) == -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3naka0ng.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp3naka0ng.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp3naka0ng.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp3naka0ng.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp3naka0ng.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp3naka0ng.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp3naka0ng.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp3naka0ng.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp3naka0ng.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp3naka0ng.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp3naka0ng.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp3naka0ng.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp3naka0ng.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp3naka0ng.cpp: In function\
    \ 'int main()':\n/tmp/tmp3naka0ng.cpp:37:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3naka0ng.cpp:2:\n/tmp/tmp3naka0ng.cpp:38:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = m / 2;\n    long left = n;\n    long right = m;\n    long\
    \ mid1 = mid - 1;\n    long mid2 = mid + 1;\n    long mid3 = mid * 2;\n    long\
    \ mid4 = mid * 3;\n    long mid5 = mid * 4;\n    long mid6 = mid * 5;\n    long\
    \ mid7 = mid * 6;\n    long mid8 = mid * 7;\n    long mid9 = mid * 8;\n    long\
    \ mid10 = mid * 9;\n    long mid11 = mid * 10;\n    long mid12 = mid * 11;\n \
    \   long mid13 = mid * 12;\n    long mid14 = mid * 13;\n    long mid15 = mid *\
    \ 14;\n    long mid16 = mid * 15;\n    long mid17 = mid * 16;\n    long mid18\
    \ = mid * 17;\n    long mid19 = mid * 18;\n    long mid20 = mid * 19;\n    long\
    \ mid21 = mid * 20;\n    long mid22 = mid * 21;\n    long mid23 = mid * 22;\n\
    \    long mid24 = mid * 23;\n    long mid25 = mid * 24;\n    long mid26 = mid\
    \ * 25;\n    long mid27 = mid * 26;\n    long mid28 = mid * 27;\n    long mid29\
    \ = mid * 28;\n    long mid30 = mid * 29;\n    long mid31 = mid * 30;\n    long\
    \ mid32 = mid * 31;\n    long mid33 = mid * 32;\n    long mid34 = mid * 33;\n\
    \    long mid35 = mid * 34;\n    long mid36 = mid * 35;\n    long mid37 = mid\
    \ * 36;\n    long mid38 = mid * 37;\n    long mid39 = mid * 38;\n    long mid40\
    \ = mid * 39;\n    long mid41 = mid * 40;\n    long mid42 = mid * 41;\n    long\
    \ mid43 = mid * 42;\n    long mid44 = mid * 43;\n    long mid45 = mid * 44;\n\
    \    long mid46 = mid * 45;\n    long mid47 = mid * 46;\n    long mid48 = mid\
    \ * 47;\n    long mid49 = mid * 48;\n    \n}\nint main() {\n    auto candidate\
    \ = rounded_avg;\n    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7),\
    \ (13)) == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\"\
    );\n    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_1sl2k0z.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp_1sl2k0z.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp_1sl2k0z.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp_1sl2k0z.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp_1sl2k0z.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp_1sl2k0z.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp_1sl2k0z.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp_1sl2k0z.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp_1sl2k0z.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp_1sl2k0z.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp_1sl2k0z.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp_1sl2k0z.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp_1sl2k0z.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp_1sl2k0z.cpp: In function\
    \ 'int main()':\n/tmp/tmp_1sl2k0z.cpp:86:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp_1sl2k0z.cpp:2:\n/tmp/tmp_1sl2k0z.cpp:87:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long long sum = 0;\n    long\
    \ long count = 0;\n    long long n1 = n;\n    long long m1 = m;\n    long long\
    \ n2 = n1;\n    long long m2 = m1;\n    long long n3 = n2;\n    long long m3 =\
    \ m2;\n    long long n4 = n3;\n    long long m4 = m3;\n    long long n5 = n4;\n\
    \    long long m5 = m4;\n    long long n6 = n5;\n    long long m6 = m5;\n    long\
    \ long n7 = n6;\n    long long m7 = m6;\n    long long n8 = n7;\n    long long\
    \ m8 = m7;\n    long long n9 = n8;\n    long long m9 = m8;\n    long long n10\
    \ = n9;\n    long long m10 = m9;\n    long long n11 = n10;\n    long long m11\
    \ = m10;\n    long long n12 = n11;\n    long long m12 = m11;\n    long long n13\
    \ = n12;\n    long long m13 = m12;\n    long long n14 = n13;\n    long long m14\
    \ = m13;\n    long long n15 = n14;\n    long long m15 = m14;\n    long long n16\
    \ = n15;\n    long long m16 = m15;\n    long long n17 = n16;\n    long long m17\
    \ = m16;\n    long long n18 = n17;\n    long long m18 = m17;\n    long long n19\
    \ = n18;\n    long long m19 = m18;\n    long long n20 = n19;\n    long long m20\
    \ = m19;\n    long long n21 = n20;\n    long long m21 = m20;\n    long long n22\
    \ = n21;\n    long long m22 = m21;\n    long long n23 = n22;\n    long long m23\
    \ = m22;\n    long long n24 = n23;\n    long long m24 = m23;\n    long long n25\
    \ = n24;\n    long long m25 = m24;\n    long long n26 = n25;\n    long long m26\
    \ = m25;\n    long long n27 = n26;\n    long long m27 = m26;\n    long long n28\
    \ = n27;\n    long long m28 = m27;\n    long long n29 = n28;\n    long long m29\
    \ = m28;\n    long long n30 = n29;\n}\nint main() {\n    auto candidate = rounded_avg;\n\
    \    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7), (13))\
    \ == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\");\n\
    \    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn67t2zfp.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmpn67t2zfp.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmpn67t2zfp.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmpn67t2zfp.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmpn67t2zfp.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmpn67t2zfp.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmpn67t2zfp.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmpn67t2zfp.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmpn67t2zfp.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpn67t2zfp.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmpn67t2zfp.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmpn67t2zfp.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmpn67t2zfp.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmpn67t2zfp.cpp: In function\
    \ 'int main()':\n/tmp/tmpn67t2zfp.cpp:92:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn67t2zfp.cpp:2:\n/tmp/tmpn67t2zfp.cpp:93:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\nunion Union_std_string_long{\n\
    \    std::string f0;\n    long f1;    Union_std_string_long(std::string _f0) :\
    \ f0(_f0) {}\n    Union_std_string_long(long _f1) : f1(_f1) {}\n    ~Union_std_string_long()\
    \ {}\n    bool operator==(std::string f) {\n        return f0 == f ;\n    }  \
    \  bool operator==(long f) {\n        return f1 == f ;\n    }\n};\n// You are\
    \ given two positive integers n and m, and your task is to compute the\n// average\
    \ of the integers from n through m (including n and m). \n// Round the answer\
    \ to the nearest integer and convert that to binary.\n// If n is greater than\
    \ m, return -1.\n// Example:\n// >>> rounded_avg((1), (5))\n// \"0b11\"\n// >>>\
    \ rounded_avg((7), (5))\n// -1\n// >>> rounded_avg((10), (20))\n// \"0b1111\"\n\
    // >>> rounded_avg((20), (33))\n// \"0b11010\"\nUnion_std_string_long rounded_avg(long\
    \ n, long m) {\n    Union_std_string_long u;\n    long sum = 0;\n    long count\
    \ = 0;\n    long mid = (n + m) / 2;\n    long mid1 = mid - 1;\n    long mid2 =\
    \ mid + 1;\n    long mid3 = mid * 2;\n    long mid4 = mid * 3;\n    long mid5\
    \ = mid * 4;\n    long mid6 = mid * 5;\n    long mid7 = mid * 6;\n    long mid8\
    \ = mid * 7;\n    long mid9 = mid * 8;\n    long mid10 = mid * 9;\n    long mid11\
    \ = mid * 10;\n    long mid12 = mid * 11;\n    long mid13 = mid * 12;\n    long\
    \ mid14 = mid * 13;\n    long mid15 = mid * 14;\n    long mid16 = mid * 15;\n\
    \    long mid17 = mid * 16;\n    long mid18 = mid * 17;\n    long mid19 = mid\
    \ * 18;\n    long mid20 = mid * 19;\n    long mid21 = mid * 20;\n    long mid22\
    \ = mid * 21;\n    long mid23 = mid * 22;\n    long mid24 = mid * 23;\n    long\
    \ mid25 = mid * 24;\n    long mid26 = mid * 25;\n    long mid27 = mid * 26;\n\
    \    long mid28 = mid * 27;\n    long mid29 = mid * 28;\n    long mid30 = mid\
    \ * 29;\n    long mid31 = mid * 30;\n    long mid32 = mid * 31;\n    long mid33\
    \ = mid * 32;\n    long mid34 = mid * 33;\n    long mid35 = mid * 34;\n    long\
    \ mid36 = mid * 35;\n    long mid37 = mid * 36;\n    long mid38 = mid * 37;\n\
    \    long mid39 = mid * 38;\n    long mid40 = mid * 39;\n    long mid41 = mid\
    \ * 40;\n    long mid42 = mid * 41;\n    long mid43 = mid * 42;\n    long mid44\
    \ = mid * 43;\n    long mid45 = mid * 44;\n    long mid46 = mid * 45;\n    long\
    \ mid47 = mid * 46;\n    long mid48 = mid * 47;\n    long mid49 = mid * 48;\n\
    \    long mid50 = mid * 49;\n\n}\nint main() {\n    auto candidate = rounded_avg;\n\
    \    assert(candidate((1), (5)) == \"0b11\");\n    assert(candidate((7), (13))\
    \ == \"0b1010\");\n    assert(candidate((964), (977)) == \"0b1111001010\");\n\
    \    assert(candidate((996), (997)) == \"0b1111100100\");\n    assert(candidate((560),\
    \ (851)) == \"0b1011000010\");\n    assert(candidate((185), (546)) == \"0b101101110\"\
    );\n    assert(candidate((362), (496)) == \"0b110101101\");\n    assert(candidate((350),\
    \ (902)) == \"0b1001110010\");\n    assert(candidate((197), (233)) == \"0b11010111\"\
    );\n    assert(candidate((7), (5)) == -1);\n    assert(candidate((5), (1)) ==\
    \ -1);\n    assert(candidate((5), (5)) == \"0b101\");\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05_16vu_.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with constructor not allowed in union\n     std::string f0;\n              \
    \   ^\n/tmp/tmp05_16vu_.cpp:4:17: error: member 'std::string Union_std_string_long::f0'\
    \ with destructor not allowed in union\n/tmp/tmp05_16vu_.cpp:4:17: error: member\
    \ 'std::string Union_std_string_long::f0' with copy assignment operator not allowed\
    \ in union\n/tmp/tmp05_16vu_.cpp:4:17: note: unrestricted unions only available\
    \ with -std=c++11 or -std=gnu++11\n/tmp/tmp05_16vu_.cpp: In function 'Union_std_string_long\
    \ rounded_avg(long int, long int)':\n/tmp/tmp05_16vu_.cpp:28:27: error: no matching\
    \ function for call to 'Union_std_string_long::Union_std_string_long()'\n    \
    \ Union_std_string_long u;\n                           ^\n/tmp/tmp05_16vu_.cpp:28:27:\
    \ note: candidates are:\n/tmp/tmp05_16vu_.cpp:6:5: note: Union_std_string_long::Union_std_string_long(long\
    \ int)\n     Union_std_string_long(long _f1) : f1(_f1) {}\n     ^\n/tmp/tmp05_16vu_.cpp:6:5:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp05_16vu_.cpp:5:17:\
    \ note: Union_std_string_long::Union_std_string_long(std::string)\n     long f1;\
    \    Union_std_string_long(std::string _f0) : f0(_f0) {}\n                 ^\n\
    /tmp/tmp05_16vu_.cpp:5:17: note:   candidate expects 1 argument, 0 provided\n\
    /tmp/tmp05_16vu_.cpp:3:7: note: Union_std_string_long::Union_std_string_long(const\
    \ Union_std_string_long&)\n union Union_std_string_long{\n       ^\n/tmp/tmp05_16vu_.cpp:3:7:\
    \ note:   candidate expects 1 argument, 0 provided\n/tmp/tmp05_16vu_.cpp: In function\
    \ 'int main()':\n/tmp/tmp05_16vu_.cpp:85:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = rounded_avg;\n          ^\nIn file included from\
    \ /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp05_16vu_.cpp:2:\n/tmp/tmp05_16vu_.cpp:86:30: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((1), (5))\
    \ == \"0b11\");\n                              ^\n"
  stdout: ''

language: cpp
name: HumanEval_75_is_multiply_prime
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int a = 1;\n    long long int\
    \ b = 1;\n    long long int c = 1;\n    long long int d = 1;\n    long long int\
    \ e = 1;\n    long long int f = 0;\n    long long int g = 1;\n    long long int\
    \ h = 1;\n    long long int i = 1;\n    long long int j = 1;\n    long long int\
    \ k = 1;\n    long long int l = 1;\n    long long int m = 1;\n    long long int\
    \ n = 1;\n    long long int o = 1;\n    long long int p = 1;\n    long long int\
    \ q = 1;\n    long long int r = 1;\n    long long int s = 1;\n    long long int\
    \ t = 1;\n    long long int u = 1;\n    long long int v = 1;\n    long long int\
    \ w = 1;\n    long long int x = 1;\n    long long int y = 1;\n    long long int\
    \ z = 1;\n    long long int a = 1;\n    long long int b = 1;\n    long long int\
    \ c = 1;\n    long long int d = 1;\n    long long int e = 1;\n    long long int\
    \ f = 0;\n    long long int g = 1;\n    long long int h = 1;\n    long long int\
    \ i = 1;\n    long long int j = 1;\n    long long int k = 1;\n    long long int\
    \ l = 1;\n    long long int m = 1;\n    long long int n = 1;\n    long long int\
    \ o = 1;\n    long long int p = 1;\n    long long int q = 1;\n    long long int\
    \ r = 1;\n    long long int s = 1;\n    long long int t = 1;\n    long long int\
    \ u = 1;\n    long long int v = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjjk49b53.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpjjk49b53.cpp:36:19: error: declaration of 'long long int a' shadows a\
    \ parameter\n     long long int a = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:37:19:\
    \ error: redeclaration of 'long long int b'\n     long long int b = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:11:19: error: 'long long int b' previously\
    \ declared here\n     long long int b = a;\n                   ^\n/tmp/tmpjjk49b53.cpp:38:19:\
    \ error: redeclaration of 'long long int c'\n     long long int c = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:12:19: error: 'long long int c' previously\
    \ declared here\n     long long int c = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:39:19:\
    \ error: redeclaration of 'long long int d'\n     long long int d = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:13:19: error: 'long long int d' previously\
    \ declared here\n     long long int d = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:40:19:\
    \ error: redeclaration of 'long long int e'\n     long long int e = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:14:19: error: 'long long int e' previously\
    \ declared here\n     long long int e = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:41:19:\
    \ error: redeclaration of 'long long int f'\n     long long int f = 0;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:15:19: error: 'long long int f' previously\
    \ declared here\n     long long int f = 0;\n                   ^\n/tmp/tmpjjk49b53.cpp:42:19:\
    \ error: redeclaration of 'long long int g'\n     long long int g = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:16:19: error: 'long long int g' previously\
    \ declared here\n     long long int g = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:43:19:\
    \ error: redeclaration of 'long long int h'\n     long long int h = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:17:19: error: 'long long int h' previously\
    \ declared here\n     long long int h = 1;\n                   ^\n/tmp/tmpjjk49b53.cpp:44:19:\
    \ error: redeclaration of 'long long int i'\n     long long int i = 1;\n     \
    \              ^\n/tmp/tmpjjk49b53.cpp:18:19: erro"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int d = a * b;\n\
    \    long long int e = a * c;\n    long long int f = a * d;\n    long long int\
    \ g = a * e;\n    long long int h = a * f;\n    long long int i = a * g;\n   \
    \ long long int j = a * h;\n    long long int k = a * i;\n    long long int l\
    \ = a * j;\n    long long int m = a * k;\n    long long int n = a * l;\n    long\
    \ long int p = a * m;\n    long long int q = a * n;\n    long long int r = a *\
    \ p;\n    long long int s = a * q;\n    long long int t = a * r;\n    long long\
    \ int u = a * s;\n    long long int v = a * t;\n    long long int w = a * u;\n\
    \    long long int x = a * v;\n    long long int y = a * w;\n    long long int\
    \ z = a * x;\n    long long int a = a * y;\n    long long int b = a * z;\n   \
    \ long long int c = a * b;\n    long long int d = a * c;\n    long long int e\
    \ = a * d;\n    long long int f = a * e;\n    long long int g = a * f;\n    long\
    \ long int h = a * g;\n    long long int i = a * h;\n    long long int j = a *\
    \ i;\n    long long int k = a * j;\n    long long int l = a * k;\n    long long\
    \ int m = a * l;\n    long long int n = a * m;\n    long long int p = a * n;\n\
    \    long long int q = a * p;\n    long long int r = a * q;\n    long long int\
    \ s = a * r;\n    long long int t = a * s;\n    long long int u = a * t;\n   \
    \ long long int v = a * u;\n    long long int w = a * v;\n    long long int x\
    \ = a * w;\n    long long int y = a * x;\n    long long int z = a * y;\n    long\
    \ long int a = a * z;\n    long long int b = a * a;\n    long long int c = a *\
    \ c;\n    long long int d = a * d;\n    long long int e = a * e;\n    long long\
    \ int f = a * f;\n    long long int g = a * g;\n    \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8antxwo0.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmp8antxwo0.cpp:12:19: error: redeclaration of 'long long int d'\n     long\
    \ long int d = a * b;\n                   ^\n/tmp/tmp8antxwo0.cpp:11:33: error:\
    \ 'long long int d' previously declared here\n     long long int b = 3, c = 5,\
    \ d = 7;\n                                 ^\n/tmp/tmp8antxwo0.cpp:34:19: error:\
    \ declaration of 'long long int a' shadows a parameter\n     long long int a =\
    \ a * y;\n                   ^\n/tmp/tmp8antxwo0.cpp:35:19: error: redeclaration\
    \ of 'long long int b'\n     long long int b = a * z;\n                   ^\n\
    /tmp/tmp8antxwo0.cpp:11:19: error: 'long long int b' previously declared here\n\
    \     long long int b = 3, c = 5, d = 7;\n                   ^\n/tmp/tmp8antxwo0.cpp:36:19:\
    \ error: redeclaration of 'long long int c'\n     long long int c = a * b;\n \
    \                  ^\n/tmp/tmp8antxwo0.cpp:11:26: error: 'long long int c' previously\
    \ declared here\n     long long int b = 3, c = 5, d = 7;\n                   \
    \       ^\n/tmp/tmp8antxwo0.cpp:37:19: error: redeclaration of 'long long int\
    \ d'\n     long long int d = a * c;\n                   ^\n/tmp/tmp8antxwo0.cpp:11:33:\
    \ error: 'long long int d' previously declared here\n     long long int b = 3,\
    \ c = 5, d = 7;\n                                 ^\n/tmp/tmp8antxwo0.cpp:38:19:\
    \ error: redeclaration of 'long long int e'\n     long long int e = a * d;\n \
    \                  ^\n/tmp/tmp8antxwo0.cpp:13:19: error: 'long long int e' previously\
    \ declared here\n     long long int e = a * c;\n                   ^\n/tmp/tmp8antxwo0.cpp:39:19:\
    \ error: redeclaration of 'long long int f'\n     long long int f = a * e;\n \
    \                  ^\n/tmp/tmp8antxwo0.cpp:14:19: error: 'long long int f' previously\
    \ declared here\n     long long int f = a * d;\n                   ^\n/tmp/tmp8antxwo0.cpp:40:19:\
    \ error: redeclaration of 'long long int g'\n     long long int g = a * f;\n \
    \                  ^\n/tmp/tmp8antxwo0.cpp:15:19: error: 'long long int g' previously\
    \ declared here\n     long long int g = a * e;\n                   ^\n/tmp/tmp8antxw"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 2;\n    long long int\
    \ d = 2;\n    long long int e = 2;\n    long long int f = 3;\n    long long int\
    \ g = 3;\n    long long int h = 3;\n    long long int i = 5;\n    long long int\
    \ j = 5;\n    long long int k = 5;\n    long long int l = 5;\n    long long int\
    \ m = 5;\n    long long int n = 5;\n    long long int o = 5;\n    long long int\
    \ p = 2;\n    long long int q = 2;\n    long long int r = 2;\n    long long int\
    \ s = 2;\n    long long int t = 2;\n    long long int u = 2;\n    long long int\
    \ v = 2;\n    long long int w = 2;\n    long long int x = 2;\n    long long int\
    \ y = 2;\n    long long int z = 2;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmps4ezge0v.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmps4ezge0v.cpp:62:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:36:19: error: 'long\
    \ long int A' previously declared here\n     long long int A = 1;\n          \
    \         ^\n/tmp/tmps4ezge0v.cpp:63:19: error: redeclaration of 'long long int\
    \ B'\n     long long int B = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:37:19:\
    \ error: 'long long int B' previously declared here\n     long long int B = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:64:19: error: redeclaration of 'long\
    \ long int C'\n     long long int C = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:38:19:\
    \ error: 'long long int C' previously declared here\n     long long int C = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:65:19: error: redeclaration of 'long\
    \ long int D'\n     long long int D = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:39:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:66:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:40:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:67:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:41:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:68:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:42:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:69:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 1;\n                   ^\n/tmp/tmps4ezge0v.cpp:43:19:\
    \ error: 'long long int H' previously declared here\n     long long int H = 1;\n\
    \                   ^\n/tmp/tmps4ezge0v.cpp:70:19: error: redecla"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int sum = 0;\n \
    \   long long int counter = 0;\n    long long int temp = 0;\n    long long int\
    \ flag = 0;\n    long long int temp2 = 0;\n    long long int temp3 = 0;\n    long\
    \ long int temp4 = 0;\n    long long int temp5 = 0;\n    long long int temp6 =\
    \ 0;\n    long long int temp7 = 0;\n    long long int temp8 = 0;\n    long long\
    \ int temp9 = 0;\n    long long int temp10 = 0;\n    long long int temp11 = 0;\n\
    \    long long int temp12 = 0;\n    long long int temp13 = 0;\n    long long int\
    \ temp14 = 0;\n    long long int temp15 = 0;\n    long long int temp16 = 0;\n\
    \    long long int temp17 = 0;\n    long long int temp18 = 0;\n    long long int\
    \ temp19 = 0;\n    long long int temp20 = 0;\n    long long int temp21 = 0;\n\
    \    long long int temp22 = 0;\n    long long int temp23 = 0;\n    long long int\
    \ temp24 = 0;\n    long long int temp25 = 0;\n    long long int temp26 = 0;\n\
    \    long long int temp27 = 0;\n    long long int temp28 = 0;\n    long long int\
    \ temp29 = 0;\n    long long int temp30 = 0;\n    long long int temp31 = 0;\n\
    \    long long int temp32 = 0;\n    long long int temp33 = 0;\n    long long int\
    \ temp34 = 0;\n    long long int temp35 = 0;\n    long long int temp36 = 0;\n\
    \    long long int temp37 = 0;\n    long long int temp38 = 0;\n    long long int\
    \ temp39 = 0;\n    long long int temp40 = 0;\n    long long int temp41 = 0;\n\
    \    long long int temp42 = 0;\n    long long int temp43 = 0;\n    long long int\
    \ temp44 = 0;\n    long long int temp45 = 0;\n    long long int temp46 = 0;\n\
    \    long long int temp47 = 0;\n    long long int temp48 = 0;\n    long long int\
    \ temp49 = 0;\n    long long int temp50 = 0;\n    long long int temp51 = 0;\n\
    \    long long int temp52 = 0;\n    long long int temp53 = 0;\n    long long int\
    \ temp54 = 0;\n    long long int temp55 = 0;\n    long long int temp56 = 0;\n\
    \    long long int temp57 = 0;\n    long long int temp58 = 0;\n    long long int\
    \ temp59 = 0;\n    long long int temp60 = 0;\n    long long int \n}\nint main()\
    \ {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n\
    \    assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnc3uctcl.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpnc3uctcl.cpp:76:1: error: expected unqualified-id before '}' token\n }\n\
    \ ^\n/tmp/tmpnc3uctcl.cpp: In function 'int main()':\n/tmp/tmpnc3uctcl.cpp:78:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpnc3uctcl.cpp:2:\n/tmp/tmpnc3uctcl.cpp:79:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = 1;\n   \
    \ long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n \
    \   long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqrhmzdpw.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpqrhmzdpw.cpp:23:19: error: declaration of 'long long int a' shadows a\
    \ parameter\n     long long int a = a;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:24:19:\
    \ error: redeclaration of 'long long int b'\n     long long int b = b;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:11:19: error: 'long long int b' previously\
    \ declared here\n     long long int b = 3, c = 5, d = 7;\n                   ^\n\
    /tmp/tmpqrhmzdpw.cpp:25:19: error: redeclaration of 'long long int c'\n     long\
    \ long int c = c;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:11:26: error: 'long\
    \ long int c' previously declared here\n     long long int b = 3, c = 5, d = 7;\n\
    \                          ^\n/tmp/tmpqrhmzdpw.cpp:26:19: error: redeclaration\
    \ of 'long long int d'\n     long long int d = d;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:11:33:\
    \ error: 'long long int d' previously declared here\n     long long int b = 3,\
    \ c = 5, d = 7;\n                                 ^\n/tmp/tmpqrhmzdpw.cpp:27:19:\
    \ error: redeclaration of 'long long int p'\n     long long int p = p;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:12:19: error: 'long long int p' previously\
    \ declared here\n     long long int p = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:28:19:\
    \ error: redeclaration of 'long long int q'\n     long long int q = q;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:13:19: error: 'long long int q' previously\
    \ declared here\n     long long int q = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:29:19:\
    \ error: redeclaration of 'long long int r'\n     long long int r = r;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:14:19: error: 'long long int r' previously\
    \ declared here\n     long long int r = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:30:19:\
    \ error: redeclaration of 'long long int s'\n     long long int s = s;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:15:19: error: 'long long int s' previously\
    \ declared here\n     long long int s = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:31:19:\
    \ error: redeclaration of 'long long int t'\n     long long i"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 1;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int aa = 1;\n    long long int\
    \ bb = 1;\n    long long int cc = 1;\n    long long int dd = 1;\n    long long\
    \ int ee = 1;\n    long long int ff = 1;\n    long long int gg = 1;\n    long\
    \ long int hh = 1;\n    long long int ii = 1;\n    long long int jj = 1;\n   \
    \ long long int kk = 1;\n    long long int ll = 1;\n    long long int mm = 1;\n\
    \    long long int nn = 1;\n    long long int oo = 1;\n    long long int pp =\
    \ 1;\n    long long int qq = 1;\n    long long int rr = 1;\n    long long int\
    \ ss = 0;\n    long long int tt = 1;\n    long long int uu = 1;\n    long long\
    \ int vv = 1;\n    long long int ww = 1;\n    long long int xx = 0;\n    long\
    \ long int yy = 0;\n    long long int zz = 0;\n    long long int aaa = 0;\n  \
    \  long long int bbb = 0;\n    long long int ccc = 0;\n    long long int ddd =\
    \ 0;\n    long long int eee = 0;\n    long long int fff = 0;\n    long long int\
    \ ggg = 0;\n    long long int hhh = 0;\n    long long int iii = 0;\n    long long\
    \ int jjj = 0;\n    long long int kkk = 0;\n    long long int lll = 0;\n    long\
    \ long int mmm = 0;\n    long long int nnn = 0;\n    long long int ooo = 0;\n\
    \    long long int ppp = 0;\n    long long int qqq = 0;\n    long long int rrr\
    \ = 0;\n    long long int sss = 0;\n    long long \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzdvtbyos.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpzdvtbyos.cpp:82:1: error: expected unqualified-id before '}' token\n }\n\
    \ ^\n/tmp/tmpzdvtbyos.cpp: In function 'int main()':\n/tmp/tmpzdvtbyos.cpp:84:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpzdvtbyos.cpp:2:\n/tmp/tmpzdvtbyos.cpp:85:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7, h;\n    long long int i = 2;\n    long long int j = 2;\n    long long\
    \ int k = 2;\n    long long int l = 2;\n    long long int m = 2;\n    long long\
    \ int n = 2;\n    long long int o = 2;\n    long long int p = 2;\n    long long\
    \ int q = 2;\n    long long int r = 2;\n    long long int s = 2;\n    long long\
    \ int t = 2;\n    long long int u = 2;\n    long long int v = 2;\n    long long\
    \ int w = 2;\n    long long int x = 2;\n    long long int y = 2;\n    long long\
    \ int z = 2;\n    long long int A = 2;\n    long long int B = 2;\n    long long\
    \ int C = 2;\n    long long int D = 2;\n    long long int E = 2;\n    long long\
    \ int F = 2;\n    long long int G = 2;\n    long long int H = 2;\n    long long\
    \ int I = 2;\n    long long int J = 2;\n    long long int K = 2;\n    long long\
    \ int L = 2;\n    long long int M = 2;\n    long long int N = 2;\n    long long\
    \ int O = 2;\n    long long int P = 2;\n    long long int Q = 2;\n    long long\
    \ int R = 2;\n    long long int S = 2;\n    long long int T = 2;\n    long long\
    \ int U = 2;\n    long long int V = 2;\n    long long int W = 2;\n    long long\
    \ int X = 2;\n    long long int Y = 2;\n    long long int Z = 2;\n    long long\
    \ int A = 2;\n    long long int B = 2;\n    long long int C = 2;\n    long long\
    \ int D = 2;\n    long long int E = 2;\n    long long int F = 2;\n    long long\
    \ int G = 2;\n    long long int H = 2;\n    long long int I = 2;\n    long long\
    \ int J = 2;\n    long long int K = 2;\n    long long int L = 2;\n    long long\
    \ int M = 2;\n    long long int N = 2;\n    long long int O = 2;\n    long long\
    \ int P = 2;\n    long long int Q = 2;\n    long long int R = 2;\n    long long\
    \ int S = 2;\n    long long int T = 2;\n    long long int U = 2;\n    long long\
    \ int V = 2;\n    long long int W = 2;\n    long long int X = 2;\n    long long\
    \ int Y = 2;\n    long long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkq2d5lx5.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpkq2d5lx5.cpp:57:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:31:19: error: 'long\
    \ long int A' previously declared here\n     long long int A = 2;\n          \
    \         ^\n/tmp/tmpkq2d5lx5.cpp:58:19: error: redeclaration of 'long long int\
    \ B'\n     long long int B = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:32:19:\
    \ error: 'long long int B' previously declared here\n     long long int B = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:59:19: error: redeclaration of 'long\
    \ long int C'\n     long long int C = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:33:19:\
    \ error: 'long long int C' previously declared here\n     long long int C = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:60:19: error: redeclaration of 'long\
    \ long int D'\n     long long int D = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:34:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:61:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:35:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:62:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:36:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:63:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:37:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:64:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 2;\n                   ^\n/tmp/tmpkq2d5lx5.cpp:38:19:\
    \ error: 'long long int H' previously declared here\n     long long int H = 2;\n\
    \                   ^\n/tmp/tmpkq2d5lx5.cpp:65:19: error: redecla"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a) {\n                if (a % c ==\
    \ 0) {\n                    while (d <= a) {\n                        if (a %\
    \ d == 0) {\n                            return true;\n                      \
    \  }\n                        d++;\n                    }\n                }\n\
    \                c++;\n            }\n        }\n        b++;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpafsf3ts8.cpp: In function 'int main()':\n/tmp/tmpafsf3ts8.cpp:31:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpafsf3ts8.cpp:2:\n/tmp/tmpafsf3ts8.cpp:32:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = a;\n    long long int c = 0;\n    long long int\
    \ d = 1;\n    long long int e = 1;\n    long long int f = 0;\n    long long int\
    \ g = 1;\n    long long int h = 1;\n    long long int i = 1;\n    long long int\
    \ j = 1;\n    long long int k = 1;\n    long long int l = 1;\n    long long int\
    \ m = 1;\n    long long int n = 1;\n    long long int o = 1;\n    long long int\
    \ p = 1;\n    long long int q = 1;\n    long long int r = 1;\n    long long int\
    \ s = 1;\n    long long int t = 1;\n    long long int u = 1;\n    long long int\
    \ v = 1;\n    long long int w = 1;\n    long long int x = 1;\n    long long int\
    \ y = 1;\n    long long int z = 1;\n    long long int A = 1;\n    long long int\
    \ B = 1;\n    long long int C = 1;\n    long long int D = 1;\n    long long int\
    \ E = 1;\n    long long int F = 1;\n    long long int G = 1;\n    long long int\
    \ H = 1;\n    long long int I = 1;\n    long long int J = 1;\n    long long int\
    \ K = 1;\n    long long int L = 1;\n    long long int M = 1;\n    long long int\
    \ N = 1;\n    long long int O = 1;\n    long long int P = 1;\n    long long int\
    \ Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n    long long int\
    \ T = 1;\n    long long int U = 1;\n    long long int V = 1;\n    long long int\
    \ W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n    long long int\
    \ Z = 1;\n    long long int A = 1;\n    long long int B = 1;\n    long long int\
    \ C = 1;\n    long long int D = 1;\n    long long int E = 1;\n    long long int\
    \ F = 1;\n    long long int G = 1;\n    long long int H = 1;\n    long long int\
    \ I = 1;\n    long long int J = 1;\n    long long int K = 1;\n    long long int\
    \ L = 1;\n    long long int M = 1;\n    long long int N = 1;\n    long long int\
    \ O = 1;\n    long long int P = 1;\n    long long int Q = 1;\n    long long int\
    \ R = 1;\n    long long int S = 1;\n    long long int T = 1;\n    long long int\
    \ U = 1;\n    long long int V = 1;\n    \n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc___nejz.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpc___nejz.cpp:62:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:36:19: error: 'long\
    \ long int A' previously declared here\n     long long int A = 1;\n          \
    \         ^\n/tmp/tmpc___nejz.cpp:63:19: error: redeclaration of 'long long int\
    \ B'\n     long long int B = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:37:19:\
    \ error: 'long long int B' previously declared here\n     long long int B = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:64:19: error: redeclaration of 'long\
    \ long int C'\n     long long int C = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:38:19:\
    \ error: 'long long int C' previously declared here\n     long long int C = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:65:19: error: redeclaration of 'long\
    \ long int D'\n     long long int D = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:39:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:66:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:40:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:67:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:41:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:68:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:42:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:69:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 1;\n                   ^\n/tmp/tmpc___nejz.cpp:43:19:\
    \ error: 'long long int H' previously declared here\n     long long int H = 1;\n\
    \                   ^\n/tmp/tmpc___nejz.cpp:70:19: error: redecla"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3*a;\n    long long int c = 3*a*a;\n    long long\
    \ int d = 3*a*a*a;\n    long long int e = 3*a*a*a*a;\n    long long int f = 3*a*a*a*a*a;\n\
    \    long long int g = a*a*a*a*a*a;\n    long long int h = a*a*a*a*a*a*a;\n  \
    \  long long int i = a*a*a*a*a*a*a*a;\n    long long int j = a*a*a*a*a*a*a*a*a;\n\
    \    long long int k = a*a*a*a*a*a*a*a*a;\n    long long int l = a*a*a*a*a*a*a*a*a;\n\
    \    long long int m = a*a*a*a*a*a*a*a*a*a;\n    long long int n = a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int o = a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int p = a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int q = a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int r = a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int s = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int t = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int u = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int v\
    \ = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int w = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int x = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int\
    \ y = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int z = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \    long long int a = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int\
    \ b = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n    long long int c = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*\n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf5os1vrc.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpf5os1vrc.cpp:36:19: error: declaration of 'long long int a' shadows a\
    \ parameter\n     long long int a = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n \
    \                  ^\n/tmp/tmpf5os1vrc.cpp:37:19: error: redeclaration of 'long\
    \ long int b'\n     long long int b = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a;\n\
    \                   ^\n/tmp/tmpf5os1vrc.cpp:11:19: error: 'long long int b' previously\
    \ declared here\n     long long int b = 3*a;\n                   ^\n/tmp/tmpf5os1vrc.cpp:38:19:\
    \ error: redeclaration of 'long long int c'\n     long long int c = a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*a*\n\
    \                   ^\n/tmp/tmpf5os1vrc.cpp:12:19: error: 'long long int c' previously\
    \ declared here\n     long long int c = 3*a*a;\n                   ^\n/tmp/tmpf5os1vrc.cpp:39:1:\
    \ error: expected primary-expression before '}' token\n }\n ^\n/tmp/tmpf5os1vrc.cpp:\
    \ In function 'int main()':\n/tmp/tmpf5os1vrc.cpp:41:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = is_multiply_prime;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpf5os1vrc.cpp:2:\n/tmp/tmpf5os1vrc.cpp:42:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = (long long)a;\n    long long int c = (long long)3;\n\
    \    long long int d = (long long)5;\n    long long int e = (long long)2;\n  \
    \  long long int f = (long long)1;\n    long long int g = (long long)2;\n    long\
    \ long int h = (long long)3;\n    long long int i = (long long)5;\n    long long\
    \ int j = (long long)3;\n    long long int k = (long long)2;\n    long long int\
    \ l = (long long)1;\n    long long int m = (long long)2;\n    long long int n\
    \ = (long long)3;\n    long long int o = (long long)5;\n    long long int p =\
    \ (long long)3;\n    long long int q = (long long)2;\n    long long int r = (long\
    \ long)1;\n    long long int s = (long long)2;\n    long long int t = (long long)3;\n\
    \    long long int u = (long long)5;\n    long long int v = (long long)3;\n  \
    \  long long int w = (long long)2;\n    long long int x = (long long)1;\n    long\
    \ long int y = (long long)2;\n    long long int z = (long long)3;\n    long long\
    \ int aa = (long long)3;\n    long long int bb = (long long)5;\n    long long\
    \ int cc = (long long)2;\n    long long int dd = (long long)1;\n    long long\
    \ int ee = (long long)2;\n    long long int ff = (long long)1;\n    long long\
    \ int gg = (long long)2;\n    long long int hh = (long long)3;\n    long long\
    \ int ii = (long long)5;\n    long long int jj = (long long)3;\n    long long\
    \ int kk = (long long)2;\n    long long int ll = (long long)1;\n    long long\
    \ int mm = (long long)2;\n    long long int nn = (long long)3;\n    long long\
    \ int oo = (long long)5;\n    long long int pp = (long long)3;\n    long long\
    \ int qq = (long long)2;\n    long long int rr = (long long)1;\n    long long\
    \ int ss = (long long)2;\n    long long int tt = (long long)3;\n    long long\
    \ int uu = (long long)5;\n    long long int vv = (long long)3;\n    long long\
    \ int ww = (long long)2;\n    long long int xx = (long long)1;\n    long long\
    \ int yy = (long long)2;\n    long long int zz = (long long)3;\n    long long\
    \ int aaa = (long long)3;\n    long long int bbb = (long long)5;\n    long long\
    \ int ccc = (long long)2;\n    long long int ddd = (long long)1;\n    long long\
    \ int eee = (long long)2;\n    long long int fff = (\n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3kitsww1.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmp3kitsww1.cpp:68:1: error: expected primary-expression before '}' token\n\
    \ }\n ^\n/tmp/tmp3kitsww1.cpp:68:1: error: expected ')' before '}' token\n/tmp/tmp3kitsww1.cpp:68:1:\
    \ error: expected ',' or ';' before '}' token\n/tmp/tmp3kitsww1.cpp: In function\
    \ 'int main()':\n/tmp/tmp3kitsww1.cpp:70:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = is_multiply_prime;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3kitsww1.cpp:2:\n/tmp/tmp3kitsww1.cpp:71:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int p = 1;\n   \
    \ long long int q = 1;\n    long long int r = 1;\n    long long int s = 1;\n \
    \   long long int t = 1;\n    long long int u = 1;\n    long long int v = 1;\n\
    \    long long int w = 1;\n    long long int x = 1;\n    long long int y = 1;\n\
    \    long long int z = 1;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = y;\n\
    \    long long int z = z;\n    long long int a = a;\n    long long int b = b;\n\
    \    long long int c = c;\n    long long int d = d;\n    long long int p = p;\n\
    \    long long int q = q;\n    long long int r = r;\n    long long int s = s;\n\
    \    long long int t = t;\n    long long int u = u;\n    long long int v = v;\n\
    \    long long int w = w;\n    long long int x = x;\n    long long int y = \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqrhmzdpw.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpqrhmzdpw.cpp:23:19: error: declaration of 'long long int a' shadows a\
    \ parameter\n     long long int a = a;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:24:19:\
    \ error: redeclaration of 'long long int b'\n     long long int b = b;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:11:19: error: 'long long int b' previously\
    \ declared here\n     long long int b = 3, c = 5, d = 7;\n                   ^\n\
    /tmp/tmpqrhmzdpw.cpp:25:19: error: redeclaration of 'long long int c'\n     long\
    \ long int c = c;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:11:26: error: 'long\
    \ long int c' previously declared here\n     long long int b = 3, c = 5, d = 7;\n\
    \                          ^\n/tmp/tmpqrhmzdpw.cpp:26:19: error: redeclaration\
    \ of 'long long int d'\n     long long int d = d;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:11:33:\
    \ error: 'long long int d' previously declared here\n     long long int b = 3,\
    \ c = 5, d = 7;\n                                 ^\n/tmp/tmpqrhmzdpw.cpp:27:19:\
    \ error: redeclaration of 'long long int p'\n     long long int p = p;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:12:19: error: 'long long int p' previously\
    \ declared here\n     long long int p = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:28:19:\
    \ error: redeclaration of 'long long int q'\n     long long int q = q;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:13:19: error: 'long long int q' previously\
    \ declared here\n     long long int q = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:29:19:\
    \ error: redeclaration of 'long long int r'\n     long long int r = r;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:14:19: error: 'long long int r' previously\
    \ declared here\n     long long int r = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:30:19:\
    \ error: redeclaration of 'long long int s'\n     long long int s = s;\n     \
    \              ^\n/tmp/tmpqrhmzdpw.cpp:15:19: error: 'long long int s' previously\
    \ declared here\n     long long int s = 1;\n                   ^\n/tmp/tmpqrhmzdpw.cpp:31:19:\
    \ error: redeclaration of 'long long int t'\n     long long i"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 0;\n    long long int c = 0;\n    long long int\
    \ d = 0;\n    long long int e = 0;\n    long long int f = 0;\n    long long int\
    \ g = 0;\n    long long int h = 0;\n    long long int i = 0;\n    long long int\
    \ j = 0;\n    long long int k = 0;\n    long long int l = 0;\n    long long int\
    \ m = 0;\n    long long int n = 0;\n    long long int o = 0;\n    long long int\
    \ p = 0;\n    long long int q = 0;\n    long long int r = 0;\n    long long int\
    \ s = 0;\n    long long int t = 0;\n    long long int u = 0;\n    long long int\
    \ v = 0;\n    long long int w = 0;\n    long long int x = 0;\n    long long int\
    \ y = 0;\n    long long int z = 0;\n    long long int A = 0;\n    long long int\
    \ B = 0;\n    long long int C = 0;\n    long long int D = 0;\n    long long int\
    \ E = 0;\n    long long int F = 0;\n    long long int G = 0;\n    long long int\
    \ H = 0;\n    long long int I = 0;\n    long long int J = 0;\n    long long int\
    \ K = 0;\n    long long int L = 0;\n    long long int M = 0;\n    long long int\
    \ N = 0;\n    long long int O = 0;\n    long long int P = 0;\n    long long int\
    \ Q = 0;\n    long long int R = 0;\n    long long int S = 0;\n    long long int\
    \ T = 0;\n    long long int U = 0;\n    long long int V = 0;\n    long long int\
    \ W = 0;\n    long long int X = 0;\n    long long int Y = 0;\n    long long int\
    \ Z = 0;\n    long long int A = 0;\n    long long int B = 0;\n    long long int\
    \ C = 0;\n    long long int D = 0;\n    long long int E = 0;\n    long long int\
    \ F = 0;\n    long long int G = 0;\n    long long int H = 0;\n    long long int\
    \ I = 0;\n    long long int J = 0;\n    long long int K = 0;\n    long long int\
    \ L = 0;\n    long long int M = 0;\n    long long int N = 0;\n    long long int\
    \ O = 0;\n    long long int P = 0;\n    long long int Q = 0;\n    long long int\
    \ R = 0;\n    long long int S = 0;\n    long long int T = 0;\n    long long int\
    \ U = 0;\n    long long int V = 0;\n    long long int \n}\nint main() {\n    auto\
    \ candidate = is_multiply_prime;\n    assert(candidate((5)) == (false));\n   \
    \ assert(candidate((30)) == (true));\n    assert(candidate((8)) == (true));\n\
    \    assert(candidate((10)) == (false));\n    assert(candidate((125)) == (true));\n\
    \    assert(candidate((105)) == (true));\n    assert(candidate((126)) == (false));\n\
    \    assert(candidate((729)) == (false));\n    assert(candidate((891)) == (false));\n\
    \    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy8ryw1gu.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpy8ryw1gu.cpp:62:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:36:19: error: 'long\
    \ long int A' previously declared here\n     long long int A = 0;\n          \
    \         ^\n/tmp/tmpy8ryw1gu.cpp:63:19: error: redeclaration of 'long long int\
    \ B'\n     long long int B = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:37:19:\
    \ error: 'long long int B' previously declared here\n     long long int B = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:64:19: error: redeclaration of 'long\
    \ long int C'\n     long long int C = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:38:19:\
    \ error: 'long long int C' previously declared here\n     long long int C = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:65:19: error: redeclaration of 'long\
    \ long int D'\n     long long int D = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:39:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:66:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:40:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:67:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:41:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:68:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:42:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:69:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 0;\n                   ^\n/tmp/tmpy8ryw1gu.cpp:43:19:\
    \ error: 'long long int H' previously declared here\n     long long int H = 0;\n\
    \                   ^\n/tmp/tmpy8ryw1gu.cpp:70:19: error: redecla"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int e = 3, f = 5,\
    \ g = 7;\n    long long int h = 3, i = 5, j = 7;\n    long long int k = 5, l =\
    \ 5, m = 7;\n    long long int n = 5, o = 5, p = 5, q = 7;\n    long long int\
    \ r = 5, s = 5, t = 5, u = 7;\n    long long int v = 5, w = 5, x = 5, y = 5;\n\
    \    long long int z = 5, A = 5, B = 5, C = 5;\n    long long int D = 5;\n   \
    \ long long int E = 5;\n    long long int F = 5;\n    long long int G = 5;\n \
    \   long long int H = 5;\n    long long int I = 5;\n    long long int J = 5;\n\
    \    long long int K = 5;\n    long long int L = 5;\n    long long int M = 5;\n\
    \    long long int N = 5;\n    long long int O = 5;\n    long long int P = 5;\n\
    \    long long int Q = 5;\n    long long int R = 5;\n    long long int S = 5;\n\
    \    long long int T = 5;\n    long long int U = 5;\n    long long int V = 5;\n\
    \    long long int W = 5;\n    long long int X = 5;\n    long long int Y = 5;\n\
    \    long long int Z = 5;\n    long long int A = 5;\n    long long int B = 5;\n\
    \    long long int C = 5;\n    long long int D = 5;\n    long long int E = 5;\n\
    \    long long int F = 5;\n    long long int G = 5;\n    long long int H = 5;\n\
    \    long long int I = 5;\n    long long int J = 5;\n    long long int K = 5;\n\
    \    long long int L = 5;\n    long long int M = 5;\n    long long int N = 5;\n\
    \    long long int O = 5;\n    long long int P = 5;\n    long long int Q = 5;\n\
    \    long long int R = 5;\n    long long int S = 5;\n    long long int T = 5;\n\
    \    long long int U = 5;\n    long long int V = 5;\n    long long int W = 5;\n\
    \    long long int X = 5;\n    long long int Y = 5;\n    long long int Z = 5;\n\
    \    long long int A = 5;\n    long long int B = 5;\n    long long int C = 5;\n\
    \    long long int D = 5;\n    long long int E = 5;\n    long long int F = 5;\n\
    \    long long int G = 5;\n    long long int H = 5;\n    long long int I = 5;\n\
    \    long long int J = 5;\n\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp37loqjd4.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmp37loqjd4.cpp:42:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:18:26: error: 'long\
    \ long int A' previously declared here\n     long long int z = 5, A = 5, B = 5,\
    \ C = 5;\n                          ^\n/tmp/tmp37loqjd4.cpp:43:19: error: redeclaration\
    \ of 'long long int B'\n     long long int B = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:18:33:\
    \ error: 'long long int B' previously declared here\n     long long int z = 5,\
    \ A = 5, B = 5, C = 5;\n                                 ^\n/tmp/tmp37loqjd4.cpp:44:19:\
    \ error: redeclaration of 'long long int C'\n     long long int C = 5;\n     \
    \              ^\n/tmp/tmp37loqjd4.cpp:18:40: error: 'long long int C' previously\
    \ declared here\n     long long int z = 5, A = 5, B = 5, C = 5;\n            \
    \                            ^\n/tmp/tmp37loqjd4.cpp:45:19: error: redeclaration\
    \ of 'long long int D'\n     long long int D = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:19:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 5;\n\
    \                   ^\n/tmp/tmp37loqjd4.cpp:46:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:20:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 5;\n\
    \                   ^\n/tmp/tmp37loqjd4.cpp:47:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:21:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 5;\n\
    \                   ^\n/tmp/tmp37loqjd4.cpp:48:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:22:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 5;\n\
    \                   ^\n/tmp/tmp37loqjd4.cpp:49:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 5;\n                   ^\n/tmp/tmp37loqjd4.cpp:23:19:\
    \ error: 'long long int H' previousl"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            while (c <= a / b) {\n                if (a %\
    \ c == 0) {\n                    if (a % d == 0) {\n                        return\
    \ false;\n                    }\n                    else {\n                \
    \        d = d + 1;\n                    }\n                }\n              \
    \  else {\n                    c = c + 1;\n                }\n            }\n\
    \        }\n        else {\n            b = b + 1;\n        }\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg5e7h1q7.cpp: In function 'int main()':\n/tmp/tmpg5e7h1q7.cpp:35:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpg5e7h1q7.cpp:2:\n/tmp/tmpg5e7h1q7.cpp:36:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int res = 0;\n \
    \   while (b <= a) {\n        if (a % b == 0) {\n            res += 1;\n     \
    \   }\n        if (a % c == 0) {\n            res += 1;\n        }\n        if\
    \ (a % d == 0) {\n            res += 1;\n        }\n        b += 2;\n        c\
    \ += 2;\n        d += 2;\n    }\n    if (res == 3) {\n        return true;\n \
    \   }\n    return false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpyjqg_hj0.cpp: In function 'int main()':\n/tmp/tmpyjqg_hj0.cpp:33:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpyjqg_hj0.cpp:2:\n/tmp/tmpyjqg_hj0.cpp:34:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7, e = 9, f = 11, g = 13, h;\n   \
    \ long long int i = 1;\n    long long int j = 1;\n    long long int k = 1;\n \
    \   long long int l = 1;\n    long long int m = 1;\n    long long int n = 1;\n\
    \    long long int o = 1;\n    long long int p = 1;\n    long long int q = 1;\n\
    \    long long int r = 1;\n    long long int s = 1;\n    long long int t = 1;\n\
    \    long long int u = 1;\n    long long int v = 1;\n    long long int w = 1;\n\
    \    long long int x = 1;\n    long long int y = 1;\n    long long int z = 1;\n\
    \    long long int A = 1;\n    long long int B = 1;\n    long long int C = 1;\n\
    \    long long int D = 1;\n    long long int E = 1;\n    long long int F = 1;\n\
    \    long long int G = 1;\n    long long int H = 1;\n    long long int I = 1;\n\
    \    long long int J = 1;\n    long long int K = 1;\n    long long int L = 1;\n\
    \    long long int M = 1;\n    long long int N = 1;\n    long long int O = 1;\n\
    \    long long int P = 1;\n    long long int Q = 1;\n    long long int R = 1;\n\
    \    long long int S = 1;\n    long long int T = 1;\n    long long int U = 1;\n\
    \    long long int V = 1;\n    long long int W = 1;\n    long long int X = 1;\n\
    \    long long int Y = 1;\n    long long int Z = 1;\n    long long int A = 1;\n\
    \    long long int B = 1;\n    long long int C = 1;\n    long long int D = 1;\n\
    \    long long int E = 1;\n    long long int F = 1;\n    long long int G = 1;\n\
    \    long long int H = 1;\n    long long int I = 1;\n    long long int J = 1;\n\
    \    long long int K = 1;\n    long long int L = 1;\n    long long int M = 1;\n\
    \    long long int N = 1;\n    long long int O = 1;\n    long long int P = 1;\n\
    \    long long int Q = 1;\n    long long int R = 1;\n    long long int S = 1;\n\
    \    long long int T = 1;\n    long long int U = 1;\n    long long int V = 1;\n\
    \    long long int W = 1;\n    long long int X = 1;\n    long long int Y = 1;\n\
    \    long long int Z = 1;\n    long \n}\nint main() {\n    auto candidate = is_multiply_prime;\n\
    \    assert(candidate((5)) == (false));\n    assert(candidate((30)) == (true));\n\
    \    assert(candidate((8)) == (true));\n    assert(candidate((10)) == (false));\n\
    \    assert(candidate((125)) == (true));\n    assert(candidate((105)) == (true));\n\
    \    assert(candidate((126)) == (false));\n    assert(candidate((729)) == (false));\n\
    \    assert(candidate((891)) == (false));\n    assert(candidate((1001)) == (true));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbquig6b1.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpbquig6b1.cpp:56:19: error: redeclaration of 'long long int A'\n     long\
    \ long int A = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:30:19: error: 'long\
    \ long int A' previously declared here\n     long long int A = 1;\n          \
    \         ^\n/tmp/tmpbquig6b1.cpp:57:19: error: redeclaration of 'long long int\
    \ B'\n     long long int B = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:31:19:\
    \ error: 'long long int B' previously declared here\n     long long int B = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:58:19: error: redeclaration of 'long\
    \ long int C'\n     long long int C = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:32:19:\
    \ error: 'long long int C' previously declared here\n     long long int C = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:59:19: error: redeclaration of 'long\
    \ long int D'\n     long long int D = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:33:19:\
    \ error: 'long long int D' previously declared here\n     long long int D = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:60:19: error: redeclaration of 'long\
    \ long int E'\n     long long int E = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:34:19:\
    \ error: 'long long int E' previously declared here\n     long long int E = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:61:19: error: redeclaration of 'long\
    \ long int F'\n     long long int F = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:35:19:\
    \ error: 'long long int F' previously declared here\n     long long int F = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:62:19: error: redeclaration of 'long\
    \ long int G'\n     long long int G = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:36:19:\
    \ error: 'long long int G' previously declared here\n     long long int G = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:63:19: error: redeclaration of 'long\
    \ long int H'\n     long long int H = 1;\n                   ^\n/tmp/tmpbquig6b1.cpp:37:19:\
    \ error: 'long long int H' previously declared here\n     long long int H = 1;\n\
    \                   ^\n/tmp/tmpbquig6b1.cpp:64:19: error: redecla"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int temp;\n    bool\
    \ flag = false;\n    while (b <= a) {\n        temp = a;\n        while (temp\
    \ % b == 0) {\n            temp /= b;\n        }\n        if (temp == 1) {\n \
    \           flag = true;\n            break;\n        }\n        if (temp == 2)\
    \ {\n            flag = true;\n            break;\n        }\n        if (temp\
    \ % 2 == 0) {\n            flag = false;\n            break;\n        }\n    \
    \    if (temp % 3 == 0) {\n            flag = false;\n            break;\n   \
    \     }\n        if (temp % 5 == 0) {\n            flag = false;\n           \
    \ break;\n        }\n        if (temp % 7 == 0) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp % 11 == 0) {\n            flag\
    \ = false;\n            break;\n        }\n        if (temp % 13 == 0) {\n   \
    \         flag = false;\n            break;\n        }\n        if (temp % 17\
    \ == 0) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp % 19 == 0) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp % 23 == 0) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp % 29 == 0) {\n            flag = false;\n       \
    \     break;\n        }\n        if (temp % 31 == 0) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp % 37 == 0) {\n            flag\
    \ = false;\n            break;\n        }\n        if (temp % 41 == 0) {\n   \
    \         flag = false;\n            break;\n        }\n        if (temp % 43\
    \ == 0) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp % 47 == 0) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp % 53 == 0) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp % 59 == 0) {\n            flag = false;\n       \
    \     break;\n        }\n        if (temp % 61 == 0) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp % 67 == 0) {\n            flag\
    \ = false;\n            break;\n        }\n        if (temp % 71 == 0) {\n   \
    \         flag = false;\n            break;\n        }\n        if (temp % 73\
    \ == 0) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp % 79 == 0) {\n            flag = false;\n            break;\n        }\n\
    \        if (temp % 83 == 0) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp % 89 == 0) {\n            flag = false;\n       \
    \     break;\n        }\n        if (temp % 97 == 0) {\n            flag = false;\n\
    \            break;\n        }\n        if (temp % 101 == 0) {\n            flag\
    \ = false;\n            break;\n        }\n        if (temp % 103 == 0) {\n  \
    \          flag = false;\n            break;\n        }\n        if (temp % 107\
    \ == 0) {\n            flag = false;\n            break;\n        }\n        if\
    \ (temp % 111 == 0) {\n            flag = false;\n            break;\n       \
    \ }\n        if (temp % 113 == 0) {\n            flag = false;\n            break;\n\
    \        }\n        if (temp % 117 == 0) {\n            flag = false;\n      \
    \      break;\n        }\n        if (temp\n}\nint main() {\n    auto candidate\
    \ = is_multiply_prime;\n    assert(candidate((5)) == (false));\n    assert(candidate((30))\
    \ == (true));\n    assert(candidate((8)) == (true));\n    assert(candidate((10))\
    \ == (false));\n    assert(candidate((125)) == (true));\n    assert(candidate((105))\
    \ == (true));\n    assert(candidate((126)) == (false));\n    assert(candidate((729))\
    \ == (false));\n    assert(candidate((891)) == (false));\n    assert(candidate((1001))\
    \ == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsazqofmi.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmpsazqofmi.cpp:152:1: error: expected ')' before '}' token\n }\n ^\n/tmp/tmpsazqofmi.cpp:152:1:\
    \ error: expected primary-expression before '}' token\n/tmp/tmpsazqofmi.cpp:152:1:\
    \ error: expected ';' before '}' token\n/tmp/tmpsazqofmi.cpp:153:12: error: a\
    \ function-definition is not allowed here before '{' token\n int main() {\n  \
    \          ^\n/tmp/tmpsazqofmi.cpp:165:1: error: expected '}' at end of input\n\
    \ }\n ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    long long int d = a / b;\n\
    \    long long int e = a % b;\n    long long int f = e / c;\n    long long int\
    \ g = e % c;\n    long long int h = g / d;\n    long long int i = g % d;\n   \
    \ long long int j = h / e;\n    long long int k = h % e;\n    long long int l\
    \ = j / f;\n    long long int m = j % f;\n    long long int n = m / g;\n    long\
    \ long int o = m % g;\n    long long int p = n / h;\n    long long int q = n %\
    \ h;\n    long long int r = p / i;\n    long long int s = p % i;\n    long long\
    \ int t = q / j;\n    long long int u = q % j;\n    long long int v = r / k;\n\
    \    long long int w = r % k;\n    long long int x = s / l;\n    long long int\
    \ y = s % l;\n    long long int z = t / m;\n    long long int aa = t % m;\n  \
    \  long long int bb = u / o;\n    long long int cc = u % o;\n    long long int\
    \ dd = v / p;\n    long long int ee = v % p;\n    long long int ff = w / q;\n\
    \    long long int gg = w % q;\n    long long int hh = x / r;\n    long long int\
    \ ii = x % r;\n    long long int jj = y / s;\n    long long int kk = y % s;\n\
    \    long long int ll = z / t;\n    long long int mm = z % t;\n    long long int\
    \ nn = aa / bb;\n    long long int oo = aa % bb;\n    long long int pp = cc /\
    \ dd;\n    long long int qq = cc % dd;\n    long long int rr = dd / ee;\n    long\
    \ long int ss = dd % ee;\n    long long int tt = (ff / gg);\n    long long int\
    \ uu = (ff % gg);\n    long long int vv = gg / hh;\n    long long int ww = gg\
    \ % hh;\n    long long int xx = ii / jj;\n    long long int yy = ii % jj;\n  \
    \  long long int zz = kk / ll;\n    long long int aaa = kk % ll;\n    long \n\
    }\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0x3dznyi.cpp: In function 'bool is_multiply_prime(long int)':\n\
    /tmp/tmp0x3dznyi.cpp:12:19: error: redeclaration of 'long long int d'\n     long\
    \ long int d = a / b;\n                   ^\n/tmp/tmp0x3dznyi.cpp:11:33: error:\
    \ 'long long int d' previously declared here\n     long long int b = 3, c = 5,\
    \ d = 7;\n                                 ^\n/tmp/tmp0x3dznyi.cpp:63:1: error:\
    \ expected unqualified-id before '}' token\n }\n ^\n/tmp/tmp0x3dznyi.cpp: In function\
    \ 'int main()':\n/tmp/tmp0x3dznyi.cpp:65:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = is_multiply_prime;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp0x3dznyi.cpp:2:\n/tmp/tmp0x3dznyi.cpp:66:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Write a function that\
    \ returns true if the given number is the multiplication of 3 prime numbers\n\
    // and false otherwise.\n// Knowing that (a) is less then 100. \n// Example:\n\
    // >>> is_multiply_prime((30))\n// (true)\n// 30 = 2 * 3 * 5\nbool is_multiply_prime(long\
    \ a) {\n    long long int b = 3, c = 5, d = 7;\n    while (b <= a) {\n       \
    \ if (a % b == 0) {\n            if (a % c == 0) {\n                if (a % d\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        b += 2;\n        c += 2;\n        d += 2;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = is_multiply_prime;\n    assert(candidate((5))\
    \ == (false));\n    assert(candidate((30)) == (true));\n    assert(candidate((8))\
    \ == (true));\n    assert(candidate((10)) == (false));\n    assert(candidate((125))\
    \ == (true));\n    assert(candidate((105)) == (true));\n    assert(candidate((126))\
    \ == (false));\n    assert(candidate((729)) == (false));\n    assert(candidate((891))\
    \ == (false));\n    assert(candidate((1001)) == (true));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5d30kb1b.cpp: In function 'int main()':\n/tmp/tmp5d30kb1b.cpp:27:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = is_multiply_prime;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5d30kb1b.cpp:2:\n/tmp/tmp5d30kb1b.cpp:28:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((5)) == (false));\n\
    \                         ^\n"
  stdout: ''

name: HumanEval_102_choose_num
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// This function takes two positive\
  \ numbers x and y and returns the\n// biggest even integer number that is in the\
  \ range [x, y] inclusive. If \n// there's no such number, then the function should\
  \ return -1.\n// For example:\n// >>> choose_num((12), (15))\n// (14)\n// >>> choose_num((13),\
  \ (12))\n// (-1)\nlong choose_num(long x, long y) {\n"
tests: "}\nint main() {\n    auto candidate = choose_num;\n    assert(candidate((12),\
  \ (15)) == (14));\n    assert(candidate((13), (12)) == (-1));\n    assert(candidate((33),\
  \ (12354)) == (12354));\n    assert(candidate((5234), (5233)) == (-1));\n    assert(candidate((6),\
  \ (29)) == (28));\n    assert(candidate((27), (10)) == (-1));\n    assert(candidate((7),\
  \ (7)) == (-1));\n    assert(candidate((546), (546)) == (546));\n}\n"
completions: ["    long max_num = x;\n    long min_num = y;\n    long mid;\n    while\
    \ (max_num < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid\
    \ % 2 == 0) {\n            max_num = mid;\n        } else {\n            min_num\
    \ = mid;\n        }\n    }\n    return max_num;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n            x = mid+1;\n        } else {\n      \
    \      y = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n   \
    \ if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    if (x > 0 && y > 0) {\n        long mid = (x + y) / 2;\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans =\
    \ choose_num(mid + 1, y);\n        }\n    } else {\n        long mid = y + (x\
    \ - y) / 2;\n        ans = choose_num(y, mid);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid + 1);\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 ==\
    \ 0;\n    if (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long\
    \ y_odd = y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even\
    \ = x % 2 == 0;\n            long y_even = y % 2 == 0;\n            if (x_even\
    \ && y_even) {\n                long x_odd = x % 2 == 1;\n                long\
    \ y_odd = y % 2 == 1;\n                if (x_odd && y_odd) {\n               \
    \     long x_even = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n\
    \                    if (x_even && y_even) {\n                        long x_odd\
    \ = x % 2 == 1;\n                        long y_odd = y % 2 == 1;\n          \
    \              if (x_odd && y_odd) {\n                            long x_even\
    \ = x % 2 == 0;\n                            long y_even = y % 2 == 0;\n     \
    \                       if (x_even && y_even) {\n                            \
    \    long x_odd = x % 2 == 1;\n                                long y_odd = y\
    \ % 2 == 1;\n                                if (x_odd && y_odd) {\n         \
    \                           long x_even = x % 2 == 0;\n                      \
    \              long y_even = y % 2 == 0;\n                                   \
    \ if (x_even && y_even) {\n                                        long x_odd\
    \ = x % 2 == 1;\n                                        long y_odd = y % 2 ==\
    \ 1;\n                                        if (x_odd && y_odd) {\n        \
    \                                    long x_even = x % 2 == 0;\n             \
    \                               long y_even = y % 2 == 0;\n                  \
    \                          if (x_even && y_even) {\n                         \
    \                       long x_odd = x % 2 == 1;\n                           \
    \                     long y_odd = y % 2 == 1;\n                             \
    \                   if (x_odd && y_odd) {\n                                  \
    \                  long x_even = x % 2 == 0;\n                               \
    \                     long y_even = y % 2 == 0;\n                            \
    \                        if (x_even && y_even) {\n                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                   long y_odd = y % 2 == 1;\n               \
    \                                         if (x_odd && y_odd) {\n            \
    \                                                long x_even = x % 2 == 0;\n \
    \                                                           long y_even = y %\
    \ 2 == 0;\n                                                            if (x_even\
    \ && y_even) {\n                                                             \
    \   long x_odd = x % 2 == 1;\n                                               \
    \                 long y_odd = y % 2 == 1;\n                                 \
    \                               if (x_odd && y_odd) {\n                      \
    \                                              long x_even = x % 2 == 0;\n   \
    \                                                                 long y_even\
    \ = y % 2 == 0;\n                                                            \
    \        if (x_even && y_even) {\n                                           \
    \                             long x_odd = x % 2 == 1;\n                     \
    \                                                   long y_od", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y) {\n    \
    \    if (mid % 2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        mid++;\n    }\n    return ans;", "    if (x >= y) {\n        return\
    \ -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    }\n    return choose_num(mid, y);", "    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = mid;\n    } else if (mid\
    \ <= y) {\n        ans = x;\n    } else {\n        ans = y;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid = (mid + y) / 2;\n    }\n    return ans;", " \
    \   long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n\
    \        if (ans == -1) {\n            ans = mid;\n        }\n    } else {\n \
    \       long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n     \
    \   if (ans == -1) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    long ans = -1;\n    while (x <= y) {\n        if (x % 2 == 0) {\n \
    \           ans = x;\n            break;\n        }\n        x += 2;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n       \
    \ if ((x % 2) == 0) {\n            ans = x;\n            break;\n        }\n \
    \       x++;\n    }\n    return ans;", "    long ans = -1;\n    long mid = (x\
    \ + y) / 2;\n    long diff = x - mid;\n    if (diff > y) {\n        diff = y -\
    \ mid;\n        ans = mid;\n    }\n    if (diff > 0 && diff < y) {\n        ans\
    \ = mid;\n    }\n    return ans;", "    if (x >= y) {\n        return -1;\n  \
    \  }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    }\n    return choose_num(mid, y);", "    if (x >= y) {\n        return -1;\n\
    \    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n\
    \    }\n    return choose_num(mid, y);", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n    while\
    \ (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n      \
    \      ans = mid;\n            x = mid+1;\n        } else {\n            y = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x > y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x<y)\
    \ {\n        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n            ans =\
    \ mid;\n            break;\n        }\n        if (mid%2 == 1) {\n           \
    \ y = mid;\n        }\n        else {\n            x = mid;\n        }\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x > y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    while (x<y) {\n        long\
    \ mid = (x + y)/2;\n        if (mid%2 == 0) {\n            ans = mid;\n      \
    \      break;\n        }\n        if (mid%2 != 0) {\n            y = mid;\n  \
    \      }\n        else {\n            x = mid;\n        }\n    }\n    return ans;",
  "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n   \
    \ if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n     \
    \   x = y;\n        y = temp;\n    }\n    while (x <= y) {\n        if (x % 2\
    \ == 0) {\n            ans = x;\n            break;\n        }\n        x += 2;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n\
    \        if (x%2 == 0) {\n            x = x + 1;\n        } else {\n         \
    \   y = y - 1;\n        }\n    }\n    if (x == y) {\n        ans = x;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    if (y > x) {\n        long\
    \ temp = y;\n        y = x;\n        x = temp;\n    }\n    while (y) {\n     \
    \   long mid = y / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n \
    \           break;\n        }\n        y = mid;\n    }\n    return ans;", "  \
    \  long ans = -1;\n    long mid = (x + y) / 2;\n    if (mid > 0 && mid < y) {\n\
    \        ans = mid;\n    }\n    return ans;", "    long max_num = x;\n    long\
    \ min_num = y;\n    long mid;\n    while (max_num < min_num) {\n        mid =\
    \ (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n            max_num =\
    \ mid;\n        } else {\n            min_num = mid;\n        }\n    }\n    return\
    \ max_num;", "    if (x > y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    long ans = -1;\n    for (long i = x; i <= y; i++) {\n\
    \        if (i % 2 == 0) {\n            ans = i;\n            break;\n       \
    \ }\n    }\n    return ans;", "    // Write your code here\n    long ans = -1;\n\
    \    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    if (x == 0) {\n        return y;\n    }\n    if (y == 0) {\n\
    \        return x;\n    }\n    while (x % 2 == 0 && y % 2 == 0) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x == y) {\n   \
    \     return x;\n    }\n    while (x % 2 == 0) {\n        x = x / 2;\n    }\n\
    \    while (y % 2 == 0) {\n        y = y / 2;\n    }\n    while (x < y) {\n  \
    \      long temp = x;\n        x = y;\n        y = temp;\n    }\n    ans = x;\n\
    \    return ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid\
    \ = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    return\
    \ choose_num(mid, y);", "    long ans = -1;\n    if (x >= y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n     \
    \   if (x % 2 == 0) {\n            ans = x;\n            break;\n        }\n \
    \       x += 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n    while\
    \ (x <= y) {\n        if (x % 2 == 0) {\n            ans = x;\n            break;\n\
    \        }\n        x += 2;\n    }\n    return ans;", "    if (x >= y) {\n   \
    \     return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n\
    \        return mid;\n    }\n    return choose_num(mid, y);", "    // Write your\
    \ code here\n    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    while (x+y <= y) {\n        if (x%2\
    \ == 0) {\n            ans = x;\n            break;\n        }\n        x++;\n\
    \    }\n    return ans;", "    if (x >= y) {\n        long temp = x;\n       \
    \ x = y;\n        y = temp;\n    }\n    long ans = -1;\n    while (x != y) {\n\
    \        if (x % 2 == 0) {\n            x = x / 2;\n            ans = ans * 2\
    \ + x;\n        } else {\n            y = y / 2;\n            ans = ans * 2 +\
    \ y;\n        }\n    }\n    return ans;", "    // Write your code here\n    long\
    \ ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if\
    \ (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x+y)/2;\n  \
    \      if (mid%2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        if (mid%2 != 0) {\n            y = mid;\n        }\n        else\
    \ {\n            x = mid;\n        }\n    }\n    return ans;", "    assert(x >=\
    \ 0 && y >= 0);\n    long ans = -1;\n    if (x <= y) {\n        long mid = (x\
    \ + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n\
    \    }\n    return ans;", "    long max_num = x;\n    long min_num = y;\n    long\
    \ mid;\n    while (max_num < min_num) {\n        mid = (max_num + min_num) / 2;\n\
    \        if (mid % 2 == 0) {\n            max_num = mid;\n        } else {\n \
    \           min_num = mid;\n        }\n    }\n    return max_num;", "    long\
    \ ans = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans\
    \ = mid;\n    } else {\n        if (x <= mid) {\n            ans = mid;\n    \
    \    } else {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid%2 == 0) {\n            ans = mid;\n            x = mid+1;\n \
    \       } else {\n            y = mid;\n        }\n    }\n    return ans;", " \
    \   // Write your code here\n    long ans = -1;\n    if (x >= y) {\n        long\
    \ mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long max_num = x;\n    long min_num\
    \ = y;\n    long mid;\n    while (max_num < min_num) {\n        mid = (max_num\
    \ + min_num) / 2;\n        if (mid % 2 == 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + (y-x)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid;\n \
    \       } else {\n            y = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x <= y) {\n        if (x % 2 == 0) {\n \
    \           ans = x;\n            break;\n        }\n        x += 2;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n      \
    \  if (x%2 == 0) {\n            ans = x;\n            break;\n        }\n    \
    \    x++;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x\
    \ < y) {\n        long mid = (x + y) / 2;\n        if (mid * mid > ans) {\n  \
    \          ans = mid;\n        }\n        if (mid * mid > y) {\n            y\
    \ = mid;\n        }\n        if (mid * mid < x) {\n            x = mid;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n    \
    \    long temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x > 0 &&\
    \ y > 0) {\n        long mid = (x + y) / 2;\n        if (mid > 0 && mid < y) {\n\
    \            ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = mid;\n\
    \    } else if (mid <= y) {\n        ans = mid;\n    } else {\n        ans = x;\n\
    \    }\n    return ans;", "    if (x > y) {\n        long temp = x;\n        x\
    \ = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2\
    \ == 0) {\n        return mid;\n    }\n    if (mid % 2 == 1) {\n        return\
    \ -1;\n    }\n    return choose_num(x, mid);", "    long ans = -1;\n    long xx\
    \ = x;\n    long yy = y;\n    long temp;\n    while (xx <= yy) {\n        temp\
    \ = xx;\n        xx = yy;\n        yy = temp;\n    }\n    while (xx >= yy) {\n\
    \        if (xx % 2 == 0) {\n            ans = xx;\n            break;\n     \
    \   }\n        xx /= 2;\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    long diff = x - mid;\n    if (diff > 0 && mid < y) {\n\
    \        ans = mid;\n    } else if (diff < 0 && mid > y) {\n        ans = mid;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x > y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    // x must be smaller\
    \ than y\n    if (x == 0 || y == 0) {\n        return -1;\n    }\n    // x must\
    \ be even\n    if (x % 2 == 0) {\n        ans = x;\n    }\n    // y must be even\n\
    \    if (y % 2 == 0) {\n        ans = y;\n    }\n    // x must be smaller than\
    \ y\n    if (x != y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    // x must be smaller than y\n    if (x == 0 || y == 0) {\n       \
    \ return -1;\n    }\n    // x must be even\n    if (x % 2 == 0) {\n        ans\
    \ = x;\n    }\n    // y must be even\n    if (y % 2 == 0) {\n        ans = y;\n\
    \    }\n    // x must be smaller than y\n    if (x != y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    // x must be smaller than\
    \ y\n    if (x == 0 || y == 0) {\n        return -1;\n    }\n    // x must be\
    \ even\n    if (x % 2 == 0) {\n        ans = x;\n    }\n    // y must be even\n\
    \    if (y % 2 == 0) {\n        ans = y;\n    }\n    // x must be smaller than\
    \ y\n    if (x != y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    // x must be smaller than y\n    if (x == 0 || y == 0) {\n       \
    \ return -1;\n    }\n    // x must be even\n    if (x % 2 == 0) {\n        ans\
    \ = x;\n    }\n    // y must be even\n    if (y % 2 == 0) {\n        ans = y;\n\
    \    }\n    // x must be smaller than y\n    if (x != y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    // x must be smaller than\
    \ y\n    if (x == 0 || y == 0) {\n        return -1;\n    }\n    // x must be\
    \ even\n    if (x % 2 == 0) {\n        ans = x;\n    }\n    // y must be even\n\
    \    if (y % 2 == 0) {\n        ans = y;\n    }\n    // x must be smaller than\
    \ y\n    if (x != y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    // x must be smaller than y\n    if (x == 0 || y == 0) {\n       \
    \ return -1;\n    }\n    // x must be even\n    if (x % 2 == 0) {\n        ans\
    \ = x;\n    }\n    // y must be even\n    if (y % 2 == 0) {\n        ans = y;\n\
    \    }\n    // x must be smaller than y\n    if (x != y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    // x must be smaller than\
    \ y\n    if (x == 0 || y == 0) {\n        return -1;\n    }\n    // x must be ",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0)\
    \ {\n        ans = mid;\n    } else {\n        if (mid < x || mid > y) {\n   \
    \         ans = mid;\n        } else {\n            ans = choose_num(x, mid);\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    long ans\
    \ = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long ans = -1;\n    long temp = 0;\n    long div = 1;\n    while (y\
    \ != 0) {\n        temp = y;\n        y = x % y;\n        x = temp;\n        if\
    \ (y != 0) {\n            div++;\n        }\n    }\n    ans = x;\n    while (ans\
    \ % 2 == 0) {\n        ans /= 2;\n    }\n    return ans;", "    // Write your\
    \ code here\n    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n \
    \       x = y;\n        y = temp;\n    }\n    while (x <= y) {\n        if (x\
    \ % 2 == 0) {\n            ans = x;\n            break;\n        }\n        x++;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n        if (ans ==\
    \ -1) {\n            ans = mid;\n        }\n    } else {\n        long mid = y\
    \ + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n\
    \            ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x > y) {\n        swap(x, y);\n    }\n    while (x <= y) {\n        if\
    \ (x % 2 == 0) {\n            ans = x;\n            break;\n        }\n      \
    \  x += 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n          \
    \  ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n            x = mid;\n        } else {\n        \
    \    y = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    } else\
    \ {\n        if (x > mid) {\n            ans = choose_num(x, mid);\n        }\
    \ else {\n            ans = choose_num(mid + 1, y);\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n    while\
    \ (x <= y) {\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  break;\n        }\n        mid = (mid + y) / 2;\n    }\n    return ans;", " \
    \   if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n  \
    \  if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    if (x > y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    long ans = -1;\n    while (x != y) {\n        if (x % 2 ==\
    \ 0) {\n            ans = x;\n            break;\n        }\n        x /= 2;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (y) {\n     \
    \   if (x % 2 == 0) {\n            ans = y;\n            break;\n        }\n \
    \       y /= 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n\
    \        if (ans == -1) {\n            ans = mid;\n        }\n    } else {\n \
    \       long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n     \
    \   if (ans == -1) {\n            ans = mid;\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(mid, y);\n        if (ans == -1) {\n            ans =\
    \ mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n       \
    \ ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    // Write your code here\n    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x <= y) {\n\
    \        if (x % 2 == 0) {\n            ans = x;\n            break;\n       \
    \ }\n        x += 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x\
    \ >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x++ < y) {\n        if (x % 2 == 0) {\n            ans = x;\n    \
    \        break;\n        }\n    }\n    return ans;", "    long ans = -1;\n   \
    \ if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    } else {\n        if (mid > x) {\n            ans = mid;\n        } else\
    \ {\n            ans = x;\n        }\n    }\n    return ans;", "    long ans =\
    \ -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y =\
    \ temp;\n    }\n    while (x+1 < y) {\n        if ((x % 2) == 0) {\n         \
    \   ans = x;\n            break;\n        }\n        ans = x + 1;\n        x++;\n\
    \    }\n    return ans;", "    if (x >= y) {\n        return -1;\n    }\n    long\
    \ mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    } else\
    \ {\n        return choose_num(x, mid);\n    }", "    long ans = -1;\n    if (x\
    \ >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    long mid = (x + y) / 2;\n    while (x != mid && y != mid && x % 2 == 0 &&\
    \ y % 2 == 0) {\n        if (x <= mid) {\n            y = mid - 1;\n        }\
    \ else {\n            x = mid + 1;\n        }\n        mid = (x + y) / 2;\n  \
    \  }\n    if (x == mid && y == mid) {\n        ans = mid;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x + y)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        else if (mid % 2 != 0) {\n            y = mid;\n        }\n \
    \       else {\n            x = mid;\n        }\n    }\n    return ans;", "  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        if (mid > y) {\n            y = mid;\n        } else {\n    \
    \        x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n \
    \   if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid %\
    \ 2 == 0) {\n            ans = mid;\n            x = mid+1;\n        } else {\n\
    \            y = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x <= y) {\n        if (x % 2 == 0) {\n            ans = x;\n\
    \            break;\n        }\n        x += 2;\n    }\n    return ans;", "  \
    \  long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(mid, y);\n        if (ans == -1) {\n            ans =\
    \ mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n       \
    \ ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long mid = x + (y - x) / 2;\n        long lcm = x * y / gcd(x, y);\n\
    \        long r = gcd(mid, x);\n        long q = gcd(mid, y);\n        long m\
    \ = lcm;\n        while (m != r) {\n            long t = m;\n            m = r;\n\
    \            r = t;\n        }\n        long k = m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m * m\
    \ * m", "    long ans = -1;\n    long x_even = x % 2 == 0;\n    long y_even =\
    \ y % 2 == 0;\n    if (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n\
    \        long y_odd = y % 2 == 1;\n        if (x_odd && y_odd) {\n           \
    \ long x_even = x % 2 == 0;\n            long y_even = y % 2 == 0;\n         \
    \   if (x_even && y_even) {\n                long x_odd = x % 2 == 1;\n      \
    \          long y_odd = y % 2 == 1;\n                if (x_odd && y_odd) {\n \
    \                   long x_even = x % 2 == 0;\n                    long y_even\
    \ = y % 2 == 0;\n                    if (x_even && y_even) {\n               \
    \         long x_odd = x % 2 == 1;\n                        long y_odd = y % 2\
    \ == 1;\n                        if (x_odd && y_odd) {\n                     \
    \       long x_even = x % 2 == 0;\n                            long y_even = y\
    \ % 2 == 0;\n                            if (x_even && y_even) {\n           \
    \                     long x_odd = x % 2 == 1;\n                             \
    \   long y_odd = y % 2 == 1;\n                                if (x_odd && y_odd)\
    \ {\n                                    long x_even = x % 2 == 0;\n         \
    \                           long y_even = y % 2 == 0;\n                      \
    \              if (x_even && y_even) {\n                                     \
    \   long x_odd = x % 2 == 1;\n                                        long y_odd\
    \ = y % 2 == 1;\n                                        if (x_odd && y_odd) {\n\
    \                                            long x_even = x % 2 == 0;\n     \
    \                                       long y_even = y % 2 == 0;\n          \
    \                                  if (x_even && y_even) {\n                 \
    \                               long x_odd = x % 2 == 1;\n                   \
    \                             long y_odd = y % 2 == 1;\n                     \
    \                           if (x_odd && y_odd) {\n                          \
    \                          long x_even = x % 2 == 0;\n                       \
    \                             long y_even = y % 2 == 0;\n                    \
    \                                if (x_even && y_even) {\n                   \
    \                                     long x_odd = x % 2 == 1;\n             \
    \                                           long y_odd = y % 2 == 1;\n       \
    \                                                 if (x_odd && y_odd) {\n    \
    \                                                        long x_even = x % 2 ==\
    \ 0;\n                                                            long y_even\
    \ = y % 2 == 0;\n                                                            if\
    \ (x_even && y_even) {\n                                                     \
    \           long x_odd = x % 2 == 1;\n                                       \
    \                         long y_odd = y % 2 == 1;\n                         \
    \                                       if (x_odd && y_odd) {\n              \
    \                                                      long x_even = x % 2 ==\
    \ 0;\n                                                                    long\
    \ y_even = y % 2 == 0;\n                                                     \
    \               if (x_even && y_even) {\n                                    \
    \                                    long x_odd = x % 2 == 1;\n              \
    \                                                          long y_od", "    long\
    \ max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num < min_num)\
    \ {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n   \
    \         max_num = mid;\n        } else {\n            min_num = mid;\n     \
    \   }\n    }\n    return max_num;", "    if (x > y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    long mid = (x + y) / 2;\n    if\
    \ (mid % 2 == 0) {\n        return mid;\n    } else {\n        if (mid < x ||\
    \ mid > y) {\n            return -1;\n        } else {\n            return choose_num(x,\
    \ mid);\n        }\n    }", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n\
    \        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n            ans = mid;\n\
    \            x = mid+1;\n        } else {\n            y = mid;\n        }\n \
    \   }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    if (x < y) {\n  \
    \      long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    while (x != mid && y != mid) {\n   \
    \     if (x % 2 == 0 && y % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        if (x % 2 == 0) {\n            y = mid - 1;\n        } else\
    \ {\n            x = mid + 1;\n        }\n        mid = (x + y) / 2;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid =\
    \ (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x > y) {\n        swap(x,\
    \ y);\n    }\n    while (x != y) {\n        if (x % 2 == 0) {\n            ans\
    \ = x;\n            break;\n        }\n        x /= 2;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + (y-x)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        x = mid;\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    long mid = x + (y - x) / 2;\n    while (x <= y) {\n        if (mid % 2 ==\
    \ 0) {\n            ans = mid;\n            break;\n        }\n        mid++;\n\
    \    }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n\
    \    if (x == y) {\n        ans = x;\n    } else if (x > y) {\n        long mid\
    \ = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n      \
    \  } else {\n            ans = choose_num(mid, y);\n        }\n    } else {\n\
    \        long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans\
    \ = choose_num(x, mid);\n        } else {\n            ans = choose_num(y, mid);\n\
    \        }\n    }\n    return ans;", "    long max_num = x;\n    long min_num\
    \ = y;\n    long mid;\n    while (max_num < min_num) {\n        mid = (max_num\
    \ + min_num) / 2;\n        if (mid % 2 == 0) {\n            max_num = mid;\n \
    \       } else {\n            min_num = mid;\n        }\n    }\n    return max_num;",
  "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x != y) {\n        if (x % 2 == 0) {\n \
    \           ans = x;\n            break;\n        }\n        x /= 2;\n    }\n\
    \    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp =\
    \ x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n      \
    \  long mid = x + (y-x)/2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \            break;\n        }\n        if (mid > y) {\n            y = mid;\n\
    \        } else {\n            x = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long xx = x;\n    long yy = y;\n    long xy = x * y;\n\
    \    long xx = xx * x;\n    long yy = yy * y;\n    long xy = xy * x;\n    long\
    \ xx = xx * y;\n    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx\
    \ * y;\n    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n\
    \    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long\
    \ yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy\
    \ * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n\
    \    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long\
    \ xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long xy = xy\
    \ * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long xy = xy * y;\n\
    \    long xx = xx * y;\n    long yy = yy * y;\n    long xy = xy * y;\n    long\
    \ xx = xx * y;\n    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx\
    \ * y;\n    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n\
    \    long yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long\
    \ yy = yy * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy\
    \ * y;\n    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n\
    \    long xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long\
    \ xy = xy * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long xy = xy\
    \ * y;\n    long xx = xx * y;\n    long yy = yy * y;\n    long xy = xy * y;\n\
    \    long xx = xx * y;", "    long ans = -1;\n    long x_even = x % 2;\n    long\
    \ y_even = y % 2;\n    if (x_even > y_even) {\n        ans = x;\n    } else {\n\
    \        ans = y;\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n    }\
    \ else {\n        if (mid > x) {\n            ans = mid;\n        } else {\n \
    \           ans = x;\n        }\n    }\n    return ans;", "    // Write your code\
    \ here\n    long ans = -1;\n    if (x >= y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n        long mid\
    \ = (x+y)/2;\n        if (mid % 2 == 0) {\n            ans = mid;\n          \
    \  x = mid;\n        } else {\n            y = mid;\n        }\n    }\n    return\
    \ ans;", "    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long ans = -1;\n    while (x % 2 == 0 && y % 2 == 0) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    if (x ==\
    \ y) {\n        ans = x;\n    }\n    return ans;", "    long ans = -1;\n    long\
    \ x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n    if (x_even && y_even)\
    \ {\n        long x_odd = x % 2 == 1;\n        long y_odd = y % 2 == 1;\n    \
    \    if (x_odd && y_odd) {\n            long x_even = x % 2 == 0;\n          \
    \  long y_even = y % 2 == 0;\n            if (x_even && y_even) {\n          \
    \      long x_odd = x % 2 == 1;\n                long y_odd = y % 2 == 1;\n  \
    \              if (x_odd && y_odd) {\n                    long x_even = x % 2\
    \ == 0;\n                    long y_even = y % 2 == 0;\n                    if\
    \ (x_even && y_even) {\n                        long x_odd = x % 2 == 1;\n   \
    \                     long y_odd = y % 2 == 1;\n                        if (x_odd\
    \ && y_odd) {\n                            long x_even = x % 2 == 0;\n       \
    \                     long y_even = y % 2 == 0;\n                            if\
    \ (x_even && y_even) {\n                                long x_odd = x % 2 ==\
    \ 1;\n                                long y_odd = y % 2 == 1;\n             \
    \                   if (x_odd && y_odd) {\n                                  \
    \  long x_even = x % 2 == 0;\n                                    long y_even\
    \ = y % 2 == 0;\n                                    if (x_even && y_even) {\n\
    \                                        long x_odd = x % 2 == 1;\n          \
    \                              long y_odd = y % 2 == 1;\n                    \
    \                    if (x_odd && y_odd) {\n                                 \
    \           long x_even = x % 2 == 0;\n                                      \
    \      long y_even = y % 2 == 0;\n                                           \
    \ if (x_even && y_even) {\n                                                long\
    \ x_odd = x % 2 == 1;\n                                                long y_odd\
    \ = y % 2 == 1;\n                                                if (x_odd &&\
    \ y_odd) {\n                                                    long x_even =\
    \ x % 2 == 0;\n                                                    long y_even\
    \ = y % 2 == 0;\n                                                    if (x_even\
    \ && y_even) {\n                                                        long x_odd\
    \ = x % 2 == 1;\n                                                        long\
    \ y_odd = y % 2 == 1;\n                                                      \
    \  if (x_odd && y_odd) {\n                                                   \
    \         long x_even = x % 2 == 0;\n                                        \
    \                    long y_even = y % 2 == 0;\n                             \
    \                               if (x_even && y_even) {\n                    \
    \                                            long x_odd = x % 2 == 1;\n      \
    \                                                          long y_odd = y % 2\
    \ == 1;\n                                                                if (x_odd\
    \ && y_odd) {\n                                                              \
    \      long x_even = x % 2 == 0;\n                                           \
    \                         long y_even = y % 2 == 0;\n                        \
    \                                            if (x_even && y_even) {\n       \
    \                                                                 long x_odd =\
    \ x % 2 == 1;\n                                                              \
    \          long y_od", "    long ans = -1;\n    long mid = (x + y) / 2;\n    if\
    \ (x <= mid) {\n        ans = x;\n    } else if (y <= mid) {\n        ans = y;\n\
    \    } else {\n        ans = mid;\n    }\n    return ans;", "    assert(x >= 0\
    \ && x <= y);\n    long ans = -1;\n    long mid = (x + y) / 2;\n    if (mid %\
    \ 2 == 0) {\n        ans = mid;\n    }\n    else {\n        if (mid > y) {\n \
    \           ans = mid;\n        }\n        else {\n            ans = y;\n    \
    \    }\n    }\n    return ans;", "    long ans = -1;\n    long mid = (x + y) /\
    \ 2;\n    if (x <= mid) {\n        ans = x;\n    } else if (mid <= y) {\n    \
    \    ans = mid;\n    } else {\n        ans = y;\n    }\n    return ans;", "  \
    \  long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(mid, y);\n        if (ans == -1) {\n            ans =\
    \ mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n       \
    \ ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid\
    \ = x + (y - x) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n    \
    \        ans = mid;\n            break;\n        }\n        mid++;\n    }\n  \
    \  return ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <=\
    \ mid) {\n        ans = x;\n    } else if (y <= mid) {\n        ans = y;\n   \
    \ } else {\n        ans = mid;\n    }\n    return ans;", "    if (x > y) {\n \
    \       long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans\
    \ = -1;\n    while (x % 2 == 0) {\n        x /= 2;\n        ans++;\n    }\n  \
    \  while (y % 2 == 0) {\n        y /= 2;\n        ans--;\n    }\n    if (ans ==\
    \ -1) {\n        return -1;\n    }\n    return ans;", "    long ans = -1;\n  \
    \  if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n \
    \   }\n    while (x <= y) {\n        if (x % 2 == 0) {\n            ans = x;\n\
    \            break;\n        }\n        x++;\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        if (mid > y) {\n            y = mid;\n        } else {\n    \
    \        x = mid;\n        }\n    }\n    return ans;", "    long max_num = x;\n\
    \    long min_num = y;\n    long mid;\n    while (max_num - min_num > 1) {\n \
    \       mid = (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n        \
    \    max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;", "    long ans = -1;\n    if (x >= y) {\n       \
    \ long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid = (x\
    \ + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n            ans\
    \ = mid;\n            break;\n        }\n        mid = (mid + y) / 2;\n    }\n\
    \    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long\
    \ m = 1;\n    long n = 1;\n    while (m <= y) {\n        ans = m;\n        m +=\
    \ n;\n        n += 2;\n    }\n    return ans;", "    long max_num = x;\n    long\
    \ min_num = y;\n    long mid = (max_num + min_num) / 2;\n    while (max_num !=\
    \ mid) {\n        if (max_num % 2 == 0) {\n            max_num = max_num / 2;\n\
    \        } else {\n            max_num = max_num / 2;\n        }\n    }\n    while\
    \ (min_num != mid) {\n        if (min_num % 2 == 0) {\n            min_num = min_num\
    \ / 2;\n        } else {\n            min_num = min_num / 2;\n        }\n    }\n\
    \    return max_num;", "    // Write your code here\n    long ans = -1;\n    long\
    \ mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n    } else if (mid\
    \ <= y) {\n        ans = mid;\n    } else {\n        ans = y;\n    }\n    return\
    \ ans;", "    if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y)\
    \ / 2;\n    if (mid % 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid,\
    \ y);", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    if (x <= y) {\n\
    \        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n          \
    \  ans = mid;\n        }\n    }\n    return ans;", "    if (x >= y) {\n      \
    \  return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n \
    \       return mid;\n    }\n    return choose_num(mid, y);", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long mid = (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2)\
    \ == 0) {\n            ans = mid;\n            break;\n        }\n        mid\
    \ = (mid + x) / 2;\n        x++;\n    }\n    return ans;", "    long ans = -1;\n\
    \    long m = 1;\n    long n = y;\n    long k;\n    long t = x;\n    long u;\n\
    \    long v;\n    long w;\n    long x;\n    long y;\n    long z;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n    long w;\n\
    \    long w;\n    ", "    long ans = -1;\n    if (x >= y) {\n        long temp\
    \ = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n    \
    \    if (x%2 == 0) {\n            x = x + 1;\n        } else {\n            y\
    \ = y - 1;\n        }\n    }\n    if (x == y) {\n        ans = x;\n    }\n   \
    \ return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n        if (x+2\
    \ == y) {\n            ans = x;\n            break;\n        }\n        ans =\
    \ x+1;\n        x++;\n    }\n    return ans;", "    long max_num = x;\n    long\
    \ min_num = y;\n    long mid;\n    while (max_num < min_num) {\n        mid =\
    \ (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n            max_num =\
    \ mid;\n        } else {\n            min_num = mid;\n        }\n    }\n    return\
    \ max_num;", "    long ans = -1;\n    long x_even = x % 2;\n    long y_even =\
    \ y % 2;\n    if (x_even > y_even) {\n        ans = x;\n    } else {\n       \
    \ ans = y;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n\
    \        long mid = x + (y - x) / 2;\n        ans = choose_num(mid, y);\n    \
    \    if (ans == -1) {\n            ans = mid;\n        }\n    } else {\n     \
    \   long mid = y + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if\
    \ (ans == -1) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    long xx = x;\n    long yy = y;\n    long xy = x * y;\n\
    \    long xx = xx * xx;\n    long yy = yy * yy;\n    long xy = xy * xy;\n    long\
    \ xx = xx * xy;\n    long yy = yy * xy;\n    long xx = xx * yy;\n    long yy =\
    \ yy * xx;\n    long xy = xy * xx;\n    long xx = xx * yy;\n    long yy = yy *\
    \ xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n\
    \    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long\
    \ xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy =\
    \ yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx *\
    \ yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n\
    \    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long\
    \ yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx =\
    \ xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy *\
    \ xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n\
    \    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long\
    \ xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy =\
    \ yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx *\
    \ yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n\
    \    long xx = xx * yy;\n    long yy = yy * xx;\n    ", "    long ans = -1;\n\
    \    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y) {\n    \
    \    if (mid % 2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        mid++;\n    }\n    return ans;", "    if (x >= y) {\n        return\
    \ -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    }\n    return choose_num(mid, y);", "    long ans = -1;\n    if (x\
    \ > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n \
    \   long mid = (x + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n            break;\n        }\n        mid = (mid + y)\
    \ / 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n    \
    \    long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x<y)\
    \ {\n        long mid = x + (y-x)/2;\n        if (mid % 2 == 0) {\n          \
    \  ans = mid;\n            break;\n        }\n        x = mid;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n\
    \        ans = x;\n    } else if (y <= mid) {\n        ans = y;\n    } else {\n\
    \        long a = choose_num(x, mid);\n        long b = choose_num(mid + 1, y);\n\
    \        if (a > b) {\n            ans = a;\n        } else {\n            ans\
    \ = b;\n        }\n    }\n    return ans;", "    long ans = -1;\n    long x_even\
    \ = x % 2;\n    long y_even = y % 2;\n    if (x_even > y_even) {\n        ans\
    \ = x;\n    } else {\n        ans = y;\n    }\n    while (ans > 0 && ans < y)\
    \ {\n        ans += 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x\
    \ >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n\
    \    while (x < y) {\n        if (x % 2 == 0) {\n            ans = x;\n      \
    \      break;\n        }\n        x ++;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x<y) {\n        long mid = (x + y) / 2;\n       \
    \ if (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n\
    \        if (mid > y) {\n            y = mid;\n        } else {\n            x\
    \ = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if (x >=\
    \ y) {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n   \
    \ long mid = (x + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n            break;\n        }\n        mid = (mid + y)\
    \ / 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n    \
    \    long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans\
    \ = mid;\n        }\n    }\n    return ans;", "    if (x >= y) {\n        return\
    \ -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    }\n    return choose_num(mid, y);", "    if (x >= y) {\n        return\
    \ -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    } else {\n        return choose_num(mid, y);\n    }", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x <= y) {\n        long mid = (x + y) / 2;\n    \
    \    if (mid % 2 == 0) {\n            ans = mid;\n            break;\n       \
    \ }\n        if (mid > y) {\n            y = mid;\n        } else {\n        \
    \    x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long mid = x + (y - x) / 2;\n    while (x <= y) {\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n            break;\n        }\n       \
    \ mid++;\n    }\n    return ans;", "    if (x > y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    long ans = -1;\n    long mid =\
    \ (x + y) / 2;\n    while (x != mid && y != mid) {\n        if (x % 2 == 0 &&\
    \ y % 2 == 0) {\n            ans = mid;\n            break;\n        } else if\
    \ (x % 2 == 0) {\n            y = mid;\n        } else {\n            x = mid;\n\
    \        }\n        mid = (x + y) / 2;\n    }\n    return ans;", "    if (x >=\
    \ y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid %\
    \ 2 == 0) {\n        return mid;\n    } else {\n        return choose_num(mid,\
    \ y);\n    }", "    long ans = -1;\n    long mid = (x + y) / 2;\n    long left_x\
    \ = x - mid;\n    long left_y = y - mid;\n    long right_x = x + mid;\n    long\
    \ right_y = y + mid;\n    long left_even = choose_num(left_x, left_y);\n    long\
    \ right_even = choose_num(right_x, right_y);\n    if (left_even != -1 && right_even\
    \ != -1) {\n        if (left_even > right_even) {\n            ans = left_even;\n\
    \        } else {\n            ans = right_even;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n        \
    \    ans = mid;\n        }\n    } else {\n        long mid = y + (x - y) / 2;\n\
    \        ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans\
    \ = mid;\n        }\n    }\n    return ans;", "    // Write your code here\n \
    \   long ans = -1;\n    long mid = (x + y) / 2;\n    long left = (x > y) ? x :\
    \ y;\n    long right = (x > y) ? y : x;\n    if (left % 2 == 0) {\n        ans\
    \ = mid;\n    }\n    else if (right % 2 == 0) {\n        ans = mid;\n    }\n \
    \   else {\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n \
    \       else {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long mid = (x + y) / 2;\n     \
    \   if (mid % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x)\
    \ / 2;\n        ans = choose_num(mid, y);\n        if (ans == -1) {\n        \
    \    ans = choose_num(x, mid);\n        }\n    } else {\n        long mid = y\
    \ + (x - y) / 2;\n        ans = choose_num(x, mid);\n        if (ans == -1) {\n\
    \            ans = choose_num(y, mid);\n        }\n    }\n    return ans;", " \
    \   // Write your code here\n    long ans = -1;\n    long mid = (x + y) / 2;\n\
    \    if (x <= mid) {\n        ans = x;\n    } else if (mid <= y) {\n        ans\
    \ = mid;\n    } else {\n        ans = y;\n    }\n    return ans;", "    if (x\
    \ >= y) {\n        return -1;\n    }\n    long mid = x + (y - x) / 2;\n    if\
    \ (mid % 2 == 0) {\n        return mid;\n    } else {\n        return choose_num(mid,\
    \ y);\n    }", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    while (x<y) {\n        long mid\
    \ = (x + y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n      \
    \      break;\n        }\n        if (mid > y) {\n            y = mid;\n     \
    \   } else {\n            x = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x+1 < y) {\n        long mid = x + (y - x) /\
    \ 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n\
    \        }\n        if (mid > y) {\n            y = mid;\n        } else {\n \
    \           x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n        if (mid %\
    \ 2 == 0) {\n            ans = mid;\n            x = mid;\n        } else {\n\
    \            y = mid;\n        }\n    }\n    return ans;", "    long max_num =\
    \ x;\n    long min_num = y;\n    long mid;\n    while (max_num < min_num) {\n\
    \        mid = (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n       \
    \     max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;", "    long ans = -1;\n    long mid = (x + y) / 2;\n\
    \    if (x <= mid) {\n        ans = x;\n    } else if (mid <= y) {\n        ans\
    \ = mid;\n    } else {\n        ans = y;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        ans = mid;\n\
    \    } else {\n        if (x <= mid) {\n            ans = mid;\n        } else\
    \ if (y <= mid) {\n            ans = mid;\n        } else {\n            ans =\
    \ mid;\n        }\n    }\n    return ans;", "    assert(x >= 0 && y >= 0);\n \
    \   if (x > y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    long ans = -1;\n    long mid = (x + y) / 2;\n    long left = (x <=\
    \ mid) ? x : mid;\n    long right = (y <= mid) ? y : mid;\n    while (left <=\
    \ right) {\n        long mid = (left + right) / 2;\n        if (mid * mid <= x\
    \ * x) {\n            ans = mid;\n            left = mid + 1;\n        } else\
    \ {\n            right = mid - 1;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    long mid = x + (y - x) / 2;\n    while (x <= y) {\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        mid++;\n    }\n    return ans;", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n \
    \           ans = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long temp = x;\n        x = y;\n        y = temp;\n\
    \    }\n    while (x <= y) {\n        if ((x % 2) == 0) {\n            ans = x;\n\
    \            break;\n        }\n        ans = x + 1;\n        x++;\n    }\n  \
    \  return ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n\
    \        x = y;\n        y = temp;\n    }\n    while (y) {\n        long mid =\
    \ (x + y) / 2;\n        if (mid * mid > ans) {\n            ans = mid;\n     \
    \   }\n        if (mid * mid > y) {\n            y = mid - 1;\n        } else\
    \ {\n            x = mid + 1;\n        }\n    }\n    return ans;", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x < y) {\n        long mid = (x + y) / 2;\n     \
    \   if (mid % 2 == 0) {\n            ans = mid;\n            break;\n        }\n\
    \        if (mid < y) {\n            y = mid;\n        } else {\n            x\
    \ = mid;\n        }\n    }\n    return ans;", "    if (x >= y) {\n        return\
    \ -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0) {\n        return\
    \ mid;\n    } else {\n        return choose_num(mid, y);\n    }", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n        if (mid\
    \ % 2 == 0) {\n            ans = mid;\n        }\n    }\n    return ans;", " \
    \   if (x >= y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n  \
    \  if (mid % 2 == 0) {\n        return mid;\n    } else {\n        return choose_num(mid,\
    \ y);\n    }", "    long ans = -1;\n    if (x >= y) {\n        long mid = (x +\
    \ y) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        }\n  \
    \  }\n    return ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n \
    \   if (x <= y) {\n        while (x <= y) {\n            ans = x;\n          \
    \  x += (x & 1);\n        }\n    } else {\n        while (y <= x) {\n        \
    \    ans = y;\n            y += (y & 1);\n        }\n    }\n    return ans;",
  "    long ans = -1;\n    if (x >= y) {\n        long mid = x + (y - x) / 2;\n  \
    \      ans = choose_num(x, mid);\n        if (ans == -1) {\n            ans =\
    \ choose_num(mid + 1, y);\n        }\n    } else {\n        long mid = y + (x\
    \ - y) / 2;\n        ans = choose_num(y, mid);\n        if (ans == -1) {\n   \
    \         ans = choose_num(x, mid + 1);\n        }\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x + y) / 2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            break;\n   \
    \     }\n        if (mid > y) {\n            y = mid;\n        } else {\n    \
    \        x = mid;\n        }\n    }\n    return ans;", "    long ans = -1;\n \
    \   long xx = x;\n    long yy = y;\n    long xy = x * y;\n    long xx = x * x;\n\
    \    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy\
    \ = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n\
    \    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy\
    \ = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n\
    \    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx\
    \ = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n\
    \    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy\
    \ = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n\
    \    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy\
    \ = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n\
    \    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx\
    \ = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n\
    \    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy\
    \ = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n\
    \    long xy = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy\
    \ = x * y;\n    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n\
    \    long xx = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx\
    \ = x * x;\n    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n\
    \    long yy = y * y;\n    long xy = x * y;\n    long xx = x * x;\n    long yy\
    \ = y * y;\n    long xy = x * y;\n    long xx = ", "    long ans = -1;\n    if\
    \ (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0) {\n \
    \           ans = mid;\n        }\n    }\n    return ans;", "    long max_num\
    \ = x;\n    long min_num = y;\n    long mid;\n    while (max_num < min_num) {\n\
    \        mid = (max_num + min_num) / 2;\n        if (mid % 2 == 0) {\n       \
    \     max_num = mid;\n        } else {\n            min_num = mid;\n        }\n\
    \    }\n    return max_num;", "    long ans = -1;\n    long mid = (x + y) / 2;\n\
    \    if (mid % 2 == 0) {\n        ans = mid;\n    } else {\n        if (x > y)\
    \ {\n            ans = choose_num(x, mid);\n        } else {\n            ans\
    \ = choose_num(mid, y);\n        }\n    }\n    return ans;", "    long ans = -1;\n\
    \    if (x >= y) {\n        long mid = (x + y) / 2;\n        if (mid % 2 == 0)\
    \ {\n            ans = mid;\n        }\n    }\n    return ans;", "    if (x >=\
    \ y) {\n        return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid %\
    \ 2 == 0) {\n        return mid;\n    }\n    return choose_num(mid, y);", "  \
    \  long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x<y) {\n        long mid = (x + y)/2;\n\
    \        if (mid % 2 == 0) {\n            ans = mid;\n            x = mid + 1;\n\
    \        }\n        else {\n            y = mid;\n        }\n    }\n    return\
    \ ans;", "    assert(x >= 0 && y >= 0);\n    long ans = -1;\n    long xx = x;\n\
    \    long yy = y;\n    long xy = x * y;\n    long xx = xx * xx;\n    long yy =\
    \ yy * yy;\n    long xy = xy * xy;\n    long xx = xx * xy;\n    long yy = yy *\
    \ xy;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xy = xy * xx;\n\
    \    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long\
    \ yy = yy * xx;\n    long xy = xy * xx;\n    long xx = xx * yy;\n    long yy =\
    \ yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xy = xy *\
    \ xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n\
    \    long yy = yy * xx;\n    long xy = xy * xx;\n    long xx = xx * yy;\n    long\
    \ yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xy =\
    \ xy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx = xx *\
    \ yy;\n    long yy = yy * xx;\n    long xy = xy * xx;\n    long xx = xx * yy;\n\
    \    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long\
    \ xy = xy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long xx =\
    \ xx * yy;\n    long yy = yy * xx;\n    long xy = xy * xx;\n    long xx = xx *\
    \ yy;\n    long yy = yy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n\
    \    long xy = xy * xx;\n    long xx = xx * yy;\n    long yy = yy * xx;\n    long\
    \ xx = xx * yy;\n    long yy = yy * xx;\n    long xy = xy * xx;\n    long x",
  "    long ans = -1;\n    long mid = (x + y) / 2;\n    long left_x = x - mid;\n \
    \   long left_y = y - mid;\n    if (left_x < left_y) {\n        ans = mid;\n \
    \   } else {\n        ans = mid;\n    }\n    return ans;", "    if (x >= y) {\n\
    \        return -1;\n    }\n    long mid = (x + y) / 2;\n    if (mid % 2 == 0)\
    \ {\n        return mid;\n    }\n    return choose_num(mid, y);", "    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    if (x == 0 || y == 0) {\n        return -1;\n    }\n   \
    \ long mid = (x + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n\
    \            ans = mid;\n            break;\n        }\n        mid = (mid + y)\
    \ / 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n    \
    \    long temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid =\
    \ (x + y) / 2;\n    while (x <= y) {\n        if ((x % 2) == 0) {\n          \
    \  ans = mid;\n            break;\n        }\n        mid = (mid + y) / 2;\n \
    \       x++;\n    }\n    return ans;", "    long ans = -1;\n    long x_even =\
    \ x % 2 == 0;\n    long y_even = y % 2 == 0;\n    if (x_even && y_even) {\n  \
    \      long x_odd = x % 2 == 1;\n        long y_odd = y % 2 == 1;\n        if\
    \ (x_odd && y_odd) {\n            long x_even = x % 2 == 0;\n            long\
    \ y_even = y % 2 == 0;\n            if (x_even && y_even) {\n                long\
    \ x_odd = x % 2 == 1;\n                long y_odd = y % 2 == 1;\n            \
    \    if (x_odd && y_odd) {\n                    long x_even = x % 2 == 0;\n  \
    \                  long y_even = y % 2 == 0;\n                    if (x_even &&\
    \ y_even) {\n                        long x_odd = x % 2 == 1;\n              \
    \          long y_odd = y % 2 == 1;\n                        if (x_odd && y_odd)\
    \ {\n                            long x_even = x % 2 == 0;\n                 \
    \           long y_even = y % 2 == 0;\n                            if (x_even\
    \ && y_even) {\n                                long x_odd = x % 2 == 1;\n   \
    \                             long y_odd = y % 2 == 1;\n                     \
    \           if (x_odd && y_odd) {\n                                    long x_even\
    \ = x % 2 == 0;\n                                    long y_even = y % 2 == 0;\n\
    \                                    if (x_even && y_even) {\n               \
    \                         long x_odd = x % 2 == 1;\n                         \
    \               long y_odd = y % 2 == 1;\n                                   \
    \     if (x_odd && y_odd) {\n                                            long\
    \ x_even = x % 2 == 0;\n                                            long y_even\
    \ = y % 2 == 0;\n                                            if (x_even && y_even)\
    \ {\n                                                long x_odd = x % 2 == 1;\n\
    \                                                long y_odd = y % 2 == 1;\n  \
    \                                              if (x_odd && y_odd) {\n       \
    \                                             long x_even = x % 2 == 0;\n    \
    \                                                long y_even = y % 2 == 0;\n \
    \                                                   if (x_even && y_even) {\n\
    \                                                        long x_odd = x % 2 ==\
    \ 1;\n                                                        long y_odd = y %\
    \ 2 == 1;\n                                                        if (x_odd &&\
    \ y_odd) {\n                                                            long x_even\
    \ = x % 2 == 0;\n                                                            long\
    \ y_even = y % 2 == 0;\n                                                     \
    \       if (x_even && y_even) {\n                                            \
    \                    long x_odd = x % 2 == 1;\n                              \
    \                                  long y_odd = y % 2 == 1;\n                \
    \                                                if (x_odd && y_odd) {\n     \
    \                                                               long x_even =\
    \ x % 2 == 0;\n                                                              \
    \      long y_even = y % 2 == 0;\n                                           \
    \                         if (x_even && y_even) {\n                          \
    \                                              long x_odd = x % 2 == 1;\n    \
    \                                                                    long y_od",
  "    long max_num = x;\n    long min_num = y;\n    long mid;\n    while (max_num\
    \ < min_num) {\n        mid = (max_num + min_num) / 2;\n        if (mid % 2 ==\
    \ 0) {\n            max_num = mid;\n        } else {\n            min_num = mid;\n\
    \        }\n    }\n    return max_num;", "    long ans = -1;\n    if (x >= y)\
    \ {\n        long temp = x;\n        x = y;\n        y = temp;\n    }\n    long\
    \ mid = (x + y) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n    \
    \        ans = mid;\n            break;\n        }\n        mid = (mid + y) /\
    \ 2;\n    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n      \
    \  long temp = x;\n        x = y;\n        y = temp;\n    }\n    while (x+1 <\
    \ y) {\n        long mid = (x+y)/2;\n        if (mid%2 == 0) {\n            ans\
    \ = mid;\n            x = mid+1;\n        } else {\n            y = mid;\n   \
    \     }\n    }\n    return ans;", "    long ans = -1;\n    long x_even = x % 2\
    \ == 0;\n    long y_even = y % 2 == 0;\n    if (x_even && y_even) {\n        long\
    \ x_odd = x % 2 == 1;\n        long y_odd = y % 2 == 1;\n        if (x_odd &&\
    \ y_odd) {\n            long x_even = x % 2 == 0;\n            long y_even = y\
    \ % 2 == 0;\n            if (x_even && y_even) {\n                long x_odd =\
    \ x % 2 == 1;\n                long y_odd = y % 2 == 1;\n                if (x_odd\
    \ && y_odd) {\n                    long x_even = x % 2 == 0;\n               \
    \     long y_even = y % 2 == 0;\n                    if (x_even && y_even) {\n\
    \                        long x_odd = x % 2 == 1;\n                        long\
    \ y_odd = y % 2 == 1;\n                        if (x_odd && y_odd) {\n       \
    \                     long x_even = x % 2 == 0;\n                            long\
    \ y_even = y % 2 == 0;\n                            if (x_even && y_even) {\n\
    \                                long x_odd = x % 2 == 1;\n                  \
    \              long y_odd = y % 2 == 1;\n                                if (x_odd\
    \ && y_odd) {\n                                    long x_even = x % 2 == 0;\n\
    \                                    long y_even = y % 2 == 0;\n             \
    \                       if (x_even && y_even) {\n                            \
    \            long x_odd = x % 2 == 1;\n                                      \
    \  long y_odd = y % 2 == 1;\n                                        if (x_odd\
    \ && y_odd) {\n                                            long x_even = x % 2\
    \ == 0;\n                                            long y_even = y % 2 == 0;\n\
    \                                            if (x_even && y_even) {\n       \
    \                                         long x_odd = x % 2 == 1;\n         \
    \                                       long y_odd = y % 2 == 1;\n           \
    \                                     if (x_odd && y_odd) {\n                \
    \                                    long x_even = x % 2 == 0;\n             \
    \                                       long y_even = y % 2 == 0;\n          \
    \                                          if (x_even && y_even) {\n         \
    \                                               long x_odd = x % 2 == 1;\n   \
    \                                                     long y_odd = y % 2 == 1;\n\
    \                                                        if (x_odd && y_odd) {\n\
    \                                                            long x_even = x %\
    \ 2 == 0;\n                                                            long y_even\
    \ = y % 2 == 0;\n                                                            if\
    \ (x_even && y_even) {\n                                                     \
    \           long x_odd = x % 2 == 1;\n                                       \
    \                         long y_odd = y % 2 == 1;\n                         \
    \                                       if (x_odd && y_odd) {\n              \
    \                                                      long x_even = x % 2 ==\
    \ 0;\n                                                                    long\
    \ y_even = y % 2 == 0;\n                                                     \
    \               if (x_even && y_even) {\n                                    \
    \                                    long x_odd = x % 2 == 1;\n              \
    \                                                          long y_od", "    long\
    \ ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans = x;\n\
    \    } else if (mid <= y) {\n        ans = mid;\n    } else {\n        ans = y;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ temp = x;\n        x = y;\n        y = temp;\n    }\n    long mid = x + (y -\
    \ x) / 2;\n    while (x <= y) {\n        if (mid % 2 == 0) {\n            ans\
    \ = mid;\n            break;\n        }\n        mid++;\n    }\n    return ans;",
  "    long ans = -1;\n    long mid = (x + y) / 2;\n    if (x <= mid) {\n        ans\
    \ = x;\n    } else {\n        ans = y;\n    }\n    return ans;", "    long ans\
    \ = -1;\n    long x_even = x % 2 == 0;\n    long y_even = y % 2 == 0;\n    if\
    \ (x_even && y_even) {\n        long x_odd = x % 2 == 1;\n        long y_odd =\
    \ y % 2 == 1;\n        if (x_odd && y_odd) {\n            long x_even = x % 2\
    \ == 0;\n            long y_even = y % 2 == 0;\n            if (x_even && y_even)\
    \ {\n                long x_odd = x % 2 == 1;\n                long y_odd = y\
    \ % 2 == 1;\n                if (x_odd && y_odd) {\n                    long x_even\
    \ = x % 2 == 0;\n                    long y_even = y % 2 == 0;\n             \
    \       if (x_even && y_even) {\n                        long x_odd = x % 2 ==\
    \ 1;\n                        long y_odd = y % 2 == 1;\n                     \
    \   if (x_odd && y_odd) {\n                            long x_even = x % 2 ==\
    \ 0;\n                            long y_even = y % 2 == 0;\n                \
    \            if (x_even && y_even) {\n                                long x_odd\
    \ = x % 2 == 1;\n                                long y_odd = y % 2 == 1;\n  \
    \                              if (x_odd && y_odd) {\n                       \
    \             long x_even = x % 2 == 0;\n                                    long\
    \ y_even = y % 2 == 0;\n                                    if (x_even && y_even)\
    \ {\n                                        long x_odd = x % 2 == 1;\n      \
    \                                  long y_odd = y % 2 == 1;\n                \
    \                        if (x_odd && y_odd) {\n                             \
    \               long x_even = x % 2 == 0;\n                                  \
    \          long y_even = y % 2 == 0;\n                                       \
    \     if (x_even && y_even) {\n                                              \
    \  long x_odd = x % 2 == 1;\n                                                long\
    \ y_odd = y % 2 == 1;\n                                                if (x_odd\
    \ && y_odd) {\n                                                    long x_even\
    \ = x % 2 == 0;\n                                                    long y_even\
    \ = y % 2 == 0;\n                                                    if (x_even\
    \ && y_even) {\n                                                        long x_odd\
    \ = x % 2 == 1;\n                                                        long\
    \ y_odd = y % 2 == 1;\n                                                      \
    \  if (x_odd && y_odd) {\n                                                   \
    \         long x_even = x % 2 == 0;\n                                        \
    \                    long y_even = y % 2 == 0;\n                             \
    \                               if (x_even && y_even) {\n                    \
    \                                            long x_odd = x % 2 == 1;\n      \
    \                                                          long y_odd = y % 2\
    \ == 1;\n                                                                if (x_odd\
    \ && y_odd) {\n                                                              \
    \      long x_even = x % 2 == 0;\n                                           \
    \                         long y_even = y % 2 == 0;\n                        \
    \                                            if (x_even && y_even) {\n       \
    \                                                                 long x_odd =\
    \ x % 2 == 1;\n                                                              \
    \          long y_od", "    assert(x >= 0 && y >= 0);\n    if (x < y) {\n    \
    \    long temp = x;\n        x = y;\n        y = temp;\n    }\n    long ans =\
    \ -1;\n    long x_div = x / 2;\n    long y_div = y / 2;\n    while (x_div * x_div\
    \ + y_div * y_div <= x * y) {\n        if (x_div * x_div + y_div * y_div == x\
    \ * y) {\n            ans = x_div * x_div + y_div * y_div;\n            break;\n\
    \        }\n        long temp = x_div;\n        x_div = y_div;\n        y_div\
    \ = temp;\n    }\n    return ans;", "    // Write your code here\n    long ans\
    \ = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    while (x <= y) {\n        if (x % 2 == 0) {\n          \
    \  ans = x;\n            break;\n        }\n        x++;\n    }\n    return ans;",
  "    long ans = -1;\n    if (x > y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x+1 < y) {\n        long mid = (x+y)/2;\n\
    \        if (mid%2 == 0) {\n            ans = mid;\n            x = mid+1;\n \
    \       }\n        else {\n            y = mid;\n        }\n    }\n    return\
    \ ans;", "    if (x > y) {\n        long temp = x;\n        x = y;\n        y\
    \ = temp;\n    }\n    long ans = -1;\n    while (x % 2 == 0) {\n        x /= 2;\n\
    \        ans++;\n    }\n    while (y % 2 == 0) {\n        y /= 2;\n        ans--;\n\
    \    }\n    if (ans == -1) {\n        return -1;\n    }\n    return ans;", " \
    \   long ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n\
    \        y = temp;\n    }\n    while (x <= y) {\n        if (x%2 == 0) {\n   \
    \         ans = x;\n            break;\n        }\n        x++;\n    }\n    return\
    \ ans;", "    long ans = -1;\n    if (x >= y) {\n        long temp = x;\n    \
    \    x = y;\n        y = temp;\n    }\n    while (x+1 < y) {\n        long mid\
    \ = x + y / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n        \
    \    break;\n        }\n        if (mid > y) {\n            y = mid;\n       \
    \ } else {\n            x = mid;\n        }\n    }\n    return ans;", "    long\
    \ ans = -1;\n    if (x >= y) {\n        long temp = x;\n        x = y;\n     \
    \   y = temp;\n    }\n    while (x+1 < y) {\n        if (x+2 > y) {\n        \
    \    ans = x;\n            break;\n        }\n        ans = x+1;\n        x++;\n\
    \    }\n    return ans;", "    long ans = -1;\n    if (x >= y) {\n        long\
    \ mid = x + (y - x) / 2;\n        if (mid % 2 == 0) {\n            ans = mid;\n\
    \        }\n    }\n    return ans;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_59_largest_prime_factor
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d < n) {\n        while\
    \ (n % d == 0) {\n            ans = d;\n            n /= d;\n        }\n     \
    \   d++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpj1n7csey: /tmp/tmpj1n7csey.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0_u4vef4: /tmp/tmp0_u4vef4.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i, p, max_factor = 1;\n    for (i = 2; i <= n / 2; ++i) {\n \
    \       p = i * i;\n        if (p < n) {\n            if (n % p == 0) {\n    \
    \            max_factor = p;\n            }\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpkyf34vhs: /tmp/tmpkyf34vhs.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxFactor = n;\n    long maxFactorFound = n;\n    long i = 2;\n\
    \    while (i <= maxFactor) {\n        if (n % i == 0) {\n            maxFactorFound\
    \ = i;\n        }\n        i += 2;\n    }\n    return maxFactorFound;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp7vpqzs8x: /tmp/tmp7vpqzs8x.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (ans % i == 0) {\n    \
    \            ans /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpqgcm5lfm: /tmp/tmpqgcm5lfm.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsl0d4hiu.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpsl0d4hiu.cpp:33:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   33 |     long n = 1;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:35:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   35 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:9:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    9 |     long p = 2;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:36:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   36 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:10:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   10 |     long q = n;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:37:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   37 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:11:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   11 |     long r = n;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:38:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   38 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:12:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   12 |     long s = 2;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:39:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   39 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:13:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   13 |     long t = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:40:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   40 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:14:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   14 |     long u = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:41:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   41 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:15:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   15 |     long v = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:42:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   42 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:16:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   16 |     long w = 3;\n      |  "
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            max_factor = i;\n\
    \            max_factor_index = i;\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp7dy5k9ky: /tmp/tmp7dy5k9ky.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long long ans = 1;\n    long long i = 2;\n    long long j = 2;\n \
    \   long long k = 1;\n    while (i * j <= n) {\n        if (n % i == 0) {\n  \
    \          ans = i;\n            while (n % i == 0) {\n                n /= i;\n\
    \                ++k;\n            }\n        }\n        ++i;\n        ++j;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpnfilob1l: /tmp/tmpnfilob1l.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d <= n / 2) {\n       \
    \ while (n % d == 0) {\n            ans = d;\n            n /= d;\n        }\n\
    \        d += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpv87qjmvc: /tmp/tmpv87qjmvc.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp964th23g: /tmp/tmp964th23g.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p * p <= n) {\n       \
    \ if (n % p == 0) {\n            ans = p;\n            break;\n        }\n   \
    \     p += 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpo51v1ycy: /tmp/tmpo51v1ycy.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long max_factor = 1;\n    long max_divisor =\
    \ 1;\n    long divisor = 1;\n    long remainder = 0;\n    while (remainder !=\
    \ 0) {\n        divisor = n;\n        while (divisor <= max_divisor) {\n     \
    \       divisor *= factor;\n        }\n        remainder = n % divisor;\n    \
    \    max_divisor = divisor;\n        max_factor = factor;\n        factor++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpa64xnl61: /tmp/tmpa64xnl61.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n) {\n        if (n % i == 0) {\n            while (n %\
    \ i == 0) {\n                n /= i;\n                max_factor_index = i;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxFactor = 1;\n    long i = 2;\n    while (i <= n / 2) {\n \
    \       if (n % i == 0) {\n            maxFactor = i;\n        }\n        i +=\
    \ 2;\n    }\n    return maxFactor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpnw5ni2rt: /tmp/tmpnw5ni2rt.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = n;\n    long max_div = n;\n    long max_div2 = n;\n   \
    \ long max_div3 = n;\n    long max_div4 = n;\n    long max_div5 = n;\n    long\
    \ max_div6 = n;\n    long max_div7 = n;\n    long max_div8 = n;\n    long max_div9\
    \ = n;\n    long max_div10 = n;\n    long max_div11 = n;\n    long max_div12 =\
    \ n;\n    long max_div13 = n;\n    long max_div14 = n;\n    long max_div15 = n;\n\
    \    long max_div16 = n;\n    long max_div17 = n;\n    long max_div18 = n;\n \
    \   long max_div19 = n;\n    long max_div20 = n;\n    long max_div21 = n;\n  \
    \  long max_div22 = n;\n    long max_div23 = n;\n    long max_div24 = n;\n   \
    \ long max_div25 = n;\n    long max_div26 = n;\n    long max_div27 = n;\n    long\
    \ max_div28 = n;\n    long max_div29 = n;\n    long max_div30 = n;\n    long max_div31\
    \ = n;\n    long max_div32 = n;\n    long max_div33 = n;\n    long max_div34 =\
    \ n;\n    long max_div35 = n;\n    long max_div36 = n;\n    long max_div37 = n;\n\
    \    long max_div38 = n;\n    long max_div39 = n;\n    long max_div40 = n;\n \
    \   long max_div41 = n;\n    long max_div42 = n;\n    long max_div43 = n;\n  \
    \  long max_div44 = n;\n    long max_div45 = n;\n    long max_div46 = n;\n   \
    \ long max_div47 = n;\n    long max_div48 = n;\n    long max_div49 = n;\n    long\
    \ max_div50 = n;\n    long max_div51 = n;\n    long max_div52 = n;\n    long max_div53\
    \ = n;\n    long max_div54 = n;\n    long max_div55 = n;\n    long max_div56 =\
    \ n;\n    long max_div57 = n;\n    long max_div58 = n;\n    long max_div59 = n;\n\
    \    long max_div60 = n;\n    long max_div61 = n;\n    long max_div62 = n;\n \
    \   long max_div63 = n;\n    long max_div64 = n;\n    long max_div65 = n;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpkj22dlcp: /tmp/tmpkj22dlcp.cpp:78: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i += 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp8czr9va6: /tmp/tmp8czr9va6.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    break;\n                }\n\
    \                j++;\n            }\n            if (max_factor < j - i) {\n\
    \                max_factor = j - i;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpaspgthan: /tmp/tmpaspgthan.cpp:32: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i, max_factor = 1;\n    for (i = 2; i <= n / 2; i++) {\n    \
    \    if (n % i == 0) {\n            max_factor = i;\n            break;\n    \
    \    }\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpymfvhlb8: /tmp/tmpymfvhlb8.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpb533g6ao: /tmp/tmpb533g6ao.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp7rxszfbv: /tmp/tmp7rxszfbv.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxPrime = 2;\n    long maxFactor = 1;\n    long currentPrime\
    \ = 2;\n    long currentFactor = 1;\n    long i = 2;\n    while (i <= n) {\n \
    \       if (n % i == 0) {\n            currentPrime = i;\n            currentFactor\
    \ = 1;\n            while (n % i == 0) {\n                currentFactor++;\n \
    \               n /= i;\n            }\n            if (currentFactor > maxFactor)\
    \ {\n                maxFactor = currentFactor;\n                maxPrime = currentPrime;\n\
    \            }\n        }\n        i++;\n    }\n    return maxPrime;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpc336dz6l: /tmp/tmpc336dz6l.cpp:33: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j * i <= n) {\n                if (n % i == 0) {\n       \
    \             max_factor_index = i;\n                    max_factor = j;\n   \
    \                 break;\n                }\n                j++;\n          \
    \  }\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmplhcrxocy: /tmp/tmplhcrxocy.cpp:30: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n            long j\
    \ = i;\n            while (j * j <= n) {\n                if (n % j == 0) {\n\
    \                    max_factor_index = j;\n                    break;\n     \
    \           }\n                j++;\n            }\n            if (max_factor_index\
    \ != 0) {\n                max_factor = i;\n            }\n        }\n       \
    \ i++;\n    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpshubmdsr: /tmp/tmpshubmdsr.cpp:33: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        max_factor_index = i;\n                    max_factor = j;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n   \
    \ auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpywq5ik2u: /tmp/tmpywq5ik2u.cpp:30: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    break;\n                }\n\
    \                j++;\n            }\n            max_factor = i;\n          \
    \  break;\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmponkrahlj: /tmp/tmponkrahlj.cpp:31: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            res = i;\n        }\n        i += 2;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpyq7diopf: /tmp/tmpyq7diopf.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                i = j;\n            }\n        }\n    \
    \    i++;\n    }\n    while (max_factor < i) {\n        max_factor = i;\n    \
    \    max_factor_index = i;\n        i--;\n        while (max_factor % i == 0)\
    \ {\n            i--;\n        }\n    }\n    return max_factor_index;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpdhodtm1d: /tmp/tmpdhodtm1d.cpp:39: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxPrime = 2;\n    long maxFactor = 1;\n    long prime = 2;\n\
    \    long factor = 2;\n    while (n > 1) {\n        if (n % prime == 0) {\n  \
    \          n = n / prime;\n            maxFactor = factor;\n            maxPrime\
    \ = prime;\n        }\n        prime++;\n        factor++;\n    }\n    return\
    \ maxPrime;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n   \
    \ assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63))\
    \ == (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmprdmsu9aa: /tmp/tmprdmsu9aa.cpp:27: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                max_factor = i;\n                max_factor_index\
    \ = j;\n            }\n        }\n        i++;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp1pxt69db: /tmp/tmp1pxt69db.cpp:32: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n                ++i;\n            }\n        }\n   \
    \     ++i;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpqtg2r_bq: /tmp/tmpqtg2r_bq.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxFactor = n;\n    long maxFactorFound = n;\n    long i = 2;\n\
    \    while (i <= maxFactor) {\n        if (n % i == 0) {\n            maxFactorFound\
    \ = i;\n        }\n        ++i;\n    }\n    return maxFactorFound;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpwmt40sm_: /tmp/tmpwmt40sm_.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long p = 2;\n    while (p * p <= n) {\n       \
    \ if (n % p == 0) {\n            n /= p;\n            res = p;\n        }\n  \
    \      p++;\n    }\n    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmplq_u6njc: /tmp/tmplq_u6njc.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q > 0) {\n\
    \        if (n % q == 0) {\n            p += q;\n            n /= q;\n       \
    \ }\n        else {\n            q--;\n        }\n    }\n    return p;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long m = n;\n    while (m != 1) {\n        if (m\
    \ % 2 == 0) {\n            m /= 2;\n        } else {\n            long long a\
    \ = m * m;\n            long long b = m * (m + 1);\n            if (a == 0 ||\
    \ b == 0 || b == a)\n                m = 1;\n            else\n              \
    \  m = m + 1;\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpniltkpf5: /tmp/tmpniltkpf5.cpp:27: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n && n % i == 0)\
    \ {\n        largest = i;\n        ++i;\n    }\n    return largest;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp9pvfxat9: /tmp/tmp9pvfxat9.cpp:19: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q != 1)\
    \ {\n        if (q % 2 == 0) {\n            q = (q / 2);\n        } else {\n \
    \           p = p * 2;\n            q = (q / 2);\n        }\n    }\n    return\
    \ p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp1ca0qmzt: /tmp/tmp1ca0qmzt.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d <= n / 2) {\n       \
    \ if (n % d == 0) {\n            ans = d;\n            while (n % d == 0) {\n\
    \                n /= d;\n            }\n        }\n        d += 2;\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpr1cj1w6o: /tmp/tmpr1cj1w6o.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    long max = 2;\n    while (i <=\
    \ n / 2) {\n        if (n % i == 0) {\n            ans = i;\n            max =\
    \ i;\n        }\n        i += 2;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpkvzl1rs3: /tmp/tmpkvzl1rs3.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp57jskxg5: /tmp/tmp57jskxg5.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long prime = 2;\n    long limit = (long) sqrt(n);\n\
    \    for (long i = 2; i <= limit; i++) {\n        if (n % i == 0) {\n        \
    \    factor++;\n            if (factor > prime) {\n                prime = factor;\n\
    \            }\n        }\n    }\n    return prime;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpbbbnqnwq: /tmp/tmpbbbnqnwq.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxPrime = 2;\n    long maxFactor = 1;\n    for (long i = 2;\
    \ i <= n / 2; i++) {\n        if (n % i == 0) {\n            long factor = 1;\n\
    \            while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > maxFactor) {\n                maxFactor\
    \ = factor;\n                maxPrime = i;\n            }\n        }\n    }\n\
    \    return maxPrime;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpd6m1m7yj: /tmp/tmpd6m1m7yj.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxFactor = n;\n    long maxFactorPrime = 2;\n    long factor\
    \ = 3;\n    long factorPrime = 2;\n    while (factor <= maxFactor) {\n       \
    \ if (n % factor == 0) {\n            factorPrime = factor;\n            while\
    \ (factorPrime <= maxFactorPrime) {\n                if (n % factorPrime == 0)\
    \ {\n                    maxFactorPrime = factorPrime;\n                    break;\n\
    \                }\n                factorPrime++;\n            }\n        }\n\
    \        factor++;\n    }\n    return maxFactorPrime;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp6vwq8ksp: /tmp/tmp6vwq8ksp.cpp:30: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   long t = 3;\n    long u = 3;\n    long v = 3;\n    long w = 3;\n    long x\
    \ = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsl0d4hiu.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpsl0d4hiu.cpp:33:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   33 |     long n = 1;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:35:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   35 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:9:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    9 |     long p = 2;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:36:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   36 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:10:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   10 |     long q = n;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:37:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   37 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:11:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   11 |     long r = n;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:38:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   38 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:12:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   12 |     long s = 2;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:39:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   39 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:13:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   13 |     long t = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:40:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   40 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:14:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   14 |     long u = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:41:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   41 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:15:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   15 |     long v = 3;\n      |          ^\n/tmp/tmpsl0d4hiu.cpp:42:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   42 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmpsl0d4hiu.cpp:16:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   16 |     long w = 3;\n      |  "
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp57jskxg5: /tmp/tmp57jskxg5.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            factor++;\n            n /= i;\n        }\n    \
    \    i++;\n    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpv29p4cw0: /tmp/tmpv29p4cw0.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                max_factor_index = i;\n     \
    \       }\n            if (max_factor < max_factor_index) {\n                max_factor\
    \ = max_factor_index;\n            }\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142954
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                max_factor_index = i;\n     \
    \       }\n            if (max_factor < max_factor_index) {\n                max_factor\
    \ = max_factor_index;\n            }\n        }\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142954
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    long q = n;\n    while (p < q)\
    \ {\n        if (n % p == 0) {\n            ans = p;\n            while (n % p\
    \ == 0) {\n                n /= p;\n            }\n        }\n        p += 1;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n     \
    \   if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmphds382c2: /tmp/tmphds382c2.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j;\n  \
    \          for (j = i; j < n; j += i) {\n                if (n % j == 0) {\n \
    \                   break;\n                }\n            }\n            if (j\
    \ > i) {\n                max_factor = i;\n                max_factor_index =\
    \ j;\n            }\n        }\n        i += 1;\n    }\n    return max_factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp_dw1gzhh: /tmp/tmp_dw1gzhh.cpp:31: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            break;\n        }\n   \
    \     i++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0zynfgb3: /tmp/tmp0zynfgb3.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpnlc9qfmn: /tmp/tmpnlc9qfmn.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            res = i;\n            break;\n        }\n   \
    \     i += 2;\n    }\n    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmplmyyhq27: /tmp/tmplmyyhq27.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d < n) {\n        if (n\
    \ % d == 0) {\n            ans = d;\n            while (n % d == 0) {\n      \
    \          n /= d;\n            }\n        }\n        else {\n            d +=\
    \ 2;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpla74r1uw: /tmp/tmpla74r1uw.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long m = 1;\n \
    \   while (p <= q) {\n        while (r % p == 0) {\n            m += p;\n    \
    \        r /= p;\n        }\n        p++;\n    }\n    return m;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpt50nakzv: /tmp/tmpt50nakzv.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvdcc0y2c: /tmp/tmpvdcc0y2c.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    while (p < q) {\n        while (q\
    \ % p == 0) {\n            q /= p;\n        }\n        p += 1;\n    }\n    return\
    \ q;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpvmnojqlu: /tmp/tmpvmnojqlu.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long m = n;\n    long p = 2;\n    long q = n;\n    long r = n;\n \
    \   long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w\
    \ = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n \
    \   long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f\
    \ = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n \
    \   long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n    long o\
    \ = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s = n;\n \
    \   long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n    long x\
    \ = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n \
    \   long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g\
    \ = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n \
    \   long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p\
    \ = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n \
    \   long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y\
    \ = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n \
    \   long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h\
    \ = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n \
    \   long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q\
    \ = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n \
    \   long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z\
    \ = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n \
    \   long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i\
    \ = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpwe2pvwfw.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpwe2pvwfw.cpp:33:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   33 |     long m = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:9:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    9 |     long m =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:34:10: error: declaration of \u2018\
    long int n\u2019 shadows a parameter\n   34 |     long n = n;\n      |       \
    \   ^\n/tmp/tmpwe2pvwfw.cpp:36:10: error: redeclaration of \u2018long int p\u2019\
    \n   36 |     long p = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:10:10: note:\
    \ \u2018long int p\u2019 previously declared here\n   10 |     long p = 2;\n \
    \     |          ^\n/tmp/tmpwe2pvwfw.cpp:37:10: error: redeclaration of \u2018\
    long int q\u2019\n   37 |     long q = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:11:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   11 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:38:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   38 |     long r = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:12:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   12 |     long r =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:39:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   39 |     long s = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:13:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   13 |     long s =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:40:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   40 |     long t = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:14:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   14 |     long t =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:41:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   41 |     long u = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:15:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   15 |     long u =\
    \ n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:42:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   42 |     long v = n;\n      |          ^\n/tmp/tmpwe2pvwfw.cpp:16:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   16 |     long v =\
    \ n;\n      |  "
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            while (n % p == 0) {\n      \
    \          n /= p;\n            }\n        }\n        p++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpm2ca648d: /tmp/tmpm2ca648d.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i++;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0_u4vef4: /tmp/tmp0_u4vef4.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long prime = 2;\n    long limit = (long) sqrt(n);\n\
    \    long i = 2;\n    while (i <= limit) {\n        if (n % i == 0) {\n      \
    \      prime = i;\n            while (n % i == 0) {\n                n /= i;\n\
    \                ++i;\n            }\n            break;\n        }\n        ++i;\n\
    \    }\n    factor = prime * 2;\n    while (n > 1) {\n        if (n % factor ==\
    \ 0) {\n            n /= factor;\n            ++factor;\n        }\n        ++factor;\n\
    \    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpok7lacoh: /tmp/tmpok7lacoh.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n    }\n \
    \   return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmgszta0j: /tmp/tmpmgszta0j.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpxpnj6y2t: /tmp/tmpxpnj6y2t.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                max_factor_index = i;\n  \
    \          }\n        }\n        i++;\n    }\n    return max_factor_index;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpaovge3db: /tmp/tmpaovge3db.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long p = n;\n    long factor = 1;\n    while (i <\
    \ p) {\n        if (n % i == 0) {\n            factor++;\n            while (n\
    \ % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvkb4xtx3: /tmp/tmpvkb4xtx3.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 3;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            res = i;\n        }\n        i += 2;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpo57qdt1v: /tmp/tmpo57qdt1v.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j\
    \ = n / i;\n            if (j > max_factor) {\n                max_factor = j;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpjnjjoeqm: /tmp/tmpjnjjoeqm.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            max = i;\n        }\n        ++i;\n    }\n    return\
    \ max;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpxj_r4eiz: /tmp/tmpxj_r4eiz.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 0;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    max_factor = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n   \
    \ auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpru04182y: /tmp/tmpru04182y.cpp:31: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long p = 2;\n    while (p < n) {\n        if\
    \ (n % p == 0) {\n            factor = p;\n            break;\n        }\n   \
    \     p += 2;\n    }\n    return factor;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeqehgaoi: /tmp/tmpeqehgaoi.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp044vmkul: /tmp/tmp044vmkul.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxFactor = n;\n    long maxFactorPrime = 1;\n    long i = 2;\n\
    \    while (i <= maxFactor) {\n        if (n % i == 0) {\n            maxFactor\
    \ = i;\n            maxFactorPrime = i;\n        }\n        i += 2;\n    }\n \
    \   return maxFactorPrime;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp4fuknllz: /tmp/tmp4fuknllz.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n\
    \            while (n % i == 0) {\n                n /= i;\n                j++;\n\
    \            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   while (p <= q) {\n        while (r % p == 0) {\n            r /= p;\n    \
    \    }\n        while (r % q == 0) {\n            r /= q;\n        }\n       \
    \ if (p > q) {\n            while (s % p == 0) {\n                s /= p;\n  \
    \          }\n            while (s % q == 0) {\n                s /= q;\n    \
    \        }\n        }\n        if (p * q > r) {\n            p = q;\n        \
    \    q = r;\n            r = s;\n            s = p;\n        }\n    }\n    return\
    \ r;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp041tniu3: /tmp/tmp041tniu3.cpp:39: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = i;\n    long max_p = 1;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            i += 1;\n            while (n\
    \ % i == 0) {\n                i += 1;\n            }\n            if (i > max_i)\
    \ {\n                max_p = i;\n                max_i = i;\n            }\n \
    \       }\n        i += 1;\n    }\n    return max_p;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprka_d6pr: /tmp/tmprka_d6pr.cpp:29: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            while (n % p == 0) {\n                n /= p;\n   \
    \         }\n            res = p;\n        }\n        p += 2;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpq5y9u1xi: /tmp/tmpq5y9u1xi.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p++;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpd55517fz: /tmp/tmpd55517fz.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                ++max_factor;\n          \
    \  }\n            if (max_factor > max_factor_index) {\n                max_factor_index\
    \ = max_factor;\n            }\n        }\n        ++i;\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpeqzje8d0: /tmp/tmpeqzje8d0.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp2824bi8r: /tmp/tmp2824bi8r.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        while\
    \ (n % p == 0) {\n            ans = p;\n            n /= p;\n        }\n     \
    \   p++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpsndl_ikt: /tmp/tmpsndl_ikt.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            res = i;\n        }\n        i += 2;\n    }\n\
    \    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpyq7diopf: /tmp/tmpyq7diopf.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n     \
    \   if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmphds382c2: /tmp/tmphds382c2.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j\
    \ = max_factor;\n            while (n % i == 0) {\n                n /= i;\n \
    \               j++;\n            }\n            if (j > max_factor) {\n     \
    \           max_factor = j;\n                max_factor_index = i;\n         \
    \   }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                max_factor_index = i;\n  \
    \          }\n        }\n        i++;\n    }\n    return max_factor_index;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpaovge3db: /tmp/tmpaovge3db.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n\
    \            while (j < n) {\n                if (n % j == 0) {\n            \
    \        max_factor_index = j;\n                    break;\n                }\n\
    \                j++;\n            }\n            if (max_factor < j - i) {\n\
    \                max_factor = j - i;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpaspgthan: /tmp/tmpaspgthan.cpp:32: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (p < q) {\n\
    \        while (r % p == 0) {\n            r /= p;\n        }\n        p++;\n\
    \    }\n    return p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpc3_kruvr: /tmp/tmpc3_kruvr.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142951
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = n / i;\n\
    \            if (j > max_factor) {\n                max_factor = j;\n        \
    \        max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpsnr03u79: /tmp/tmpsnr03u79.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142951
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   while (p < q) {\n        while (r % p == 0) {\n            r = r / p;\n  \
    \      }\n        while (r % q == 0) {\n            r = r / q;\n        }\n  \
    \      if (r > s) {\n            s = r;\n        }\n        p = p * s + q;\n \
    \       q = p + q;\n    }\n    return s;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpd5s9nogg: /tmp/tmpd5s9nogg.cpp:30: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142951
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; ++i) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpkg2qhmp4: /tmp/tmpkg2qhmp4.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142951
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i <= n / i) {\n   \
    \     if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n \
    \   }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpgqvp39_e: /tmp/tmpgqvp39_e.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142951
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                max_factor_index = i;\n     \
    \       }\n            if (n > max_factor) {\n                max_factor = n;\n\
    \                max_factor_index = max_factor_index;\n            }\n       \
    \ }\n    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q > 0) {\n\
    \        while (r > 0) {\n            if (p % q == 0) {\n                p = q;\n\
    \                break;\n            }\n            q = q * 2;\n            r\
    \ = r / 2;\n        }\n        q = 2;\n    }\n    return p;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            break;\n        }\n   \
    \     i += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvjicaffq: /tmp/tmpvjicaffq.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long maxPrime = 2;\n    long maxFactor = 1;\n    long currFactor =\
    \ 1;\n    long currPrime = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            currFactor = i;\n            currPrime = i;\n  \
    \      }\n        i += 2;\n    }\n    while (currPrime < maxPrime) {\n       \
    \ if (currFactor % currPrime == 0) {\n            maxFactor = currFactor;\n  \
    \          maxPrime = currPrime;\n        }\n        currPrime += 2;\n    }\n\
    \    return maxFactor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmphfm9a83q: /tmp/tmphfm9a83q.cpp:32: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long m = n;\n    long a = 2, b = 2, c = 2, d = 2, e = 2;\n    while\
    \ (m != 1) {\n        while (m % a == 0) {\n            m = m / a;\n         \
    \   ++a;\n        }\n        while (m % b == 0) {\n            m = m / b;\n  \
    \          ++b;\n        }\n        while (m % c == 0) {\n            m = m /\
    \ c;\n            ++c;\n        }\n        while (m % d == 0) {\n            m\
    \ = m / d;\n            ++d;\n        }\n        while (m % e == 0) {\n      \
    \      m = m / e;\n            ++e;\n        }\n    }\n    return e;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    long p = 2;\n    while (d <= n)\
    \ {\n        if (n % d == 0) {\n            ans = d;\n            while (n % d\
    \ == 0) {\n                n /= d;\n            }\n        }\n        else {\n\
    \            d += p;\n            while (n % d == 0) {\n                n /= d;\n\
    \            }\n        }\n        p += 2;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpa_vkdz10: /tmp/tmpa_vkdz10.cpp:31: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp5m89suvz: /tmp/tmp5m89suvz.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (n % j == 0) {\n            \
    \        max_factor = j;\n                    max_factor_index = i;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor_index;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpezkodw0a: /tmp/tmpezkodw0a.cpp:31: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long p = 2;\n    while (p < n) {\n        if\
    \ (n % p == 0) {\n            factor = p;\n            break;\n        }\n   \
    \     ++p;\n    }\n    return factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp34kcgjmn: /tmp/tmp34kcgjmn.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= sqrt(n)) {\n     \
    \   if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmphds382c2: /tmp/tmphds382c2.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n \
    \   while (q > 0) {\n        if (q % 2 == 0) {\n            q = (q / 2);\n   \
    \         p += 1;\n        } else {\n            q = (3 * q + 1) >> 1;\n     \
    \       p += 2;\n        }\n    }\n    while (p < r) {\n        if (n % p == 0)\
    \ {\n            s = (s * p) >> 1;\n            n /= p;\n        } else {\n  \
    \          n /= p;\n        }\n        p += 1;\n    }\n    return s;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp89ript02: /tmp/tmp89ript02.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                ++i;\n            }\n    \
    \        if (n > max_factor) {\n                max_factor = n;\n            \
    \    max_factor_index = i;\n            }\n        }\n        ++i;\n    }\n  \
    \  return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpteih8qht: /tmp/tmpteih8qht.cpp:29: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpnlc9qfmn: /tmp/tmpnlc9qfmn.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp2824bi8r: /tmp/tmp2824bi8r.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long d = 2;\n    while (d <= n / 2) {\n       \
    \ if (n % d == 0) {\n            res = d;\n            while (n % d == 0) {\n\
    \                n /= d;\n            }\n        }\n        d++;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpo1rd3ehr: /tmp/tmpo1rd3ehr.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q != 0)\
    \ {\n        if (q % 2 == 0) {\n            p += 1;\n            q = (q / 2);\n\
    \        } else {\n            q = (q / 2);\n            r += 1;\n        }\n\
    \    }\n    return p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvyy9w5rm: /tmp/tmpvyy9w5rm.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = 1;\n    long max_factor = 1;\n    while\
    \ (i <= n && max_i <= n) {\n        if (n % i == 0) {\n            max_factor\
    \ = i;\n            max_i = i;\n        }\n        i += 2;\n    }\n    return\
    \ max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n \
    \   assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n   \
    \ assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n   \
    \ assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvzs9fdqw: /tmp/tmpvzs9fdqw.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long i = 2;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            factor++;\n            n /= i;\n        }\n    \
    \    else {\n            i++;\n        }\n    }\n    return factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp7icgykwl: /tmp/tmp7icgykwl.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long p = 2;\n    while (i <= n / p) {\n        if\
    \ (n % i == 0) {\n            p = i;\n        }\n        i++;\n    }\n    return\
    \ p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpgi10lcb1: /tmp/tmpgi10lcb1.cpp:22: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmp2824bi8r: /tmp/tmp2824bi8r.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 3;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            res = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp_03pork5: /tmp/tmp_03pork5.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n\
    \            while (n % i == 0) {\n                n /= i;\n                j++;\n\
    \            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            max_i = i;\n        }\n        ++i;\n    }\n\
    \    return max_i;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpc4i295sg: /tmp/tmpc4i295sg.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp57jskxg5: /tmp/tmp57jskxg5.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpm6a7k96n: /tmp/tmpm6a7k96n.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n / 2; ++i) {\n        if (n % i == 0) {\n            long\
    \ factor = i / n;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpt7jdkzy3: /tmp/tmpt7jdkzy3.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n \
    \   while (p <= q) {\n        if (n % p == 0) {\n            q = q / p;\n    \
    \        s += p;\n        }\n        if (n % q == 0) {\n            p = p / q;\n\
    \            s += q;\n        }\n        p += 1;\n    }\n    return s;\n}\nint\
    \ main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long a = n;\n    long b = 2;\n    long c = 1;\n\
    \    while (b <= a) {\n        while (b % a == 0) {\n            b /= a;\n   \
    \         ans++;\n        }\n        while (b % c == 0) {\n            b /= c;\n\
    \            ans++;\n        }\n        if (b > 1) {\n            ans++;\n   \
    \     }\n        a *= 2;\n        c *= 2;\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i < n; i++) {\n        if (n % i == 0) {\n            long factor = i\
    \ / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0_wk29hj: /tmp/tmp0_wk29hj.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                max_factor_index = i;\n  \
    \          }\n        }\n        i++;\n    }\n    return max_factor_index;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpaovge3db: /tmp/tmpaovge3db.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n\
    \            for (j = i; j <= n; j += i) {\n                if (n % j == 0) {\n\
    \                    max_factor = j;\n                    max_factor_index = i;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpwmtnz4c2: /tmp/tmpwmtnz4c2.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n\
    \            for (j = i; j <= n; j += i) {\n                if (n % j == 0) {\n\
    \                    max_factor = j;\n                    max_factor_index = i;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp351nurvp: /tmp/tmp351nurvp.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    while (q > 1) {\n\
    \        while (r % p == 0) {\n            q = q / p;\n        }\n        p =\
    \ p * q;\n        r = n;\n    }\n    return p;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142957
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp57jskxg5: /tmp/tmp57jskxg5.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpeaahvydz: /tmp/tmpeaahvydz.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    long max = 2;\n    while (i <=\
    \ n / 2) {\n        if (n % i == 0) {\n            ans = i;\n            max =\
    \ i;\n        }\n        i += 2;\n    }\n    return ans;\n}\nint main() {\n  \
    \  auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpkvzl1rs3: /tmp/tmpkvzl1rs3.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142948
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                ++i;\n            }\n    \
    \        if (max_factor < i) {\n                max_factor = i;\n            \
    \    max_factor_index = i;\n            }\n        }\n        ++i;\n    }\n  \
    \  return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpz9g1bmsb: /tmp/tmpz9g1bmsb.cpp:29: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    while (p < q) {\n        while (n\
    \ % p == 0) {\n            n /= p;\n        }\n        if (n == 1) {\n       \
    \     return p;\n        }\n        p++;\n    }\n    return n;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142953
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                i = j;\n            }\n        }\n    \
    \    i++;\n    }\n    while (max_factor < i) {\n        max_factor = i;\n    \
    \    max_factor_index = i;\n        i++;\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long m = n;\n    long p = 2;\n    long q = 3;\n    long r = 2;\n \
    \   long s = 3;\n    long t = 2;\n    long u = 3;\n    long v = 3;\n    long w\
    \ = 3;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n    long a = 1;\n \
    \   long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f\
    \ = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n \
    \   long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o\
    \ = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n \
    \   long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x\
    \ = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 2;\n \
    \   long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long g\
    \ = 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n \
    \   long d = 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h\
    \ = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n \
    \   long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i\
    \ = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   \n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8dqkfzek.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmp8dqkfzek.cpp:33:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   33 |     long m = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:9:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    9 |     long m =\
    \ n;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:34:10: error: declaration of \u2018\
    long int n\u2019 shadows a parameter\n   34 |     long n = 1;\n      |       \
    \   ^\n/tmp/tmp8dqkfzek.cpp:36:10: error: redeclaration of \u2018long int p\u2019\
    \n   36 |     long p = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:10:10: note:\
    \ \u2018long int p\u2019 previously declared here\n   10 |     long p = 2;\n \
    \     |          ^\n/tmp/tmp8dqkfzek.cpp:37:10: error: redeclaration of \u2018\
    long int q\u2019\n   37 |     long q = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:11:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   11 |     long q =\
    \ 3;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:38:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   38 |     long r = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:12:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   12 |     long r =\
    \ 2;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:39:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   39 |     long s = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:13:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   13 |     long s =\
    \ 3;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:40:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   40 |     long t = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:14:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   14 |     long t =\
    \ 2;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:41:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   41 |     long u = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:15:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   15 |     long u =\
    \ 3;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:42:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   42 |     long v = 1;\n      |          ^\n/tmp/tmp8dqkfzek.cpp:16:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   16 |     long v =\
    \ 3;\n      |  "
  stdout: ''
  timestamp: 1660142952
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long res = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            res = i;\n            n = n / i;\n        }\n     \
    \   ++i;\n    }\n    return res;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpkld_qyll: /tmp/tmpkld_qyll.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while\
    \ (i <= max_i) {\n        if (n % i == 0) {\n            while (n % i == 0) {\n\
    \                n /= i;\n                max_factor++;\n            }\n     \
    \   }\n        i++;\n    }\n    return max_factor;\n}\nint main() {\n    auto\
    \ candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n   \
    \ assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330))\
    \ == (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp3rvvsz5a: /tmp/tmp3rvvsz5a.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p++;\n\
    \    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpd55517fz: /tmp/tmpd55517fz.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 2;\n    long limit = sqrt(n);\n    long i = 3;\n   \
    \ while (i <= limit) {\n        if (n % i == 0) {\n            factor = i;\n \
    \           break;\n        }\n        i += 2;\n    }\n    return factor;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp7smrq9x1: /tmp/tmp7smrq9x1.cpp:23: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / i) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            break;\n        }\n   \
    \     i += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpvjicaffq: /tmp/tmpvjicaffq.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142952
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long m = n;\n    long a = 1;\n    long b = 2;\n    long c = 1;\n \
    \   long d = 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h\
    \ = 2;\n    long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n \
    \   long m = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q\
    \ = 2;\n    long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n \
    \   long v = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z\
    \ = 2;\n    long A = 2;\n    long B = 2;\n    long C = 2;\n    long D = 2;\n \
    \   long E = 2;\n    long F = 3;\n    long G = 3;\n    long H = 2;\n    long I\
    \ = 2;\n    long J = 2;\n    long K = 2;\n    long L = 2;\n    long M = 2;\n \
    \   long N = 2;\n    long O = 2;\n    long P = 2;\n    long Q = 2;\n    long R\
    \ = 2;\n    long S = 2;\n    long T = 2;\n    long U = 2;\n    long V = 2;\n \
    \   long W = 2;\n    long X = 2;\n    long Y = 2;\n    long Z = 2;\n    long AA\
    \ = 2;\n    long AB = 2;\n    long AC = 2;\n    long AD = 2;\n    long AE = 2;\n\
    \    long AF = 3;\n    long AG = 3;\n    long AH = 2;\n    long AI = 2;\n    long\
    \ AJ = 2;\n    long AK = 2;\n    long AL = 2;\n    long AM = 2;\n    long AN =\
    \ 2;\n    long AO = 2;\n    long AP = 2;\n    long AQ = 2;\n    long AR = 2;\n\
    \    long AS = 2;\n    long AT = 2;\n    long AU = 2;\n    long AV = 2;\n    long\
    \ AW = 2;\n    long AX = 2;\n    long AY = 2;\n    long AZ = 2;\n    long BA =\
    \ 2;\n    long BB = 2;\n    long BC = 2;\n    long BD = 2;\n    long BE = 2;\n\
    \    long BF = 3;\n    long BG = 3;\n    long BH = 2;\n    long BI = 2;\n    long\
    \ BJ = 2;\n    long BK = 2;\n    long BL = 2;\n    long BM = 2;\n    long BN =\
    \ 2;\n    long BO = 2;\n    long BP = 2;\n    long BQ = 2;\n    long BR = 2;\n\
    \    long BS = 2;\n    long BT = 2;\n    long BU = 2;\n    long BV = 2;\n    \n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_xsv23ll.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmp_xsv23ll.cpp:22:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   22 |     long m = 2;\n      |          ^\n/tmp/tmp_xsv23ll.cpp:9:10:\
    \ note: \u2018long int m\u2019 previously declared here\n    9 |     long m =\
    \ n;\n      |          ^\n/tmp/tmp_xsv23ll.cpp:23:10: error: declaration of \u2018\
    long int n\u2019 shadows a parameter\n   23 |     long n = 2;\n      |       \
    \   ^\n/tmp/tmp_xsv23ll.cpp:111:1: warning: no return statement in function returning\
    \ non-void [-Wreturn-type]\n  111 | }\n      | ^\n"
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d < n) {\n        while\
    \ (n % d == 0) {\n            ans = d;\n            n /= d;\n        }\n     \
    \   d++;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpj1n7csey: /tmp/tmpj1n7csey.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i += 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp8czr9va6: /tmp/tmp8czr9va6.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    while (p < q) {\n        if (n %\
    \ p == 0) {\n            q = n / p;\n        } else {\n            p = p * 2;\n\
    \        }\n    }\n    return p;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp12cxh3tb: /tmp/tmp12cxh3tb.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    long p = 2;\n    while (d <= n)\
    \ {\n        if (n % d == 0) {\n            ans = d;\n            while (n % d\
    \ == 0) {\n                n /= d;\n            }\n        }\n        else {\n\
    \            d += p;\n            p += 2;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpya91g7_k: /tmp/tmpya91g7_k.cpp:28: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ 1;\n            while (n % i == 0) {\n                n /= i;\n            \
    \    factor++;\n            }\n            if (factor > max_factor) {\n      \
    \          max_factor = factor;\n                max_factor_index = i;\n     \
    \       }\n        }\n    }\n    return max_factor_index;\n}\nint main() {\n \
    \   auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142958
- exit_code: -1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n \
    \   while (p < q) {\n        while (r % p == 0) {\n            r /= p;\n     \
    \   }\n        while (r % q == 0) {\n            r /= q;\n        }\n        if\
    \ (r > 1) {\n            s *= p;\n        }\n        p += 1;\n        q += 1;\n\
    \    }\n    return s;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660142958
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i < n) {\n        if (n % i == 0) {\n            while (n % i\
    \ == 0) {\n                n /= i;\n                max_factor_index = i;\n  \
    \          }\n        }\n        i++;\n    }\n    return max_factor_index;\n}\n\
    int main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpaovge3db: /tmp/tmpaovge3db.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp89ript02: /tmp/tmp89ript02.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long d = 2;\n    while (d < n) {\n        if (n\
    \ % d == 0) {\n            ans = d;\n            while (n % d == 0) {\n      \
    \          n /= d;\n            }\n        }\n        d += 2;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpergh8l0c: /tmp/tmpergh8l0c.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            long\
    \ j;\n            for (j = i; j <= n / i; j++) {\n                if (n % j ==\
    \ 0) {\n                    break;\n                }\n            }\n       \
    \     if (j > max_factor) {\n                max_factor = j;\n               \
    \ max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmptp2g62dd: /tmp/tmptp2g62dd.cpp:31: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmeuny4p1: /tmp/tmpmeuny4p1.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max = 2;\n    long p = 2;\n    while (p * p <= n) {\n       \
    \ if (n % p == 0) {\n            max = p;\n        }\n        p++;\n    }\n  \
    \  return max;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0oo2mqxt: /tmp/tmp0oo2mqxt.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_factor = 1;\n    while (i < n) {\n     \
    \   if (n % i == 0) {\n            max_factor = i;\n        }\n        i += 2;\n\
    \    }\n    return max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpmlxl0tc5: /tmp/tmpmlxl0tc5.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long s = 1;\n \
    \   long t = 0;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x\
    \ = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2rbu_hqi.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmp2rbu_hqi.cpp:33:10: error: declaration of \u2018long int\
    \ n\u2019 shadows a parameter\n   33 |     long n = 1;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:35:10:\
    \ error: redeclaration of \u2018long int p\u2019\n   35 |     long p = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:9:10: note: \u2018long int p\u2019 previously\
    \ declared here\n    9 |     long p = 2;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:36:10:\
    \ error: redeclaration of \u2018long int q\u2019\n   36 |     long q = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:10:10: note: \u2018long int q\u2019 previously\
    \ declared here\n   10 |     long q = n;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:37:10:\
    \ error: redeclaration of \u2018long int r\u2019\n   37 |     long r = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:11:10: note: \u2018long int r\u2019 previously\
    \ declared here\n   11 |     long r = n;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:38:10:\
    \ error: redeclaration of \u2018long int s\u2019\n   38 |     long s = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:12:10: note: \u2018long int s\u2019 previously\
    \ declared here\n   12 |     long s = 1;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:39:10:\
    \ error: redeclaration of \u2018long int t\u2019\n   39 |     long t = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:13:10: note: \u2018long int t\u2019 previously\
    \ declared here\n   13 |     long t = 0;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:40:10:\
    \ error: redeclaration of \u2018long int u\u2019\n   40 |     long u = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:14:10: note: \u2018long int u\u2019 previously\
    \ declared here\n   14 |     long u = 1;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:41:10:\
    \ error: redeclaration of \u2018long int v\u2019\n   41 |     long v = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:15:10: note: \u2018long int v\u2019 previously\
    \ declared here\n   15 |     long v = 1;\n      |          ^\n/tmp/tmp2rbu_hqi.cpp:42:10:\
    \ error: redeclaration of \u2018long int w\u2019\n   42 |     long w = 1;\n  \
    \    |          ^\n/tmp/tmp2rbu_hqi.cpp:16:10: note: \u2018long int w\u2019 previously\
    \ declared here\n   16 |     long w = 1;\n      |  "
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long factor = 1;\n    long p = 2;\n    while (p < n && n % p == 0)\
    \ {\n        factor = p;\n        n /= p;\n        p++;\n    }\n    return factor;\n\
    }\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp1mf5qck5: /tmp/tmp1mf5qck5.cpp:20: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpok7lacoh: /tmp/tmpok7lacoh.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n      \
    \          n /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpfrk63yrc: /tmp/tmpfrk63yrc.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long long ans = 1;\n    long long i = 2;\n    while (i <= n / i) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            break;\n       \
    \ }\n        i += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = largest_prime_factor;\n    assert(candidate((15)) == (5));\n    assert(candidate((27))\
    \ == (3));\n    assert(candidate((63)) == (7));\n    assert(candidate((330)) ==\
    \ (11));\n    assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpyvufm3qj: /tmp/tmpyvufm3qj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n            long j\
    \ = i;\n            while (j <= n / i) {\n                if (n % j == 0) {\n\
    \                    max_factor = i;\n                    max_factor_index = j;\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n        }\n        i++;\n    }\n    return max_factor;\n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpfekb8uhp: /tmp/tmpfekb8uhp.cpp:30: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n      \
    \  if (n % i == 0) {\n            while (n % i == 0) {\n                n /= i;\n\
    \            }\n            if (n > 1) {\n                max_i = i;\n       \
    \     }\n        }\n        ++i;\n    }\n    return max_i;\n}\nint main() {\n\
    \    auto candidate = largest_prime_factor;\n    assert(candidate((15)) == (5));\n\
    \    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n  \
    \  assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: Exception
  stderr: 'tmpfhvnpdjd: /tmp/tmpfhvnpdjd.cpp:26: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i, max_factor = 1;\n    for (i = 2; i <= n / 2; i++) {\n    \
    \    if (n % i == 0) {\n            max_factor = i;\n        }\n    }\n    return\
    \ max_factor;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n \
    \   assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n   \
    \ assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n   \
    \ assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp0edtszzo: /tmp/tmp0edtszzo.cpp:20: int main(): Assertion `candidate((27))
    == (3)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 2;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpk_ybgnmj: /tmp/tmpk_ybgnmj.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max = 2;\n    long cur = 3;\n    while (cur < n) {\n        while\
    \ (n % cur == 0) {\n            n /= cur;\n            max++;\n        }\n   \
    \     cur++;\n    }\n    return max;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmprhxdgc3z: /tmp/tmprhxdgc3z.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n\
    \ % p == 0) {\n            ans = p;\n            break;\n        }\n        p\
    \ += 1;\n    }\n    return ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp89ript02: /tmp/tmp89ript02.cpp:22: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142953
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            while (ans % i == 0) {\n    \
    \            ans /= i;\n            }\n        }\n        i++;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmpo3bk_kc2: /tmp/tmpo3bk_kc2.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long p = 2;\n    long q = n;\n    long r = n;\n    long m = 1;\n \
    \   long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w\
    \ = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n \
    \   long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f\
    \ = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n \
    \   long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o\
    \ = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n \
    \   long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x\
    \ = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n \
    \   long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g\
    \ = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n \
    \   long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p\
    \ = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n \
    \   long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y\
    \ = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n \
    \   long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h\
    \ = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n \
    \   long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q\
    \ = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long \n}\nint main()\
    \ {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15)) ==\
    \ (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
    \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcfyuqg7i.cpp: In function \u2018long int largest_prime_factor(long\
    \ int)\u2019:\n/tmp/tmpcfyuqg7i.cpp:33:10: error: redeclaration of \u2018long\
    \ int m\u2019\n   33 |     long m = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:12:10:\
    \ note: \u2018long int m\u2019 previously declared here\n   12 |     long m =\
    \ 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:34:10: error: declaration of \u2018\
    long int n\u2019 shadows a parameter\n   34 |     long n = 1;\n      |       \
    \   ^\n/tmp/tmpcfyuqg7i.cpp:36:10: error: redeclaration of \u2018long int p\u2019\
    \n   36 |     long p = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:9:10: note:\
    \ \u2018long int p\u2019 previously declared here\n    9 |     long p = 2;\n \
    \     |          ^\n/tmp/tmpcfyuqg7i.cpp:37:10: error: redeclaration of \u2018\
    long int q\u2019\n   37 |     long q = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:10:10:\
    \ note: \u2018long int q\u2019 previously declared here\n   10 |     long q =\
    \ n;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:38:10: error: redeclaration of\
    \ \u2018long int r\u2019\n   38 |     long r = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:11:10:\
    \ note: \u2018long int r\u2019 previously declared here\n   11 |     long r =\
    \ n;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:39:10: error: redeclaration of\
    \ \u2018long int s\u2019\n   39 |     long s = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:13:10:\
    \ note: \u2018long int s\u2019 previously declared here\n   13 |     long s =\
    \ 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:40:10: error: redeclaration of\
    \ \u2018long int t\u2019\n   40 |     long t = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:14:10:\
    \ note: \u2018long int t\u2019 previously declared here\n   14 |     long t =\
    \ 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:41:10: error: redeclaration of\
    \ \u2018long int u\u2019\n   41 |     long u = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:15:10:\
    \ note: \u2018long int u\u2019 previously declared here\n   15 |     long u =\
    \ 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:42:10: error: redeclaration of\
    \ \u2018long int v\u2019\n   42 |     long v = 1;\n      |          ^\n/tmp/tmpcfyuqg7i.cpp:16:10:\
    \ note: \u2018long int v\u2019 previously declared here\n   16 |     long v =\
    \ 1;\n      |  "
  stdout: ''
  timestamp: 1660142954
- exit_code: 0
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n\
    \            while (n % i == 0) {\n                n /= i;\n                j++;\n\
    \            }\n            if (j > max_factor) {\n                max_factor\
    \ = j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660142950
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = n;\n    while (i <= largest) {\n \
    \       if (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n\
    \    }\n    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpfu7f4h29: /tmp/tmpfu7f4h29.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n       \
    \ if (n % i == 0) {\n            ans = i;\n            while (n % i == 0) {\n\
    \                n /= i;\n            }\n        }\n        ++i;\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
    \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) ==\
    \ (7));\n    assert(candidate((330)) == (11));\n    assert(candidate((13195))\
    \ == (29));\n}\n"
  status: Exception
  stderr: 'tmp964th23g: /tmp/tmp964th23g.cpp:24: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n\
    \    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor\
    \ = i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmpw7xfte5x: /tmp/tmpw7xfte5x.cpp:25: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long i = 2;\n    long largest = i;\n    while (i < n) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        i += 2;\n    }\n\
    \    return largest;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp8czr9va6: /tmp/tmp8czr9va6.cpp:21: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142947
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
    // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
    \ n) {\n    long max_factor = 1;\n    long max_factor_index = 0;\n    long i =\
    \ 2;\n    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            long\
    \ j = sqrt(n);\n            while (j % i == 0) {\n                j++;\n     \
    \       }\n            if (j > max_factor) {\n                max_factor = j;\n\
    \                max_factor_index = i;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor_index;\n}\nint main() {\n    auto candidate = largest_prime_factor;\n\
    \    assert(candidate((15)) == (5));\n    assert(candidate((27)) == (3));\n  \
    \  assert(candidate((63)) == (7));\n    assert(candidate((330)) == (11));\n  \
    \  assert(candidate((13195)) == (29));\n}\n"
  status: Exception
  stderr: 'tmp80w7m3pe: /tmp/tmp80w7m3pe.cpp:29: int main(): Assertion `candidate((15))
    == (5)'' failed.

    '
  stdout: ''
  timestamp: 1660142954

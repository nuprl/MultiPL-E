name: HumanEval_59_largest_prime_factor
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return the largest prime\
  \ factor of n. Assume n > 1 and is not a prime.\n// >>> largest_prime_factor((13195))\n\
  // (29)\n// >>> largest_prime_factor((2048))\n// (2)\nlong largest_prime_factor(long\
  \ n) {\n"
tests: "}\nint main() {\n    auto candidate = largest_prime_factor;\n    assert(candidate((15))\
  \ == (5));\n    assert(candidate((27)) == (3));\n    assert(candidate((63)) == (7));\n\
  \    assert(candidate((330)) == (11));\n    assert(candidate((13195)) == (29));\n\
  }\n"
completions: ["    long ans = 1;\n    long d = 2;\n    while (d < n) {\n        while\
    \ (n % d == 0) {\n            ans = d;\n            n /= d;\n        }\n     \
    \   d++;\n    }\n    return ans;", "    long i = 2;\n    long largest = i;\n \
    \   while (i < n) {\n        if (n % i == 0) {\n            largest = i;\n   \
    \     }\n        i++;\n    }\n    return largest;", "    long i, p, max_factor\
    \ = 1;\n    for (i = 2; i <= n / 2; ++i) {\n        p = i * i;\n        if (p\
    \ < n) {\n            if (n % p == 0) {\n                max_factor = p;\n   \
    \         }\n        }\n    }\n    return max_factor;", "    long maxFactor =\
    \ n;\n    long maxFactorFound = n;\n    long i = 2;\n    while (i <= maxFactor)\
    \ {\n        if (n % i == 0) {\n            maxFactorFound = i;\n        }\n \
    \       i += 2;\n    }\n    return maxFactorFound;", "    long ans = 1;\n    long\
    \ i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            ans = i;\n\
    \            while (n % i == 0) {\n                n /= i;\n            }\n  \
    \      }\n        i++;\n    }\n    return ans;", "    long ans = 1;\n    long\
    \ i = 2;\n    while (i <= n) {\n        if (n % i == 0) {\n            ans = i;\n\
    \            while (ans % i == 0) {\n                ans /= i;\n            }\n\
    \        }\n        i++;\n    }\n    return ans;", "    long p = 2;\n    long\
    \ q = n;\n    long r = n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n\
    \    long v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long ", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      max_factor = i;\n            max_factor_index = i;\n        }\n    }\n\
    \    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long long\
    \ ans = 1;\n    long long i = 2;\n    long long j = 2;\n    long long k = 1;\n\
    \    while (i * j <= n) {\n        if (n % i == 0) {\n            ans = i;\n \
    \           while (n % i == 0) {\n                n /= i;\n                ++k;\n\
    \            }\n        }\n        ++i;\n        ++j;\n    }\n    return ans;",
  "    long ans = 1;\n    long d = 2;\n    while (d <= n / 2) {\n        while (n\
    \ % d == 0) {\n            ans = d;\n            n /= d;\n        }\n        d\
    \ += 2;\n    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n    while\
    \ (i <= n / 2) {\n        if (n % i == 0) {\n            ans = i;\n          \
    \  while (n % i == 0) {\n                n /= i;\n            }\n        }\n \
    \       ++i;\n    }\n    return ans;", "    long ans = 1;\n    long p = 2;\n \
    \   while (p * p <= n) {\n        if (n % p == 0) {\n            ans = p;\n  \
    \          break;\n        }\n        p += 1;\n    }\n    return ans;", "    long\
    \ factor = 2;\n    long max_factor = 1;\n    long max_divisor = 1;\n    long divisor\
    \ = 1;\n    long remainder = 0;\n    while (remainder != 0) {\n        divisor\
    \ = n;\n        while (divisor <= max_divisor) {\n            divisor *= factor;\n\
    \        }\n        remainder = n % divisor;\n        max_divisor = divisor;\n\
    \        max_factor = factor;\n        factor++;\n    }\n    return max_factor;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i = 2;\n   \
    \ while (i <= n) {\n        if (n % i == 0) {\n            while (n % i == 0)\
    \ {\n                n /= i;\n                max_factor_index = i;\n        \
    \    }\n        }\n        i++;\n    }\n    return max_factor_index;", "    long\
    \ maxFactor = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i\
    \ == 0) {\n            maxFactor = i;\n        }\n        i += 2;\n    }\n   \
    \ return maxFactor;", "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n\
    \        if (n % p == 0) {\n            ans = p;\n            break;\n       \
    \ }\n        p += 2;\n    }\n    return ans;", "    long res = n;\n    long max_div\
    \ = n;\n    long max_div2 = n;\n    long max_div3 = n;\n    long max_div4 = n;\n\
    \    long max_div5 = n;\n    long max_div6 = n;\n    long max_div7 = n;\n    long\
    \ max_div8 = n;\n    long max_div9 = n;\n    long max_div10 = n;\n    long max_div11\
    \ = n;\n    long max_div12 = n;\n    long max_div13 = n;\n    long max_div14 =\
    \ n;\n    long max_div15 = n;\n    long max_div16 = n;\n    long max_div17 = n;\n\
    \    long max_div18 = n;\n    long max_div19 = n;\n    long max_div20 = n;\n \
    \   long max_div21 = n;\n    long max_div22 = n;\n    long max_div23 = n;\n  \
    \  long max_div24 = n;\n    long max_div25 = n;\n    long max_div26 = n;\n   \
    \ long max_div27 = n;\n    long max_div28 = n;\n    long max_div29 = n;\n    long\
    \ max_div30 = n;\n    long max_div31 = n;\n    long max_div32 = n;\n    long max_div33\
    \ = n;\n    long max_div34 = n;\n    long max_div35 = n;\n    long max_div36 =\
    \ n;\n    long max_div37 = n;\n    long max_div38 = n;\n    long max_div39 = n;\n\
    \    long max_div40 = n;\n    long max_div41 = n;\n    long max_div42 = n;\n \
    \   long max_div43 = n;\n    long max_div44 = n;\n    long max_div45 = n;\n  \
    \  long max_div46 = n;\n    long max_div47 = n;\n    long max_div48 = n;\n   \
    \ long max_div49 = n;\n    long max_div50 = n;\n    long max_div51 = n;\n    long\
    \ max_div52 = n;\n    long max_div53 = n;\n    long max_div54 = n;\n    long max_div55\
    \ = n;\n    long max_div56 = n;\n    long max_div57 = n;\n    long max_div58 =\
    \ n;\n    long max_div59 = n;\n    long max_div60 = n;\n    long max_div61 = n;\n\
    \    long max_div62 = n;\n    long max_div63 = n;\n    long max_div64 = n;\n \
    \   long max_div65 = n;", "    long i = 2;\n    long largest = i;\n    while (i\
    \ < n) {\n        if (n % i == 0) {\n            largest = i;\n        }\n   \
    \     i += 2;\n    }\n    return largest;", "    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n        if (n %\
    \ i == 0) {\n            long j = i;\n            while (j < n) {\n          \
    \      if (n % j == 0) {\n                    max_factor_index = j;\n        \
    \            break;\n                }\n                j++;\n            }\n\
    \            if (max_factor < j - i) {\n                max_factor = j - i;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor;", "   \
    \ long i, max_factor = 1;\n    for (i = 2; i <= n / 2; i++) {\n        if (n %\
    \ i == 0) {\n            max_factor = i;\n            break;\n        }\n    }\n\
    \    return max_factor;", "    long ans = 1;\n    long i = 2;\n    while (i <=\
    \ n / i) {\n        if (n % i == 0) {\n            ans = i;\n            while\
    \ (n % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long temp = max_factor;\n            max_factor = i;\n            max_factor_index\
    \ = i;\n        }\n    }\n    return max_factor_index;", "    long maxPrime =\
    \ 2;\n    long maxFactor = 1;\n    long currentPrime = 2;\n    long currentFactor\
    \ = 1;\n    long i = 2;\n    while (i <= n) {\n        if (n % i == 0) {\n   \
    \         currentPrime = i;\n            currentFactor = 1;\n            while\
    \ (n % i == 0) {\n                currentFactor++;\n                n /= i;\n\
    \            }\n            if (currentFactor > maxFactor) {\n               \
    \ maxFactor = currentFactor;\n                maxPrime = currentPrime;\n     \
    \       }\n        }\n        i++;\n    }\n    return maxPrime;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i <= n) {\n\
    \        if (n % i == 0) {\n            long j = 2;\n            while (j * i\
    \ <= n) {\n                if (n % i == 0) {\n                    max_factor_index\
    \ = i;\n                    max_factor = j;\n                    break;\n    \
    \            }\n                j++;\n            }\n        }\n        i++;\n\
    \    }\n    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            long j = i;\n            while (j * j <= n) {\n                if\
    \ (n % j == 0) {\n                    max_factor_index = j;\n                \
    \    break;\n                }\n                j++;\n            }\n        \
    \    if (max_factor_index != 0) {\n                max_factor = i;\n         \
    \   }\n        }\n        i++;\n    }\n    return max_factor;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            long j = 2;\n            while (j < i)\
    \ {\n                if (i % j == 0) {\n                    max_factor_index =\
    \ i;\n                    max_factor = j;\n                    break;\n      \
    \          }\n                j++;\n            }\n        }\n        i++;\n \
    \   }\n    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n\
    \            long factor = i / max_factor;\n            if (factor > max_factor)\
    \ {\n                max_factor = factor;\n                max_factor_index =\
    \ i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for (i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ long j = i;\n            while (j < n) {\n                if (n % j == 0) {\n\
    \                    max_factor_index = j;\n                    break;\n     \
    \           }\n                j++;\n            }\n            max_factor = i;\n\
    \            break;\n        }\n        i++;\n    }\n    return max_factor;",
  "    long res = 1;\n    long i = 2;\n    while (i <= n / i) {\n        if (n % i\
    \ == 0) {\n            res = i;\n        }\n        i += 2;\n    }\n    return\
    \ res;", "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i\
    \ = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            long j = 2;\n\
    \            while (j < i) {\n                if (i % j == 0) {\n            \
    \        break;\n                }\n                j++;\n            }\n    \
    \        if (j > i) {\n                i = j;\n            }\n        }\n    \
    \    i++;\n    }\n    while (max_factor < i) {\n        max_factor = i;\n    \
    \    max_factor_index = i;\n        i--;\n        while (max_factor % i == 0)\
    \ {\n            i--;\n        }\n    }\n    return max_factor_index;", "    long\
    \ maxPrime = 2;\n    long maxFactor = 1;\n    long prime = 2;\n    long factor\
    \ = 2;\n    while (n > 1) {\n        if (n % prime == 0) {\n            n = n\
    \ / prime;\n            maxFactor = factor;\n            maxPrime = prime;\n \
    \       }\n        prime++;\n        factor++;\n    }\n    return maxPrime;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ long j = 2;\n            while (j < i) {\n                if (i % j == 0) {\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n            if (j > i) {\n                max_factor = i;\n         \
    \       max_factor_index = j;\n            }\n        }\n        i++;\n    }\n\
    \    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n    \
    \        ans = p;\n            break;\n        }\n        p += 2;\n    }\n   \
    \ return ans;", "    long ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            while (n % i ==\
    \ 0) {\n                n /= i;\n                ++i;\n            }\n       \
    \ }\n        ++i;\n    }\n    return ans;", "    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i\
    \ == 0) {\n            long factor = i / max_factor;\n            if (factor >\
    \ max_factor) {\n                max_factor = factor;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ maxFactor = n;\n    long maxFactorFound = n;\n    long i = 2;\n    while (i\
    \ <= maxFactor) {\n        if (n % i == 0) {\n            maxFactorFound = i;\n\
    \        }\n        ++i;\n    }\n    return maxFactorFound;", "    long res =\
    \ 1;\n    long p = 2;\n    while (p * p <= n) {\n        if (n % p == 0) {\n \
    \           n /= p;\n            res = p;\n        }\n        p++;\n    }\n  \
    \  return res;", "    long p = 2;\n    long q = n;\n    long r = n;\n    while\
    \ (q > 0) {\n        if (n % q == 0) {\n            p += q;\n            n /=\
    \ q;\n        }\n        else {\n            q--;\n        }\n    }\n    return\
    \ p;", "    long res = 1;\n    long m = n;\n    while (m != 1) {\n        if (m\
    \ % 2 == 0) {\n            m /= 2;\n        } else {\n            long long a\
    \ = m * m;\n            long long b = m * (m + 1);\n            if (a == 0 ||\
    \ b == 0 || b == a)\n                m = 1;\n            else\n              \
    \  m = m + 1;\n        }\n    }\n    return res;", "    long i = 2;\n    long\
    \ largest = i;\n    while (i < n && n % i == 0) {\n        largest = i;\n    \
    \    ++i;\n    }\n    return largest;", "    long p = 2;\n    long q = n;\n  \
    \  long r = n;\n    while (q != 1) {\n        if (q % 2 == 0) {\n            q\
    \ = (q / 2);\n        } else {\n            p = p * 2;\n            q = (q / 2);\n\
    \        }\n    }\n    return p;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long d = 2;\n    while (d <= n / 2) {\n        if (n % d == 0) {\n\
    \            ans = d;\n            while (n % d == 0) {\n                n /=\
    \ d;\n            }\n        }\n        d += 2;\n    }\n    return ans;", "  \
    \  long ans = 1;\n    long i = 2;\n    long max = 2;\n    while (i <= n / 2) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            max = i;\n     \
    \   }\n        i += 2;\n    }\n    return ans;", "    long max_factor = 1;\n \
    \   long max_factor_index = 0;\n    for (long i = 2; i <= n; i++) {\n        if\
    \ (n % i == 0) {\n            long factor = i / max_factor;\n            if (factor\
    \ > max_factor) {\n                max_factor = factor;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ factor = 2;\n    long prime = 2;\n    long limit = (long) sqrt(n);\n    for\
    \ (long i = 2; i <= limit; i++) {\n        if (n % i == 0) {\n            factor++;\n\
    \            if (factor > prime) {\n                prime = factor;\n        \
    \    }\n        }\n    }\n    return prime;", "    long maxPrime = 2;\n    long\
    \ maxFactor = 1;\n    for (long i = 2; i <= n / 2; i++) {\n        if (n % i ==\
    \ 0) {\n            long factor = 1;\n            while (n % i == 0) {\n     \
    \           n /= i;\n                factor++;\n            }\n            if\
    \ (factor > maxFactor) {\n                maxFactor = factor;\n              \
    \  maxPrime = i;\n            }\n        }\n    }\n    return maxPrime;", "  \
    \  long maxFactor = n;\n    long maxFactorPrime = 2;\n    long factor = 3;\n \
    \   long factorPrime = 2;\n    while (factor <= maxFactor) {\n        if (n %\
    \ factor == 0) {\n            factorPrime = factor;\n            while (factorPrime\
    \ <= maxFactorPrime) {\n                if (n % factorPrime == 0) {\n        \
    \            maxFactorPrime = factorPrime;\n                    break;\n     \
    \           }\n                factorPrime++;\n            }\n        }\n    \
    \    factor++;\n    }\n    return maxFactorPrime;", "    long p = 2;\n    long\
    \ q = n;\n    long r = n;\n    long s = 2;\n    long t = 3;\n    long u = 3;\n\
    \    long v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n    long\
    \ z = 2;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n\
    \    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n    long\
    \ i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n\
    \    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 0;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long\
    \ s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long ", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long factor\
    \ = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n    \
    \        factor++;\n            n /= i;\n        }\n        i++;\n    }\n    return\
    \ factor;", "    long max_factor = 1;\n    long max_factor_index = 0;\n    for\
    \ (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            while (n\
    \ % i == 0) {\n                n /= i;\n                max_factor_index = i;\n\
    \            }\n            if (max_factor < max_factor_index) {\n           \
    \     max_factor = max_factor_index;\n            }\n        }\n    }\n    return\
    \ max_factor;", "    long max_factor = 1;\n    long max_factor_index = 0;\n  \
    \  for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            while\
    \ (n % i == 0) {\n                n /= i;\n                max_factor_index =\
    \ i;\n            }\n            if (max_factor < max_factor_index) {\n      \
    \          max_factor = max_factor_index;\n            }\n        }\n    }\n \
    \   return max_factor;", "    long ans = 1;\n    long p = 2;\n    long q = n;\n\
    \    while (p < q) {\n        if (n % p == 0) {\n            ans = p;\n      \
    \      while (n % p == 0) {\n                n /= p;\n            }\n        }\n\
    \        p += 1;\n    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n\
    \    while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            ans = i;\n\
    \            while (n % i == 0) {\n                n /= i;\n            }\n  \
    \      }\n        ++i;\n    }\n    return ans;", "    long max_factor = 1;\n \
    \   long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n       \
    \ if (n % i == 0) {\n            long j;\n            for (j = i; j < n; j +=\
    \ i) {\n                if (n % j == 0) {\n                    break;\n      \
    \          }\n            }\n            if (j > i) {\n                max_factor\
    \ = i;\n                max_factor_index = j;\n            }\n        }\n    \
    \    i += 1;\n    }\n    return max_factor;", "    long ans = 1;\n    long i =\
    \ 2;\n    while (i <= n / i) {\n        if (n % i == 0) {\n            ans = i;\n\
    \            break;\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ ans = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            while (n % i == 0) {\n                n\
    \ /= i;\n            }\n        }\n        i++;\n    }\n    return ans;", "  \
    \  long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for\
    \ (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long res = 1;\n    long i = 2;\n \
    \   while (i <= n / i) {\n        if (n % i == 0) {\n            res = i;\n  \
    \          break;\n        }\n        i += 2;\n    }\n    return res;", "    long\
    \ ans = 1;\n    long d = 2;\n    while (d < n) {\n        if (n % d == 0) {\n\
    \            ans = d;\n            while (n % d == 0) {\n                n /=\
    \ d;\n            }\n        }\n        else {\n            d += 2;\n        }\n\
    \    }\n    return ans;", "    long ans = 1;\n    long i = 2;\n    while (i <=\
    \ n) {\n        if (n % i == 0) {\n            ans = i;\n            while (n\
    \ % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long p = 2;\n    long q = n;\n    long r = n;\n\
    \    long m = 1;\n    while (p <= q) {\n        while (r % p == 0) {\n       \
    \     m += p;\n            r /= p;\n        }\n        p++;\n    }\n    return\
    \ m;", "    long max_factor = 0;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor;", "    long p = 2;\n    long q = n;\n    while (p\
    \ < q) {\n        while (q % p == 0) {\n            q /= p;\n        }\n     \
    \   p += 1;\n    }\n    return q;", "    long ans = 1;\n    long p = 2;\n    while\
    \ (p < n) {\n        if (n % p == 0) {\n            ans = p;\n            break;\n\
    \        }\n        p += 2;\n    }\n    return ans;", "    long m = n;\n    long\
    \ p = 2;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n\
    \    long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long\
    \ y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n\
    \    long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long\
    \ h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n\
    \    long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long\
    \ q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n\
    \    long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long\
    \ z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n\
    \    long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long\
    \ i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n\
    \    long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long\
    \ r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n\
    \    long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long\
    \ a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n\
    \    long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long\
    \ j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n\
    \    long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long\
    \ s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n    long w = n;\n\
    \    long x = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long\
    \ b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n\
    \    long g = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long\
    \ k = n;\n    long l = n;\n    long ", "    long ans = 1;\n    long p = 2;\n \
    \   while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n       \
    \     while (n % p == 0) {\n                n /= p;\n            }\n        }\n\
    \        p++;\n    }\n    return ans;", "    long i = 2;\n    long largest = i;\n\
    \    while (i < n) {\n        if (n % i == 0) {\n            largest = i;\n  \
    \      }\n        i++;\n    }\n    return largest;", "    long factor = 2;\n \
    \   long prime = 2;\n    long limit = (long) sqrt(n);\n    long i = 2;\n    while\
    \ (i <= limit) {\n        if (n % i == 0) {\n            prime = i;\n        \
    \    while (n % i == 0) {\n                n /= i;\n                ++i;\n   \
    \         }\n            break;\n        }\n        ++i;\n    }\n    factor =\
    \ prime * 2;\n    while (n > 1) {\n        if (n % factor == 0) {\n          \
    \  n /= factor;\n            ++factor;\n        }\n        ++factor;\n    }\n\
    \    return factor;", "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            break;\n       \
    \ }\n        i += 2;\n    }\n    return ans;", "    long i = 2;\n    long largest\
    \ = i;\n    while (i < n) {\n        if (n % i == 0) {\n            largest =\
    \ i;\n        }\n        ++i;\n    }\n    return largest;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            long factor = 1;\n            while (n\
    \ % i == 0) {\n                n /= i;\n                factor++;\n          \
    \  }\n            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ while (n % i == 0) {\n                n /= i;\n                max_factor_index\
    \ = i;\n            }\n        }\n        i++;\n    }\n    return max_factor_index;",
  "    long i = 2;\n    long p = n;\n    long factor = 1;\n    while (i < p) {\n \
    \       if (n % i == 0) {\n            factor++;\n            while (n % i ==\
    \ 0) {\n                n /= i;\n            }\n        }\n        i++;\n    }\n\
    \    return factor;", "    long res = 1;\n    long i = 3;\n    while (i <= n /\
    \ i) {\n        if (n % i == 0) {\n            res = i;\n        }\n        i\
    \ += 2;\n    }\n    return res;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n\
    \            long j = n / i;\n            if (j > max_factor) {\n            \
    \    max_factor = j;\n                max_factor_index = i;\n            }\n \
    \       }\n    }\n    return max_factor_index;", "    long i = 2;\n    long max\
    \ = 2;\n    while (i < n) {\n        if (n % i == 0) {\n            max = i;\n\
    \        }\n        ++i;\n    }\n    return max;", "    long ans = 1;\n    long\
    \ p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n\
    \            break;\n        }\n        p += 2;\n    }\n    return ans;", "  \
    \  long max_factor = 0;\n    long max_factor_index = 0;\n    long i = 2;\n   \
    \ while (i < n) {\n        if (n % i == 0) {\n            long j = i;\n      \
    \      while (j < n) {\n                if (n % j == 0) {\n                  \
    \  max_factor_index = j;\n                    max_factor = i;\n              \
    \      break;\n                }\n                j++;\n            }\n      \
    \  }\n        i++;\n    }\n    return max_factor;", "    long factor = 1;\n  \
    \  long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            factor\
    \ = p;\n            break;\n        }\n        p += 2;\n    }\n    return factor;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long temp = max_factor;\n\
    \            max_factor = i;\n            max_factor_index = i;\n        }\n \
    \   }\n    return max_factor;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 2; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long maxFactor\
    \ = n;\n    long maxFactorPrime = 1;\n    long i = 2;\n    while (i <= maxFactor)\
    \ {\n        if (n % i == 0) {\n            maxFactor = i;\n            maxFactorPrime\
    \ = i;\n        }\n        i += 2;\n    }\n    return maxFactorPrime;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2; i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            long j = max_factor;\n      \
    \      while (n % i == 0) {\n                n /= i;\n                j++;\n \
    \           }\n            if (j > max_factor) {\n                max_factor =\
    \ j;\n                max_factor_index = i;\n            }\n        }\n    }\n\
    \    return max_factor_index;", "    long p = 2;\n    long q = n;\n    long r\
    \ = n;\n    long s = 2;\n    while (p <= q) {\n        while (r % p == 0) {\n\
    \            r /= p;\n        }\n        while (r % q == 0) {\n            r /=\
    \ q;\n        }\n        if (p > q) {\n            while (s % p == 0) {\n    \
    \            s /= p;\n            }\n            while (s % q == 0) {\n      \
    \          s /= q;\n            }\n        }\n        if (p * q > r) {\n     \
    \       p = q;\n            q = r;\n            r = s;\n            s = p;\n \
    \       }\n    }\n    return r;", "    long i = 2;\n    long max_i = i;\n    long\
    \ max_p = 1;\n    while (i < n) {\n        if (n % i == 0) {\n            i +=\
    \ 1;\n            while (n % i == 0) {\n                i += 1;\n            }\n\
    \            if (i > max_i) {\n                max_p = i;\n                max_i\
    \ = i;\n            }\n        }\n        i += 1;\n    }\n    return max_p;",
  "    long res = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0)\
    \ {\n            while (n % p == 0) {\n                n /= p;\n            }\n\
    \            res = p;\n        }\n        p += 2;\n    }\n    return res;", " \
    \   long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i ==\
    \ 0) {\n            ans = i;\n            while (n % i == 0) {\n             \
    \   n /= i;\n            }\n        }\n        i++;\n    }\n    return ans;",
  "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0)\
    \ {\n            ans = p;\n            break;\n        }\n        p++;\n    }\n\
    \    return ans;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ while (n % i == 0) {\n                n /= i;\n                ++max_factor;\n\
    \            }\n            if (max_factor > max_factor_index) {\n           \
    \     max_factor_index = max_factor;\n            }\n        }\n        ++i;\n\
    \    }\n    return max_factor_index;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       long factor = 1;\n            while (n % i == 0) {\n                n\
    \ /= i;\n                factor++;\n            }\n            if (factor > max_factor)\
    \ {\n                max_factor = factor;\n                max_factor_index =\
    \ i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ ans = 1;\n    long p = 2;\n    while (p < n) {\n        while (n % p == 0) {\n\
    \            ans = p;\n            n /= p;\n        }\n        p++;\n    }\n \
    \   return ans;", "    long res = 1;\n    long i = 2;\n    while (i <= n / i)\
    \ {\n        if (n % i == 0) {\n            res = i;\n        }\n        i +=\
    \ 2;\n    }\n    return res;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n      \
    \      long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n    \
    \        ans = p;\n            break;\n        }\n        p += 2;\n    }\n   \
    \ return ans;", "    long factor = 1;\n    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n     \
    \       while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long ans = 1;\n    long i = 2;\n \
    \   while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            ans = i;\n\
    \            while (n % i == 0) {\n                n /= i;\n            }\n  \
    \      }\n        ++i;\n    }\n    return ans;", "    long max_factor = 1;\n \
    \   long max_factor_index = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            long j = max_factor;\n            while\
    \ (n % i == 0) {\n                n /= i;\n                j++;\n            }\n\
    \            if (j > max_factor) {\n                max_factor = j;\n        \
    \        max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i = 2;\n   \
    \ while (i < n) {\n        if (n % i == 0) {\n            while (n % i == 0) {\n\
    \                n /= i;\n                max_factor_index = i;\n            }\n\
    \        }\n        i++;\n    }\n    return max_factor_index;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            long j = i;\n            while (j < n)\
    \ {\n                if (n % j == 0) {\n                    max_factor_index =\
    \ j;\n                    break;\n                }\n                j++;\n  \
    \          }\n            if (max_factor < j - i) {\n                max_factor\
    \ = j - i;\n            }\n        }\n        i++;\n    }\n    return max_factor;",
  "    long p = 2;\n    long q = n;\n    long r = n;\n    while (p < q) {\n      \
    \  while (r % p == 0) {\n            r /= p;\n        }\n        p++;\n    }\n\
    \    return p;", "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n  \
    \      if (n % p == 0) {\n            ans = p;\n            break;\n        }\n\
    \        p += 2;\n    }\n    return ans;", "    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    for (long i = 2; i <= n; i++) {\n        if (n %\
    \ i == 0) {\n            long j = n / i;\n            if (j > max_factor) {\n\
    \                max_factor = j;\n                max_factor_index = i;\n    \
    \        }\n        }\n    }\n    return max_factor_index;", "    long p = 2;\n\
    \    long q = n;\n    long r = n;\n    long s = 2;\n    while (p < q) {\n    \
    \    while (r % p == 0) {\n            r = r / p;\n        }\n        while (r\
    \ % q == 0) {\n            r = r / q;\n        }\n        if (r > s) {\n     \
    \       s = r;\n        }\n        p = p * s + q;\n        q = p + q;\n    }\n\
    \    return s;", "    long max_factor = 1;\n    long max_factor_index = 0;\n \
    \   for (long i = 2; i <= n; ++i) {\n        if (n % i == 0) {\n            long\
    \ factor = i / max_factor;\n            if (factor > max_factor) {\n         \
    \       max_factor = factor;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;", "    long i = 2;\n  \
    \  long largest = i;\n    while (i <= n / i) {\n        if (n % i == 0) {\n  \
    \          largest = i;\n        }\n        ++i;\n    }\n    return largest;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            while (n % i == 0) {\n\
    \                n /= i;\n                max_factor_index = i;\n            }\n\
    \            if (n > max_factor) {\n                max_factor = n;\n        \
    \        max_factor_index = max_factor_index;\n            }\n        }\n    }\n\
    \    return max_factor_index;", "    long ans = 1;\n    long i = 2;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            ans = i;\n            while\
    \ (n % i == 0) {\n                n /= i;\n            }\n        }\n        i++;\n\
    \    }\n    return ans;", "    long p = 2;\n    long q = n;\n    long r = n;\n\
    \    while (q > 0) {\n        while (r > 0) {\n            if (p % q == 0) {\n\
    \                p = q;\n                break;\n            }\n            q\
    \ = q * 2;\n            r = r / 2;\n        }\n        q = 2;\n    }\n    return\
    \ p;", "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int\
    \ i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long ans = 1;\n    long i = 2;\n \
    \   while (i <= n / i) {\n        if (n % i == 0) {\n            ans = i;\n  \
    \          break;\n        }\n        i += 2;\n    }\n    return ans;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for (i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long maxPrime = 2;\n    long maxFactor = 1;\n    long\
    \ currFactor = 1;\n    long currPrime = 1;\n    long i = 2;\n    while (i < n)\
    \ {\n        if (n % i == 0) {\n            currFactor = i;\n            currPrime\
    \ = i;\n        }\n        i += 2;\n    }\n    while (currPrime < maxPrime) {\n\
    \        if (currFactor % currPrime == 0) {\n            maxFactor = currFactor;\n\
    \            maxPrime = currPrime;\n        }\n        currPrime += 2;\n    }\n\
    \    return maxFactor;", "    long m = n;\n    long a = 2, b = 2, c = 2, d = 2,\
    \ e = 2;\n    while (m != 1) {\n        while (m % a == 0) {\n            m =\
    \ m / a;\n            ++a;\n        }\n        while (m % b == 0) {\n        \
    \    m = m / b;\n            ++b;\n        }\n        while (m % c == 0) {\n \
    \           m = m / c;\n            ++c;\n        }\n        while (m % d == 0)\
    \ {\n            m = m / d;\n            ++d;\n        }\n        while (m % e\
    \ == 0) {\n            m = m / e;\n            ++e;\n        }\n    }\n    return\
    \ e;", "    long ans = 1;\n    long d = 2;\n    long p = 2;\n    while (d <= n)\
    \ {\n        if (n % d == 0) {\n            ans = d;\n            while (n % d\
    \ == 0) {\n                n /= d;\n            }\n        }\n        else {\n\
    \            d += p;\n            while (n % d == 0) {\n                n /= d;\n\
    \            }\n        }\n        p += 2;\n    }\n    return ans;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long ans = 1;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            ans = i;\n            while (n % i ==\
    \ 0) {\n                n /= i;\n            }\n        }\n        ++i;\n    }\n\
    \    return ans;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ long j = 2;\n            while (j < i) {\n                if (n % j == 0) {\n\
    \                    max_factor = j;\n                    max_factor_index = i;\n\
    \                    break;\n                }\n                j++;\n       \
    \     }\n        }\n        i++;\n    }\n    return max_factor_index;", "    long\
    \ factor = 2;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n\
    \            factor = p;\n            break;\n        }\n        ++p;\n    }\n\
    \    return factor;", "    long ans = 1;\n    long i = 2;\n    while (i <= sqrt(n))\
    \ {\n        if (n % i == 0) {\n            ans = i;\n            while (n % i\
    \ == 0) {\n                n /= i;\n            }\n        }\n        ++i;\n \
    \   }\n    return ans;", "    long p = 2;\n    long q = n;\n    long r = n;\n\
    \    long s = 1;\n    while (q > 0) {\n        if (q % 2 == 0) {\n           \
    \ q = (q / 2);\n            p += 1;\n        } else {\n            q = (3 * q\
    \ + 1) >> 1;\n            p += 2;\n        }\n    }\n    while (p < r) {\n   \
    \     if (n % p == 0) {\n            s = (s * p) >> 1;\n            n /= p;\n\
    \        } else {\n            n /= p;\n        }\n        p += 1;\n    }\n  \
    \  return s;", "    long ans = 1;\n    long p = 2;\n    while (p < n) {\n    \
    \    if (n % p == 0) {\n            ans = p;\n            break;\n        }\n\
    \        p += 1;\n    }\n    return ans;", "    long max_factor = 1;\n    long\
    \ max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n        if (n %\
    \ i == 0) {\n            while (n % i == 0) {\n                n /= i;\n     \
    \           ++i;\n            }\n            if (n > max_factor) {\n         \
    \       max_factor = n;\n                max_factor_index = i;\n            }\n\
    \        }\n        ++i;\n    }\n    return max_factor_index;", "    long ans\
    \ = 1;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            ans = i;\n            while (n % i == 0) {\n                n /=\
    \ i;\n            }\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2; i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            long factor = 1;\n          \
    \  while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long res = 1;\n    long d = 2;\n \
    \   while (d <= n / 2) {\n        if (n % d == 0) {\n            res = d;\n  \
    \          while (n % d == 0) {\n                n /= d;\n            }\n    \
    \    }\n        d++;\n    }\n    return res;", "    long p = 2;\n    long q =\
    \ n;\n    long r = n;\n    while (q != 0) {\n        if (q % 2 == 0) {\n     \
    \       p += 1;\n            q = (q / 2);\n        } else {\n            q = (q\
    \ / 2);\n            r += 1;\n        }\n    }\n    return p;", "    long i =\
    \ 2;\n    long max_i = 1;\n    long max_factor = 1;\n    while (i <= n && max_i\
    \ <= n) {\n        if (n % i == 0) {\n            max_factor = i;\n          \
    \  max_i = i;\n        }\n        i += 2;\n    }\n    return max_factor;", " \
    \   long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 1;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long factor = 1;\n    long i = 2;\n    while (i < n)\
    \ {\n        if (n % i == 0) {\n            factor++;\n            n /= i;\n \
    \       }\n        else {\n            i++;\n        }\n    }\n    return factor;",
  "    long i = 2;\n    long p = 2;\n    while (i <= n / p) {\n        if (n % i ==\
    \ 0) {\n            p = i;\n        }\n        i++;\n    }\n    return p;", " \
    \   long max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2;\
    \ i <= n; i++) {\n        if (n % i == 0) {\n            long factor = 1;\n  \
    \          while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long res = 1;\n    long i = 3;\n \
    \   while (i <= n / i) {\n        if (n % i == 0) {\n            res = i;\n  \
    \          while (n % i == 0) {\n                n /= i;\n            }\n    \
    \    }\n        ++i;\n    }\n    return res;", "    long max_factor = 1;\n   \
    \ long max_factor_index = 0;\n    for (int i = 1; i <= n; i++) {\n        if (n\
    \ % i == 0) {\n            long j = max_factor;\n            while (n % i == 0)\
    \ {\n                n /= i;\n                j++;\n            }\n          \
    \  if (j > max_factor) {\n                max_factor = j;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ i = 2;\n    long max_i = n;\n    while (i < max_i) {\n        if (n % i == 0)\
    \ {\n            max_i = i;\n        }\n        ++i;\n    }\n    return max_i;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    for (long i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long\
    \ factor = i / max_factor;\n            if (factor > max_factor) {\n         \
    \       max_factor = factor;\n                max_factor_index = i;\n        \
    \    }\n        }\n    }\n    return max_factor_index;", "    long ans = 1;\n\
    \    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n           \
    \ ans = i;\n            while (n % i == 0) {\n                n /= i;\n      \
    \      }\n        }\n        i++;\n    }\n    return ans;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    for (int i = 2; i <= n; i++) {\n \
    \       if (n % i == 0) {\n            long factor = i / max_factor;\n       \
    \     if (factor > max_factor) {\n                max_factor = factor;\n     \
    \           max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    long i;\n    for (i = 2; i <= n / 2; ++i) {\n        if (n % i == 0) {\n\
    \            long factor = i / n;\n            if (factor > max_factor) {\n  \
    \              max_factor = factor;\n                max_factor_index = i;\n \
    \           }\n        }\n    }\n    return max_factor_index;", "    long p =\
    \ 2;\n    long q = n;\n    long r = n;\n    long s = 2;\n    while (p <= q) {\n\
    \        if (n % p == 0) {\n            q = q / p;\n            s += p;\n    \
    \    }\n        if (n % q == 0) {\n            p = p / q;\n            s += q;\n\
    \        }\n        p += 1;\n    }\n    return s;", "    long ans = 1;\n    long\
    \ a = n;\n    long b = 2;\n    long c = 1;\n    while (b <= a) {\n        while\
    \ (b % a == 0) {\n            b /= a;\n            ans++;\n        }\n       \
    \ while (b % c == 0) {\n            b /= c;\n            ans++;\n        }\n \
    \       if (b > 1) {\n            ans++;\n        }\n        a *= 2;\n       \
    \ c *= 2;\n    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    for (int i = 1; i < n; i++) {\n        if (n % i == 0) {\n       \
    \     long factor = i / max_factor;\n            if (factor > max_factor) {\n\
    \                max_factor = factor;\n                max_factor_index = i;\n\
    \            }\n        }\n    }\n    return max_factor_index;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            while (n % i == 0) {\n               \
    \ n /= i;\n                max_factor_index = i;\n            }\n        }\n \
    \       i++;\n    }\n    return max_factor_index;", "    long max_factor = 1;\n\
    \    long max_factor_index = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            long j;\n            for (j = i; j <=\
    \ n; j += i) {\n                if (n % j == 0) {\n                    max_factor\
    \ = j;\n                    max_factor_index = i;\n                    break;\n\
    \                }\n            }\n        }\n    }\n    return max_factor_index;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for\
    \ (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long j;\n   \
    \         for (j = i; j <= n; j += i) {\n                if (n % j == 0) {\n \
    \                   max_factor = j;\n                    max_factor_index = i;\n\
    \                    break;\n                }\n            }\n        }\n   \
    \ }\n    return max_factor;", "    long p = 2;\n    long q = n;\n    long r =\
    \ n;\n    while (q > 1) {\n        while (r % p == 0) {\n            q = q / p;\n\
    \        }\n        p = p * q;\n        r = n;\n    }\n    return p;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    for (long i = 2; i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max_factor = 1;\n    long max_factor_index = 0;\n\
    \    for (int i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            long\
    \ temp = max_factor;\n            max_factor = i;\n            max_factor_index\
    \ = i;\n        }\n    }\n    return max_factor;", "    long ans = 1;\n    long\
    \ i = 2;\n    long max = 2;\n    while (i <= n / 2) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            max = i;\n        }\n        i += 2;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n    \
    \        while (n % i == 0) {\n                n /= i;\n                ++i;\n\
    \            }\n            if (max_factor < i) {\n                max_factor\
    \ = i;\n                max_factor_index = i;\n            }\n        }\n    \
    \    ++i;\n    }\n    return max_factor_index;", "    long p = 2;\n    long q\
    \ = n;\n    while (p < q) {\n        while (n % p == 0) {\n            n /= p;\n\
    \        }\n        if (n == 1) {\n            return p;\n        }\n        p++;\n\
    \    }\n    return n;", "    long max_factor = 1;\n    long max_factor_index =\
    \ 0;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n      \
    \      long j = 2;\n            while (j < i) {\n                if (i % j ==\
    \ 0) {\n                    break;\n                }\n                j++;\n\
    \            }\n            if (j > i) {\n                i = j;\n           \
    \ }\n        }\n        i++;\n    }\n    while (max_factor < i) {\n        max_factor\
    \ = i;\n        max_factor_index = i;\n        i++;\n    }\n    return max_factor_index;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for\
    \ (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n            long factor =\
    \ i / max_factor;\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long m = n;\n    long p = 2;\n   \
    \ long q = 3;\n    long r = 2;\n    long s = 3;\n    long t = 2;\n    long u =\
    \ 3;\n    long v = 3;\n    long w = 3;\n    long x = 2;\n    long y = 2;\n   \
    \ long z = 2;\n    long a = 1;\n    long b = 2;\n    long c = 2;\n    long d =\
    \ 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n   \
    \ long i = 0;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m =\
    \ 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n   \
    \ long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v =\
    \ 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n   \
    \ long a = 1;\n    long b = 2;\n    long c = 2;\n    long d = 2;\n    long e =\
    \ 2;\n    long f = 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n   \
    \ long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n =\
    \ 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n   \
    \ long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w =\
    \ 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n   \
    \ long b = 2;\n    long c = 2;\n    long d = 2;\n    long e = 2;\n    long f =\
    \ 3;\n    long g = 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n   \
    \ long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o =\
    \ 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n   \
    \ long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x =\
    \ 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 2;\n   \
    \ long c = 2;\n    long d = 2;\n    long e = 2;\n    long f = 3;\n    long g =\
    \ 3;\n    long h = 3;\n    long i = 0;\n    long j = 1;\n    long k = 1;\n   \
    \ long l = 1;\n    long m = 1;\n    ", "    long ans = 1;\n    long i = 2;\n \
    \   while (i < n) {\n        if (n % i == 0) {\n            ans = i;\n       \
    \     while (n % i == 0) {\n                n /= i;\n            }\n        }\n\
    \        i++;\n    }\n    return ans;", "    long res = 1;\n    long i = 2;\n\
    \    while (i < n) {\n        if (n % i == 0) {\n            res = i;\n      \
    \      n = n / i;\n        }\n        ++i;\n    }\n    return res;", "    long\
    \ i = 2;\n    long max_i = n;\n    long max_factor = 1;\n    while (i <= max_i)\
    \ {\n        if (n % i == 0) {\n            while (n % i == 0) {\n           \
    \     n /= i;\n                max_factor++;\n            }\n        }\n     \
    \   i++;\n    }\n    return max_factor;", "    long ans = 1;\n    long p = 2;\n\
    \    while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n      \
    \      break;\n        }\n        p++;\n    }\n    return ans;", "    long factor\
    \ = 2;\n    long limit = sqrt(n);\n    long i = 3;\n    while (i <= limit) {\n\
    \        if (n % i == 0) {\n            factor = i;\n            break;\n    \
    \    }\n        i += 2;\n    }\n    return factor;", "    long ans = 1;\n    long\
    \ i = 2;\n    while (i <= n / i) {\n        if (n % i == 0) {\n            ans\
    \ = i;\n            break;\n        }\n        i += 2;\n    }\n    return ans;",
  "    long m = n;\n    long a = 1;\n    long b = 2;\n    long c = 1;\n    long d\
    \ = 2;\n    long e = 2;\n    long f = 3;\n    long g = 3;\n    long h = 2;\n \
    \   long i = 2;\n    long j = 2;\n    long k = 2;\n    long l = 2;\n    long m\
    \ = 2;\n    long n = 2;\n    long o = 2;\n    long p = 2;\n    long q = 2;\n \
    \   long r = 2;\n    long s = 2;\n    long t = 2;\n    long u = 2;\n    long v\
    \ = 2;\n    long w = 2;\n    long x = 2;\n    long y = 2;\n    long z = 2;\n \
    \   long A = 2;\n    long B = 2;\n    long C = 2;\n    long D = 2;\n    long E\
    \ = 2;\n    long F = 3;\n    long G = 3;\n    long H = 2;\n    long I = 2;\n \
    \   long J = 2;\n    long K = 2;\n    long L = 2;\n    long M = 2;\n    long N\
    \ = 2;\n    long O = 2;\n    long P = 2;\n    long Q = 2;\n    long R = 2;\n \
    \   long S = 2;\n    long T = 2;\n    long U = 2;\n    long V = 2;\n    long W\
    \ = 2;\n    long X = 2;\n    long Y = 2;\n    long Z = 2;\n    long AA = 2;\n\
    \    long AB = 2;\n    long AC = 2;\n    long AD = 2;\n    long AE = 2;\n    long\
    \ AF = 3;\n    long AG = 3;\n    long AH = 2;\n    long AI = 2;\n    long AJ =\
    \ 2;\n    long AK = 2;\n    long AL = 2;\n    long AM = 2;\n    long AN = 2;\n\
    \    long AO = 2;\n    long AP = 2;\n    long AQ = 2;\n    long AR = 2;\n    long\
    \ AS = 2;\n    long AT = 2;\n    long AU = 2;\n    long AV = 2;\n    long AW =\
    \ 2;\n    long AX = 2;\n    long AY = 2;\n    long AZ = 2;\n    long BA = 2;\n\
    \    long BB = 2;\n    long BC = 2;\n    long BD = 2;\n    long BE = 2;\n    long\
    \ BF = 3;\n    long BG = 3;\n    long BH = 2;\n    long BI = 2;\n    long BJ =\
    \ 2;\n    long BK = 2;\n    long BL = 2;\n    long BM = 2;\n    long BN = 2;\n\
    \    long BO = 2;\n    long BP = 2;\n    long BQ = 2;\n    long BR = 2;\n    long\
    \ BS = 2;\n    long BT = 2;\n    long BU = 2;\n    long BV = 2;\n    ", "    long\
    \ ans = 1;\n    long d = 2;\n    while (d < n) {\n        while (n % d == 0) {\n\
    \            ans = d;\n            n /= d;\n        }\n        d++;\n    }\n \
    \   return ans;", "    long i = 2;\n    long largest = i;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            largest = i;\n        }\n        i +=\
    \ 2;\n    }\n    return largest;", "    long p = 2;\n    long q = n;\n    while\
    \ (p < q) {\n        if (n % p == 0) {\n            q = n / p;\n        } else\
    \ {\n            p = p * 2;\n        }\n    }\n    return p;", "    long ans =\
    \ 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n      \
    \      ans = p;\n            break;\n        }\n        p += 2;\n    }\n    return\
    \ ans;", "    long ans = 1;\n    long d = 2;\n    long p = 2;\n    while (d <=\
    \ n) {\n        if (n % d == 0) {\n            ans = d;\n            while (n\
    \ % d == 0) {\n                n /= d;\n            }\n        }\n        else\
    \ {\n            d += p;\n            p += 2;\n        }\n    }\n    return ans;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 1; i\
    \ <= n; i++) {\n        if (n % i == 0) {\n            long factor = 1;\n    \
    \        while (n % i == 0) {\n                n /= i;\n                factor++;\n\
    \            }\n            if (factor > max_factor) {\n                max_factor\
    \ = factor;\n                max_factor_index = i;\n            }\n        }\n\
    \    }\n    return max_factor_index;", "    long p = 2;\n    long q = n;\n   \
    \ long r = n;\n    long s = 1;\n    while (p < q) {\n        while (r % p == 0)\
    \ {\n            r /= p;\n        }\n        while (r % q == 0) {\n          \
    \  r /= q;\n        }\n        if (r > 1) {\n            s *= p;\n        }\n\
    \        p += 1;\n        q += 1;\n    }\n    return s;", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    long i = 2;\n    while (i < n) {\n\
    \        if (n % i == 0) {\n            while (n % i == 0) {\n               \
    \ n /= i;\n                max_factor_index = i;\n            }\n        }\n \
    \       i++;\n    }\n    return max_factor_index;", "    long ans = 1;\n    long\
    \ p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n\
    \            break;\n        }\n        p += 1;\n    }\n    return ans;", "  \
    \  long ans = 1;\n    long d = 2;\n    while (d < n) {\n        if (n % d == 0)\
    \ {\n            ans = d;\n            while (n % d == 0) {\n                n\
    \ /= d;\n            }\n        }\n        d += 2;\n    }\n    return ans;", " \
    \   long max_factor = 1;\n    long max_factor_index = 0;\n    long i;\n    for\
    \ (i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n            long j;\n\
    \            for (j = i; j <= n / i; j++) {\n                if (n % j == 0) {\n\
    \                    break;\n                }\n            }\n            if\
    \ (j > max_factor) {\n                max_factor = j;\n                max_factor_index\
    \ = i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ max_factor = 1;\n    long max_factor_index = 0;\n    for (int i = 1; i <= n;\
    \ i++) {\n        if (n % i == 0) {\n            long factor = i / max_factor;\n\
    \            if (factor > max_factor) {\n                max_factor = factor;\n\
    \                max_factor_index = i;\n            }\n        }\n    }\n    return\
    \ max_factor_index;", "    long max = 2;\n    long p = 2;\n    while (p * p <=\
    \ n) {\n        if (n % p == 0) {\n            max = p;\n        }\n        p++;\n\
    \    }\n    return max;", "    long i = 2;\n    long max_factor = 1;\n    while\
    \ (i < n) {\n        if (n % i == 0) {\n            max_factor = i;\n        }\n\
    \        i += 2;\n    }\n    return max_factor;", "    long p = 2;\n    long q\
    \ = n;\n    long r = n;\n    long s = 1;\n    long t = 0;\n    long u = 1;\n \
    \   long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z\
    \ = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n \
    \   long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i\
    \ = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n \
    \   long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n \
    \   long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a\
    \ = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n \
    \   long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j\
    \ = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n \
    \   long o = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n \
    \   long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k\
    \ = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n \
    \   long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t\
    \ = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n \
    \   long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c\
    \ = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n \
    \   long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long ", "    long factor = 1;\n    long p = 2;\n\
    \    while (p < n && n % p == 0) {\n        factor = p;\n        n /= p;\n   \
    \     p++;\n    }\n    return factor;", "    long ans = 1;\n    long i = 2;\n\
    \    while (i < n) {\n        if (n % i == 0) {\n            ans = i;\n      \
    \      break;\n        }\n        i += 2;\n    }\n    return ans;", "    long\
    \ ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0) {\n\
    \            ans = i;\n            while (n % i == 0) {\n                n /=\
    \ i;\n            }\n        }\n        i++;\n    }\n    return ans;", "    long\
    \ long ans = 1;\n    long long i = 2;\n    while (i <= n / i) {\n        if (n\
    \ % i == 0) {\n            ans = i;\n            break;\n        }\n        i\
    \ += 2;\n    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i = 2;\n    while (i <= n / 2) {\n        if (n % i == 0) {\n\
    \            long j = i;\n            while (j <= n / i) {\n                if\
    \ (n % j == 0) {\n                    max_factor = i;\n                    max_factor_index\
    \ = j;\n                    break;\n                }\n                j++;\n\
    \            }\n        }\n        i++;\n    }\n    return max_factor;", "   \
    \ long i = 2;\n    long max_i = n;\n    while (i < max_i) {\n        if (n % i\
    \ == 0) {\n            while (n % i == 0) {\n                n /= i;\n       \
    \     }\n            if (n > 1) {\n                max_i = i;\n            }\n\
    \        }\n        ++i;\n    }\n    return max_i;", "    long i, max_factor =\
    \ 1;\n    for (i = 2; i <= n / 2; i++) {\n        if (n % i == 0) {\n        \
    \    max_factor = i;\n        }\n    }\n    return max_factor;", "    long ans\
    \ = 1;\n    long p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n    \
    \        ans = p;\n            break;\n        }\n        p += 2;\n    }\n   \
    \ return ans;", "    long max = 2;\n    long cur = 3;\n    while (cur < n) {\n\
    \        while (n % cur == 0) {\n            n /= cur;\n            max++;\n \
    \       }\n        cur++;\n    }\n    return max;", "    long ans = 1;\n    long\
    \ p = 2;\n    while (p < n) {\n        if (n % p == 0) {\n            ans = p;\n\
    \            break;\n        }\n        p += 1;\n    }\n    return ans;", "  \
    \  long ans = 1;\n    long i = 2;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            ans = i;\n            while (ans % i == 0) {\n              \
    \  ans /= i;\n            }\n        }\n        i++;\n    }\n    return ans;",
  "    long p = 2;\n    long q = n;\n    long r = n;\n    long m = 1;\n    long s\
    \ = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n \
    \   long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b\
    \ = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n \
    \   long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k\
    \ = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n \
    \   long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t\
    \ = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n \
    \   long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c\
    \ = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n \
    \   long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l\
    \ = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u\
    \ = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n \
    \   long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d\
    \ = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n \
    \   long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m\
    \ = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n \
    \   long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v\
    \ = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n \
    \   long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e\
    \ = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n \
    \   long j = 1;\n    long k = 1;\n    long l = 1;\n    long ", "    long max_factor\
    \ = 1;\n    long max_factor_index = 0;\n    for (long i = 2; i <= n; i++) {\n\
    \        if (n % i == 0) {\n            long j = max_factor;\n            while\
    \ (n % i == 0) {\n                n /= i;\n                j++;\n            }\n\
    \            if (j > max_factor) {\n                max_factor = j;\n        \
    \        max_factor_index = i;\n            }\n        }\n    }\n    return max_factor_index;",
  "    long i = 2;\n    long largest = n;\n    while (i <= largest) {\n        if\
    \ (n % i == 0) {\n            largest = i;\n        }\n        ++i;\n    }\n \
    \   return largest;", "    long ans = 1;\n    long i = 2;\n    while (i <= n /\
    \ 2) {\n        if (n % i == 0) {\n            ans = i;\n            while (n\
    \ % i == 0) {\n                n /= i;\n            }\n        }\n        ++i;\n\
    \    }\n    return ans;", "    long max_factor = 1;\n    long max_factor_index\
    \ = 0;\n    long i;\n    for (i = 2; i <= n; i++) {\n        if (n % i == 0) {\n\
    \            long factor = i / max_factor;\n            if (factor > max_factor)\
    \ {\n                max_factor = factor;\n                max_factor_index =\
    \ i;\n            }\n        }\n    }\n    return max_factor_index;", "    long\
    \ i = 2;\n    long largest = i;\n    while (i < n) {\n        if (n % i == 0)\
    \ {\n            largest = i;\n        }\n        i += 2;\n    }\n    return largest;",
  "    long max_factor = 1;\n    long max_factor_index = 0;\n    long i = 2;\n   \
    \ while (i <= sqrt(n)) {\n        if (n % i == 0) {\n            long j = sqrt(n);\n\
    \            while (j % i == 0) {\n                j++;\n            }\n     \
    \       if (j > max_factor) {\n                max_factor = j;\n             \
    \   max_factor_index = i;\n            }\n        }\n        i++;\n    }\n   \
    \ return max_factor_index;"]
stop_tokens:
- "\n}"

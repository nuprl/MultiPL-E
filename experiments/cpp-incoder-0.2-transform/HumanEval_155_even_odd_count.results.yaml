language: cpp
name: HumanEval_155_even_odd_count
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num = num / 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpi3u3yhef: /tmp/tmpi3u3yhef.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp8k792n94: /tmp/tmp8k792n94.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        num /= 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpordwpvq3: /tmp/tmpordwpvq3.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppfhwjl5l: /tmp/tmppfhwjl5l.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num = num / 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpi3u3yhef: /tmp/tmpi3u3yhef.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkjve4uie: /tmp/tmpkjve4uie.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        if (tmp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp6l99e_vp: /tmp/tmp6l99e_vp.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpd69bfai6: /tmp/tmpd69bfai6.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpysdygkne: /tmp/tmpysdygkne.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpsvvibcbe: /tmp/tmpsvvibcbe.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long rem = temp % 10;\n        temp /= 10;\n        if (rem % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \  }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpefplfqb3: /tmp/tmpefplfqb3.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1mnl_plc: /tmp/tmp1mnl_plc.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        temp /= 10;\n        if (digit % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpb7svvalj: /tmp/tmpb7svvalj.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        int digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpiedybiyv: /tmp/tmpiedybiyv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long rem = temp % 10;\n        even = even * 10 + rem;\n        temp\
    \ = temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n        long\
    \ rem = temp % 10;\n        odd = odd * 10 + rem;\n        temp = temp / 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp603fxsr2: /tmp/tmp603fxsr2.cpp:27: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmphviqztio: /tmp/tmphviqztio.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        int digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpiedybiyv: /tmp/tmpiedybiyv.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmps07mrzgv: /tmp/tmps07mrzgv.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp > 0)\
    \ {\n        long long remainder = temp % 10;\n        if (remainder % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      temp /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpft7sgxfp: /tmp/tmpft7sgxfp.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1mnl_plc: /tmp/tmp1mnl_plc.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmptupxpcdu: /tmp/tmptupxpcdu.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8hatk9u: /tmp/tmpl8hatk9u.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgw22xmoq: /tmp/tmpgw22xmoq.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmps07mrzgv: /tmp/tmps07mrzgv.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpih8dldtk: /tmp/tmpih8dldtk.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpt3trx1d0: /tmp/tmpt3trx1d0.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long rem = temp % 10;\n        if (rem % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp = temp / 10;\n\
    \    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp_alzes09: /tmp/tmp_alzes09.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        temp = temp / 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpqn3ain5m: /tmp/tmpqn3ain5m.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv9a_kwps: /tmp/tmpv9a_kwps.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpe2yodk_b: /tmp/tmpe2yodk_b.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n        else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv6m47wka: /tmp/tmpv6m47wka.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkjve4uie: /tmp/tmpkjve4uie.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp != 0)\
    \ {\n        long long mod = temp % 10;\n        if (mod % 2 == 0) {\n       \
    \     even++;\n        } else {\n            odd++;\n        }\n        temp /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto\
    \ candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpf4asgg5j: /tmp/tmpf4asgg5j.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppfhwjl5l: /tmp/tmppfhwjl5l.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8hatk9u: /tmp/tmpl8hatk9u.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num /= 10;\n        if (temp % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpsuh3v13n: /tmp/tmpsuh3v13n.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1mnl_plc: /tmp/tmp1mnl_plc.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num = num / 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpi3u3yhef: /tmp/tmpi3u3yhef.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgw22xmoq: /tmp/tmpgw22xmoq.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpih8dldtk: /tmp/tmpih8dldtk.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpih8dldtk: /tmp/tmpih8dldtk.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n\
    \    assert(candidate((7)) == (std::make_tuple(0, 1)));\n    assert(candidate((-78))\
    \ == (std::make_tuple(1, 1)));\n    assert(candidate((3452)) == (std::make_tuple(2,\
    \ 2)));\n    assert(candidate((346211)) == (std::make_tuple(3, 3)));\n    assert(candidate((-345821))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-2)) == (std::make_tuple(1,\
    \ 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2, 3)));\n    assert(candidate((0))\
    \ == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpkjve4uie: /tmp/tmpkjve4uie.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        even = even * 10 + rem;\n        odd = odd * 10 + rem % 10;\n \
    \       num = num / 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint\
    \ main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) ==\
    \ (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkyroe82c: /tmp/tmpkyroe82c.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv9a_kwps: /tmp/tmpv9a_kwps.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num = num / 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmps07mrzgv: /tmp/tmps07mrzgv.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main() {\n\
    \    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpg0aamjyp: /tmp/tmpg0aamjyp.cpp:30: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmprzihy06e: /tmp/tmprzihy06e.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long rem = temp % 10;\n        if (rem % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpi825snuy: /tmp/tmpi825snuy.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num %\
    \ 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else {\n  \
    \          odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpv9a_kwps: /tmp/tmpv9a_kwps.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num %\
    \ 10;\n        even = even * 10 + rem;\n        odd = odd * 10 + rem % 10;\n \
    \       num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmph_q1g26j: /tmp/tmph_q1g26j.cpp:21: int main(): Assertion `candidate((7))
    == (std::make_tuple(0, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num /= 10;\n        if (temp % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpsuh3v13n: /tmp/tmpsuh3v13n.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp = num %\
    \ 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else {\n \
    \           odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmppfhwjl5l: /tmp/tmppfhwjl5l.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num = num / 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmphviqztio: /tmp/tmphviqztio.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8hatk9u: /tmp/tmpl8hatk9u.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);\n}\nint main()\
    \ {\n    auto candidate = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0,\
    \ 1)));\n    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp6_hzm4w4: /tmp/tmp6_hzm4w4.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmp1mnl_plc: /tmp/tmp1mnl_plc.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpkdfpa85e: /tmp/tmpkdfpa85e.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpgw22xmoq: /tmp/tmpgw22xmoq.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpltv6igh1: /tmp/tmpltv6igh1.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n\
    \        long rem = temp % 10;\n        temp /= 10;\n        if (rem % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \  }\n    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate\
    \ = even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n\
    \    assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmp4vjkwviz: /tmp/tmp4vjkwviz.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        num /= 10;\n        if (temp % 2 == 0) {\n            even++;\n     \
    \   } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpsuh3v13n: /tmp/tmpsuh3v13n.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116253
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpt3trx1d0: /tmp/tmpt3trx1d0.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpl8hatk9u: /tmp/tmpl8hatk9u.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpr2h728qf: /tmp/tmpr2h728qf.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmprzihy06e: /tmp/tmprzihy06e.cpp:32: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        if (tmp % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpysdygkne: /tmp/tmpysdygkne.cpp:31: int main(): Assertion `candidate((0))
    == (std::make_tuple(1, 0))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);\n}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
    \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
    \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
    \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
    \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
    \ 0)));\n}\n"
  status: Exception
  stderr: 'tmpzxs4l9_d: /tmp/tmpzxs4l9_d.cpp:25: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
    \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
    // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
    // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n\
    \    long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n \
    \       long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);\n}\nint main() {\n    auto candidate =\
    \ even_odd_count;\n    assert(candidate((7)) == (std::make_tuple(0, 1)));\n  \
    \  assert(candidate((-78)) == (std::make_tuple(1, 1)));\n    assert(candidate((3452))\
    \ == (std::make_tuple(2, 2)));\n    assert(candidate((346211)) == (std::make_tuple(3,\
    \ 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3, 3)));\n    assert(candidate((-2))\
    \ == (std::make_tuple(1, 0)));\n    assert(candidate((-45347)) == (std::make_tuple(2,\
    \ 3)));\n    assert(candidate((0)) == (std::make_tuple(1, 0)));\n}\n"
  status: Exception
  stderr: 'tmpd5g8b8zz: /tmp/tmpd5g8b8zz.cpp:26: int main(): Assertion `candidate((-78))
    == (std::make_tuple(1, 1))'' failed.

    '
  stdout: ''
  timestamp: 1660116254

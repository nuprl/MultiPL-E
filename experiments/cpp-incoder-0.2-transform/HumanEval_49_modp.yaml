name: HumanEval_49_modp
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return 2^n modulo p (be aware\
  \ of numerics).\n// >>> modp((3), (5))\n// (3)\n// >>> modp((1101), (101))\n// (2)\n\
  // >>> modp((0), (101))\n// (1)\n// >>> modp((3), (11))\n// (8)\n// >>> modp((100),\
  \ (101))\n// (1)\nlong modp(long n, long p) {\n"
tests: "}\nint main() {\n    auto candidate = modp;\n    assert(candidate((3), (5))\
  \ == (3));\n    assert(candidate((1101), (101)) == (2));\n    assert(candidate((0),\
  \ (101)) == (1));\n    assert(candidate((3), (11)) == (8));\n    assert(candidate((100),\
  \ (101)) == (1));\n    assert(candidate((30), (5)) == (4));\n    assert(candidate((31),\
  \ (5)) == (3));\n}\n"
completions: ["    long res = 1;\n    while (n != 0) {\n        if (n & 1)\n     \
    \       res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n   \
    \ }\n    return res;", "    long r = 1;\n    while (n) {\n        if ((n&1) !=\
    \ 0) r *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long\
    \ ans = 1;\n    while (n > p) {\n        ans = (ans * n) % p;\n        n = (n\
    \ * n) % p;\n    }\n    return ans;", "    long r = 1;\n    while (n) {\n    \
    \    if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long res = 1;\n  \
    \  while (p > 1) {\n        if (p & 1) res = (res * n) % p;\n        n /= p;\n\
    \        p /= 2;\n    }\n    return res;", "  assert(p > 0);\n  long r = 1;\n\
    \  for (long i = 1; i < p; i++) {\n    r = (r * n) % p;\n  }\n  return r;", " \
    \   long res = 1;\n    while (n) {\n        if (n&1) res = (res * p) % p;\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "    long\
    \ r = 1;\n    while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>=\
    \ 1;\n    p *= p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (n > 0) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n \
    \ return r;", "    long res = 1;\n    while (p > 1) {\n        if (p & 1) {\n\
    \            res = (res * n) % p;\n        }\n        n = ((n * n) % p) % p;\n\
    \        p >>= 1;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n\
    \        if ((n & 1) == 1)\n            r = (r * p) % p;\n        n >>= 1;\n \
    \       p = (p * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while\
    \ (n) {\n        if (n&1) ans = (ans*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return ans;", "  assert(p > 0);\n  long res = 1;\n  while (n > p)\
    \ {\n    res *= p;\n    n -= p;\n  }\n  return res + n;", "    long ans = 1;\n\
    \    while (n) {\n        ans = (ans * p) % p;\n        n /= p;\n    }\n    return\
    \ ans;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n    \
    \        r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) %\
    \ p;\n    }\n    return r;", "    long res = 1;\n    while (n) {\n        if (n&1)\
    \ res *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return res;", "   \
    \ long r = 1;\n    while (n) {\n        if (n&1) r += p;\n        n >>= 1;\n \
    \       p >>= 1;\n    }\n    return r;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (n > 0) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n \
    \ return r;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n\
    \      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long res =\
    \ 1;\n    while (p > 1) {\n        if (p & 1) {\n            res = (res * n) %\
    \ p;\n        }\n        n = ((n * n) % p) % p;\n        p /= 2;\n    }\n    return\
    \ res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n    \
    \        r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p * p) %\
    \ p;\n    }\n    return r;", "    long res = 1;\n    while (p > 0) {\n       \
    \ if (p & 1) res = (res * n) % p;\n        n /= p;\n        p /= 2;\n    }\n \
    \   return res;", "    long res = 1;\n    while (n) {\n        if (n&1) res =\
    \ (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ res;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n   \
    \   r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "  long r = 1;\n  while\
    \ (n > 0) {\n    if (n % p == 0) {\n      r = r * p;\n      n /= p;\n    } else\
    \ {\n      r = r * p;\n      n--;\n    }\n  }\n  return r;", "    long res = 1;\n\
    \    while (n) {\n        if (n&1) res = (res*p)%p;\n        n >>= 1;\n      \
    \  p = (p*p)%p;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n\
    \        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n      \
    \  n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n\
    \    while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long res = 1;\n\
    \    while (p > 1) {\n        if (p & 1) res = (res*n) % p;\n        p >>= 1;\n\
    \        n = (n*n) % p;\n    }\n    return res;", "    long res = 1;\n    while\
    \ (n) {\n        if (n&1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;", "    long r = 1;\n    while\
    \ (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while\
    \ (n) {\n        if (n&1) ans = (ans*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return ans;", "    long r = 1;\n    long m = 1;\n    long t = 1;\n\
    \    while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        m\
    \ = (m * t) % p;\n        t *= p;\n        n >>= 1;\n    }\n    return (r * m)\
    \ % p;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n   \
    \   r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long ans = 1;\n\
    \    while (p > 0) {\n        if (p & 1) {\n            ans = (ans * n) % p;\n\
    \        }\n        n /= p;\n        p >>= 1;\n    }\n    return ans;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long res = 1;\n    while (n) {\n        if (n % p) res *= p;\n   \
    \     n /= p;\n    }\n    return res;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return\
    \ r;", "    long r = 1;\n    while (n) {\n        if ((n % p) == 0) {\n      \
    \      n /= p;\n            r *= p;\n        }\n        else {\n            n\
    \ /= p;\n        }\n    }\n    return r;", "    long res = 1;\n    while (p >\
    \ 0) {\n        if (n & p)\n            res = (res * p) % p;\n        p /= 2;\n\
    \    }\n    return res;", "    long res = 1;\n    while (n) {\n        if (n %\
    \ p) {\n            n /= p;\n            res *= p;\n        }\n        else {\n\
    \            n /= p;\n        }\n    }\n    return res;", "    long r = 1;\n \
    \   while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n        n >>=\
    \ 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long res = 1;\n  \
    \  long t = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r\
    \ = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n \
    \   long q = 1;\n    long r = 1;\n    long ", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long r\
    \ = 1;\n    while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n      r *= p;\n   \
    \ n >>= 1;\n    p *= p;\n  }\n  return r;", "  long r = 1;\n  for (long i = 1;\
    \ i < p; i++) {\n    r = r * n % p;\n    n = n / p;\n  }\n  return r;", "  assert(p\
    \ > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>=\
    \ 1;\n    p *= p;\n  }\n  return r;", "    long res = 1;\n    while (n) {\n  \
    \      if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return\
    \ res;", "  long r = 1;\n  while (n != 0) {\n    if (n & 1)\n      r *= p;\n \
    \   n >>= 1;\n    p *= p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n\
    \  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n\
    \  return r;", "  assert(p > 0);\n  long q = p / 2;\n  long r = p % 2;\n  long\
    \ ans = 1;\n  while (q > 0) {\n    long tmp = ans;\n    ans = ans * n + (q % 2)\
    \ * tmp;\n    q /= 2;\n  }\n  if (r == 1) {\n    return ans;\n  } else {\n   \
    \ return ans % p;\n  }", "    long res = 1;\n    while (n) {\n        if (n&1)\n\
    \            res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return res;", "    long r = 1;\n    while (n) {\n        if (n & 1)\
    \ r *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "  long res\
    \ = 1;\n  while (n) {\n    if (n & 1)\n      res *= p;\n    n >>= 1;\n    p *=\
    \ p;\n  }\n  return res;", "    long r = 1;\n    while (n) {\n        if (n&1)\
    \ r += p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;", "    long\
    \ r = 1;\n    while (n) {\n        if (n & 1)\n            r = (r * p) % p;\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long\
    \ res = 1;\n    while (n) {\n        if (n & 1)\n            res = (res * p) %\
    \ p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", " \
    \   long res = 1;\n    while (n) {\n        if (n & 1)\n            res = (res\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;",
  "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n\
    \    n >>= 1;\n    p *= p;\n  }\n  return r;", "  assert(p > 0);\n  long r = 1;\n\
    \  for (; p > 0; p >>= 1) {\n    if (n & p) {\n      r += p;\n    }\n  }\n  return\
    \ r;", "  assert(p > 0);\n  long r = 1;\n  for (long i = 1; i < p; i++) {\n  \
    \  r *= n;\n  }\n  r %= p;\n  return r;", "  assert(p > 0);\n  long res = 1;\n\
    \  while (n != 0) {\n    if (n & 1)\n      res = (res * p) % p;\n    n >>= 1;\n\
    \    p = (p * p) % p;\n  }\n  return res;", "  assert(p > 0);\n  long r = 1;\n\
    \  for (int i = 0; i < p; i++) {\n    r = r * n % p;\n  }\n  return r;", "   \
    \ long res = 1;\n    while (n) {\n        if (n&1)\n            res = (res * p)\
    \ % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", " \
    \ assert(p > 0);\n  long r = 1;\n  for (long i = 1; i < p; i++) {\n    r *= n;\n\
    \  }\n  r %= p;\n  return r;", "    long res = 1;\n    while (p > 1) {\n     \
    \   if (p & 1) res = (res * n) % p;\n        n /= p;\n        p /= 2;\n    }\n\
    \    return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long ans = 1;\n    while (n) {\n    \
    \    if (n % p == 0) {\n            ans = (ans * p) % p;\n        }\n        n\
    \ /= p;\n    }\n    return ans;", "    long r = 1;\n    while (n) {\n        if\
    \ ((n & 1) != 0) {\n            n = n / 2;\n            r = (r * p) % p;\n   \
    \     }\n        p = (p * p) % p;\n        n = (n * 2) % p;\n    }\n    return\
    \ r;", "  assert(p > 0);\n  long r = 1;\n  for (int i = 0; i < p; i++) {\n   \
    \ r = (r * n) % p;\n  }\n  return r;", "    long res = 1;\n    while (n) {\n \
    \       if (n&1) res = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n  \
    \  }\n    return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1)\
    \ != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n       \
    \ p = (p * p) % p;\n    }\n    return r;", "  assert(p > 0);\n  long r = 1;\n\
    \  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n\
    \  return r;", "    long res = 1;\n    while (n) {\n        if (n & 1) res = (res*p)\
    \ % p;\n        n >>= 1;\n        p = (p*p) % p;\n    }\n    return res;", " \
    \ assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n\
    \    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long ans = 1;\n    long t\
    \ = 1;\n    long r = n;\n    long m = 1;\n    long q = 0;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n \
    \   long r = n;\n    long r = n;\n    long r = n;\n    long r = n;\n    long r\
    \ = n;\n    long r = n;\n    ", "  assert(p > 0);\n  long r = 1;\n  while (n >\
    \ 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return r;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n \
    \   p *= p;\n  }\n  return r;", "    long res = 1;\n    while (n > p) {\n    \
    \    res *= p;\n        n -= p;\n    }\n    return res + n;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return\
    \ r;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n\
    \    n /= p;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if\
    \ ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while\
    \ (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n\
    \        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long ans = 1;\n    while (n > p) {\n        ans = (ans * n) % p;\n\
    \        n = (n * n) % p;\n    }\n    return ans;", "    long res = 1;\n    while\
    \ (n > 0) {\n        if (n % p == 0) {\n            res *= p;\n            res\
    \ %= p;\n        }\n        n /= p;\n    }\n    return res;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n\
    \        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long r = 1;\n    while (n) {\n        if ((n&1) != 0) {\n            r = (r*p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p*p) % p;\n    }\n    return\
    \ r;", "    long res = 1;\n    while (n) {\n        if (n&1) res = (res * p) %\
    \ p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", " \
    \   long res = 1;\n    while (n) {\n        if (n%p == 0) res++;\n        n /=\
    \ p;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n        if ((n\
    \ & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n  \
    \      p = (p * p) % p;\n    }\n    return r;", "  assert(p > 0);\n  long r =\
    \ 1;\n  for (long i = 1; i < p; i++) {\n    r = (r * n) % p;\n  }\n  return r;",
  "  assert(p > 0);\n  long r = 1;\n  while (p) {\n    if (p & 1) r = r * n;\n   \
    \ n >>= 1;\n    p >>= 1;\n  }\n  return r;", "  long r = 1;\n  for (int i = 1;\
    \ i < p; i++) {\n    r *= n;\n  }\n  return r;", "  long r = 1;\n  long m = 1;\n\
    \  while (n) {\n    if (n & 1)\n      r = (r * p) % p;\n    m <<= 1;\n    n >>=\
    \ 1;\n  }\n  return (r * m) % p;", "  assert(p > 0);\n  long r = 1;\n  for (long\
    \ i = 1; i < p; ++i) {\n    r *= n;\n  }\n  return r - 1;", "    long res = 1;\n\
    \    while (n) {\n        if (n & 1)\n            res = (res * p) % p;\n     \
    \   n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "  assert(p >\
    \ 0);\n  long r = 1;\n  for (int i = 0; i < p; i++) {\n    r *= n;\n  }\n  return\
    \ r;", "    long ans = 1;\n    while (n) {\n        if (n % p == 0) ans = (ans\
    \ * p + n) % p;\n        n /= p;\n    }\n    return ans;", "  assert(p > 0);\n\
    \  long res = 1;\n  while (n > 0) {\n    if (n % p == 0) {\n      res *= p;\n\
    \      n /= p;\n    } else {\n      res *= p;\n    }\n  }\n  return res;", " \
    \   long ans = 1;\n    while (p > 1) {\n        if (p & 1) {\n            ans\
    \ = (ans * n) % p;\n        }\n        n /= p;\n        p /= 2;\n    }\n    return\
    \ ans;", "    long ans = 1;\n    while (n > p) {\n        ans = (ans * n) % p;\n\
    \        n = (n * n) % p;\n    }\n    return ans;", "    long ans = 1;\n    while\
    \ (p > 1) {\n        if (p & 1) {\n            ans = (ans * n) % p;\n        }\n\
    \        n /= p;\n        p /= 2;\n    }\n    return ans;", "  assert(p > 0);\n\
    \  long r = 1;\n  while (n) {\n    if (n & 1)\n      r += p;\n    n >>= 1;\n \
    \   p >>= 1;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if\
    \ ((n & 1) != 0)\n            r = (r * p) % p;\n        n >>= 1;\n        p =\
    \ (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while (n) {\n   \
    \     if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n\
    \ >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "  assert(p > 0);\n\
    \  long q = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (q > 0) {\n  \
    \  if (n % q == 0) {\n      ans = (ans * q + r) % p;\n    }\n    q--;\n  }\n \
    \ return ans;", "    long res = 1;\n    while (n) {\n        if (n % p) {\n  \
    \          n /= p;\n            res *= p;\n        }\n    }\n    return res;",
  "    long res = 1;\n    while (n) {\n        if (n&1)\n            res = (res *\
    \ p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;",
  "    long r = 1;\n    while (n) {\n        if (n & 1)\n            r = (r * p) %\
    \ p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "   \
    \ long r = 1;\n    while (n) {\n        if ((n & 1) == 1)\n            r = (r\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "  long ans = 1;\n  while (n) {\n    ans = (ans * p) % p;\n    n /= p;\n  }\n  return\
    \ ans;", "    long r = 1;\n    while (n) {\n        if (n & 1)\n            r\
    \ = (r * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n      \
    \      n = n >> 1;\n            r = (r * p) % p;\n        }\n        p = (p *\
    \ p) % p;\n        n = (n * 2) % p;\n    }\n    return r;", "    long res = 1;\n\
    \    while (n > p) {\n        res *= p;\n        n -= p;\n    }\n    return res\
    \ + n;", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    r = r * p %\
    \ n;\n    n /= p;\n  }\n  return r;", "    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n\
    \    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n    long\
    \ b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n\
    \    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n    long\
    \ k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n\
    \    long h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long\
    \ l = 1;\n    long m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n\
    \    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n    long\
    \ u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n\
    \    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long\
    \ e = 1;\n    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n\
    \    long j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long\
    \ n = 1;\n    long ", "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n  \
    \  r = r * p % n;\n    n /= p;\n  }\n  return r;", "    long ans = 1;\n    while\
    \ (n > 0) {\n        ans = (ans * n) % p;\n        n--;\n    }\n    return ans;",
  "    long res = 1;\n    while (p > 0) {\n        if (n & p)\n            res *=\
    \ p;\n        p >>= 1;\n    }\n    return res;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n % p) == 0) return r;\n        r <<= 1;\n        r |= 1;\n\
    \        n >>= 1;\n    }\n    return r;", "    long res = 1;\n    while (p > 0)\
    \ {\n        if (p & 1) res = (res*n) % p;\n        n /= p;\n        p /= 2;\n\
    \    }\n    return res;", "    long r = 1;\n    while (n) {\n        if ((n&1)\
    \ != 0) r *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return r;", " \
    \ assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n & 1)\n      r = (r *\
    \ p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n  return r;", "    long res\
    \ = 1;\n    while (n) {\n        if (n&1) res *= p;\n        n >>= 1;\n      \
    \  p *= p;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n     \
    \   if ((n & 1) != 0)\n            r = (r * p) % p;\n        n >>= 1;\n      \
    \  p = (p * p) % p;\n    }\n    return r;", "    long res = 1;\n    while (n)\
    \ {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n  \
    \  return res;", "    long ans = 1;\n    long t = n;\n    long r = p;\n    long\
    \ m = 1;\n    while (r != 0) {\n        if (r % 2 == 1) {\n            ans = (ans\
    \ * t) % p;\n        }\n        t = ((t * (t - 1)) / 2);\n        r = r / 2;\n\
    \        m = m * 2;\n    }\n    return ans;", "    long res = 1;\n    while (n)\
    \ {\n        if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n\
    \        p = (p * p) % p;\n    }\n    return res;", "  assert(p > 0);\n  long\
    \ r = 1;\n  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return r;",
  "    long res = 1;\n    while (p > 0) {\n        if (n & p)\n            res *=\
    \ p;\n        n /= p;\n        p--;\n    }\n    return res;", "    long r = 1;\n\
    \    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n\
    \        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long ans = 1;\n    long t = n;\n    while (t >= p) {\n        ans = (ans *\
    \ t) % p;\n        t = (t * t) % p;\n    }\n    return ans;", "  long r = 1;\n\
    \  while (p) {\n    if (n & p)\n      r += p;\n    p >>= 1;\n  }\n  return r;",
  "  assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n & 1)\n      r *=\
    \ p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long ans = 1;\n    long\
    \ t = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    long m = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long m = 1;\n    long q = 1;\n    long r = 1;\n    long m = 1;\n    long\
    \ q = 1;\n    long r = 1;\n    ", "    long ans = 1;\n    while (p > 1) {\n  \
    \      if (p & 1) {\n            ans = (ans * n) % p;\n        }\n        n /=\
    \ p;\n        p /= 2;\n    }\n    return ans;", "    long r = 1;\n    long m =\
    \ 1;\n    long t = 1;\n    long q = 1;\n    long r = n;\n    long m = p;\n   \
    \ long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n \
    \   long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long q;\n\
    \    long r;\n    long m;\n    long t;\n    long q;\n    long r;\n    long m;\n\
    \    long t;\n    long q;\n    long r;\n    long m;\n    long t;\n    long ",
  "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\n            r = (r\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "  assert(p > 0);\n  long r = 1;\n  for (long i = 1; i < p; i++) {\n    r = (r *\
    \ n) % p;\n  }\n  return r;", "  long res = 1;\n  while (n != 0) {\n    if (n\
    \ & 1)\n      res = (res * p) % p;\n    n >>= 1;\n    p = (p * p) % p;\n  }\n\
    \  return res;", "    long res = 1;\n    while (p > 1) {\n        if (p & 1) res\
    \ = (res * n) % p;\n        n = ((n * (n % p)) % p) % p;\n        p /= 2;\n  \
    \  }\n    return res;", "  long r = 1;\n  while (p != 0) {\n    if (p & 1) r *=\
    \ n;\n    n /= p;\n    p >>= 1;\n  }\n  return r;", "    long res = 1;\n    while\
    \ (n) {\n        if (n&1) res = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n\
    \    }\n    return res;", "    long res = 1;\n    while (n) {\n        if (n&1)\
    \ res *= p;\n        n >>= 1;\n        p *= p;\n    }\n    return res;", "   \
    \ long ans = 1;\n    while (n > 0) {\n        ans = (ans * p) % p;\n        n--;\n\
    \    }\n    return ans;", "    long res = 1;\n    while (n) {\n        if (n&1)\
    \ res = (res * p)%p;\n        n >>= 1;\n        p = (p * p)%p;\n    }\n    return\
    \ res;", "  assert(p > 0);\n  long q = p / 2;\n  long r = p % 2;\n  long ans =\
    \ 1;\n  while (q > 0) {\n    long t = ans;\n    ans = ans * n + (r / 2) * ans;\n\
    \    r = r / 2;\n    if (r == 0)\n      ans = ans % p;\n    q--;\n  }\n  return\
    \ ans;", "  long res = 1;\n  while (n > p) {\n    res *= p;\n    n -= p;\n  }\n\
    \  return res + n;", "  assert(p > 0);\n  long r = 1;\n  while (n) {\n    if (n\
    \ & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long res = 1;\n    while (n) {\n        if (n & 1)\n            res\
    \ = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ res;", "    long res = 1;\n    while (n) {\n        if (n&1) res = (res*p)%p;\n\
    \        n >>= 1;\n        p = (p*p)%p;\n    }\n    return res;", "  assert(p\
    \ > 0);\n  long res = 1;\n  while (n > 0) {\n    if (n % 2 == 0) {\n      res\
    \ = (res*p + n)/(p+1);\n    }\n    n = n/2;\n    p++;\n  }\n  return res;", " \
    \ long res = 1;\n  while (n > 0) {\n    if (n % p == 0) {\n      res += 1;\n \
    \     n /= p;\n    } else {\n      res += 1;\n      n *= p;\n    }\n  }\n  return\
    \ res;", "    long res = 1;\n    while (n) {\n        if (n & 1)\n           \
    \ res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n  \
    \  return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "    long res = 1;\n    while (n) {\n    \
    \    if (n & 1)\n            res = (res * p) % p;\n        n >>= 1;\n        p\
    \ = (p * p) % p;\n    }\n    return res;", "    long r = 1;\n    while (n) {\n\
    \        if ((n & 1) != 0) {\n            r *= p;\n        }\n        n >>= 1;\n\
    \        p *= p;\n    }\n    return r;", "    long ans = 1;\n    long d = 1;\n\
    \    while (n != 0) {\n        if (n % p == 0) {\n            ans *= p;\n    \
    \        n /= p;\n        }\n        else {\n            ans *= d;\n         \
    \   n /= d;\n        }\n        d *= 10;\n    }\n    return ans;", "    long r\
    \ = 1;\n    long m = 1;\n    while (p > 1) {\n        if (p & 1) r = r * n % p;\n\
    \        n /= p;\n        m /= p;\n        p /= 2;\n    }\n    return r * n %\
    \ p;", "    long res = 1;\n    while (p > 0) {\n        if (p & 1) res = (res\
    \ * n) % p;\n        n /= p;\n        p /= 2;\n    }\n    return res;", "    long\
    \ res = 1;\n    long t = n;\n    long r = p;\n    while (r != 0) {\n        if\
    \ (r & 1) {\n            res = (res * t) % p;\n        }\n        t = t << 1;\n\
    \        r >>= 1;\n    }\n    return res;", "  assert(p > 0);\n  long r = 1;\n\
    \  while (n > 0) {\n    r = r * p % n;\n    n /= p;\n  }\n  return r;", "    long\
    \ r = 1;\n    while (n) {\n        if ((n & 1) != 0) {\n            r = (r * p)\
    \ % p;\n        }\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ r;", "    long ans = 1;\n    while (n) {\n        if (n % p == 0) ans = (ans\
    \ * p + n) % p;\n        n /= p;\n    }\n    return ans;", "  assert(n >= 0);\n\
    \  assert(p >= 0);\n  long r = 1;\n  while (n > 0) {\n    r = r * p % n;\n   \
    \ n /= p;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if ((n\
    \ & 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n  \
    \      p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while (n)\
    \ {\n        if ((n & 1) != 0) {\n            r = (r * p) % p;\n        }\n  \
    \      n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;", "    long ans\
    \ = 1;\n    while (p > 1) {\n        if (n % p == 0) {\n            ans = (ans\
    \ * p) % p;\n        }\n        p /= 2;\n    }\n    return ans;", "  long r =\
    \ 1;\n  while (n) {\n    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n\
    \  }\n  return r;", "    long res = 1;\n    while (n) {\n        if (n&1) res\
    \ = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n    }\n    return res;",
  "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\n            r = (r\
    \ * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return r;",
  "    long r = 1;\n    while (n) {\n        if ((n & 1) == 1) {\n            r *=\
    \ p;\n        }\n        n >>= 1;\n        p *= p;\n    }\n    return r;", " \
    \ assert(p > 0);\n  long r = 1;\n  while (n > 0) {\n    if (n % p == 0) {\n  \
    \    r *= p;\n      n /= p;\n    } else {\n      r *= p;\n      n--;\n    }\n\
    \  }\n  return r;", "    long res = 1;\n    while (n) {\n        if (n&1) res\
    \ = (res*p)%p;\n        n >>= 1;\n        p = (p*p)%p;\n    }\n    return res;",
  "  long r = 1;\n  while (n) {\n    if (n & 1)\n      r = (r * p) % p;\n    n >>=\
    \ 1;\n    p = (p * p) % p;\n  }\n  return r;", "    long res = 1;\n    while (n)\
    \ {\n        if (n&1) res *= p;\n        n >>= 1;\n        p *= p;\n    }\n  \
    \  return res;", "    long r = 1;\n    while (n) {\n        if ((n & 1) != 0)\
    \ {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n        p = (p\
    \ * p) % p;\n    }\n    return r;", "  assert(p > 0);\n  long r = 1;\n  while\
    \ (p) {\n    if (n & 1)\n      r = r * p;\n    n >>= 1;\n    p >>= 1;\n  }\n \
    \ return r;", "    long res = 1;\n    while (p > 0) {\n        if (p & 1) res\
    \ = (res * n) % p;\n        n /= p;\n        p /= 2;\n    }\n    return res;",
  "  assert(p > 0);\n  long r = 1;\n  while (p > 1) {\n    if (n % p == 0)\n     \
    \ r *= p;\n    p /= 2;\n  }\n  return r;", "    long ans = 1;\n    while (p >\
    \ 1) {\n        if (n % p == 0) {\n            ans = ans * p;\n            n /=\
    \ p;\n        } else {\n            ans = ans * p % p;\n        }\n        p--;\n\
    \    }\n    return ans;", "  assert(p > 0);\n  long r = 1;\n  while (p > 1) {\n\
    \    if (n & 1) {\n      r = (r * p) % p;\n    }\n    n >>= 1;\n    p >>= 1;\n\
    \  }\n  return r;", "    long res = 1;\n    while (n) {\n        if (n&1)\n  \
    \          res = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n\
    \    }\n    return res;", "    long r = 1;\n    while (n) {\n        if ((n &\
    \ 1) != 0) {\n            r = (r * p) % p;\n        }\n        n >>= 1;\n    \
    \    p = (p * p) % p;\n    }\n    return r;", "    long r = 1;\n    while (n)\
    \ {\n        if (n % p) r *= p;\n        n /= p;\n    }\n    return r;", "   \
    \ long res = 1;\n    while (p > 0) {\n        if (p & 1)\n            res = (res\
    \ * n) % p;\n        n = ((n * n) % p) % p;\n        p >>= 1;\n    }\n    return\
    \ res;", "  long r = 1;\n  while (p) {\n    if (p & 1) r = r * n;\n    n >>= 1;\n\
    \    p >>= 1;\n  }\n  return r;", "    long r = 1;\n    while (n) {\n        if\
    \ ((n % p) == 0) return r;\n        r <<= 1;\n        n >>= 1;\n    }\n    return\
    \ r;", "    long r = 1;\n    while (n) {\n        if (n & 1) r = r * p;\n    \
    \    n >>= 1;\n        p *= p;\n    }\n    return r;", "  assert(p > 0);\n  long\
    \ q = p / 2;\n  long r = p % 2;\n  long ans = 1;\n  while (q > 0) {\n    long\
    \ t = ans;\n    ans = ans * 2 + n;\n    if (ans < t) {\n      ans = t;\n    }\n\
    \    q--;\n  }\n  if (r == 1) {\n    ans %= p;\n  }\n  return ans;", "    long\
    \ res = 1;\n    while (p > 1) {\n        if (p & 1) {\n            res = (res\
    \ * n) % p;\n        }\n        n = ((n * n) % p) % p;\n        p /= 2;\n    }\n\
    \    return res;", "  assert(n >= 0 && p >= 0);\n  long r = 1;\n  while (n) {\n\
    \    if (n & 1)\n      r *= p;\n    n >>= 1;\n    p *= p;\n  }\n  return r;",
  "    long res = 1;\n    while (n) {\n        if (n&1) res = (res * p) % p;\n   \
    \     n >>= 1;\n        p = (p * p) % p;\n    }\n    return res;", "    long r\
    \ = 1;\n    while (n) {\n        if ((n % p) == 0) {\n            n /= p;\n  \
    \          r *= p;\n        }\n        else {\n            n /= p;\n        }\n\
    \    }\n    return r;", "    long r = 1;\n    while (n) {\n        if ((n&1) !=\
    \ 0) r = (r*p) % p;\n        n >>= 1;\n        p = (p*p) % p;\n    }\n    return\
    \ r;", "    long res = 1;\n    while (n) {\n        if (n & 1)\n            res\
    \ = (res * p) % p;\n        n >>= 1;\n        p = (p * p) % p;\n    }\n    return\
    \ res;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.count(i) == 0) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj9ir6jb.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpqj9ir6jb.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpqj9ir6jb.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpqj9ir6jb.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpqj9ir6jb.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpqj9ir6jb.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpqj9ir6jb.cpp: In function 'int main()':\n/tmp/tmpqj9ir6jb.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqj9ir6jb.cpp:2:\n/tmp/tmpqj9ir6jb.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpqj9ir6jb.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpqj9ir6jb.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8kxiwsc.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi8kxiwsc.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpi8kxiwsc.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpi8kxiwsc.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi8kxiwsc.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmpi8kxiwsc.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmpi8kxiwsc.cpp:\
    \ In function 'int main()':\n/tmp/tmpi8kxiwsc.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi8kxiwsc.cpp:2:\n/tmp/tmpi8kxiwsc.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi8kxiwsc.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n6dg4du.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp8n6dg4du.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp8n6dg4du.cpp: In function 'int main()':\n/tmp/tmp8n6dg4du.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8n6dg4du.cpp:2:\n/tmp/tmp8n6dg4du.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8n6dg4du.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8n6dg4du.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  assert(numbers.size() > 0);\n  std::vector<long> result;\n  std::set<long>\
    \ seen;\n  for (long i : numbers) {\n    if (seen.find(i) == seen.end()) {\n \
    \     result.push_back(i);\n      seen.insert(i);\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpymwmyo8m.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpymwmyo8m.cpp:11:17: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n   for (long i : numbers) {\n                 ^\n/tmp/tmpymwmyo8m.cpp:\
    \ In function 'int main()':\n/tmp/tmpymwmyo8m.cpp:20:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpymwmyo8m.cpp:2:\n/tmp/tmpymwmyo8m.cpp:21:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpymwmyo8m.cpp:22:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpymwmyo8m.cpp:22:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpymwmyo8m.cpp:22:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpymwmyo8m.cpp:22:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpymwmyo8m.cpp:22:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpymwmyo8m.cpp:2:\n/usr/include/c++/4.8.2/bits/"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long count = 1;\n    for (auto n : numbers)\
    \ {\n        if (n != count) {\n            result.push_back(n);\n           \
    \ count++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_duplicates;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,\
    \ (long)4, (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpflcwdq02.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpflcwdq02.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpflcwdq02.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpflcwdq02.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpflcwdq02.cpp: In function 'int main()':\n/tmp/tmpflcwdq02.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpflcwdq02.cpp:2:\n/tmp/tmpflcwdq02.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpflcwdq02.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpflcwdq02.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpflcwdq02.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpflcwdq02.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp174tq0n8.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp174tq0n8.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmp174tq0n8.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmp174tq0n8.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp174tq0n8.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmp174tq0n8.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmp174tq0n8.cpp:\
    \ In function 'int main()':\n/tmp/tmp174tq0n8.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp174tq0n8.cpp:2:\n/tmp/tmp174tq0n8.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp174tq0n8.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp174tq0n8.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp174tq0n8.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp174tq0n8.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp174tq0n8.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmp174tq0n8.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmp174tq0n8.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp174tq0n8.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmp174tq0n8.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmp174tq0n8.cpp:\
    \ In function 'int main()':\n/tmp/tmp174tq0n8.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp174tq0n8.cpp:2:\n/tmp/tmp174tq0n8.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp174tq0n8.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp174tq0n8.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp174tq0n8.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n6dg4du.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp8n6dg4du.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp8n6dg4du.cpp: In function 'int main()':\n/tmp/tmp8n6dg4du.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8n6dg4du.cpp:2:\n/tmp/tmp8n6dg4du.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8n6dg4du.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8n6dg4du.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp174tq0n8.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp174tq0n8.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmp174tq0n8.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmp174tq0n8.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp174tq0n8.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmp174tq0n8.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmp174tq0n8.cpp:\
    \ In function 'int main()':\n/tmp/tmp174tq0n8.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp174tq0n8.cpp:2:\n/tmp/tmp174tq0n8.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp174tq0n8.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp174tq0n8.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp174tq0n8.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n6dg4du.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp8n6dg4du.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp8n6dg4du.cpp: In function 'int main()':\n/tmp/tmp8n6dg4du.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8n6dg4du.cpp:2:\n/tmp/tmp8n6dg4du.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8n6dg4du.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8n6dg4du.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  long long int hash[numbers.size()];\n  for (int i = 0; i < numbers.size();\
    \ i++) {\n    hash[i] = numbers[i];\n  }\n  std::vector<long> result;\n  for (int\
    \ i = 0; i < numbers.size(); i++) {\n    for (int j = i + 1; j < numbers.size();\
    \ j++) {\n      if (hash[i] == hash[j]) {\n        numbers.erase(numbers.begin()\
    \ + j);\n      }\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = remove_duplicates;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,\
    \ (long)4, (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpk5qexvat.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpw2u3uqnj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  assert(!numbers.empty());\n  std::vector<long> result;\n  std::unordered_set<long>\
    \ seen;\n  for (long number : numbers) {\n    if (seen.find(number) == seen.end())\
    \ {\n      seen.insert(number);\n      result.push_back(number);\n    }\n  }\n\
    \  return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjt2toilr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.count(i) == 0) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj9ir6jb.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpqj9ir6jb.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpqj9ir6jb.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpqj9ir6jb.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpqj9ir6jb.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpqj9ir6jb.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpqj9ir6jb.cpp: In function 'int main()':\n/tmp/tmpqj9ir6jb.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqj9ir6jb.cpp:2:\n/tmp/tmpqj9ir6jb.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpqj9ir6jb.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpqj9ir6jb.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8kxiwsc.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi8kxiwsc.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpi8kxiwsc.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpi8kxiwsc.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi8kxiwsc.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmpi8kxiwsc.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmpi8kxiwsc.cpp:\
    \ In function 'int main()':\n/tmp/tmpi8kxiwsc.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi8kxiwsc.cpp:2:\n/tmp/tmpi8kxiwsc.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi8kxiwsc.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n6dg4du.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp8n6dg4du.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp8n6dg4du.cpp: In function 'int main()':\n/tmp/tmp8n6dg4du.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8n6dg4du.cpp:2:\n/tmp/tmp8n6dg4du.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8n6dg4du.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8n6dg4du.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  assert(numbers.size() > 0);\n  std::vector<long> result;\n  std::unordered_set<long>\
    \ seen;\n  for (long i : numbers) {\n    if (seen.find(i) == seen.end()) {\n \
    \     result.push_back(i);\n      seen.insert(i);\n    }\n  }\n  return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5p_k2eu4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa2mmcm4y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \  assert(!numbers.empty());\n  std::vector<long> result;\n  long count = 1;\n\
    \  for (long i : numbers) {\n    if (count < i) {\n      result.push_back(i);\n\
    \      count++;\n    }\n  }\n  return result;\n}\nint main() {\n    auto candidate\
    \ = remove_duplicates;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,\
    \ (long)4, (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp44xe6llh.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Write your code here.\n    std::vector<long> result;\n    for(long i :\
    \ numbers)\n    {\n        for(long j : numbers)\n        {\n            if(i\
    \ == j)\n            {\n                continue;\n            }\n           \
    \ if(i == result[j-1])\n            {\n                result.push_back(i);\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpvvd8rhj8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Create a map to keep track of which numbers we've seen already.\n    std::map<long,\
    \ bool> seen;\n    // Iterate over the input vector.\n    for (auto i : numbers)\
    \ {\n        // If we've seen this number before, remove it from the list.\n \
    \       if (seen.find(i) != seen.end()) {\n            numbers.erase(numbers.begin()\
    \ + seen.find(i)->second);\n        } else {\n            // Otherwise, mark it\
    \ as seen, and add it to the list.\n            seen[i] = true;\n            numbers.push_back(i);\n\
    \        }\n    }\n    return numbers;\n}\nint main() {\n    auto candidate =\
    \ remove_duplicates;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,\
    \ (long)4, (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpq7cxxypl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1xk9_he5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            seen.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpir77g2sc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8kxiwsc.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi8kxiwsc.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpi8kxiwsc.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpi8kxiwsc.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi8kxiwsc.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmpi8kxiwsc.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmpi8kxiwsc.cpp:\
    \ In function 'int main()':\n/tmp/tmpi8kxiwsc.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi8kxiwsc.cpp:2:\n/tmp/tmpi8kxiwsc.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi8kxiwsc.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8n6dg4du.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp8n6dg4du.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmp8n6dg4du.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmp8n6dg4du.cpp: In function 'int main()':\n/tmp/tmp8n6dg4du.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8n6dg4du.cpp:2:\n/tmp/tmp8n6dg4du.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp8n6dg4du.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp8n6dg4du.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmp8n6dg4du.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1xk9_he5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            seen.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpir77g2sc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Create a map of seen elements to keep track of which ones to keep.\n \
    \   std::unordered_map<long, bool> seen;\n    // Iterate through the vector and\
    \ keep track of which elements we've seen.\n    for (long elem : numbers) {\n\
    \        // If we've seen this element before, remove it from the seen list.\n\
    \        if (seen.find(elem) != seen.end()) {\n            seen.erase(elem);\n\
    \        } else {\n            // Otherwise, add it to the seen list.\n      \
    \      seen.insert(std::make_pair(elem, true));\n        }\n    }\n    // Return\
    \ the vector with all the elements we haven't seen before.\n    return std::vector<long>(seen.begin(),\
    \ seen.end());\n}\nint main() {\n    auto candidate = remove_duplicates;\n   \
    \ assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgsbnj6vl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.count(i) == 0) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqj9ir6jb.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpqj9ir6jb.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpqj9ir6jb.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpqj9ir6jb.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpqj9ir6jb.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpqj9ir6jb.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpqj9ir6jb.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpqj9ir6jb.cpp: In function 'int main()':\n/tmp/tmpqj9ir6jb.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpqj9ir6jb.cpp:2:\n/tmp/tmpqj9ir6jb.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpqj9ir6jb.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpqj9ir6jb.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            seen.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbcadbgrg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Create a map of all the numbers in the input vector.\n    std::unordered_map<long,\
    \ bool> seen;\n    // Iterate over the input vector.\n    for (long num : numbers)\
    \ {\n        // If the number hasn't been seen before, add it to the map.\n  \
    \      // Otherwise, mark it as seen and remove it from the map.\n        if (seen.find(num)\
    \ == seen.end()) {\n            seen.insert({num, false});\n            numbers.erase(numbers.begin()\
    \ + numbers.end() - numbers.begin() + 1);\n        }\n    }\n    return numbers;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpszwhgitu.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Sort the input in ascending order.\n    std::sort(numbers.begin(), numbers.end());\n\
    \    // Keep track of how many times each number occurs.\n    std::vector<long>\
    \ counts(numbers.size(), 0);\n    // Iterate through the input numbers, keeping\
    \ track of how many times each number occurs.\n    for (long number : numbers)\
    \ {\n        // Increment the count of the number by 1.\n        counts[number]++;\n\
    \        // If the count of the number has reached 1, remove it from the input.\n\
    \        if (counts[number] == 1) {\n            numbers.erase(std::remove(numbers.begin(),\
    \ numbers.end(), number), numbers.end());\n        }\n    }\n    // Return the\
    \ input with the duplicates removed.\n    return numbers;\n}\nint main() {\n \
    \   auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6ml5xnvl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            seen.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpbcadbgrg.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Create a map of all the unique elements and their counts.\n    std::map<long,\
    \ int> counts;\n    for (long number : numbers) {\n        ++counts[number];\n\
    \    }\n\n    // Create a vector to hold the unique elements.\n    std::vector<long>\
    \ result;\n    for (long number : numbers) {\n        if (counts[number] == 1)\
    \ {\n            result.push_back(number);\n        }\n    }\n\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpog_f50fa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    // Create a map of seen elements to keep track of what elements we saw already.\n\
    \    std::unordered_map<long, bool> seen;\n    // Iterate through the input vector.\n\
    \    for (auto n : numbers) {\n        // If the element hasn't been seen yet,\
    \ add it to the seen map.\n        if (!seen.count(n)) {\n            seen.insert({n,\
    \ false});\n        }\n    }\n    // Iterate through the seen map and copy the\
    \ elements that haven't been seen yet to the output vector.\n    for (auto n :\
    \ seen) {\n        if (!n.second) {\n            numbers.push_back(n);\n     \
    \   }\n    }\n    return numbers;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpnh8l79nl.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long prev = numbers[0];\n    for (long num\
    \ : numbers) {\n        if (num != prev) {\n            result.push_back(prev);\n\
    \            prev = num;\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp6_y7fiq_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp174tq0n8.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp174tq0n8.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmp174tq0n8.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmp174tq0n8.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp174tq0n8.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmp174tq0n8.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmp174tq0n8.cpp:\
    \ In function 'int main()':\n/tmp/tmp174tq0n8.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp174tq0n8.cpp:2:\n/tmp/tmp174tq0n8.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp174tq0n8.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp174tq0n8.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp174tq0n8.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1xk9_he5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp174tq0n8.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmp174tq0n8.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmp174tq0n8.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmp174tq0n8.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmp174tq0n8.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmp174tq0n8.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmp174tq0n8.cpp:\
    \ In function 'int main()':\n/tmp/tmp174tq0n8.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp174tq0n8.cpp:2:\n/tmp/tmp174tq0n8.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmp174tq0n8.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmp174tq0n8.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmp174tq0n8.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpm5nb0yc1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long count = 1;\n    for (long num : numbers)\
    \ {\n        if (num != numbers[count]) {\n            result.push_back(num);\n\
    \            count++;\n        }\n    }\n    return result;\n}\nint main() {\n\
    \    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmphanft0yb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long count = 1;\n    for (auto n : numbers)\
    \ {\n        if (n != count) {\n            result.push_back(n);\n           \
    \ count++;\n        }\n    }\n    return result;\n}\nint main() {\n    auto candidate\
    \ = remove_duplicates;\n    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3, (long)4})))\
    \ == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1,\
    \ (long)4, (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpflcwdq02.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpflcwdq02.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpflcwdq02.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpflcwdq02.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpflcwdq02.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpflcwdq02.cpp: In function 'int main()':\n/tmp/tmpflcwdq02.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpflcwdq02.cpp:2:\n/tmp/tmpflcwdq02.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpflcwdq02.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpflcwdq02.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpflcwdq02.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpflcwdq02.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpbrhlazg3.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpbrhlazg3.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpbrhlazg3.cpp: In function 'int main()':\n/tmp/tmpbrhlazg3.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/tmp/tmpbrhlazg3.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpbrhlazg3.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpbrhlazg3.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpbrhlazg3.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpbrhlazg3.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpbrhlazg3.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            seen.insert(n);\n\
    \            result.push_back(n);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpggo7gsmz.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ num : numbers) {\n        if (seen.find(num) == seen.end()) {\n            seen.insert(num);\n\
    \            result.push_back(num);\n        }\n    }\n    return result;\n}\n\
    int main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi8kxiwsc.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpi8kxiwsc.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpi8kxiwsc.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpi8kxiwsc.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpi8kxiwsc.cpp:10:21: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (long num : numbers) {\n           \
    \          ^\n/tmp/tmpi8kxiwsc.cpp:11:13: error: 'seen' was not declared in this\
    \ scope\n         if (seen.find(num) == seen.end()) {\n             ^\n/tmp/tmpi8kxiwsc.cpp:\
    \ In function 'int main()':\n/tmp/tmpi8kxiwsc.cpp:19:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = remove_duplicates;\n          ^\nIn file\
    \ included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpi8kxiwsc.cpp:2:\n/tmp/tmpi8kxiwsc.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpi8kxiwsc.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpi8kxiwsc.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        result.push_back(num);\n        seen.insert(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc4o6z5et.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ n : numbers) {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp1xk9_he5.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long count = 1;\n    for (auto i : numbers)\
    \ {\n        if (result.empty() || i != result[0]) {\n            result.push_back(i);\n\
    \            count++;\n        } else {\n            while (result.back() == i)\
    \ {\n                result.pop_back();\n                count--;\n          \
    \  }\n        }\n    }\n    return std::move(result);\n}\nint main() {\n    auto\
    \ candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa4v_dzkm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long number\
    \ : numbers) {\n        if (seen.find(number) == seen.end()) {\n            seen.insert(number);\n\
    \            result.push_back(number);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpunc9w8wq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpunc9w8wq.cpp:10:24: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long number : numbers) {\n                \
    \        ^\n/tmp/tmpunc9w8wq.cpp: In function 'int main()':\n/tmp/tmpunc9w8wq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/tmp/tmpunc9w8wq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpunc9w8wq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpunc9w8wq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpunc9w8wq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpunc9w8wq.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpunc9w8wq.cpp:2:\n/usr/include/c"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    long count = 1;\n    for (auto i : numbers)\
    \ {\n        if (result.size() == 0 || result.back() != i) {\n            result.push_back(i);\n\
    \            count++;\n        }\n    }\n    return std::vector<long>(std::begin(result),\
    \ std::begin(result) + count);\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpyi14rj4_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794470
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            seen.insert(i);\n\
    \            result.push_back(i);\n        }\n    }\n    return result;\n}\nint\
    \ main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpir77g2sc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    result.push_back(numbers[0]);\n    for(size_t\
    \ i = 1; i < numbers.size(); ++i) {\n        if(numbers[i] != numbers[i - 1])\
    \ {\n            result.push_back(numbers[i]);\n        }\n    }\n    return result;\n\
    }\nint main() {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpgl9vidw_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794470
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto n : numbers)\
    \ {\n        if (seen.find(n) == seen.end()) {\n            result.push_back(n);\n\
    \            seen.insert(n);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc842ad10.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpc842ad10.cpp:10:15: error: 'n' does not name a type\n     for\
    \ (auto n : numbers) {\n               ^\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpc842ad10.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpc842ad10.cpp: In function 'int main()':\n/tmp/tmpc842ad10.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpc842ad10.cpp:2:\n/tmp/tmpc842ad10.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpc842ad10.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpc842ad10.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpc842ad10.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpc842ad10.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (auto\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn5s9e9ax.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpn5s9e9ax.cpp:9:5: error: 'unordered_set' is not a member of\
    \ 'std'\n     std::unordered_set<long> seen;\n     ^\n/tmp/tmpn5s9e9ax.cpp:9:24:\
    \ error: expected primary-expression before 'long'\n     std::unordered_set<long>\
    \ seen;\n                        ^\n/tmp/tmpn5s9e9ax.cpp:9:24: error: expected\
    \ ';' before 'long'\n/tmp/tmpn5s9e9ax.cpp:10:15: error: 'i' does not name a type\n\
    \     for (auto i : numbers) {\n               ^\n/tmp/tmpn5s9e9ax.cpp:16:5: error:\
    \ expected ';' before 'return'\n     return result;\n     ^\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpn5s9e9ax.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmpn5s9e9ax.cpp: In function 'int main()':\n/tmp/tmpn5s9e9ax.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpn5s9e9ax.cpp:2:\n/tmp/tmpn5s9e9ax.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpn5s9e9ax.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpn5s9e9ax.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \       "
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::unordered_set<long> seen;\n    for (long\
    \ i : numbers) {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpm5nb0yc1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (auto i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmph0nrwiqq.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmph0nrwiqq.cpp:10:15: error: 'i' does not name a type\n     for\
    \ (auto i : numbers) {\n               ^\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ';' before 'return'\n     return result;\n     ^\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5:\
    \ error: expected ';' before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmph0nrwiqq.cpp:16:5: error: expected\
    \ ')' before 'return'\n/tmp/tmph0nrwiqq.cpp: In function 'int main()':\n/tmp/tmph0nrwiqq.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmph0nrwiqq.cpp:2:\n/tmp/tmph0nrwiqq.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmph0nrwiqq.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmph0nrwiqq.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmph0nrwiqq.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclos"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) != seen.end()) {\n            continue;\n\
    \        }\n        seen.insert(num);\n        result.push_back(num);\n    }\n\
    \    return result;\n}\nint main() {\n    auto candidate = remove_duplicates;\n\
    \    assert(candidate((std::vector<long>())) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp5w0zq2sx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659794469
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long num :\
    \ numbers) {\n        if (seen.find(num) == seen.end()) {\n            result.push_back(num);\n\
    \            seen.insert(num);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpujbe5qw_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmpujbe5qw_.cpp:10:21: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long num : numbers) {\n                   \
    \  ^\n/tmp/tmpujbe5qw_.cpp: In function 'int main()':\n/tmp/tmpujbe5qw_.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/tmp/tmpujbe5qw_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmpujbe5qw_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmpujbe5qw_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmpujbe5qw_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmpujbe5qw_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmpujbe5qw_.cpp:2:\n/usr/include/c++/4.8"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// From a list of integers,\
    \ remove all elements that occur more than once.\n// Keep order of elements left\
    \ the same as in the input.\n// >>> remove_duplicates((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)2, (long)4})))\n// (std::vector<long>({(long)1, (long)3,\
    \ (long)4}))\nstd::vector<long> remove_duplicates(std::vector<long> numbers) {\n\
    \    std::vector<long> result;\n    std::set<long> seen;\n    for (long i : numbers)\
    \ {\n        if (seen.find(i) == seen.end()) {\n            result.push_back(i);\n\
    \            seen.insert(i);\n        }\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = remove_duplicates;\n    assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4})));\n    assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)2, (long)4, (long)3, (long)5}))) == (std::vector<long>({(long)1, (long)4,\
    \ (long)5})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptrkphle_.cpp: In function 'std::vector<long int> remove_duplicates(std::vector<long\
    \ int>)':\n/tmp/tmptrkphle_.cpp:10:19: error: range-based 'for' loops are not\
    \ allowed in C++98 mode\n     for (long i : numbers) {\n                   ^\n\
    /tmp/tmptrkphle_.cpp: In function 'int main()':\n/tmp/tmptrkphle_.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = remove_duplicates;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/tmp/tmptrkphle_.cpp:20:43: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()))\
    \ == (std::vector<long>()));\n                                           ^\n/tmp/tmptrkphle_.cpp:21:40:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2,\
    \ (long)3, (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                        ^\n/tmp/tmptrkphle_.cpp:21:77: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)1, (long)2, (long)3,\
    \ (long)4}))) == (std::vector<long>({(long)1, (long)2, (long)3, (long)4})));\n\
    \                                                                            \
    \ ^\n/tmp/tmptrkphle_.cpp:21:77: warning: extended initializer lists only available\
    \ with -std=c++11 or -std=gnu++11 [enabled by default]\n/tmp/tmptrkphle_.cpp:21:77:\
    \ error: no matching function for call to 'std::vector<long int>::vector(<brace-enclosed\
    \ initializer list>)'\n/tmp/tmptrkphle_.cpp:21:77: note: candidates are:\nIn file\
    \ included from /usr/include/c++/4.8.2/vector:64:0,\n                 from /usr/include/c++/4.8.2/queue:61,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n\
    \                 from /tmp/tmptrkphle_.cpp:2:\n/usr/include/c++/4.8.2/b"
  stdout: ''

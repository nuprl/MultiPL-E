name: HumanEval_155_even_odd_count
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given an integer. return\
  \ a tuple that has the number of even and odd digits respectively.\n// Example:\n\
  // >>> even_odd_count((-12))\n// (std::make_tuple(1, 1))\n// >>> even_odd_count((123))\n\
  // (std::make_tuple(1, 2))\nstd::tuple<long, long> even_odd_count(long num) {\n"
tests: "}\nint main() {\n    auto candidate = even_odd_count;\n    assert(candidate((7))\
  \ == (std::make_tuple(0, 1)));\n    assert(candidate((-78)) == (std::make_tuple(1,\
  \ 1)));\n    assert(candidate((3452)) == (std::make_tuple(2, 2)));\n    assert(candidate((346211))\
  \ == (std::make_tuple(3, 3)));\n    assert(candidate((-345821)) == (std::make_tuple(3,\
  \ 3)));\n    assert(candidate((-2)) == (std::make_tuple(1, 0)));\n    assert(candidate((-45347))\
  \ == (std::make_tuple(2, 3)));\n    assert(candidate((0)) == (std::make_tuple(1,\
  \ 0)));\n}\n"
completions: ["    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        num = num / 10;\n        if (temp % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num = num / 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long temp = num % 10;\n        num /= 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        num /= 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd =\
    \ 0;\n    while (num) {\n        long digit = num % 10;\n        num /= 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "  \
    \  long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp\
    \ = num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        num = num / 10;\n        if (temp\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\n       \
    \ else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num /= 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        if (num % 2 == 0) {\n            even++;\n\
    \        }\n        else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num) {\n        long digit = num % 10;\n        if (digit % 2 == 0)\
    \ {\n            even++;\n        } else {\n            odd++;\n        }\n  \
    \      num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp\
    \ = num % 10;\n        if (tmp % 2 == 0) {\n            even++;\n        }\n \
    \       else {\n            odd++;\n        }\n        num /= 10;\n    }\n   \
    \ return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n\
    \            even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n    \
    \    num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n        if (tmp\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n  \
    \      long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n        num\
    \ /= 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n       \
    \     even++;\n        }\n        else {\n            odd++;\n        }\n    \
    \    num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long rem = temp % 10;\n        temp /= 10;\n        if (rem\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n\
    \        num = num / 10;\n        if (tmp % 2 == 0) {\n            even++;\n \
    \       } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        temp\
    \ /= 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        int digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n \
    \       long rem = temp % 10;\n        even = even * 10 + rem;\n        temp =\
    \ temp / 10;\n    }\n    temp = num;\n    while (temp != 0) {\n        long rem\
    \ = temp % 10;\n        odd = odd * 10 + rem;\n        temp = temp / 10;\n   \
    \ }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n \
    \   while (num > 0) {\n        long digit = num % 10;\n        num /= 10;\n  \
    \      if (digit % 2 == 0) {\n            even++;\n        } else {\n        \
    \    odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n       \
    \     even++;\n        }\n        else {\n            odd++;\n        }\n    \
    \    num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long temp = num % 10;\n        if (temp % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        int digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long digit = num % 10;\n        num = num\
    \ / 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp > 0) {\n\
    \        long long remainder = temp % 10;\n        if (remainder % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  temp /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long tmp =\
    \ num % 10;\n        num = num / 10;\n        if (tmp % 2 == 0) {\n          \
    \  even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n        \
    \    even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit = temp\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        if (temp % 2 == 0) {\n            even++;\n        }\n     \
    \   else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num /= 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long digit = num % 10;\n        num = num /\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long tmp = num % 10;\n        if (tmp % 2 == 0) {\n       \
    \     even++;\n        }\n        else {\n            odd++;\n        }\n    \
    \    num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        if (rem % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ = temp / 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        temp = temp / 10;\n       \
    \ if (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp\
    \ = num % 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num /= 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit = temp\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long tmp =\
    \ num % 10;\n        if (tmp % 2 == 0) {\n            even++;\n        }\n   \
    \     else {\n            odd++;\n        }\n        num = num / 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long long temp = num;\n    while (temp\
    \ != 0) {\n        long long mod = temp % 10;\n        if (mod % 2 == 0) {\n \
    \           even++;\n        } else {\n            odd++;\n        }\n       \
    \ temp /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long temp = num % 10;\n      \
    \  if (temp % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long temp = num % 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        num /= 10;\n        if (temp % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long tmp =\
    \ num % 10;\n        num = num / 10;\n        if (tmp % 2 == 0) {\n          \
    \  even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        num = num / 10;\n        if (temp\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long digit = num % 10;\n        if (digit %\
    \ 2 == 0) {\n            even++;\n        } else {\n            odd++;\n     \
    \   }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n  \
    \      if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp != 0) {\n  \
    \      long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n\
    \            even++;\n        } else {\n            odd++;\n        }\n      \
    \  num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    long temp = num;\n    while (temp != 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        }\n        else {\n            odd++;\n        }\n   \
    \     num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even\
    \ = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n     \
    \   if (digit % 2 == 0) {\n            even++;\n        } else {\n           \
    \ odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem\
    \ = num % 10;\n        even = even * 10 + rem;\n        odd = odd * 10 + rem %\
    \ 10;\n        num = num / 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long tmp\
    \ = num % 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num = num / 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        if (num % 2 == 0) {\n            even++;\n        } else {\n    \
    \        odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n         \
    \   even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n    \
    \    long rem = temp % 10;\n        if (rem % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num > 0) {\n        long tmp = num % 10;\n        if (tmp % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long rem = num % 10;\n\
    \        even = even * 10 + rem;\n        odd = odd * 10 + rem % 10;\n       \
    \ num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even =\
    \ 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit\
    \ = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n        }\
    \ else {\n            odd++;\n        }\n        temp /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        num /= 10;\n        if (temp % 2 ==\
    \ 0) {\n            even++;\n        } else {\n            odd++;\n        }\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long temp\
    \ = num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num = num / 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        num /= 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2\
    \ == 0) {\n            even++;\n        }\n        else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num = num / 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n     \
    \       even++;\n        } else {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n        if\
    \ (digit % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n\
    \        }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num) {\n        if (num % 2 == 0) {\n \
    \           even++;\n        }\n        else {\n            odd++;\n        }\n\
    \        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long\
    \ even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num % 10;\n\
    \        if (digit % 2 == 0) {\n            even++;\n        } else {\n      \
    \      odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0,\
    \ odd = 0;\n    while (num) {\n        long digit = num % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n  \
    \      long digit = temp % 10;\n        if (digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n        temp /= 10;\n    }\n\
    \    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while\
    \ (num) {\n        long tmp = num % 10;\n        num = num / 10;\n        if (tmp\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long digit = num % 10;\n        if (digit %\
    \ 2 == 0) {\n            even++;\n        } else {\n            odd++;\n     \
    \   }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", " \
    \   long even = 0, odd = 0;\n    long temp = num;\n    while (temp > 0) {\n  \
    \      if (temp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num >\
    \ 0) {\n        long digit = num % 10;\n        if (digit % 2 == 0) {\n      \
    \      even++;\n        } else {\n            odd++;\n        }\n        num /=\
    \ 10;\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    long temp = num;\n    while (temp > 0) {\n        long digit = temp\
    \ % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        temp /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ != 0) {\n        long rem = temp % 10;\n        temp /= 10;\n        if (rem\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd\
    \ = 0;\n    while (num) {\n        long temp = num % 10;\n        num /= 10;\n\
    \        if (temp % 2 == 0) {\n            even++;\n        } else {\n       \
    \     odd++;\n        }\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num) {\n        long tmp = num % 10;\n \
    \       if (tmp % 2 == 0) {\n            even++;\n        }\n        else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if (digit % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    while (num)\
    \ {\n        long temp = num % 10;\n        if (temp % 2 == 0) {\n           \
    \ even++;\n        } else {\n            odd++;\n        }\n        num /= 10;\n\
    \    }\n    return std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n\
    \    while (num > 0) {\n        long digit = num % 10;\n        if (digit % 2\
    \ == 0) {\n            even++;\n        } else {\n            odd++;\n       \
    \ }\n        num /= 10;\n    }\n    return std::make_tuple(even, odd);", "   \
    \ long even = 0, odd = 0;\n    while (num) {\n        long digit = num % 10;\n\
    \        num /= 10;\n        if (digit % 2 == 0) {\n            even++;\n    \
    \    } else {\n            odd++;\n        }\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long temp =\
    \ num % 10;\n        if (temp % 2 == 0) {\n            even++;\n        }\n  \
    \      else {\n            odd++;\n        }\n        num /= 10;\n    }\n    return\
    \ std::make_tuple(even, odd);", "    long even = 0, odd = 0;\n    long temp =\
    \ num;\n    while (temp > 0) {\n        long digit = temp % 10;\n        if (digit\
    \ % 2 == 0) {\n            even++;\n        } else {\n            odd++;\n   \
    \     }\n        temp /= 10;\n    }\n    return std::make_tuple(even, odd);",
  "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit = num %\
    \ 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else {\n\
    \            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num) {\n        long tmp =\
    \ num % 10;\n        if (tmp % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    while (num > 0) {\n        long digit\
    \ = num % 10;\n        if (digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return std::make_tuple(even,\
    \ odd);", "    long even = 0, odd = 0;\n    long temp = num;\n    while (temp\
    \ > 0) {\n        long digit = temp % 10;\n        if (digit % 2 == 0) {\n   \
    \         even++;\n        } else {\n            odd++;\n        }\n        temp\
    \ /= 10;\n    }\n    return std::make_tuple(even, odd);"]
stop_tokens:
- "\n}"

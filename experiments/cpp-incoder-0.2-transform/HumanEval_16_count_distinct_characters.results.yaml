language: cpp
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplfx6a1sb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmplfx6a1sb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmplfx6a1sb.cpp:\
    \ In function 'int main()':\n/tmp/tmplfx6a1sb.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmplfx6a1sb.cpp:2:\n/tmp/tmplfx6a1sb.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (std::tolower(c) == c) count++;\n    }\n    return count;\n}\nint\
    \ main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpo7l8w2vb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpo7l8w2vb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpo7l8w2vb.cpp:\
    \ In function 'int main()':\n/tmp/tmpo7l8w2vb.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpo7l8w2vb.cpp:2:\n/tmp/tmpo7l8w2vb.cpp:18:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbo7ht_1e.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpbo7ht_1e.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpbo7ht_1e.cpp:11:18:\
    \ error: 'string' is not a class or namespace\n         count += string::npos;\n\
    \                  ^\n/tmp/tmpbo7ht_1e.cpp: In function 'int main()':\n/tmp/tmpbo7ht_1e.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = count_distinct_characters;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbo7ht_1e.cpp:2:\n/tmp/tmpbo7ht_1e.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd41pprco.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpd41pprco.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpd41pprco.cpp:\
    \ In function 'int main()':\n/tmp/tmpd41pprco.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpd41pprco.cpp:2:\n/tmp/tmpd41pprco.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                count++;\n                break;\n    \
    \    }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxmjdc1ia.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpxmjdc1ia.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpxmjdc1ia.cpp:\
    \ In function 'int main()':\n/tmp/tmpxmjdc1ia.cpp:74:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpxmjdc1ia.cpp:2:\n/tmp/tmpxmjdc1ia.cpp:75:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n                count++;\n                break;\n\
    \            case 'B':\n            case 'b':\n                count++;\n    \
    \            break;\n            case 'C':\n            case 'c':\n          \
    \      count++;\n                break;\n            case 'D':\n            case\
    \ 'd':\n                count++;\n                break;\n            case 'E':\n\
    \            case 'e':\n                count++;\n                break;\n   \
    \         case 'F':\n            case 'f':\n                count++;\n       \
    \         break;\n            case 'G':\n            case 'g':\n             \
    \   count++;\n                break;\n            case 'H':\n            case\
    \ 'h':\n                count++;\n                break;\n            case 'I':\n\
    \            case 'i':\n                count++;\n                break;\n   \
    \         case 'J':\n            case 'j':\n                count++;\n       \
    \         break;\n            case 'K':\n            case 'k':\n             \
    \   count++;\n                break;\n            case 'L':\n            case\
    \ 'l':\n                count++;\n                break;\n            case 'M':\n\
    \            case 'm':\n                count++;\n                break;\n   \
    \         case 'N':\n            case 'n':\n                count++;\n       \
    \         break;\n            case 'O':\n            case 'o':\n             \
    \   count++;\n                break;\n            case 'P':\n            case\
    \ 'p':\n                count++;\n                break;\n            case 'Q':\n\
    \            case 'q':\n                count++;\n                break;\n   \
    \         case 'R':\n            case 'r':\n                count++;\n       \
    \         break;\n            case 'S':\n            case 's':\n             \
    \   count++;\n                break;\n            case 'T':\n            case\
    \ 't':\n                count++;\n                break;\n            case 'U':\n\
    \            case 'u':\n                count++;\n                break;\n   \
    \         case 'V':\n            case 'v':\n                count++;\n       \
    \         break;\n            case 'W':\n            case 'w':\n             \
    \   count++;\n                break;\n            case 'X':\n            case\
    \ 'x':\n                count++;\n                break;\n            case 'Y':\n\
    \            case 'y':\n                count++;\n                break;\n   \
    \         case 'Z':\n            case 'z':\n                count++;\n       \
    \         break;\n            default:\n                count++;\n           \
    \     break;\n        }\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp46cwby3m.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp46cwby3m.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp46cwby3m.cpp:\
    \ In function 'int main()':\n/tmp/tmp46cwby3m.cpp:124:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp46cwby3m.cpp:2:\n/tmp/tmp46cwby3m.cpp:125:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == toupper(c)) {\n  \
    \          count++;\n        }\n    }\n    return count;\n}\nint main() {\n  \
    \  auto candidate = count_distinct_characters;\n    assert(candidate((\"\")) ==\
    \ (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp2fkntq8_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd41pprco.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpd41pprco.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpd41pprco.cpp:\
    \ In function 'int main()':\n/tmp/tmpd41pprco.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpd41pprco.cpp:2:\n/tmp/tmpd41pprco.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '_':\n            case '/':\n            case '*':\n       \
    \     case '(':\n            case ')':\n            case '{':\n            case\
    \ '}':\n            case '[':\n            case ']':\n            case '<':\n\
    \            case '>':\n            case '=':\n            case '!':\n       \
    \     case '%':\n            case '&':\n            case '|':\n            case\
    \ '~':\n            case '?':\n            case '^':\n            case '_':\n\
    \            case '`':\n            case '{':\n            case '}':\n       \
    \     case '[':\n            case ']':\n            case '<':\n            case\
    \ '>':\n            case '=':\n            case '!':\n            case '%':\n\
    \            case '&':\n            case '|':\n            case '~':\n       \
    \     case '?':\n            case '^':\n            case '_':\n            case\
    \ '`':\n            case '{':\n            case '}':\n            case '[':\n\
    \            case ']':\n            case '<':\n            case '>':\n       \
    \     case '=':\n            case '!':\n            case '%':\n            case\
    \ '&':\n            case '|':\n            case '~':\n            case '?':\n\
    \            case '^':\n            case '_':\n            case '`':\n       \
    \     case '{':\n            case '}':\n            case '[':\n            case\
    \ ']':\n            case '<':\n            case '>':\n            case '=':\n\
    \            case '!':\n            case '%':\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpo90rio2p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822039
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (auto c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqarxnj4i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'a' && c <= 'z')\
    \ + (c >= 'A' && c <= 'Z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuuzt46_l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'a' && c <= 'z')\
    \ + (c >= 'A' && c <= 'Z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuuzt46_l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplfx6a1sb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmplfx6a1sb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmplfx6a1sb.cpp:\
    \ In function 'int main()':\n/tmp/tmplfx6a1sb.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmplfx6a1sb.cpp:2:\n/tmp/tmplfx6a1sb.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (auto c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpqarxnj4i.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (string[count] == c) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpkigjb7jp.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp85kvoe0o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'a' || c ==\
    \ 'A') ? 1 : 0;\n        count += (c == 'b' || c == 'B') ? 1 : 0;\n        count\
    \ += (c == 'c' || c == 'C') ? 1 : 0;\n        count += (c == 'd' || c == 'D')\
    \ ? 1 : 0;\n        count += (c == 'e' || c == 'E') ? 1 : 0;\n        count +=\
    \ (c == 'f' || c == 'F') ? 1 : 0;\n        count += (c == 'g' || c == 'G') ? 1\
    \ : 0;\n        count += (c == 'h' || c == 'H') ? 1 : 0;\n        count += (c\
    \ == 'i' || c == 'I') ? 1 : 0;\n        count += (c == 'j' || c == 'J') ? 1 :\
    \ 0;\n        count += (c == 'k' || c == 'K') ? 1 : 0;\n        count += (c ==\
    \ 'l' || c == 'L') ? 1 : 0;\n        count += (c == 'm' || c == 'M') ? 1 : 0;\n\
    \        count += (c == 'n' || c == 'N') ? 1 : 0;\n        count += (c == 'o'\
    \ || c == 'O') ? 1 : 0;\n        count += (c == 'p' || c == 'P') ? 1 : 0;\n  \
    \      count += (c == 'q' || c == 'Q') ? 1 : 0;\n        count += (c == 'r' ||\
    \ c == 'R') ? 1 : 0;\n        count += (c == 's' || c == 'S') ? 1 : 0;\n     \
    \   count += (c == 't' || c == 'T') ? 1 : 0;\n        count += (c == 'u' || c\
    \ == 'U') ? 1 : 0;\n        count += (c == 'v' || c == 'V') ? 1 : 0;\n       \
    \ count += (c == 'w' || c == 'W') ? 1 : 0;\n        count += (c == 'x' || c ==\
    \ 'X') ? 1 : 0;\n        count += (c == 'y' || c == 'Y') ? 1 : 0;\n        count\
    \ += (c == 'z' || c == 'Z') ? 1 : 0;\n    }\n    return count;\n}\nint main()\
    \ {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpjwxwp2ch.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822039
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbo7ht_1e.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpbo7ht_1e.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpbo7ht_1e.cpp:11:18:\
    \ error: 'string' is not a class or namespace\n         count += string::npos;\n\
    \                  ^\n/tmp/tmpbo7ht_1e.cpp: In function 'int main()':\n/tmp/tmpbo7ht_1e.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = count_distinct_characters;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbo7ht_1e.cpp:2:\n/tmp/tmpbo7ht_1e.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    long len = string.length();\n    for (long i = 0; i < len; i++)\
    \ {\n        long count = 0;\n        for (long j = 0; j < len; j++) {\n     \
    \       if (i == j) continue;\n            if (string[i] == string[j]) count++;\n\
    \        }\n        ans += count;\n    }\n    return ans;\n}\nint main() {\n \
    \   auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc7wjq_bo.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    long len = string.length();\n    long cur = 0;\n    for (long\
    \ i = 0; i < len; i++) {\n        cur = cur * 26 + string[i] - 'a';\n        ans\
    \ = ans + cur;\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmprzjpscf8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplfx6a1sb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmplfx6a1sb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmplfx6a1sb.cpp:\
    \ In function 'int main()':\n/tmp/tmplfx6a1sb.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmplfx6a1sb.cpp:2:\n/tmp/tmplfx6a1sb.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        if (c == 'a' || c == 'A' ||\
    \ c == 'e' || c == 'E' || c == 'i' || c == 'I' || c == 'o' || c == 'O' || c ==\
    \ 'u' || c == 'U') {\n            count++;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp85kvoe0o.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                assert(false);\n        }\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpfa6f8bf2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ ? 26 : (c >= 'a' && c <= 'z') ? 26 : (c >= '0' && c <= '9') ? 10 : 1;\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpepyipkz2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += count_distinct_characters(string);\n\
    \        if (string::npos != string.find(c)) {\n            count++;\n       \
    \ }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpzflba8dj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822038
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'a' && c <=\
    \ 'z') + (c >= 'A' && c <= 'Z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp88wl73gn.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp88wl73gn.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp88wl73gn.cpp:\
    \ In function 'int main()':\n/tmp/tmp88wl73gn.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp88wl73gn.cpp:2:\n/tmp/tmp88wl73gn.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == c) ? 1 : 0;\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpsp9dmw8g.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpsp9dmw8g.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpsp9dmw8g.cpp:\
    \ In function 'int main()':\n/tmp/tmpsp9dmw8g.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpsp9dmw8g.cpp:2:\n/tmp/tmpsp9dmw8g.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c == 'A' || c ==\
    \ 'a') + (c == 'B' || c == 'b') + (c == 'C' || c == 'c') + (c == 'D' || c == 'd')\
    \ + (c == 'E' || c == 'e') + (c == 'F' || c == 'f') + (c == 'G' || c == 'g') +\
    \ (c == 'H' || c == 'h') + (c == 'I' || c == 'i') + (c == 'J' || c == 'j') + (c\
    \ == 'K' || c == 'k') + (c == 'L' || c == 'l') + (c == 'M' || c == 'm') + (c ==\
    \ 'N' || c == 'n') + (c == 'O' || c == 'o') + (c == 'P' || c == 'p') + (c == 'Q'\
    \ || c == 'q') + (c == 'R' || c == 'r') + (c == 'S' || c == 's') + (c == 'T' ||\
    \ c == 't') + (c == 'U' || c == 'u') \n        + (c == 'V' || c == 'v') + (c ==\
    \ 'W' || c == 'w') + (c == 'X' || c == 'x') + (c == 'Y' || c == 'y') + (c == 'Z'\
    \ || c == 'z');\n    }\n    return count;\n}\nint main() {\n    auto candidate\
    \ = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n    assert(candidate((\"\
    abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpa72x47ti.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822039
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplfx6a1sb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmplfx6a1sb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmplfx6a1sb.cpp:\
    \ In function 'int main()':\n/tmp/tmplfx6a1sb.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmplfx6a1sb.cpp:2:\n/tmp/tmplfx6a1sb.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                count = 0;\n                break;\n  \
    \      }\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpsh_6cif0.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += 1;\n    }\n    return\
    \ count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n \
    \   assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcb37jveg.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpcb37jveg.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpcb37jveg.cpp:\
    \ In function 'int main()':\n/tmp/tmpcb37jveg.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpcb37jveg.cpp:2:\n/tmp/tmpcb37jveg.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z') + (c >= '0' && c <= '9');\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplfx6a1sb.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmplfx6a1sb.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmplfx6a1sb.cpp:\
    \ In function 'int main()':\n/tmp/tmplfx6a1sb.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmplfx6a1sb.cpp:2:\n/tmp/tmplfx6a1sb.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbo7ht_1e.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpbo7ht_1e.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpbo7ht_1e.cpp:11:18:\
    \ error: 'string' is not a class or namespace\n         count += string::npos;\n\
    \                  ^\n/tmp/tmpbo7ht_1e.cpp: In function 'int main()':\n/tmp/tmpbo7ht_1e.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = count_distinct_characters;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbo7ht_1e.cpp:2:\n/tmp/tmpbo7ht_1e.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    long size = string.length();\n    for (long i = 0; i < size; i++)\
    \ {\n        long count = 0;\n        for (long j = i; j < size; j++) {\n    \
    \        if (string[i] == string[j]) {\n                count++;\n           \
    \ }\n        }\n        ans += count;\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpc8l813rb.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659822039
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'a' && c <= 'z')\
    \ + (c >= 'A' && c <= 'Z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmpuuzt46_l.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueType1)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: there are no arguments to \u2018__is_tri"
  stdout: ''
  timestamp: 1659821997
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbo7ht_1e.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpbo7ht_1e.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpbo7ht_1e.cpp:11:18:\
    \ error: 'string' is not a class or namespace\n         count += string::npos;\n\
    \                  ^\n/tmp/tmpbo7ht_1e.cpp: In function 'int main()':\n/tmp/tmpbo7ht_1e.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = count_distinct_characters;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbo7ht_1e.cpp:2:\n/tmp/tmpbo7ht_1e.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd41pprco.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpd41pprco.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpd41pprco.cpp:\
    \ In function 'int main()':\n/tmp/tmpd41pprco.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpd41pprco.cpp:2:\n/tmp/tmpd41pprco.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'B':\n            case 'C':\n            case 'D':\n\
    \            case 'E':\n            case 'F':\n            case 'G':\n       \
    \     case 'H':\n            case 'I':\n            case 'J':\n            case\
    \ 'K':\n            case 'L':\n            case 'M':\n            case 'N':\n\
    \            case 'O':\n            case 'P':\n            case 'Q':\n       \
    \     case 'R':\n            case 'S':\n            case 'T':\n            case\
    \ 'U':\n            case 'V':\n            case 'W':\n            case 'X':\n\
    \            case 'Y':\n            case 'Z':\n            case 'a':\n       \
    \     case 'b':\n            case 'c':\n            case 'd':\n            case\
    \ 'e':\n            case 'f':\n            case 'g':\n            case 'h':\n\
    \            case 'i':\n            case 'j':\n            case 'k':\n       \
    \     case 'l':\n            case 'm':\n            case 'n':\n            case\
    \ 'o':\n            case 'p':\n            case 'q':\n            case 'r':\n\
    \            case 's':\n            case 't':\n            case 'u':\n       \
    \     case 'v':\n            case 'w':\n            case 'x':\n            case\
    \ 'y':\n            case 'z':\n            case '0':\n            case '1':\n\
    \            case '2':\n            case '3':\n            case '4':\n       \
    \     case '5':\n            case '6':\n            case '7':\n            case\
    \ '8':\n            case '9':\n            case '+':\n            case '-':\n\
    \            case '_':\n            case '/':\n            case '=':\n       \
    \     case '!':\n            case '@':\n            case '#':\n            case\
    \ '$':\n            case '%':\n            case '^':\n            case '&':\n\
    \            case '*':\n            case '(':\n            case ')':\n       \
    \     case '[':\n            case ']':\n            case '{':\n            case\
    \ '}':\n            case '|':\n            case '\\\\':\n            case '\"\
    ':\n            case '<':\n            case '>':\n            case '?':\n    \
    \        case '/':\n            case '\\\\':\n            case '|':\n        \
    \    case '`':\n            case '~':\n            case '*':\n            case\
    \ '(':\n            case ')':\n            case '[':\n            case ']':\n\
    \            case '{':\n            case '}':\n            case '|':\n       \
    \     case '\\\\':\n            case '\"':\n            case '<':\n          \
    \  case '>':\n            case '?':\n            case '/':\n            case '\\\
    \\':\n            case '|':\n            case '`':\n            case '~':\n  \
    \          case '*':\n            case '(':\n            case ')':\n         \
    \   case '[':\n            case ']':\n            case '{':\n            case\
    \ '}':\n            case '|':\n            case '\\\\':\n            case '\"\
    ':\n            case '<':\n            case '>':\n            case '?':\n    \
    \        case '/':\n            case '\\\\':\n            case '|':\n        \
    \    case '\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp0ld3w33_.cpp:138:18: warning: missing terminating ' character [enabled\
    \ by default]\n             case '\n                  ^\n/tmp/tmp0ld3w33_.cpp:138:13:\
    \ error: missing terminating ' character\n             case '\n             ^\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/algorithm:61:0,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:65,\n\
    \                 from /tmp/tmp0ld3w33_.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_OI std::__copy_move_a(_II, _II, _OI)\u2019:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __simple = (__is_trivially_copyable(_ValueTypeI)\n                    \
    \                                             ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ error: there are no arguments to \u2018__is_trivially_copyable\u2019 that depend\
    \ on a template parameter, so a declaration of \u2018__is_trivially_copyable\u2019\
    \ must be available [-fpermissive]\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:398:65:\
    \ note: (if you use \u2018-fpermissive\u2019, G++ will accept your code, but allowing\
    \ the use of an undeclared name is deprecated)\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:403:40:\
    \ error: \u2018__simple\u2019 cannot appear in a constant-expression\n       return\
    \ std::__copy_move<_IsMove, __simple,\n                                      \
    \  ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:404:19:\
    \ error: template argument 2 is invalid\n          _Category>::__copy_m(__first,\
    \ __last, __result);\n                   ^\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:\
    \ In function \u2018_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2)\u2019:\n\
    /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:600:65:\
    \ error: expected primary-expression before \u2018)\u2019 token\n       const\
    \ bool __si"
  stdout: ''
  timestamp: 1659822039
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a' +\
    \ 1;\n    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpg89myx5f.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpg89myx5f.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpg89myx5f.cpp:\
    \ In function 'int main()':\n/tmp/tmpg89myx5f.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmpg89myx5f.cpp:2:\n/tmp/tmpg89myx5f.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += string::npos;\n  \
    \  }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpbo7ht_1e.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmpbo7ht_1e.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmpbo7ht_1e.cpp:11:18:\
    \ error: 'string' is not a class or namespace\n         count += string::npos;\n\
    \                  ^\n/tmp/tmpbo7ht_1e.cpp: In function 'int main()':\n/tmp/tmpbo7ht_1e.cpp:16:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = count_distinct_characters;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpbo7ht_1e.cpp:2:\n/tmp/tmpbo7ht_1e.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += tolower(c) - 'a';\n\
    \    }\n    return count;\n}\nint main() {\n    auto candidate = count_distinct_characters;\n\
    \    assert(candidate((\"\")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n\
    \    assert(candidate((\"abcdecadeCADE\")) == (5));\n    assert(candidate((\"\
    aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp11b6mw6l.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp11b6mw6l.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp11b6mw6l.cpp:\
    \ In function 'int main()':\n/tmp/tmp11b6mw6l.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp11b6mw6l.cpp:2:\n/tmp/tmp11b6mw6l.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        switch (c) {\n            case\
    \ 'A':\n            case 'a':\n            case 'B':\n            case 'b':\n\
    \            case 'C':\n            case 'c':\n            case 'D':\n       \
    \     case 'd':\n            case 'E':\n            case 'e':\n            case\
    \ 'F':\n            case 'f':\n            case 'G':\n            case 'g':\n\
    \            case 'H':\n            case 'h':\n            case 'I':\n       \
    \     case 'i':\n            case 'J':\n            case 'j':\n            case\
    \ 'K':\n            case 'k':\n            case 'L':\n            case 'l':\n\
    \            case 'M':\n            case 'm':\n            case 'N':\n       \
    \     case 'n':\n            case 'O':\n            case 'o':\n            case\
    \ 'P':\n            case 'p':\n            case 'Q':\n            case 'q':\n\
    \            case 'R':\n            case 'r':\n            case 'S':\n       \
    \     case 's':\n            case 'T':\n            case 't':\n            case\
    \ 'U':\n            case 'u':\n            case 'V':\n            case 'v':\n\
    \            case 'W':\n            case 'w':\n            case 'X':\n       \
    \     case 'x':\n            case 'Y':\n            case 'y':\n            case\
    \ 'Z':\n            case 'z':\n                count++;\n                break;\n\
    \            default:\n                break;\n        }\n    }\n    return count;\n\
    }\nint main() {\n    auto candidate = count_distinct_characters;\n    assert(candidate((\"\
    \")) == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppj15fwmq.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmppj15fwmq.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmppj15fwmq.cpp:\
    \ In function 'int main()':\n/tmp/tmppj15fwmq.cpp:73:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmppj15fwmq.cpp:2:\n/tmp/tmppj15fwmq.cpp:74:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ count = 0;\n    for (char c : string) {\n        count += (c >= 'A' && c <=\
    \ 'Z') + (c >= 'a' && c <= 'z');\n    }\n    return count;\n}\nint main() {\n\
    \    auto candidate = count_distinct_characters;\n    assert(candidate((\"\"))\
    \ == (0));\n    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"\
    abcdecadeCADE\")) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n\
    \    assert(candidate((\"Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_ir39p3h.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp_ir39p3h.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp_ir39p3h.cpp:\
    \ In function 'int main()':\n/tmp/tmp_ir39p3h.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp_ir39p3h.cpp:2:\n/tmp/tmp_ir39p3h.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a string, find out\
    \ how many distinct characters (regardless of case) does it consist of\n// >>>\
    \ count_distinct_characters((\"xyzXYZ\"))\n// (3)\n// >>> count_distinct_characters((\"\
    Jerry\"))\n// (4)\nlong count_distinct_characters(std::string string) {\n    long\
    \ ans = 0;\n    for (char c : string) {\n        ans += (c >= 'A' && c <= 'Z')\
    \ + (c >= 'a' && c <= 'z');\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = count_distinct_characters;\n    assert(candidate((\"\")) == (0));\n\
    \    assert(candidate((\"abcde\")) == (5));\n    assert(candidate((\"abcdecadeCADE\"\
    )) == (5));\n    assert(candidate((\"aaaaAAAAaaaa\")) == (1));\n    assert(candidate((\"\
    Jerry jERRY JeRRRY\")) == (5));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2wygbj5w.cpp: In function 'long int count_distinct_characters(std::string)':\n\
    /tmp/tmp2wygbj5w.cpp:10:19: error: range-based 'for' loops are not allowed in\
    \ C++98 mode\n     for (char c : string) {\n                   ^\n/tmp/tmp2wygbj5w.cpp:\
    \ In function 'int main()':\n/tmp/tmp2wygbj5w.cpp:16:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = count_distinct_characters;\n        \
    \  ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n           \
    \      from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n   \
    \              from /tmp/tmp2wygbj5w.cpp:2:\n/tmp/tmp2wygbj5w.cpp:17:26: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((\"\")) ==\
    \ (0));\n                          ^\n"
  stdout: ''

name: HumanEval_156_int_to_mini_roman
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer,\
  \ obtain its roman numeral equivalent as a string,\n// and return it in lowercase.\n\
  // Restrictions: 1 <= num <= 1000\n// Examples:\n// >>> int_to_mini_roman((19))\n\
  // (\"xix\")\n// >>> int_to_mini_roman((152))\n// (\"clii\")\n// >>> int_to_mini_roman((426))\n\
  // (\"cdxxvi\")\nstd::string int_to_mini_roman(long number) {\n"
tests: "}\nint main() {\n    auto candidate = int_to_mini_roman;\n    assert(candidate((19))\
  \ == (\"xix\"));\n    assert(candidate((152)) == (\"clii\"));\n    assert(candidate((251))\
  \ == (\"ccli\"));\n    assert(candidate((426)) == (\"cdxxvi\"));\n    assert(candidate((500))\
  \ == (\"d\"));\n    assert(candidate((1)) == (\"i\"));\n    assert(candidate((4))\
  \ == (\"iv\"));\n    assert(candidate((43)) == (\"xliii\"));\n    assert(candidate((90))\
  \ == (\"xc\"));\n    assert(candidate((94)) == (\"xciv\"));\n    assert(candidate((532))\
  \ == (\"dxxxii\"));\n    assert(candidate((900)) == (\"cm\"));\n    assert(candidate((994))\
  \ == (\"cmxciv\"));\n    assert(candidate((1000)) == (\"m\"));\n}\n"
completions: ["    std::string roman;\n    long remainder = number;\n    long counter\
    \ = 1;\n    long romanNum = 0;\n    while (remainder > 0) {\n        remainder\
    \ = remainder / 10;\n        romanNum += (remainder % 10);\n        counter++;\n\
    \    }\n    romanNum = romanNum * counter;\n    roman.push_back(to_string(romanNum));\n\
    \    while (roman.size() > 1) {\n        roman.erase(roman.begin());\n    }\n\
    \    return roman;", "    std::string roman;\n    if (number == 0) {\n       \
    \ roman = \"0\";\n    } else {\n        int num = (int) number;\n        roman\
    \ = \"\";\n        while (number > 0) {\n            int remainder = number %\
    \ 10;\n            roman += to_string(num % 100) + to_string(num % 10) + to_string(remainder);\n\
    \            number /= 10;\n        }\n    }\n    return roman;", "    std::string\
    \ roman;\n    long temp = number;\n    while (temp > 0) {\n        long remainder\
    \ = temp % 10;\n        roman = to_string(remainder) + roman;\n        temp /=\
    \ 10;\n    }\n    return roman;", "    std::string roman;\n    long num = number;\n\
    \    while (num > 0) {\n        long rem = num % 10;\n        roman += mini_roman[rem];\n\
    \        num /= 10;\n    }\n    return roman;", "    std::string roman;\n    long\
    \ temp = number;\n    while (temp > 0) {\n        int digit = temp % 10;\n   \
    \     roman += mini_roman[digit];\n        temp /= 10;\n    }\n    return roman;",
  "    std::string roman;\n    long temp;\n    int i;\n    temp = number;\n    while(temp\
    \ > 0) {\n        i = temp % 10;\n        roman = roman.substr(0, roman.length()\
    \ - 1) + std::to_string(i) + roman.substr(roman.length() - 1);\n        temp /=\
    \ 10;\n    }\n    return roman;", "  assert(number > 0);\n  std::string roman;\n\
    \  if (number == 1)\n    roman = \"I\";\n  else if (number == 2)\n    roman =\
    \ \"II\";\n  else if (number == 3)\n    roman = \"III\";\n  else if (number ==\
    \ 4)\n    roman = \"IV\";\n  else if (number == 5)\n    roman = \"V\";\n  else\
    \ if (number == 6)\n    roman = \"VI\";\n  else if (number == 7)\n    roman =\
    \ \"VII\";\n  else if (number == 8)\n    roman = \"VIII\";\n  else if (number\
    \ == 9)\n    roman = \"IX\";\n  else if (number == 10)\n    roman = \"X\";\n \
    \ else if (number == 11)\n    roman = \"XI\";\n  else if (number == 12)\n    roman\
    \ = \"XII\";\n  else if (number == 13)\n    roman = \"XIII\";\n  else if (number\
    \ == 14)\n    roman = \"XIV\";\n  else if (number == 15)\n    roman = \"XV\";\n\
    \  else if (number == 16)\n    roman = \"XVI\";\n  else if (number == 17)\n  \
    \  roman = \"XVII\";\n  else if (number == 18)\n    roman = \"XVIII\";\n  else\
    \ if (number == 19)\n    roman = \"XIX\";\n  else if (number == 20)\n    roman\
    \ = \"XX\";\n  else if (number == 21)\n    roman = \"XXI\";\n  else if (number\
    \ == 22)\n    roman = \"XXII\";\n  else if (number == 23)\n    roman = \"XXIII\"\
    ;\n  else if (number == 24)\n    roman = \"XXIV\";\n  else if (number == 25)\n\
    \    roman = \"XXV\";\n  else if (number == 26)\n    roman = \"XXVI\";\n  else\
    \ if (number == 27)\n    roman = \"XXVII\";\n  else if (number == 28)\n    roman\
    \ = \"XXVIII\";\n  else if (number == 29)\n    roman = \"XXIX\";\n  else if (number\
    \ == 30)\n    roman = \"XXX\";\n  else if (number == 31)\n    roman = \"XXXI\"\
    ;\n  else if (number == 32)\n    roman = \"XXXII\";\n  else if (number == 33)\n\
    \    roman = \"XXXIII\";\n  else if (number == 34)\n    roman = \"XXXIV\";\n \
    \ else if (number == 35)\n    roman = \"XXXV", "    std::string roman;\n    long\
    \ temp;\n    int i = 1;\n    while (number != 0) {\n        temp = number % 10;\n\
    \        roman += std::to_string(temp);\n        number /= 10;\n        i++;\n\
    \    }\n    while (i < 4) {\n        roman = \"IV\" + roman;\n        i++;\n \
    \   }\n    while (i < 9) {\n        roman = \"IX\" + roman;\n        i++;\n  \
    \  }\n    while (i < 14) {\n        roman = \"XL\" + roman;\n        i++;\n  \
    \  }\n    while (i < 19) {\n        roman = \"XC\" + roman;\n        i++;\n  \
    \  }\n    while (i < 24) {\n        roman = \"CD\" + roman;\n        i++;\n  \
    \  }\n    while (i < 29) {\n        roman = \"CM\" + roman;\n        i++;\n  \
    \  }\n    while (i < 34) {\n        roman = \"M\" + roman;\n        i++;\n   \
    \ }\n    while (i < 39) {\n        roman = \"M\" + roman;\n        i++;\n    }\n\
    \    while (i < 44) {\n        roman = \"CM\" + roman;\n        i++;\n    }\n\
    \    while (i < 49) {\n        roman = \"D\" + roman;\n        i++;\n    }\n \
    \   while (i < 54) {\n        roman = \"CD\" + roman;\n        i++;\n    }\n \
    \   while (i < 59) {\n        roman = \"C\" + roman;\n        i++;\n    }\n  \
    \  while (i < 64) {\n        roman = \"X\" + roman;\n        i++;\n    }\n   \
    \ while (i < 69) {\n        roman = \"L\" + roman;\n        i++;\n    }\n    while\
    \ (i < 74) {\n        roman = \"XL\" + roman;\n        i++;\n    }\n    while\
    \ (i < 79) {\n        roman = \"X\" + roman;\n        i++;\n    }\n    while (i\
    \ < 84) {\n        roman = \"IX\" + roman;\n        i++;\n    }\n    while (i\
    \ < 89) {\n        roman = \"V\" + roman;\n        i++;\n    }\n    while (i <\
    \ 94) {\n        roman = \"IV\" + roman;\n        i++;\n    }\n    while (i <\
    \ 99) {\n        roman = \"I\" + roman;\n        i++;\n    }\n    while (i < 104)\
    \ {\n        roman = \"I\" + roman;\n        i++;\n    }\n    while (i < 109)\
    \ {\n        roman = \"I\" + roman;\n        i++;\n    }\n    while (i < 114",
  "    std::string roman;\n    long temp = 0;\n    long num = 0;\n    long num2 =\
    \ 0;\n    long num3 = 0;\n    long num4 = 0;\n    long num5 = 0;\n    long num6\
    \ = 0;\n    long num7 = 0;\n    long num8 = 0;\n    long num9 = 0;\n    long num10\
    \ = 0;\n    long num11 = 0;\n    long num12 = 0;\n    long num13 = 0;\n    long\
    \ num14 = 0;\n    long num15 = 0;\n    long num16 = 0;\n    long num17 = 0;\n\
    \    long num18 = 0;\n    long num19 = 0;\n    long num20 = 0;\n    long num21\
    \ = 0;\n    long num22 = 0;\n    long num23 = 0;\n    long num24 = 0;\n    long\
    \ num25 = 0;\n    long num26 = 0;\n    long num27 = 0;\n    long num28 = 0;\n\
    \    long num29 = 0;\n    long num30 = 0;\n    long num31 = 0;\n    long num32\
    \ = 0;\n    long num33 = 0;\n    long num34 = 0;\n    long num35 = 0;\n    long\
    \ num36 = 0;\n    long num37 = 0;\n    long num38 = 0;\n    long num39 = 0;\n\
    \    long num40 = 0;\n    long num41 = 0;\n    long num42 = 0;\n    long num43\
    \ = 0;\n    long num44 = 0;\n    long num45 = 0;\n    long num46 = 0;\n    long\
    \ num47 = 0;\n    long num48 = 0;\n    long num49 = 0;\n    long num50 = 0;\n\
    \    long num51 = 0;\n    long num52 = 0;\n    long num53 = 0;\n    long num54\
    \ = 0;\n    long num55 = 0;\n    long num56 = 0;\n    long num57 = 0;\n    long\
    \ num58 = 0;\n    long num59 = 0;\n    long num60 = 0;\n    long num61 = 0;\n\
    \    long num62 = 0;\n    long num63 = 0;\n    long num64 = 0;\n    long num65\
    \ = 0;\n    long num66 = 0;\n    long num67 = 0;\n    long num68 = 0;\n    long\
    \ num69 = 0;\n    long num70 = 0;\n    long num71 = 0;\n    long num72 = 0;\n\
    \    long num73 = 0;\n    long num74 = 0;\n    long num75 = 0;\n    long num76\
    \ = 0;\n    long num77 = 0;\n    long num78 = 0;\n    long num79 = 0;\n    long\
    \ num80 = 0;\n    long num81 = 0;\n    long num82 = 0;\n    long num83 = 0;\n\
    \    long num84 = 0;\n    long ", "    std::string roman;\n    if (number < 0\
    \ || number > 1000)\n        return roman;\n    long temp = number;\n    do {\n\
    \        roman = roman.substr(0, roman.length() - 1) + std::to_string(temp % 10);\n\
    \        temp /= 10;\n    } while (temp > 0);\n    return roman;", "    std::string\
    \ roman;\n    long romanNum = number;\n    long romanNum1 = romanNum;\n    long\
    \ romanNum2 = romanNum;\n    long romanNum3 = romanNum;\n    long romanNum4 =\
    \ romanNum;\n    long romanNum5 = romanNum;\n    long romanNum6 = romanNum;\n\
    \    long romanNum7 = romanNum;\n    long romanNum8 = romanNum;\n    long romanNum9\
    \ = romanNum;\n    long romanNum10 = romanNum;\n    long romanNum11 = romanNum;\n\
    \    long romanNum12 = romanNum;\n    long romanNum13 = romanNum;\n    long romanNum14\
    \ = romanNum;\n    long romanNum15 = romanNum;\n    long romanNum16 = romanNum;\n\
    \    long romanNum17 = romanNum;\n    long romanNum18 = romanNum;\n    long romanNum19\
    \ = romanNum;\n    long romanNum20 = romanNum;\n    long romanNum21 = romanNum;\n\
    \    long romanNum22 = romanNum;\n    long romanNum23 = romanNum;\n    long romanNum24\
    \ = romanNum;\n    long romanNum25 = romanNum;\n    long romanNum26 = romanNum;\n\
    \    long romanNum27 = romanNum;\n    long romanNum28 = romanNum;\n    long romanNum29\
    \ = romanNum;\n    long romanNum30 = romanNum;\n    long romanNum31 = romanNum;\n\
    \    long romanNum32 = romanNum;\n    long romanNum33 = romanNum;\n    long romanNum34\
    \ = romanNum;\n    long romanNum35 = romanNum;\n    long romanNum36 = romanNum;\n\
    \    long romanNum37 = romanNum;\n    long romanNum38 = romanNum;\n    long romanNum39\
    \ = romanNum;\n    long romanNum40 = romanNum;\n    long romanNum41 = romanNum;\n\
    \    long romanNum42 = romanNum;\n    long romanNum4", "    std::string roman;\n\
    \    long num;\n    long temp;\n    long num1 = number;\n    long num2 = number;\n\
    \    long num3 = number;\n    long num4 = number;\n    long num5 = number;\n \
    \   long num6 = number;\n    long num7 = number;\n    long num8 = number;\n  \
    \  long num9 = number;\n    long num10 = number;\n    long num11 = number;\n \
    \   long num12 = number;\n    long num13 = number;\n    long num14 = number;\n\
    \    long num15 = number;\n    long num16 = number;\n    long num17 = number;\n\
    \    long num18 = number;\n    long num19 = number;\n    long num20 = number;\n\
    \    long num21 = number;\n    long num22 = number;\n    long num23 = number;\n\
    \    long num24 = number;\n    long num25 = number;\n    long num26 = number;\n\
    \    long num27 = number;\n    long num28 = number;\n    long num29 = number;\n\
    \    long num30 = number;\n    long num31 = number;\n    long num32 = number;\n\
    \    long num33 = number;\n    long num34 = number;\n    long num35 = number;\n\
    \    long num36 = number;\n    long num37 = number;\n    long num38 = number;\n\
    \    long num39 = number;\n    long num40 = number;\n    long num41 = number;\n\
    \    long num42 = number;\n    long num43 = number;\n    long num44 = number;\n\
    \    long num45 = number;\n    long num46 = number;\n    long num47 = number;\n\
    \    long num48 = number;\n    long num49 = number;\n    long num50 = number;\n\
    \    long num51 = number;\n    long num52 = number;\n    long num53 = number;\n\
    \    long num54 = number;\n    long num55 = number;\n    long num56 = number;\n\
    \    long num57 = number;\n    long num58 = number;\n    long num59 = number;\n\
    \    long num60 = number;\n    long num61 = number;\n    long num62 = number;\n\
    \    long num63 = number;\n    long num64 = number;\n    long num65 = number;\n\
    \    long num66 = number;\n    long num67 = number;\n    long num68 = number;\n\
    \    long num69 = number;\n    long num70 = number;\n    long num71 = number;\n\
    \    long num72 = number;\n    long num7", "    std::string roman;\n    long num\
    \ = number;\n    while (num > 0) {\n        long remainder = num % 10;\n     \
    \   roman += mini_roman[remainder];\n        num /= 10;\n    }\n    return roman;",
  "    std::string roman;\n    long n = number;\n    long m = 1;\n    while (n >=\
    \ 1000) {\n        n /= 1000;\n        m += 1;\n    }\n    long q = m / 10;\n\
    \    long r = m % 10;\n    roman = roman.substr(0, roman.size() - 1) + to_string(q)\
    \ + to_string(r);\n    while (n >= 1000) {\n        n /= 1000;\n        roman\
    \ = roman.substr(0, roman.size() - 1) + to_string(q) + to_string(r);\n       \
    \ q += 1;\n        r = m % 10;\n        roman = roman.substr(0, roman.size() -\
    \ 1) + to_string(q) + to_string(r);\n        m += 1;\n    }\n    roman = roman.substr(0,\
    \ roman.size() - 1) + to_string(q) + to_string(r);\n    return roman;", "    std::string\
    \ roman;\n    long num;\n    num = number;\n    while(num > 0){\n        roman\
    \ += int_to_roman(num%10);\n        num /= 10;\n    }\n    return roman;", " \
    \   std::string roman;\n    long num = number;\n    long num1 = num;\n    long\
    \ num2 = num;\n    long num3 = num;\n    long num4 = num;\n    long num5 = num;\n\
    \    long num6 = num;\n    long num7 = num;\n    long num8 = num;\n    long num9\
    \ = num;\n    long num10 = num;\n    long num11 = num;\n    long num12 = num;\n\
    \    long num13 = num;\n    long num14 = num;\n    long num15 = num;\n    long\
    \ num16 = num;\n    long num17 = num;\n    long num18 = num;\n    long num19 =\
    \ num;\n    long num20 = num;\n    long num21 = num;\n    long num22 = num;\n\
    \    long num23 = num;\n    long num24 = num;\n    long num25 = num;\n    long\
    \ num26 = num;\n    long num27 = num;\n    long num28 = num;\n    long num29 =\
    \ num;\n    long num30 = num;\n    long num31 = num;\n    long num32 = num;\n\
    \    long num33 = num;\n    long num34 = num;\n    long num35 = num;\n    long\
    \ num36 = num;\n    long num37 = num;\n    long num38 = num;\n    long num39 =\
    \ num;\n    long num40 = num;\n    long num41 = num;\n    long num42 = num;\n\
    \    long num43 = num;\n    long num44 = num;\n    long num45 = num;\n    long\
    \ num46 = num;\n    long num47 = num;\n    long num48 = num;\n    long num49 =\
    \ num;\n    long num50 = num;\n    long num51 = num;\n    long num52 = num;\n\
    \    long num53 = num;\n    long num54 = num;\n    long num55 = num;\n    long\
    \ num56 = num;\n    long num57 = num;\n    long num58 = num;\n    long num59 =\
    \ num;\n    long num60 = num;\n    long num61 = num;\n    long num62 = num;\n\
    \    long num63 = num;\n    long num64 = num;\n    ", "    std::string roman;\n\
    \    long temp = number;\n    while (temp > 0) {\n        int digit = temp % 10;\n\
    \        roman += mini_roman[digit];\n        temp /= 10;\n    }\n    return roman;",
  "    std::string roman;\n    long num = number;\n    long num2 = num;\n    long\
    \ num3 = num;\n    long num4 = num;\n    long num5 = num;\n    long num6 = num;\n\
    \    long num7 = num;\n    long num8 = num;\n    long num9 = num;\n    long num10\
    \ = num;\n    long num11 = num;\n    long num12 = num;\n    long num13 = num;\n\
    \    long num14 = num;\n    long num15 = num;\n    long num16 = num;\n    long\
    \ num17 = num;\n    long num18 = num;\n    long num19 = num;\n    long num20 =\
    \ num;\n    long num21 = num;\n    long num22 = num;\n    long num23 = num;\n\
    \    long num24 = num;\n    long num25 = num;\n    long num26 = num;\n    long\
    \ num27 = num;\n    long num28 = num;\n    long num29 = num;\n    long num30 =\
    \ num;\n    long num31 = num;\n    long num32 = num;\n    long num33 = num;\n\
    \    long num34 = num;\n    long num35 = num;\n    long num36 = num;\n    long\
    \ num37 = num;\n    long num38 = num;\n    long num39 = num;\n    long num40 =\
    \ num;\n    long num41 = num;\n    long num42 = num;\n    long num43 = num;\n\
    \    long num44 = num;\n    long num45 = num;\n    long num46 = num;\n    long\
    \ num47 = num;\n    long num48 = num;\n    long num49 = num;\n    long num50 =\
    \ num;\n    long num51 = num;\n    long num52 = num;\n    long num53 = num;\n\
    \    long num54 = num;\n    long num55 = num;\n    long num56 = num;\n    long\
    \ num57 = num;\n    long num58 = num;\n    long num59 = num;\n    long num60 =\
    \ num;\n    long num61 = num;\n    long num62 = num;\n    long num63 = num;\n\
    \    long num64 = num;\n    long num65 = num;\n", "    std::string roman = \"\"\
    ;\n    long temp = number;\n    while (temp > 0) {\n        int digit = temp %\
    \ 10;\n        roman += int_to_mini_roman_digit(digit);\n        temp /= 10;\n\
    \    }\n    return roman;", "    std::string roman;\n    long temp;\n    long\
    \ num;\n    long rem;\n    long digit;\n    long i=0;\n    long j=0;\n    while(number\
    \ > 0){\n        temp = number % 10;\n        roman = to_string(temp) + roman;\n\
    \        number = number / 10;\n    }\n    num = roman.length();\n    while(num\
    \ > 0){\n        rem = roman.substr(num-1,1);\n        digit = roman.substr(0,num-1);\n\
    \        roman = to_string(digit) + rem;\n        num--;\n    }\n    while(roman.length()\
    \ > 0){\n        roman = roman.substr(0,roman.length()-1);\n    }\n    return\
    \ roman;"]
stop_tokens:
- "\n}"

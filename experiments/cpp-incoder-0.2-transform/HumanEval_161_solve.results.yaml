language: cpp
name: HumanEval_161_solve
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(c, c == 'a' ? 'A' : 'a');\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n  \
    \  assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqf1a0jrr.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpqf1a0jrr.cpp:19:54: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, char)\u2019\n   19 |        \
    \     ans = ans.replace(c, c == 'a' ? 'A' : 'a');\n      |                   \
    \                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpqf1a0jrr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/bas"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        } else {\n            ans.replace(i, 1, s[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphiagfdjx.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmphiagfdjx.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmphiagfdjx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmphiagfdjx.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            char c = toupper(s[i]);\n            s[i] = c;\n            res+=c;\n\
    \        }\n        else{\n            res+=s[i];\n        }\n    }\n    return\
    \ res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpp4gp0qqm: /tmp/tmpp4gp0qqm.cpp:31: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (std::isalpha(c))\
    \ {\n            ans = ans.replace(c, std::toupper(c));\n        } else {\n  \
    \          ans = ans.replace(c, std::tolower(c));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjjtrgbnj.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpjjtrgbnj.cpp:19:49: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, std::toupper(c));\n      |                         \
    \                        ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjjtrgbnj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            char c = toupper(s[i]);\n            s[i] = c;\n            c\
    \ = tolower(c);\n            s[i] = c;\n        }\n    }\n    res.assign(s);\n\
    \    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp56d4q6ww: /tmp/tmp56d4q6ww.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i.tolower(), i.toupper());\n        } else {\n\
    \            ans = ans.replace(i.toupper(), i.tolower());\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy27nell5.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpy27nell5.cpp:19:33: error: request for member \u2018tolower\u2019 in\
    \ \u2018i\u2019, which is of non-class type \u2018char\u2019\n   19 |        \
    \     ans = ans.replace(i.tolower(), i.toupper());\n      |                  \
    \               ^~~~~~~\n/tmp/tmpy27nell5.cpp:19:46: error: request for member\
    \ \u2018toupper\u2019 in \u2018i\u2019, which is of non-class type \u2018char\u2019\
    \n   19 |             ans = ans.replace(i.tolower(), i.toupper());\n      |  \
    \                                            ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:33:\
    \ error: request for member \u2018toupper\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                 ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:46:\
    \ error: request for member \u2018tolower\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                              ^~~~~~~\n"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans[i] = 'A';\n        } else if\
    \ (s[i] == 'b' || s[i] == 'B') {\n            ans[i] = 'B';\n        } else if\
    \ (s[i] == 'c' || s[i] == 'C') {\n            ans[i] = 'C';\n        } else if\
    \ (s[i] == 'd' || s[i] == 'D') {\n            ans[i] = 'D';\n        } else if\
    \ (s[i] == 'e' || s[i] == 'E') {\n            ans[i] = 'E';\n        } else if\
    \ (s[i] == 'f' || s[i] == 'F') {\n            ans[i] = 'F';\n        } else if\
    \ (s[i] == 'g' || s[i] == 'G') {\n            ans[i] = 'G';\n        } else if\
    \ (s[i] == 'h' || s[i] == 'H') {\n            ans[i] = 'H';\n        } else if\
    \ (s[i] == 'i' || s[i] == 'I') {\n            ans[i] = 'I';\n        } else if\
    \ (s[i] == 'j' || s[i] == 'J') {\n            ans[i] = 'J';\n        } else if\
    \ (s[i] == 'k' || s[i] == 'K') {\n            ans[i] = 'K';\n        } else if\
    \ (s[i] == 'l' || s[i] == 'L') {\n            ans[i] = 'L';\n        } else if\
    \ (s[i] == 'm' || s[i] == 'M') {\n            ans[i] = 'M';\n        } else if\
    \ (s[i] == 'n' || s[i] == 'N') {\n            ans[i] = 'N';\n        } else if\
    \ (s[i] == 'o' || s[i] == 'O') {\n            ans[i] = 'O';\n        } else if\
    \ (s[i] == 'p' || s[i] == 'P') {\n            ans[i] = 'P';\n        } else if\
    \ (s[i] == 'q' || s[i] == 'Q') {\n            ans[i] = 'Q';\n        } else if\
    \ (s[i] == 'r' || s[i] == 'R') {\n            ans[i] = 'R';\n        } else if\
    \ (s[i] == 's' || s[i] == 'S') {\n            ans[i] = 'S';\n        } else if\
    \ (s[i] == 't' || s[i] == 'T') {\n            ans[i] = 'T';\n        } else if\
    \ (s[i] == 'u' || s[i] == 'U') {\n            ans[i] = 'U';\n        } else if\
    \ (s[i] == 'v' || s[i] == 'V') {\n            ans[i] = 'V';\n        } else if\
    \ (s[i] == 'w' || s[i] == 'W') {\n            ans[i] = 'W';\n        } else if\
    \ (s[i] == 'x' || s[i] == 'X') {\n            ans[i] = 'X';\n        } else if\
    \ (s[i] == 'y' || s[i] == 'Y') {\n            ans[i] = 'Y';\n        } else if\
    \ (s[i] == 'z' || s[i] == 'Z') {\n            ans[i] = 'Z';\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpiqqo7zk7: /tmp/tmpiqqo7zk7.cpp:76: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(char c : s) {\n        if(c == 'a' || c\
    \ == 'A') {\n            ans += \"A\";\n        } else if(c == 'b' || c == 'B')\
    \ {\n            ans += \"B\";\n        } else if(c == 'c' || c == 'C') {\n  \
    \          ans += \"C\";\n        } else if(c == 'd' || c == 'D') {\n        \
    \    ans += \"D\";\n        } else if(c == 'e' || c == 'E') {\n            ans\
    \ += \"E\";\n        } else if(c == 'f' || c == 'F') {\n            ans += \"\
    F\";\n        } else if(c == 'g' || c == 'G') {\n            ans += \"G\";\n \
    \       } else if(c == 'h' || c == 'H') {\n            ans += \"H\";\n       \
    \ } else if(c == 'i' || c == 'I') {\n            ans += \"I\";\n        } else\
    \ if(c == 'j' || c == 'J') {\n            ans += \"J\";\n        } else if(c ==\
    \ 'k' || c == 'K') {\n            ans += \"K\";\n        } else if(c == 'l' ||\
    \ c == 'L') {\n            ans += \"L\";\n        } else if(c == 'm' || c == 'M')\
    \ {\n            ans += \"M\";\n        } else if(c == 'n' || c == 'N') {\n  \
    \          ans += \"N\";\n        } else if(c == 'o' || c == 'O') {\n        \
    \    ans += \"O\";\n        } else if(c == 'p' || c == 'P') {\n            ans\
    \ += \"P\";\n        } else if(c == 'q' || c == 'Q') {\n            ans += \"\
    Q\";\n        } else if(c == 'r' || c == 'R') {\n            ans += \"R\";\n \
    \       } else if(c == 's' || c == 'S') {\n            ans += \"S\";\n       \
    \ } else if(c == 't' || c == 'T') {\n            ans += \"T\";\n        } else\
    \ if(c == 'u' || c == 'U') {\n            ans += \"U\";\n        } else if(c ==\
    \ 'v' || c == 'V') {\n            ans += \"V\";\n        } else if(c == 'w' ||\
    \ c == 'W') {\n            ans += \"W\";\n        } else if(c == 'x' || c == 'X')\
    \ {\n            ans += \"X\";\n        } else if(c == 'y' || c == 'Y') {\n  \
    \          ans += \"Y\";\n        } else if(c == 'z' || c == 'Z') {\n        \
    \    ans += \"Z\";\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpmbwvloo5: /tmp/tmpmbwvloo5.cpp:76: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.at(i) = toupper(s[i]);\n        } else {\n            ans.at(i)\
    \ = s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpq1twrz_s: /tmp/tmpq1twrz_s.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=std::toupper(s[i]);\n        }\n        else\
    \ if(s[i]>='A' && s[i]<='Z'){\n            res+=std::tolower(s[i]);\n        }\n\
    \        else{\n            res+=s[i];\n        }\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpz3frmlwf: /tmp/tmpz3frmlwf.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmppzheaiy1: /tmp/tmppzheaiy1.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n    \
    \        ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgg2qj25.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpdgg2qj25.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(size_t&, int, int)\u2019\n   19 |  \
    \           ans.replace(i, 1, toupper(s[i]));\n      |                       \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdgg2qj25.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpdgg2qj25.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n    \
    \        ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgg2qj25.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpdgg2qj25.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(size_t&, int, int)\u2019\n   19 |  \
    \           ans.replace(i, 1, toupper(s[i]));\n      |                       \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdgg2qj25.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpdgg2qj25.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            char c = toupper(s[i]);\n            s[i] = c;\n            char\
    \ d = tolower(s[i]);\n            s[i] = d;\n        }\n    }\n    res.assign(s);\n\
    \    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmph0emmr1d: /tmp/tmph0emmr1d.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n            ans[s.size()\
    \ - i - 1] = tolower(s[i]);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp7n14da0m: /tmp/tmp7n14da0m.cpp:27: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x9z31ny.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9x9z31ny.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9x9z31ny.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n       \
    \     ans.replace(i, 2, tolower(s[i]));\n        } else {\n            ans.replace(i,\
    \ 1, s[i]);\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp088tmp_2.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp088tmp_2.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp088tmp_2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp088tmp_2.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i,toupper(i),1);\n        } else {\n          \
    \  ans = ans.replace(i,tolower(i),1);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzvudlz2p.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpzvudlz2p.cpp:19:45: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int, int)\u2019\n   19 |    \
    \         ans = ans.replace(i,toupper(i),1);\n      |                        \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzvudlz2p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpzvudlz2p.cpp:19:44:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (std::isalpha(s[i])) {\n            ans = ans.substr(0, i) + std::toupper(ans.at(i))\
    \ + ans.substr(i + 1);\n        } else {\n            ans = ans.substr(0, i) +\
    \ std::tolower(ans.at(i)) + ans.substr(i + 1);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprovqfktt.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprovqfktt.cpp:19:36: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, i) + std::toupper(ans.at(i)) + ans.substr(i\
    \ + 1);\n      |                   ~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~~~~~~~~~\n\
    \      |                             |                    |\n      |         \
    \                    |                    int\n      |                       \
    \      std::__cxx11::basic_string<char>\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprovqfktt.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprovqfktt.cpp:19:60:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, i) + std::toupper(ans.at(i))\
    \ + ans.substr(i + 1);\n      |               "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            char c = s[i];\n            s[i] = toupper(c);\n            s[i]\
    \ = tolower(c);\n        }\n        res += s[i];\n    }\n    return res;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpt5w2v2tc: /tmp/tmpt5w2v2tc.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x9z31ny.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9x9z31ny.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9x9z31ny.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (s[i] >= 'a' && s[i] <= 'z') {\n            ans[i] = s[i] - 'a' + 'A';\n\
    \        } else if (s[i] >= 'A' && s[i] <= 'Z') {\n            ans[i] = s[i] -\
    \ 'A' + 'a';\n        } else {\n            ans[i] = s[i];\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpx6cvr9of: /tmp/tmpx6cvr9of.cpp:31: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n        else if (s[i] == 'b' || s[i] ==\
    \ 'B') {\n            ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() -\
    \ i - 1);\n        }\n        else if (s[i] == 'c' || s[i] == 'C') {\n       \
    \     ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() - i - 1);\n      \
    \  }\n        else if (s[i] == 'd' || s[i] == 'D') {\n            ans = ans.substr(0,\
    \ i) + ans.substr(i + 1, ans.size() - i - 1);\n        }\n        else if (s[i]\
    \ == 'e' || s[i] == 'E') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n        else if (s[i] == 'f' || s[i] ==\
    \ 'F') {\n            ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() -\
    \ i - 1);\n        }\n        else if (s[i] == 'g' || s[i] == 'G') {\n       \
    \     ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() - i - 1);\n      \
    \  }\n        else if (s[i] == 'h' || s[i] == 'H') {\n            ans = ans.substr(0,\
    \ i) + ans.substr(i + 1, ans.size() - i - 1);\n        }\n        else if (s[i]\
    \ == 'i' || s[i] == 'I') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n        else if (s[i] == 'j' || s[i] ==\
    \ 'J') {\n            ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() -\
    \ i - 1);\n        }\n        else if (s[i] == 'k' || s[i] == 'K') {\n       \
    \     ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() - i - 1);\n      \
    \  }\n        else if (s[i] == 'l' || s[i] == 'L') {\n            ans = ans.substr(0,\
    \ i) + ans.substr(i + 1, ans.size() - i - 1);\n        }\n        else if (s[i]\
    \ == 'm' || s[i] == 'M') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n        else if (s[i] == 'n' || s[i] ==\
    \ 'N') {\n            ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() -\
    \ i - 1);\n        }\n        else if (s[i] == 'o' || s[i] == 'O') {\n       \
    \     ans = ans.substr(0, i) + ans.substr(i + 1, ans.size() - i - 1);\n      \
    \  }\n        else if (s[i] == 'p' || s[i] == 'P') {\n            ans = ans.substr(0,\
    \ i) + an\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmafgcuiy.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpmafgcuiy.cpp:64:38: error: \u2018an\u2019 was not declared in this\
    \ scope; did you mean \u2018ans\u2019?\n   64 |             ans = ans.substr(0,\
    \ i) + an\n      |                                      ^~\n      |          \
    \                            ans\n/tmp/tmpmafgcuiy.cpp:66:12: error: a function-definition\
    \ is not allowed here before \u2018{\u2019 token\n   66 | int main() {\n     \
    \ |            ^\n/tmp/tmpmafgcuiy.cpp:76:1: error: expected \u2018}\u2019 at\
    \ end of input\n   76 | }\n      | ^\n/tmp/tmpmafgcuiy.cpp:17:43: note: to match\
    \ this \u2018{\u2019\n   17 |     for (size_t i = 0; i < s.size(); i++) {\n  \
    \    |                                           ^\n/tmp/tmpmafgcuiy.cpp:76:1:\
    \ error: expected \u2018}\u2019 at end of input\n   76 | }\n      | ^\n/tmp/tmpmafgcuiy.cpp:15:34:\
    \ note: to match this \u2018{\u2019\n   15 | std::string solve(std::string s)\
    \ {\n      |                                  ^\n/tmp/tmpmafgcuiy.cpp:76:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n   76 |\
    \ }\n      | ^\n"
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmppzheaiy1: /tmp/tmppzheaiy1.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 &&\
    \ s[i]<=90){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>=97\
    \ && s[i]<=122){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpcjujfpj8: /tmp/tmpcjujfpj8.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i);\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpytfb1dun: /tmp/tmpytfb1dun.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(c, c == 'a' ? 'A' : 'a');\n       \
    \ }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n  \
    \  assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpqf1a0jrr.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpqf1a0jrr.cpp:19:54: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, char)\u2019\n   19 |        \
    \     ans = ans.replace(c, c == 'a' ? 'A' : 'a');\n      |                   \
    \                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpqf1a0jrr.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/bas"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            char c = toupper(s[i]);\n            char t = tolower(s[i]);\n  \
    \          s[i] = t;\n            s[i] = c;\n        }\n    }\n    res.assign(s);\n\
    \    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpiio9hfmy: /tmp/tmpiio9hfmy.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans = ans.replace(\"a\", toupper(c));\n            ans =\
    \ ans.replace(\"A\", tolower(c));\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkfcmc3k.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpjkfcmc3k.cpp:19:46: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], int)\u2019\n   19 |\
    \             ans = ans.replace(\"a\", toupper(c));\n      |                 \
    \                             ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjkfcmc3k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_strin"
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            char c = toupper(s[i]);\n            s[i] = c;\n            c\
    \ = tolower(c);\n            s[i] = c;\n        }\n    }\n    res.assign(s);\n\
    \    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp56d4q6ww: /tmp/tmp56d4q6ww.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n       \
    \     ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpom3eloko.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpom3eloko.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpom3eloko.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpom3eloko.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    int n = s.size();\n    for (int i = 0; i < n; i++)\
    \ {\n        if (isalpha(s[i])) {\n            if (isupper(s[i])) {\n        \
    \        s[i] = tolower(s[i]);\n            } else {\n                s[i] = toupper(s[i]);\n\
    \            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if\
    \ (isalpha(s[i])) {\n            res += s[i];\n        } else {\n            res\
    \ += s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpmw9zurzn: /tmp/tmpmw9zurzn.cpp:39: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (std::isalpha(i))\
    \ {\n            ans = std::toupper(ans);\n        } else {\n            ans =\
    \ std::tolower(ans);\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk1k3_shc.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpk1k3_shc.cpp:19:35: error: no matching function for call to \u2018\
    toupper(std::string&)\u2019\n   19 |             ans = std::toupper(ans);\n  \
    \    |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpk1k3_shc.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpk1k3_shc.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpk1k3_shc.cpp:19:35:\
    \ note:   candidate expects 2 arguments, 1 provided\n   19 |             ans =\
    \ std::toupper(ans);\n      |   "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x9z31ny.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9x9z31ny.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9x9z31ny.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (std::isalpha(c))\
    \ {\n            ans = ans.replace(c, std::toupper(c));\n        } else {\n  \
    \          ans = ans.replace(c, std::tolower(c));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjjtrgbnj.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpjjtrgbnj.cpp:19:49: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, std::toupper(c));\n      |                         \
    \                        ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjjtrgbnj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i.tolower(), i.toupper());\n        } else {\n\
    \            ans = ans.replace(i.toupper(), i.tolower());\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy27nell5.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpy27nell5.cpp:19:33: error: request for member \u2018tolower\u2019 in\
    \ \u2018i\u2019, which is of non-class type \u2018char\u2019\n   19 |        \
    \     ans = ans.replace(i.tolower(), i.toupper());\n      |                  \
    \               ^~~~~~~\n/tmp/tmpy27nell5.cpp:19:46: error: request for member\
    \ \u2018toupper\u2019 in \u2018i\u2019, which is of non-class type \u2018char\u2019\
    \n   19 |             ans = ans.replace(i.tolower(), i.toupper());\n      |  \
    \                                            ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:33:\
    \ error: request for member \u2018toupper\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                 ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:46:\
    \ error: request for member \u2018tolower\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                              ^~~~~~~\n"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) + ans.substr(ans.size()-1);\n\
    \        } else {\n            ans = ans.substr(0, ans.size()-1) + tolower(ans.back())\
    \ + ans.substr(ans.size()-1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn1euv_c.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpwn1euv_c.cpp:19:47: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) +\
    \ ans.substr(ans.size()-1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \           |\n      |                             |                         \
    \ int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwn1euv_c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwn1euv_c.cpp:19:67:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size()-1) +\
    \ toupper(ans.back()) + a"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) + ans.substr(ans.size()-1);\n\
    \        } else {\n            ans = ans.substr(0, ans.size()-1) + tolower(ans.back())\
    \ + ans.substr(ans.size()-1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn1euv_c.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpwn1euv_c.cpp:19:47: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) +\
    \ ans.substr(ans.size()-1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \           |\n      |                             |                         \
    \ int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwn1euv_c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwn1euv_c.cpp:19:67:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size()-1) +\
    \ toupper(ans.back()) + a"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c), 1);\n        } else {\n        \
    \    ans = ans.replace(c, tolower(c), 1);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsacba4uy.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpsacba4uy.cpp:19:47: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int, int)\u2019\n   19 |    \
    \         ans = ans.replace(c, toupper(c), 1);\n      |                      \
    \                         ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpsacba4uy.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpsacba4uy.cpp:19:46:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 | "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.substr(0, ans.size() - 1) + toupper(ans.substr(ans.size()\
    \ - 1)) + ans.substr(0, ans.size() - 1);\n        } else {\n            ans =\
    \ ans.substr(0, ans.size() - 1) + i;\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn7bylex4.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpn7bylex4.cpp:19:85: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ ans.size() - 1) + toupper(ans.substr(ans.size() - 1)) + ans.substr(0, ans.size()\
    \ - 1);\n      |                                                             \
    \                        ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpn7bylex4.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpn7bylex4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: ans) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(c, 'A');\n        } else if (c == 'b'\
    \ || c == 'B') {\n            ans = ans.replace(c, 'B');\n        } else if (c\
    \ == 'c' || c == 'C') {\n            ans = ans.replace(c, 'C');\n        } else\
    \ if (c == 'd' || c == 'D') {\n            ans = ans.replace(c, 'D');\n      \
    \  } else if (c == 'e' || c == 'E') {\n            ans = ans.replace(c, 'E');\n\
    \        } else if (c == 'f' || c == 'F') {\n            ans = ans.replace(c,\
    \ 'F');\n        } else if (c == 'g' || c == 'G') {\n            ans = ans.replace(c,\
    \ 'G');\n        } else if (c == 'h' || c == 'H') {\n            ans = ans.replace(c,\
    \ 'H');\n        } else if (c == 'i' || c == 'I') {\n            ans = ans.replace(c,\
    \ 'I');\n        } else if (c == 'j' || c == 'J') {\n            ans = ans.replace(c,\
    \ 'J');\n        } else if (c == 'k' || c == 'K') {\n            ans = ans.replace(c,\
    \ 'K');\n        } else if (c == 'l' || c == 'L') {\n            ans = ans.replace(c,\
    \ 'L');\n        } else if (c == 'm' || c == 'M') {\n            ans = ans.replace(c,\
    \ 'M');\n        } else if (c == 'n' || c == 'N') {\n            ans = ans.replace(c,\
    \ 'N');\n        } else if (c == 'o' || c == 'O') {\n            ans = ans.replace(c,\
    \ 'O');\n        } else if (c == 'p' || c == 'P') {\n            ans = ans.replace(c,\
    \ 'P');\n        } else if (c == 'q' || c == 'Q') {\n            ans = ans.replace(c,\
    \ 'Q');\n        } else if (c == 'r' || c == 'R') {\n            ans = ans.replace(c,\
    \ 'R');\n        } else if (c == 's' || c == 'S') {\n            ans = ans.replace(c,\
    \ 'S');\n        } else if (c == 't' || c == 'T') {\n            ans = ans.replace(c,\
    \ 'T');\n        } else if (c == 'u' || c == 'U') {\n            ans = ans.replace(c,\
    \ 'U');\n        } else if (c == 'v' || c == 'V') {\n            ans = ans.replace(c,\
    \ 'V');\n        } else if (c == 'w' || c == 'W') {\n            ans = ans.replace(c,\
    \ 'W');\n        } else if (c == 'x' || c == 'X') {\n            ans = ans.replace\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphfsxyjes.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmphfsxyjes.cpp:19:37: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, char)\u2019\n   19 |        \
    \     ans = ans.replace(c, 'A');\n      |                                    \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmphfsxyjes.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ note: candidat"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.length(); i++) {\n    \
    \    if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    ans = ans.substr(0, ans.length()-1);\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp6k0lltbj: /tmp/tmp6k0lltbj.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062342
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        } else {\n            ans.replace(i, 1, s[i]);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmphiagfdjx.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmphiagfdjx.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmphiagfdjx.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmphiagfdjx.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i.tolower(), i.toupper());\n        } else {\n\
    \            ans = ans.replace(i.toupper(), i.tolower());\n        }\n    }\n\
    \    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy27nell5.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpy27nell5.cpp:19:33: error: request for member \u2018tolower\u2019 in\
    \ \u2018i\u2019, which is of non-class type \u2018char\u2019\n   19 |        \
    \     ans = ans.replace(i.tolower(), i.toupper());\n      |                  \
    \               ^~~~~~~\n/tmp/tmpy27nell5.cpp:19:46: error: request for member\
    \ \u2018toupper\u2019 in \u2018i\u2019, which is of non-class type \u2018char\u2019\
    \n   19 |             ans = ans.replace(i.tolower(), i.toupper());\n      |  \
    \                                            ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:33:\
    \ error: request for member \u2018toupper\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                 ^~~~~~~\n/tmp/tmpy27nell5.cpp:21:46:\
    \ error: request for member \u2018tolower\u2019 in \u2018i\u2019, which is of\
    \ non-class type \u2018char\u2019\n   21 |             ans = ans.replace(i.toupper(),\
    \ i.tolower());\n      |                                              ^~~~~~~\n"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8nn0dziw.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp8nn0dziw.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8nn0dziw.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n       \
    \     ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpom3eloko.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpom3eloko.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpom3eloko.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpom3eloko.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(\"a\", toupper(c));\n            ans\
    \ = ans.replace(\"A\", tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1nfarpj8.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp1nfarpj8.cpp:19:46: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], int)\u2019\n   19 |\
    \             ans = ans.replace(\"a\", toupper(c));\n      |                 \
    \                             ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp1nfarpj8.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_strin"
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n        } else\
    \ {\n            ans[i] = s[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpem21k1ss: /tmp/tmpem21k1ss.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062342
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans = ans.replace(\"A\", c).replace(c, \"A\");\n       \
    \ } else if (c == 'b' || c == 'B') {\n            ans = ans.replace(\"B\", c).replace(c,\
    \ \"B\");\n        } else if (c == 'c' || c == 'C') {\n            ans = ans.replace(\"\
    C\", c).replace(c, \"C\");\n        } else if (c == 'd' || c == 'D') {\n     \
    \       ans = ans.replace(\"D\", c).replace(c, \"D\");\n        } else if (c ==\
    \ 'e' || c == 'E') {\n            ans = ans.replace(\"E\", c).replace(c, \"E\"\
    );\n        } else if (c == 'f' || c == 'F') {\n            ans = ans.replace(\"\
    F\", c).replace(c, \"F\");\n        } else if (c == 'g' || c == 'G') {\n     \
    \       ans = ans.replace(\"G\", c).replace(c, \"G\");\n        } else if (c ==\
    \ 'h' || c == 'H') {\n            ans = ans.replace(\"H\", c).replace(c, \"H\"\
    );\n        } else if (c == 'i' || c == 'I') {\n            ans = ans.replace(\"\
    I\", c).replace(c, \"I\");\n        } else if (c == 'j' || c == 'J') {\n     \
    \       ans = ans.replace(\"J\", c).replace(c, \"J\");\n        } else if (c ==\
    \ 'k' || c == 'K') {\n            ans = ans.replace(\"K\", c).replace(c, \"K\"\
    );\n        } else if (c == 'l' || c == 'L') {\n            ans = ans.replace(\"\
    L\", c).replace(c, \"L\");\n        } else if (c == 'm' || c == 'M') {\n     \
    \       ans = ans.replace(\"M\", c).replace(c, \"M\");\n        } else if (c ==\
    \ 'n' || c == 'N') {\n            ans = ans.replace(\"N\", c).replace(c, \"N\"\
    );\n        } else if (c == 'o' || c == 'O') {\n            ans = ans.replace(\"\
    O\", c).replace(c, \"O\");\n        } else if (c == 'p' || c == 'P') {\n     \
    \       ans = ans.replace(\"P\", c).replace(c, \"P\");\n        } else if (c ==\
    \ 'q' || c == 'Q') {\n            ans = ans.replace(\"Q\", c).replace(c, \"Q\"\
    );\n        } else if (c == 'r' || c == 'R') {\n            ans = ans.replace(\"\
    R\", c).replace(c, \"R\");\n        } else if (c == 's' || c == 'S') {\n     \
    \       ans = ans.replace(\"S\", c).replace(c, \"S\");\n        } else if (c ==\
    \ 't' || c\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9_59g9qk.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9_59g9qk.cpp:19:37: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], char&)\u2019\n   19\
    \ |             ans = ans.replace(\"A\", c).replace(c, \"A\");\n      |      \
    \                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9_59g9qk.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_strin"
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmppzheaiy1: /tmp/tmppzheaiy1.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        } else {\n            ans = ans.substr(0, i) + tolower(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy8tcom4y.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpy8tcom4y.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpy8tcom4y.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpy8tcom4y.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpy8tcom4y.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpnk34puv4: /tmp/tmpnk34puv4.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for (auto &c: s) {\n        if (isalpha(c))\
    \ {\n            ans += toupper(c);\n        } else {\n            ans += c;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpld9k5b91: /tmp/tmpld9k5b91.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n        } else\
    \ {\n            ans[i] = s[i];\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpem21k1ss: /tmp/tmpem21k1ss.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062342
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x9z31ny.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9x9z31ny.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9x9z31ny.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i,toupper(i),1);\n            ans = ans.replace(i,tolower(i),1);\n\
    \        } else {\n            ans = ans.replace(i,i,1);\n        }\n    }\n \
    \   return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfkddypik.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpfkddypik.cpp:19:45: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int, int)\u2019\n   19 |    \
    \         ans = ans.replace(i,toupper(i),1);\n      |                        \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpfkddypik.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpfkddypik.cpp:19:44:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans = ans.replace(\"A\",\"a\");\n            ans = ans.replace(\"\
    a\",\"A\");\n        }\n        if (c == 'b' || c == 'B') {\n            ans =\
    \ ans.replace(\"B\",\"b\");\n            ans = ans.replace(\"b\",\"B\");\n   \
    \     }\n        if (c == 'c' || c == 'C') {\n            ans = ans.replace(\"\
    C\",\"c\");\n            ans = ans.replace(\"c\",\"C\");\n        }\n        if\
    \ (c == 'd' || c == 'D') {\n            ans = ans.replace(\"D\",\"d\");\n    \
    \        ans = ans.replace(\"d\",\"D\");\n        }\n        if (c == 'e' || c\
    \ == 'E') {\n            ans = ans.replace(\"E\",\"e\");\n            ans = ans.replace(\"\
    e\",\"E\");\n        }\n        if (c == 'f' || c == 'F') {\n            ans =\
    \ ans.replace(\"F\",\"f\");\n            ans = ans.replace(\"f\",\"F\");\n   \
    \     }\n        if (c == 'g' || c == 'G') {\n            ans = ans.replace(\"\
    G\",\"g\");\n            ans = ans.replace(\"g\",\"G\");\n        }\n        if\
    \ (c == 'h' || c == 'H') {\n            ans = ans.replace(\"H\",\"h\");\n    \
    \        ans = ans.replace(\"h\",\"H\");\n        }\n        if (c == 'i' || c\
    \ == 'I') {\n            ans = ans.replace(\"I\",\"i\");\n            ans = ans.replace(\"\
    i\",\"I\");\n        }\n        if (c == 'j' || c == 'J') {\n            ans =\
    \ ans.replace(\"J\",\"j\");\n            ans = ans.replace(\"j\",\"J\");\n   \
    \     }\n        if (c == 'k' || c == 'K') {\n            ans = ans.replace(\"\
    K\",\"k\");\n            ans = ans.replace(\"k\",\"K\");\n        }\n        if\
    \ (c == 'l' || c == 'L') {\n            ans = ans.replace(\"L\",\"l\");\n    \
    \        ans = ans.replace(\"l\",\"L\");\n        }\n        if (c == 'm' || c\
    \ == 'M') {\n            ans = ans.replace(\"M\",\"m\");\n            ans = ans.replace(\"\
    m\",\"M\");\n        }\n        if (c == 'n' || c == 'N') {\n            ans =\
    \ ans.replace(\"N\",\"n\");\n            ans = ans.replace(\"n\",\"N\");\n   \
    \     }\n        if (c == 'o' || c == 'O') {\n            ans = ans.replace(\"\
    O\",\"o\");\n            ans = ans.\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8frkim6k.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp8frkim6k.cpp:19:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], const char [2])\u2019\
    \n   19 |             ans = ans.replace(\"A\",\"a\");\n      |               \
    \                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8frkim6k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1"
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp7pc0zepc: /tmp/tmp7pc0zepc.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7nz516sv.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp7nz516sv.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7nz516sv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp7nz516sv.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7nz516sv.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp7nz516sv.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7nz516sv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp7nz516sv.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(auto &c : s) {\n        if(isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjgvhkyr4.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpjgvhkyr4.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpjgvhkyr4.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(auto &c: s) {\n        if(isalpha(c)) {\n \
    \           ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) + ans.substr(ans.size()-1);\n\
    \        }\n        else {\n            ans = ans.substr(0, ans.size()-1) + c;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpouff80tm.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpouff80tm.cpp:19:47: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) +\
    \ ans.substr(ans.size()-1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \           |\n      |                             |                         \
    \ int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpouff80tm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpouff80tm.cpp:19:67:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size()-1) +\
    \ toupper(ans.back()) + a"
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.substr(0, ans.size() - 1) + toupper(ans.back()) + ans.substr(ans.size()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.size() - 1) + c;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp6y9kejef.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp6y9kejef.cpp:19:49: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size() - 1) + toupper(ans.back())\
    \ + ans.substr(ans.size() - 1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \             |\n      |                             |                       \
    \     int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp6y9kejef.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp6y9kejef.cpp:19:69:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size() - 1)\
    \ + toupper(ans"
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.replace(c, toupper(c));\n        } else {\n           \
    \ ans = ans.replace(c, tolower(c));\n        }\n    }\n    return ans;\n}\nint\
    \ main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"\
    aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9x9z31ny.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9x9z31ny.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int)\u2019\n   19 |         \
    \    ans = ans.replace(c, toupper(c));\n      |                              \
    \              ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9x9z31ny.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ n"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.at(s[i]) = toupper(ans.at(s[i]));\n        }\n        else\
    \ {\n            ans.at(s[i]) = tolower(ans.at(s[i]));\n        }\n    }\n   \
    \ return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::at: __n (which is 65) >= this->size() (which is 4)\n"
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for (auto &c: s) {\n        if (isalpha(c)) {\n   \
    \         std::swap(toupper(c), tolower(c));\n        }\n        res += c;\n \
    \   }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_u_efufa.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp_u_efufa.cpp:19:45: error: no matching function for call to \u2018\
    swap(int, int)\u2019\n   19 |             std::swap(toupper(c), tolower(c));\n\
    \      |                                             ^\nIn file included from\
    \ /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_u_efufa.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note: candidate: \u2018typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&) [with _Tp = int; typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ = void]\u2019 <near match>\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |  \
    \   ^~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note:   conversion of argument 2 would be ill-formed:\n/tmp/tmp_u_efufa.cpp:19:42:\
    \ error: cannot bind non-const lvalue reference of type \u2018int&\u2019 to an\
    \ rvalue of type \u2018int\u2019\n   19 |             std::swap(toupper(c), tolower(c));\n\
    \      |                                   ~~~~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2"
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.length(); i++) {\n      \
    \  if (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.length() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpe03peqq7: /tmp/tmpe03peqq7.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            char c = toupper(s[i]);\n            s[i] = c;\n            c\
    \ = tolower(s[i]);\n            s[i] = c;\n        }\n    }\n    res.assign(s);\n\
    \    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpeytkedfa: /tmp/tmpeytkedfa.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for (auto &c: s) {\n        if (isalpha(c)) {\n   \
    \         char c = toupper(c);\n            char t = tolower(c);\n           \
    \ res = res + t;\n        } else {\n            res = res + c;\n        }\n  \
    \  }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp62bs6dlv: /tmp/tmp62bs6dlv.cpp:30: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] == 'a' || s[i] == 'A') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmppzheaiy1: /tmp/tmppzheaiy1.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : ans) {\n        if (isalpha(i))\
    \ {\n            i = toupper(i);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpin40hd2z: /tmp/tmpin40hd2z.cpp:26: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (std::isalpha(c))\
    \ {\n            ans = std::toupper(ans);\n            ans = std::tolower(ans);\n\
    \        } else {\n            ans = c;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyz537kah.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpyz537kah.cpp:19:35: error: no matching function for call to \u2018\
    toupper(std::string&)\u2019\n   19 |             ans = std::toupper(ans);\n  \
    \    |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpyz537kah.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyz537kah.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyz537kah.cpp:19:35:\
    \ note:   candidate expects 2 arguments, 1 provided\n   19 |             ans =\
    \ std::toupper(ans);\n      |   "
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i,toupper(i),1);\n            ans = ans.replace(i,tolower(i),1);\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9nh9wfor.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp9nh9wfor.cpp:19:45: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int, int)\u2019\n   19 |    \
    \         ans = ans.replace(i,toupper(i),1);\n      |                        \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp9nh9wfor.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp9nh9wfor.cpp:19:44:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1);\n        } else {\n            ans = ans.substr(0,\
    \ i) + tolower(ans.substr(i, 1)) + ans.substr(i + 1);\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3euypfa2.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3euypfa2.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1);\n      |               \
    \                                               ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3euypfa2.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3euypfa2.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3euypfa2.cpp:19:62:\
    \ note:   candidate expects 2 arg"
  stdout: ''
  timestamp: 1660062343
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (std::isalpha(s[i])) {\n            ans.replace(i, 1, std::toupper(s[i]));\n\
    \            ans.replace(i, 2, std::tolower(s[i]));\n        }\n    }\n    return\
    \ ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb8q5aycj.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpb8q5aycj.cpp:19:49: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, std::toupper(s[i]));\n      |                     \
    \                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpb8q5aycj.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpb8q5aycj.cpp:19:43:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19"
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }\n        else{\n            res+=s[i];\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmprgowcsq8: /tmp/tmprgowcsq8.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.substr(0, ans.size() - 1) + toupper(ans.back()) + ans.substr(ans.size()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.size() - 1) + i;\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp_lhq_pw3.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp_lhq_pw3.cpp:19:49: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size() - 1) + toupper(ans.back())\
    \ + ans.substr(ans.size() - 1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \             |\n      |                             |                       \
    \     int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp_lhq_pw3.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp_lhq_pw3.cpp:19:69:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size() - 1)\
    \ + toupper(ans"
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans[i] = toupper(s[i]);\n            ans[s.size()\
    \ - i - 1] = tolower(ans[s.size() - i - 1]);\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp4u8uzl79: /tmp/tmp4u8uzl79.cpp:27: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (isalpha(c)) {\n\
    \            ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) + ans.substr(ans.size()-1);\n\
    \        } else {\n            ans = ans.substr(0, ans.size()-1) + tolower(ans.back())\
    \ + ans.substr(ans.size()-1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwn1euv_c.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpwn1euv_c.cpp:19:47: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size()-1) + toupper(ans.back()) +\
    \ ans.substr(ans.size()-1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^ ~~~~~~~~~~~~~~~~~~~\n      |                             |               \
    \           |\n      |                             |                         \
    \ int\n      |                             std::__cxx11::basic_string<char>\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpwn1euv_c.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpwn1euv_c.cpp:19:67:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size()-1) +\
    \ toupper(ans.back()) + a"
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++) {\n        if(s[i]>='a'\
    \ && s[i]<='z') {\n            res+=s[i];\n        }\n        else {\n       \
    \     res+=toupper(s[i]);\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpg34yzt5r: /tmp/tmpg34yzt5r.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            int l=tolower(s[i]);\n            int u=toupper(s[i]);\n        \
    \    res+=l+u;\n        }\n        else{\n            res+=s[i];\n        }\n\
    \    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp_rcasop8: /tmp/tmp_rcasop8.cpp:31: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062344
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (std::isalpha(i))\
    \ {\n            ans = ans.substr(0, ans.length() - 1) + toupper(ans.substr(ans.length()\
    \ - 1)) + ans.substr(0, ans.length() - 1);\n        } else {\n            ans\
    \ = ans.substr(0, ans.length() - 1) + i;\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2g_du8ek.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp2g_du8ek.cpp:19:89: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ ans.length() - 1) + toupper(ans.substr(ans.length() - 1)) + ans.substr(0, ans.length()\
    \ - 1);\n      |                                                             \
    \                            ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp2g_du8ek.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp2g_du8ek.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution"
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: ans) {\n        if (std::isalpha(c))\
    \ {\n            std::swap(std::toupper(c), std::tolower(c));\n        }\n   \
    \ }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1pbe7x3z.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp1pbe7x3z.cpp:19:55: error: no matching function for call to \u2018\
    swap(int, int)\u2019\n   19 |             std::swap(std::toupper(c), std::tolower(c));\n\
    \      |                                                       ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/exception:144,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp1pbe7x3z.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note: candidate: \u2018typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ std::swap(_Tp&, _Tp&) [with _Tp = int; typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp>\
    \ >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type\
    \ = void]\u2019 <near match>\n  182 |     swap(_Tp& __a, _Tp& __b)\n      |  \
    \   ^~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/move.h:182:5:\
    \ note:   conversion of argument 2 would be ill-formed:\n/tmp/tmp1pbe7x3z.cpp:19:52:\
    \ error: cannot bind non-const lvalue reference of type \u2018int&\u2019 to an\
    \ rvalue of type \u2018int\u2019\n   19 |             std::swap(std::toupper(c),\
    \ std::tolower(c));\n      |                                        ~~~~~~~~~~~~^~~\n\
    In file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/nested_exception.h:40,\n\
    \     "
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(c, 'A');\n        } else if (c == 'b'\
    \ || c == 'B') {\n            ans = ans.replace(c, 'B');\n        } else if (c\
    \ == 'c' || c == 'C') {\n            ans = ans.replace(c, 'C');\n        } else\
    \ if (c == 'd' || c == 'D') {\n            ans = ans.replace(c, 'D');\n      \
    \  } else if (c == 'e' || c == 'E') {\n            ans = ans.replace(c, 'E');\n\
    \        } else if (c == 'f' || c == 'F') {\n            ans = ans.replace(c,\
    \ 'F');\n        } else if (c == 'g' || c == 'G') {\n            ans = ans.replace(c,\
    \ 'G');\n        } else if (c == 'h' || c == 'H') {\n            ans = ans.replace(c,\
    \ 'H');\n        } else if (c == 'i' || c == 'I') {\n            ans = ans.replace(c,\
    \ 'I');\n        } else if (c == 'j' || c == 'J') {\n            ans = ans.replace(c,\
    \ 'J');\n        } else if (c == 'k' || c == 'K') {\n            ans = ans.replace(c,\
    \ 'K');\n        } else if (c == 'l' || c == 'L') {\n            ans = ans.replace(c,\
    \ 'L');\n        } else if (c == 'm' || c == 'M') {\n            ans = ans.replace(c,\
    \ 'M');\n        } else if (c == 'n' || c == 'N') {\n            ans = ans.replace(c,\
    \ 'N');\n        } else if (c == 'o' || c == 'O') {\n            ans = ans.replace(c,\
    \ 'O');\n        } else if (c == 'p' || c == 'P') {\n            ans = ans.replace(c,\
    \ 'P');\n        } else if (c == 'q' || c == 'Q') {\n            ans = ans.replace(c,\
    \ 'Q');\n        } else if (c == 'r' || c == 'R') {\n            ans = ans.replace(c,\
    \ 'R');\n        } else if (c == 's' || c == 'S') {\n            ans = ans.replace(c,\
    \ 'S');\n        } else if (c == 't' || c == 'T') {\n            ans = ans.replace(c,\
    \ 'T');\n        } else if (c == 'u' || c == 'U') {\n            ans = ans.replace(c,\
    \ 'U');\n        } else if (c == 'v' || c == 'V') {\n            ans = ans.replace(c,\
    \ 'V');\n        } else if (c == 'w' || c == 'W') {\n            ans = ans.replace(c,\
    \ 'W');\n        } else if (c == 'x' || c == 'X') {\n            ans = ans.replace\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0t8m0nv6.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0t8m0nv6.cpp:19:37: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, char)\u2019\n   19 |        \
    \     ans = ans.replace(c, 'A');\n      |                                    \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0t8m0nv6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ note: candidat"
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (c == 'a' || c\
    \ == 'A') {\n            ans = ans.replace(c, 'A');\n        } else if (c == 'b'\
    \ || c == 'B') {\n            ans = ans.replace(c, 'B');\n        } else if (c\
    \ == 'c' || c == 'C') {\n            ans = ans.replace(c, 'C');\n        } else\
    \ if (c == 'd' || c == 'D') {\n            ans = ans.replace(c, 'D');\n      \
    \  } else if (c == 'e' || c == 'E') {\n            ans = ans.replace(c, 'E');\n\
    \        } else if (c == 'f' || c == 'F') {\n            ans = ans.replace(c,\
    \ 'F');\n        } else if (c == 'g' || c == 'G') {\n            ans = ans.replace(c,\
    \ 'G');\n        } else if (c == 'h' || c == 'H') {\n            ans = ans.replace(c,\
    \ 'H');\n        } else if (c == 'i' || c == 'I') {\n            ans = ans.replace(c,\
    \ 'I');\n        } else if (c == 'j' || c == 'J') {\n            ans = ans.replace(c,\
    \ 'J');\n        } else if (c == 'k' || c == 'K') {\n            ans = ans.replace(c,\
    \ 'K');\n        } else if (c == 'l' || c == 'L') {\n            ans = ans.replace(c,\
    \ 'L');\n        } else if (c == 'm' || c == 'M') {\n            ans = ans.replace(c,\
    \ 'M');\n        } else if (c == 'n' || c == 'N') {\n            ans = ans.replace(c,\
    \ 'N');\n        } else if (c == 'o' || c == 'O') {\n            ans = ans.replace(c,\
    \ 'O');\n        } else if (c == 'p' || c == 'P') {\n            ans = ans.replace(c,\
    \ 'P');\n        } else if (c == 'q' || c == 'Q') {\n            ans = ans.replace(c,\
    \ 'Q');\n        } else if (c == 'r' || c == 'R') {\n            ans = ans.replace(c,\
    \ 'R');\n        } else if (c == 's' || c == 'S') {\n            ans = ans.replace(c,\
    \ 'S');\n        } else if (c == 't' || c == 'T') {\n            ans = ans.replace(c,\
    \ 'T');\n        } else if (c == 'u' || c == 'U') {\n            ans = ans.replace(c,\
    \ 'U');\n        } else if (c == 'v' || c == 'V') {\n            ans = ans.replace(c,\
    \ 'V');\n        } else if (c == 'w' || c == 'W') {\n            ans = ans.replace(c,\
    \ 'W');\n        } else if (c == 'x' || c == 'X') {\n            ans = ans.replace\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0t8m0nv6.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0t8m0nv6.cpp:19:37: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, char)\u2019\n   19 |        \
    \     ans = ans.replace(c, 'A');\n      |                                    \
    \ ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0t8m0nv6.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1911:7:\
    \ note: candidat"
  stdout: ''
  timestamp: 1660062345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (s[i] >= 'a' && s[i] <= 'z') {\n            ans = ans.substr(0, i) + ans.substr(i\
    \ + 1, ans.size() - i - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: "terminate called after throwing an instance of 'std::out_of_range'\n  what():\
    \  basic_string::substr: __pos (which is 4) > this->size() (which is 3)\n"
  stdout: ''
  timestamp: 1660062345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 &&\
    \ s[i]<=90){\n            res+=char(s[i]-32);\n        }\n        else if(s[i]>=97\
    \ && s[i]<=122){\n            res+=char(s[i]+32);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmp8qaexwyx: /tmp/tmp8qaexwyx.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (std::isalpha(c))\
    \ {\n            ans = std::toupper(ans);\n            ans = std::tolower(ans);\n\
    \        } else {\n            ans = c;\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyz537kah.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpyz537kah.cpp:19:35: error: no matching function for call to \u2018\
    toupper(std::string&)\u2019\n   19 |             ans = std::toupper(ans);\n  \
    \    |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpyz537kah.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpyz537kah.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpyz537kah.cpp:19:35:\
    \ note:   candidate expects 2 arguments, 1 provided\n   19 |             ans =\
    \ std::toupper(ans);\n      |   "
  stdout: ''
  timestamp: 1660062344
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c : s) {\n        if (std::isalpha(c))\
    \ {\n            ans = std::string(std::toupper(c), std::tolower(c));\n      \
    \  } else {\n            ans = std::string(std::tolower(c), std::toupper(c));\n\
    \        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpe5a8r5gr: /tmp/tmpe5a8r5gr.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans.replace(i, 1, toupper(s[i]));\n    \
    \        ans.replace(i, 2, tolower(s[i]));\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdgg2qj25.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpdgg2qj25.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(size_t&, int, int)\u2019\n   19 |  \
    \           ans.replace(i, 1, toupper(s[i]));\n      |                       \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpdgg2qj25.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpdgg2qj25.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>=65 &&\
    \ s[i]<=90){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>=97\
    \ && s[i]<=122){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpcjujfpj8: /tmp/tmpcjujfpj8.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.length(); i++) {\n       \
    \ if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.length());\n        }\n    }\n    return ans;\n\
    }\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\"))\
    \ == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp0z1slt55.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp0z1slt55.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.length());\n      | \
    \                                                             ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp0z1slt55.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp0z1slt55.cpp:19:62:\
    \ note:   candidate"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.substr(0, ans.length() - 1) + toupper(i) + ans.substr(ans.length()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.length() - 1) +\
    \ i;\n        }\n    }\n    return ans;\n}\nint main() {\n    auto candidate =\
    \ solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5q641rma.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp5q641rma.cpp:19:51: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.length() - 1) + toupper(i) + ans.substr(ans.length()\
    \ - 1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~\n\
    \      |                             |                              |\n      |\
    \                             |                              int\n      |    \
    \                         std::__cxx11::basic_string<char>\nIn file included from\
    \ /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp5q641rma.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp5q641rma.cpp:19:62:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.length() -\
    \ 1) + toupper(i) + ans."
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (std::isalpha(i))\
    \ {\n            ans = ans.substr(0, ans.size() - 1) + std::toupper(i) + ans.substr(ans.size()\
    \ - 1);\n        } else {\n            ans = ans.substr(0, ans.size() - 1) + std::tolower(i)\
    \ + ans.substr(ans.size() - 1);\n        }\n    }\n    return ans;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt9x_zf6m.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpt9x_zf6m.cpp:19:49: error: no match for \u2018operator+\u2019 (operand\
    \ types are \u2018std::__cxx11::basic_string<char>\u2019 and \u2018int\u2019)\n\
    \   19 |             ans = ans.substr(0, ans.size() - 1) + std::toupper(i) + ans.substr(ans.size()\
    \ - 1);\n      |                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^ ~~~~~~~~~~~~~~~\n\
    \      |                             |                                 |\n   \
    \   |                             std::__cxx11::basic_string<char>  int\nIn file\
    \ included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_algobase.h:67,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/char_traits.h:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpt9x_zf6m.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note: candidate: \u2018template<class _Iterator> std::reverse_iterator<_Iterator>\
    \ std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const\
    \ std::reverse_iterator<_Iterator>&)\u2019\n  423 |     operator+(typename reverse_iterator<_Iterator>::difference_type\
    \ __n,\n      |     ^~~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/stl_iterator.h:423:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpt9x_zf6m.cpp:19:65:\
    \ note:   mismatched types \u2018const std::reverse_iterator<_Iterator>\u2019\
    \ and \u2018int\u2019\n   19 |             ans = ans.substr(0, ans.size() - 1)\
    \ + std::toupper(i) + ans.substr(ans.size() - 1);\n      |                   \
    \      "
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: ans) {\n        if (std::isalpha(c))\
    \ {\n            std::transform(c.begin(), c.end(), c.begin(), ::toupper);\n \
    \       }\n    }\n    return ans;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5c65n6ik.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp5c65n6ik.cpp:19:30: error: request for member \u2018begin\u2019 in\
    \ \u2018c\u2019, which is of non-class type \u2018char\u2019\n   19 |        \
    \     std::transform(c.begin(), c.end(), c.begin(), ::toupper);\n      |     \
    \                         ^~~~~\n/tmp/tmp5c65n6ik.cpp:19:41: error: request for\
    \ member \u2018end\u2019 in \u2018c\u2019, which is of non-class type \u2018char\u2019\
    \n   19 |             std::transform(c.begin(), c.end(), c.begin(), ::toupper);\n\
    \      |                                         ^~~\n/tmp/tmp5c65n6ik.cpp:19:50:\
    \ error: request for member \u2018begin\u2019 in \u2018c\u2019, which is of non-class\
    \ type \u2018char\u2019\n   19 |             std::transform(c.begin(), c.end(),\
    \ c.begin(), ::toupper);\n      |                                            \
    \      ^~~~~\n"
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans = ans.replace(\"A\",\"a\");\n            ans = ans.replace(\"\
    a\",\"A\");\n        }\n        if (c == 'b' || c == 'B') {\n            ans =\
    \ ans.replace(\"B\",\"b\");\n            ans = ans.replace(\"b\",\"B\");\n   \
    \     }\n        if (c == 'c' || c == 'C') {\n            ans = ans.replace(\"\
    C\",\"c\");\n            ans = ans.replace(\"c\",\"C\");\n        }\n        if\
    \ (c == 'd' || c == 'D') {\n            ans = ans.replace(\"D\",\"d\");\n    \
    \        ans = ans.replace(\"d\",\"D\");\n        }\n        if (c == 'e' || c\
    \ == 'E') {\n            ans = ans.replace(\"E\",\"e\");\n            ans = ans.replace(\"\
    e\",\"E\");\n        }\n        if (c == 'f' || c == 'F') {\n            ans =\
    \ ans.replace(\"F\",\"f\");\n            ans = ans.replace(\"f\",\"F\");\n   \
    \     }\n        if (c == 'g' || c == 'G') {\n            ans = ans.replace(\"\
    G\",\"g\");\n            ans = ans.replace(\"g\",\"G\");\n        }\n        if\
    \ (c == 'h' || c == 'H') {\n            ans = ans.replace(\"H\",\"h\");\n    \
    \        ans = ans.replace(\"h\",\"H\");\n        }\n        if (c == 'i' || c\
    \ == 'I') {\n            ans = ans.replace(\"I\",\"i\");\n            ans = ans.replace(\"\
    i\",\"I\");\n        }\n        if (c == 'j' || c == 'J') {\n            ans =\
    \ ans.replace(\"J\",\"j\");\n            ans = ans.replace(\"j\",\"J\");\n   \
    \     }\n        if (c == 'k' || c == 'K') {\n            ans = ans.replace(\"\
    K\",\"k\");\n            ans = ans.replace(\"k\",\"K\");\n        }\n        if\
    \ (c == 'l' || c == 'L') {\n            ans = ans.replace(\"L\",\"l\");\n    \
    \        ans = ans.replace(\"l\",\"L\");\n        }\n        if (c == 'm' || c\
    \ == 'M') {\n            ans = ans.replace(\"M\",\"m\");\n            ans = ans.replace(\"\
    m\",\"M\");\n        }\n        if (c == 'n' || c == 'N') {\n            ans =\
    \ ans.replace(\"N\",\"n\");\n            ans = ans.replace(\"n\",\"N\");\n   \
    \     }\n        if (c == 'o' || c == 'O') {\n            ans = ans.replace(\"\
    O\",\"o\");\n            ans = ans.\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8frkim6k.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp8frkim6k.cpp:19:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], const char [2])\u2019\
    \n   19 |             ans = ans.replace(\"A\",\"a\");\n      |               \
    \                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8frkim6k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1"
  stdout: ''
  timestamp: 1660062343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(isalpha(s[i])){\n\
    \            res+=toupper(s[i]);\n        }else{\n            res+=s[i];\n   \
    \     }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmp4kwwhphe: /tmp/tmp4kwwhphe.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++) {\n        if(isalpha(s[i]))\
    \ {\n            char c = s[i];\n            s[i] = toupper(c);\n            s[i]\
    \ = tolower(c);\n        }\n    }\n    res.swap(s);\n    return res;\n}\nint main()\
    \ {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"\
    ));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpfi4heh7i: /tmp/tmpfi4heh7i.cpp:29: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(size_t i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxj2o7f5p.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpxj2o7f5p.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpxj2o7f5p.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpxj2o7f5p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpxj2o7f5p.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    int len = s.length();\n    for(int i = 0; i < len;\
    \ i++){\n        if(isalpha(s[i])){\n            char c = toupper(s[i]);\n   \
    \         s[i] = c;\n            char d = tolower(s[i]);\n            s[i] = d;\n\
    \        }\n    }\n    res.assign(s);\n    return res;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpnij25ooq: /tmp/tmpnij25ooq.cpp:31: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=toupper(s[i]);\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=tolower(s[i]);\n        }\n        else{\n\
    \            res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpylnwf0ak: /tmp/tmpylnwf0ak.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (isalpha(i)) {\n\
    \            ans = ans.replace(i,toupper(i),1);\n        } else {\n          \
    \  ans = ans.replace(i,tolower(i),1);\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpzvudlz2p.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpzvudlz2p.cpp:19:45: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(char&, int, int)\u2019\n   19 |    \
    \         ans = ans.replace(i,toupper(i),1);\n      |                        \
    \                     ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpzvudlz2p.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmpzvudlz2p.cpp:19:44:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |     "
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (size_t i = 0; i < s.size(); i++) {\n     \
    \   if (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprmh1c2xn.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmprmh1c2xn.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmprmh1c2xn.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmprmh1c2xn.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = \"\";\n    for(int i = 0; i < s.size(); i++) {\n      \
    \  if(isalpha(s[i])) {\n            ans += toupper(s[i]);\n        } else {\n\
    \            ans += s[i];\n        }\n    }\n    return ans;\n}\nint main() {\n\
    \    auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: Exception
  stderr: 'tmpib8as58h: /tmp/tmpib8as58h.cpp:28: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans.replace(i, 1, toupper(s[i]));\n            ans.replace(i,\
    \ 2, tolower(s[i]));\n        }\n    }\n    return ans;\n}\nint main() {\n   \
    \ auto candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n\
    \    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"ab\"\
    )) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp7nz516sv.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp7nz516sv.cpp:19:44: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(int&, int, int)\u2019\n   19 |     \
    \        ans.replace(i, 1, toupper(s[i]));\n      |                          \
    \                  ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp7nz516sv.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const _CharT*) [with _CharT = char; _Traits = std::char_traits<char>; _Alloc\
    \ = std::allocator<char>; std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type\
    \ = long unsigned int]\u2019 <near match>\n 1961 |       replace(size_type __pos,\
    \ size_type __n1, const _CharT* __s)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1961:7:\
    \ note:   conversion of argument 3 would be ill-formed:\n/tmp/tmp7nz516sv.cpp:19:38:\
    \ error: invalid conversion from \u2018int\u2019 to \u2018const char*\u2019 [-fpermissive]\n\
    \   19 |        "
  stdout: ''
  timestamp: 1660062343
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(int i=0;i<s.size();i++){\n        if(s[i]>='a'\
    \ && s[i]<='z'){\n            res+=s[i];\n        }\n        else if(s[i]>='A'\
    \ && s[i]<='Z'){\n            res+=s[i];\n        }\n        else{\n         \
    \   res+=s[i];\n        }\n    }\n    return res;\n}\nint main() {\n    auto candidate\
    \ = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpeum1kz2a: /tmp/tmpeum1kz2a.cpp:32: int main(): Assertion `candidate(("AsDf"))
    == ("aSdF")'' failed.

    '
  stdout: ''
  timestamp: 1660062341
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &i : s) {\n        if (std::isalpha(i))\
    \ {\n            ans = std::toupper(ans);\n            ans = std::tolower(ans);\n\
    \        } else {\n            ans = std::tolower(ans);\n        }\n    }\n  \
    \  return ans;\n}\nint main() {\n    auto candidate = solve;\n    assert(candidate((\"\
    AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n \
    \   assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\"))\
    \ == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"));\n\
    \    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"#$a^D\"\
    )) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl38kmnfm.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpl38kmnfm.cpp:19:35: error: no matching function for call to \u2018\
    toupper(std::string&)\u2019\n   19 |             ans = std::toupper(ans);\n  \
    \    |                                   ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpl38kmnfm.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::string\u2019 {aka \u2018std::__cxx11::basic_string<char>\u2019\
    } to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpl38kmnfm.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpl38kmnfm.cpp:19:35:\
    \ note:   candidate expects 2 arguments, 1 provided\n   19 |             ans =\
    \ std::toupper(ans);\n      |   "
  stdout: ''
  timestamp: 1660062345
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string res;\n    for(char c : s) {\n        if(c>='a' && c<='z') {\n\
    \            res+=toupper(c);\n        }\n        else if(c>='A' && c<='Z') {\n\
    \            res+=tolower(c);\n        }\n        else {\n            res+=c;\n\
    \        }\n    }\n    return res;\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: Exception
  stderr: 'tmpni27f913: /tmp/tmpni27f913.cpp:33: int main(): Assertion `candidate(("1234"))
    == ("4321")'' failed.

    '
  stdout: ''
  timestamp: 1660062345
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (int i = 0; i < s.size(); i++) {\n        if\
    \ (isalpha(s[i])) {\n            ans = ans.substr(0, i) + toupper(ans.substr(i,\
    \ 1)) + ans.substr(i + 1, ans.size());\n        }\n    }\n    return ans;\n}\n\
    int main() {\n    auto candidate = solve;\n    assert(candidate((\"AsDf\")) ==\
    \ (\"aSdF\"));\n    assert(candidate((\"1234\")) == (\"4321\"));\n    assert(candidate((\"\
    ab\")) == (\"AB\"));\n    assert(candidate((\"#a@C\")) == (\"#A@c\"));\n    assert(candidate((\"\
    #AsdfW^45\")) == (\"#aSDFw^45\"));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"\
    ));\n    assert(candidate((\"#$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"\
    #ccc\")) == (\"#CCC\"));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpr5ajxsn1.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmpr5ajxsn1.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmpr5ajxsn1.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmpr5ajxsn1.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for(int i = 0; i < s.size(); i++) {\n        if(isalpha(s[i]))\
    \ {\n            ans = ans.substr(0, i) + toupper(ans.substr(i, 1)) + ans.substr(i\
    \ + 1, ans.size());\n        }\n    }\n    return ans;\n}\nint main() {\n    auto\
    \ candidate = solve;\n    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"\
    1234\")) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp3symtm6v.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp3symtm6v.cpp:19:62: error: no matching function for call to \u2018\
    toupper(std::__cxx11::basic_string<char>)\u2019\n   19 |             ans = ans.substr(0,\
    \ i) + toupper(ans.substr(i, 1)) + ans.substr(i + 1, ans.size());\n      |   \
    \                                                           ^\nIn file included\
    \ from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/cctype:42,\n      \
    \           from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:35,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/usr/include/ctype.h:128:12: note:\
    \ candidate: \u2018int toupper(int)\u2019\n  128 | extern int toupper (int __c)\
    \ __THROW;\n      |            ^~~~~~~\n/usr/include/ctype.h:128:25: note:   no\
    \ known conversion for argument 1 from \u2018std::__cxx11::basic_string<char>\u2019\
    \ to \u2018int\u2019\n  128 | extern int toupper (int __c) __THROW;\n      | \
    \                    ~~~~^~~\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_ios.h:37,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:44,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp3symtm6v.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note: candidate: \u2018template<class _CharT> _CharT std::toupper(_CharT, const\
    \ std::locale&)\u2019\n 2643 |     toupper(_CharT __c, const locale& __loc)\n\
    \      |     ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_facets.h:2643:5:\
    \ note:   template argument deduction/substitution failed:\n/tmp/tmp3symtm6v.cpp:19:62:\
    \ note:   candidate e"
  stdout: ''
  timestamp: 1660062339
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a string\
    \ s.\n// if s[i] is a letter, reverse its case from lower to upper or vise versa,\
    \ \n// otherwise keep it as it is.\n// If the string contains no letters, reverse\
    \ the string.\n// The function should return the resulted string.\n// Examples\n\
    // >>> solve((\"1234\"))\n// (\"4321\")\n// >>> solve((\"ab\"))\n// (\"AB\")\n\
    // >>> solve((\"#a@C\"))\n// (\"#A@c\")\nstd::string solve(std::string s) {\n\
    \    std::string ans = s;\n    for (auto &c: s) {\n        if (c == 'a' || c ==\
    \ 'A') {\n            ans = ans.replace(\"A\",\"a\");\n            ans = ans.replace(\"\
    a\",\"A\");\n        }\n        if (c == 'b' || c == 'B') {\n            ans =\
    \ ans.replace(\"B\",\"b\");\n            ans = ans.replace(\"b\",\"B\");\n   \
    \     }\n        if (c == 'c' || c == 'C') {\n            ans = ans.replace(\"\
    C\",\"c\");\n            ans = ans.replace(\"c\",\"C\");\n        }\n        if\
    \ (c == 'd' || c == 'D') {\n            ans = ans.replace(\"D\",\"d\");\n    \
    \        ans = ans.replace(\"d\",\"D\");\n        }\n        if (c == 'e' || c\
    \ == 'E') {\n            ans = ans.replace(\"E\",\"e\");\n            ans = ans.replace(\"\
    e\",\"E\");\n        }\n        if (c == 'f' || c == 'F') {\n            ans =\
    \ ans.replace(\"F\",\"f\");\n            ans = ans.replace(\"f\",\"F\");\n   \
    \     }\n        if (c == 'g' || c == 'G') {\n            ans = ans.replace(\"\
    G\",\"g\");\n            ans = ans.replace(\"g\",\"G\");\n        }\n        if\
    \ (c == 'h' || c == 'H') {\n            ans = ans.replace(\"H\",\"h\");\n    \
    \        ans = ans.replace(\"h\",\"H\");\n        }\n        if (c == 'i' || c\
    \ == 'I') {\n            ans = ans.replace(\"I\",\"i\");\n            ans = ans.replace(\"\
    i\",\"I\");\n        }\n        if (c == 'j' || c == 'J') {\n            ans =\
    \ ans.replace(\"J\",\"j\");\n            ans = ans.replace(\"j\",\"J\");\n   \
    \     }\n        if (c == 'k' || c == 'K') {\n            ans = ans.replace(\"\
    K\",\"k\");\n            ans = ans.replace(\"k\",\"K\");\n        }\n        if\
    \ (c == 'l' || c == 'L') {\n            ans = ans.replace(\"L\",\"l\");\n    \
    \        ans = ans.replace(\"l\",\"L\");\n        }\n        if (c == 'm' || c\
    \ == 'M') {\n            ans = ans.replace(\"M\",\"m\");\n            ans = ans.replace(\"\
    m\",\"M\");\n        }\n        if (c == 'n' || c == 'N') {\n            ans =\
    \ ans.replace(\"N\",\"n\");\n            ans = ans.replace(\"n\",\"N\");\n   \
    \     }\n        if (c == 'o' || c == 'O') {\n            ans = ans.replace(\"\
    O\",\"o\");\n            ans = ans.\n}\nint main() {\n    auto candidate = solve;\n\
    \    assert(candidate((\"AsDf\")) == (\"aSdF\"));\n    assert(candidate((\"1234\"\
    )) == (\"4321\"));\n    assert(candidate((\"ab\")) == (\"AB\"));\n    assert(candidate((\"\
    #a@C\")) == (\"#A@c\"));\n    assert(candidate((\"#AsdfW^45\")) == (\"#aSDFw^45\"\
    ));\n    assert(candidate((\"#6@2\")) == (\"2@6#\"));\n    assert(candidate((\"\
    #$a^D\")) == (\"#$A^d\"));\n    assert(candidate((\"#ccc\")) == (\"#CCC\"));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp8frkim6k.cpp: In function \u2018std::string solve(std::string)\u2019\
    :\n/tmp/tmp8frkim6k.cpp:19:38: error: no matching function for call to \u2018\
    std::__cxx11::basic_string<char>::replace(const char [2], const char [2])\u2019\
    \n   19 |             ans = ans.replace(\"A\",\"a\");\n      |               \
    \                       ^\nIn file included from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/string:55,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/locale_classes.h:40,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/ios_base.h:41,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ios:42,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/istream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/sstream:38,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/complex:45,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/ccomplex:39,\n\
    \                 from /shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/x86_64-pc-linux-gnu/bits/stdc++.h:54,\n\
    \                 from /tmp/tmp8frkim6k.cpp:2:\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note: candidate: \u2018std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&\
    \ std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::replace(std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type, std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::size_type,\
    \ const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&) [with _CharT = char;\
    \ _Traits = std::char_traits<char>; _Alloc = std::allocator<char>; std::__cxx11::basic_string<_CharT,\
    \ _Traits, _Alloc>::size_type = long unsigned int]\u2019\n 1889 |       replace(size_type\
    \ __pos, size_type __n, const basic_string& __str)\n      |       ^~~~~~~\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1889:7:\
    \ note:   candidate expects 3 arguments, 2 provided\n/shared/centos7/gcc/9.2.0-skylake/include/c++/9.2.0/bits/basic_string.h:1"
  stdout: ''
  timestamp: 1660062343

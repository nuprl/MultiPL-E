language: cpp
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || it != u.begin())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpw33sdzcb.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpw33sdzcb.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpw33sdzcb.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpw33sdzcb.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpw33sdzcb.cpp: In function 'int\
    \ main()':\n/tmp/tmpw33sdzcb.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpw33sdzcb.cpp:2:\n/tmp/tmpw33sdzcb.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpw33sdzcb.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpw33sdzcb.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpw33sdzcb.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpw33sdzcb.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ i = l.begin(); i != l.end(); ++i) {\n        u.push_back(*i);\n    }\n    return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp5edbc7uw.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp5edbc7uw.cpp:9:14: error: 'i' does not name a type\n     for(auto\
    \ i = l.begin(); i != l.end(); ++i) {\n              ^\n/tmp/tmp5edbc7uw.cpp:9:29:\
    \ error: expected ';' before 'i'\n     for(auto i = l.begin(); i != l.end(); ++i)\
    \ {\n                             ^\n/tmp/tmp5edbc7uw.cpp:9:29: error: 'i' was\
    \ not declared in this scope\n/tmp/tmp5edbc7uw.cpp: In function 'int main()':\n\
    /tmp/tmp5edbc7uw.cpp:15:10: error: 'candidate' does not name a type\n     auto\
    \ candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp5edbc7uw.cpp:2:\n/tmp/tmp5edbc7uw.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp5edbc7uw.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp5edbc7uw.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp5edbc7uw.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp5edbc7uw.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/qu"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    for(auto i : l) {\n        auto it = std::find(u.begin(),\
    \ u.end(), i);\n        if(it != u.end()) {\n            u.erase(it);\n      \
    \  } else {\n            u.push_back(i);\n        }\n    }\n    return u;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkb_w1rwl.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpkb_w1rwl.cpp:8:14: error: 'i' does not name a type\n     for(auto\
    \ i : l) {\n              ^\n/tmp/tmpkb_w1rwl.cpp:16:5: error: expected ';' before\
    \ 'return'\n     return u;\n     ^\n/tmp/tmpkb_w1rwl.cpp:16:5: error: expected\
    \ primary-expression before 'return'\n/tmp/tmpkb_w1rwl.cpp:16:5: error: expected\
    \ ';' before 'return'\n/tmp/tmpkb_w1rwl.cpp:16:5: error: expected primary-expression\
    \ before 'return'\n/tmp/tmpkb_w1rwl.cpp:16:5: error: expected ')' before 'return'\n\
    /tmp/tmpkb_w1rwl.cpp: In function 'int main()':\n/tmp/tmpkb_w1rwl.cpp:19:10: error:\
    \ 'candidate' does not name a type\n     auto candidate = unique;\n          ^\n\
    In file included from /usr/include/c++/4.8.2/cassert:43:0,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n             \
    \    from /tmp/tmpkb_w1rwl.cpp:2:\n/tmp/tmpkb_w1rwl.cpp:20:40: warning: extended\
    \ initializer lists only available with -std=c++11 or -std=gnu++11 [enabled by\
    \ default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpkb_w1rwl.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpkb_w1rwl.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpkb_w1rwl.cpp:20:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpkb_w1rwl.cpp:20:"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.size() == 0 || u[u.size()\
    \ - 1] != *it) {\n            u.push_back(*it);\n        }\n    }\n    return\
    \ u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpkmlgylty.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpkmlgylty.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpkmlgylty.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpkmlgylty.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpkmlgylty.cpp: In function 'int\
    \ main()':\n/tmp/tmpkmlgylty.cpp:17:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpkmlgylty.cpp:2:\n/tmp/tmpkmlgylty.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpkmlgylty.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpkmlgylty.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpkmlgylty.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpkmlgylty.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    for(long i = 0; i < l.size(); i++) {\n \
    \       for(long j = i + 1; j < l.size(); j++) {\n            if(l[i] < l[j])\
    \ {\n                std::swap(l[i], l[j]);\n            }\n        }\n      \
    \  u.push_back(l[i]);\n    }\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvwg3w4n2.cpp: In function 'int main()':\n/tmp/tmpvwg3w4n2.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvwg3w4n2.cpp:2:\n/tmp/tmpvwg3w4n2.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpvwg3w4n2.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpvwg3w4n2.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpvwg3w4n2.cpp:20:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpvwg3w4n2.cpp:20:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvwg3w4n2.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || it != u.end()\
    \ && *it != *(u+1))\n            u.push_back(*it);\n    }\n    return u;\n}\n\
    int main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgy_29br9.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpgy_29br9.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpgy_29br9.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpgy_29br9.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpgy_29br9.cpp:10:52: error: no match\
    \ for 'operator+' (operand types are 'std::vector<long int>' and 'int')\n    \
    \     if(u.empty() || it != u.end() && *it != *(u+1))\n                      \
    \                              ^\n/tmp/tmpgy_29br9.cpp:10:52: note: candidates\
    \ are:\nIn file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmpgy_29br9.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_Constant,\
    \ std::_ValArray, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const _Tp&, const std::valarray<_Tp>&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpgy_29br9.cpp:10:53: note:   mismatched\
    \ types 'const std::valarray<_Tp>' and 'int'\n         if(u.empty() || it != u.end()\
    \ && *it != *(u+1))\n                                                     ^\n\
    In file included from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:94:0,\n\
    \                 from /tmp/tmpgy_29br9.cpp:2:\n/usr/include/c++/4.8.2/valarray:1167:1:\
    \ note: template<class _Tp> std::_Expr<std::_BinClos<std::__plus, std::_ValArray,\
    \ std::_Constant, _Tp, _Tp>, typename std::__fun<std::__plus, _Tp>::result_type>\
    \ std::operator+(const std::valarray<_Tp>&, const _Tp&)\n _DEFINE_BINARY_OPERATOR(+,\
    \ __plus)\n ^\n/usr/include/c++/4.8.2/valarray:1167:1: note:   template argument\
    \ deduction/substitution failed:\n/tmp/tmpgy_29br9.cpp:10:53: note:   'std::vector<long\
    \ int>' is not derived from 'const std::valarra"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (long i : l) {\n        if (u.size() == 0 || i != u[u.size() - 1]) {\n     \
    \       u.push_back(i);\n        }\n    }\n    return u;\n}\nint main() {\n  \
    \  auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp2a271g2d.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp2a271g2d.cpp:9:19: error: range-based 'for' loops are not allowed\
    \ in C++98 mode\n     for (long i : l) {\n                   ^\n/tmp/tmp2a271g2d.cpp:\
    \ In function 'int main()':\n/tmp/tmp2a271g2d.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp2a271g2d.cpp:2:\n/tmp/tmp2a271g2d.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp2a271g2d.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp2a271g2d.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp2a271g2d.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmp2a271g2d.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp2a271g2d.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (u.empty() || *it !=\
    \ *u.back()) {\n            u.push_back(*it);\n        }\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprvt14wz4.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprvt14wz4.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmprvt14wz4.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmprvt14wz4.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprvt14wz4.cpp:10:41: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if (u.empty() || *it\
    \ != *u.back()) {\n                                         ^\n/tmp/tmprvt14wz4.cpp:\
    \ In function 'int main()':\n/tmp/tmprvt14wz4.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprvt14wz4.cpp:2:\n/tmp/tmprvt14wz4.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprvt14wz4.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprvt14wz4.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprvt14wz4.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (u.empty() || *it !=\
    \ *u.back()) {\n            u.push_back(*it);\n        }\n    }\n    return u;\n\
    }\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprvt14wz4.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprvt14wz4.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmprvt14wz4.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmprvt14wz4.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprvt14wz4.cpp:10:41: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if (u.empty() || *it\
    \ != *u.back()) {\n                                         ^\n/tmp/tmprvt14wz4.cpp:\
    \ In function 'int main()':\n/tmp/tmprvt14wz4.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprvt14wz4.cpp:2:\n/tmp/tmprvt14wz4.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprvt14wz4.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprvt14wz4.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprvt14wz4.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ i = l.begin(); i != l.end(); ++i) {\n        if(u.empty() || (*i) != (*u.back()))\
    \ {\n            u.push_back(*i);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpa5hn4uap.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpa5hn4uap.cpp:9:14: error: 'i' does not name a type\n     for(auto\
    \ i = l.begin(); i != l.end(); ++i) {\n              ^\n/tmp/tmpa5hn4uap.cpp:9:29:\
    \ error: expected ';' before 'i'\n     for(auto i = l.begin(); i != l.end(); ++i)\
    \ {\n                             ^\n/tmp/tmpa5hn4uap.cpp:9:29: error: 'i' was\
    \ not declared in this scope\n/tmp/tmpa5hn4uap.cpp:10:42: error: invalid type\
    \ argument of unary '*' (have 'long int')\n         if(u.empty() || (*i) != (*u.back()))\
    \ {\n                                          ^\n/tmp/tmpa5hn4uap.cpp: In function\
    \ 'int main()':\n/tmp/tmpa5hn4uap.cpp:17:10: error: 'candidate' does not name\
    \ a type\n     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpa5hn4uap.cpp:2:\n/tmp/tmpa5hn4uap.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpa5hn4uap.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpa5hn4uap.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpa5hn4uap.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclo"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(long\
    \ i = 0; i < l.size(); ++i) {\n        if(l[i] != i) {\n            u.push_back(l[i]);\n\
    \        }\n    }\n    return u;\n}\nint main() {\n    auto candidate = unique;\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcgpfejay.cpp: In function 'int main()':\n/tmp/tmpcgpfejay.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcgpfejay.cpp:2:\n/tmp/tmpcgpfejay.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpcgpfejay.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpcgpfejay.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpcgpfejay.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpcgpfejay.cpp:18:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpcgpfejay.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputIterator __first,\
    \ _InputIterator __last,\n         ^\n/usr/include/c++/4.8.2/bits/stl_vector"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        u.push_back(*it);\n    }\n \
    \   return u;\n}\nint main() {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpb6or2ifo.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmpb6or2ifo.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmpb6or2ifo.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmpb6or2ifo.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmpb6or2ifo.cpp: In function 'int\
    \ main()':\n/tmp/tmpb6or2ifo.cpp:15:10: error: 'candidate' does not name a type\n\
    \     auto candidate = unique;\n          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n\
    \                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpb6or2ifo.cpp:2:\n/tmp/tmpb6or2ifo.cpp:16:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmpb6or2ifo.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmpb6or2ifo.cpp:16:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmpb6or2ifo.cpp:16:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/tmpb6or2ifo.cpp:16:124:\
    \ note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c+"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if(u.empty() || *it != *u.back())\
    \ {\n            u.push_back(*it);\n        }\n    }\n    return u;\n}\nint main()\
    \ {\n    auto candidate = unique;\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)3, (long)5, (long)2, (long)3, (long)3, (long)9, (long)0, (long)123})))\
    \ == (std::vector<long>({(long)0, (long)2, (long)3, (long)5, (long)9, (long)123})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprbx377ku.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmprbx377ku.cpp:9:14: error: 'it' does not name a type\n     for(auto\
    \ it = l.begin(); it != l.end(); ++it) {\n              ^\n/tmp/tmprbx377ku.cpp:9:30:\
    \ error: expected ';' before 'it'\n     for(auto it = l.begin(); it != l.end();\
    \ ++it) {\n                              ^\n/tmp/tmprbx377ku.cpp:9:30: error:\
    \ 'it' was not declared in this scope\n/tmp/tmprbx377ku.cpp:10:40: error: invalid\
    \ type argument of unary '*' (have 'long int')\n         if(u.empty() || *it !=\
    \ *u.back()) {\n                                        ^\n/tmp/tmprbx377ku.cpp:\
    \ In function 'int main()':\n/tmp/tmprbx377ku.cpp:17:10: error: 'candidate' does\
    \ not name a type\n     auto candidate = unique;\n          ^\nIn file included\
    \ from /usr/include/c++/4.8.2/cassert:43:0,\n                 from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprbx377ku.cpp:2:\n/tmp/tmprbx377ku.cpp:18:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmprbx377ku.cpp:18:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmprbx377ku.cpp:18:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return sorted unique elements\
    \ in a list\n// >>> unique((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123})))\n// (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123}))\nstd::vector<long> unique(std::vector<long>\
    \ l) {\n    std::vector<long> u;\n    std::sort(l.begin(), l.end());\n    for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n        if (it != l.begin()) {\n\
    \            if (*it != *std::prev(it)) {\n                u.push_back(*it);\n\
    \            }\n        }\n    }\n    return u;\n}\nint main() {\n    auto candidate\
    \ = unique;\n    assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6jge6ifk.cpp: In function 'std::vector<long int> unique(std::vector<long\
    \ int>)':\n/tmp/tmp6jge6ifk.cpp:9:15: error: 'it' does not name a type\n     for\
    \ (auto it = l.begin(); it != l.end(); ++it) {\n               ^\n/tmp/tmp6jge6ifk.cpp:9:31:\
    \ error: expected ';' before 'it'\n     for (auto it = l.begin(); it != l.end();\
    \ ++it) {\n                               ^\n/tmp/tmp6jge6ifk.cpp:9:31: error:\
    \ 'it' was not declared in this scope\n/tmp/tmp6jge6ifk.cpp:11:25: error: 'prev'\
    \ is not a member of 'std'\n             if (*it != *std::prev(it)) {\n      \
    \                   ^\n/tmp/tmp6jge6ifk.cpp: In function 'int main()':\n/tmp/tmp6jge6ifk.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = unique;\n   \
    \       ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n      \
    \           from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp6jge6ifk.cpp:2:\n/tmp/tmp6jge6ifk.cpp:20:40: warning:\
    \ extended initializer lists only available with -std=c++11 or -std=gnu++11 [enabled\
    \ by default]\n     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5,\
    \ (long)2, (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                 ^\n/tmp/tmp6jge6ifk.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    \     assert(candidate((std::vector<long>({(long)5, (long)3, (long)5, (long)2,\
    \ (long)3, (long)3, (long)9, (long)0, (long)123}))) == (std::vector<long>({(long)0,\
    \ (long)2, (long)3, (long)5, (long)9, (long)123})));\n                       \
    \                                                                            \
    \                         ^\n/tmp/tmp6jge6ifk.cpp:20:124: warning: extended initializer\
    \ lists only available with -std=c++11 or -std=gnu++11 [enabled by default]\n\
    /tmp/tmp6jge6ifk.cpp:20:124: error: no matching function for call to 'std::vector<long\
    \ int>::vector(<brace-enclosed initializer list>)'\n/tmp/t"
  stdout: ''

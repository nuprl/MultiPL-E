name: HumanEval_123_get_odd_collatz
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Given a positive integer\
  \ n, return a sorted list that has the odd numbers in collatz sequence.\n// The\
  \ Collatz conjecture is a conjecture in mathematics that concerns a sequence defined\n\
  // as follows: start with any positive integer n. Then each term is obtained from\
  \ the \n// previous term as follows: if the previous term is even, the next term\
  \ is one half of \n// the previous term. If the previous term is odd, the next term\
  \ is 3 times the previous\n// term plus 1. The conjecture is that no matter what\
  \ value of n, the sequence will always reach 1.\n// Note: \n// 1. Collatz(1) is\
  \ [1].\n// 2. returned list sorted in increasing order.\n// For example:\n// get_odd_collatz(5)\
  \ returns [1, 5] # The collatz sequence for 5 is [5, 16, 8, 4, 2, 1], so the odd\
  \ numbers are only 1, and 5.\n// >>> get_odd_collatz((5))\n// (std::vector<long>({(long)1,\
  \ (long)5}))\nstd::vector<long> get_odd_collatz(long n) {\n"
tests: "}\nint main() {\n    auto candidate = get_odd_collatz;\n    assert(candidate((14))\
  \ == (std::vector<long>({(long)1, (long)5, (long)7, (long)11, (long)13, (long)17})));\n\
  \    assert(candidate((5)) == (std::vector<long>({(long)1, (long)5})));\n    assert(candidate((12))\
  \ == (std::vector<long>({(long)1, (long)3, (long)5})));\n    assert(candidate((1))\
  \ == (std::vector<long>({(long)1})));\n}\n"
completions: ["    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    while (n != 1) {\n        if (n % 2 == 0) {\n       \
    \     odd_collatz.push_back(prev);\n            prev = prev / 2;\n        } else\
    \ {\n            prev = prev * 3 + 1;\n        }\n        n = prev;\n    }\n \
    \   return odd_collatz;", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;", " \
    \   std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long next_term2 = 1;\n    long prev_term2\
    \ = 1;\n    long next_term3 = 1;\n    long prev_term3 = 1;\n    long next_term4\
    \ = 1;\n    long prev_term4 = 1;\n    long next_term5 = 1;\n    long prev_term5\
    \ = 1;\n    long next_term6 = 1;\n    long prev_term6 = 1;\n    long next_term7\
    \ = 1;\n    long prev_term7 = 1;\n    long next_term8 = 1;\n    long prev_term8\
    \ = 1;\n    long next_term9 = 1;\n    long prev_term9 = 1;\n    long next_term10\
    \ = 1;\n    long prev_term10 = 1;\n    long next_term11 = 1;\n    long prev_term11\
    \ = 1;\n    long next_term12 = 1;\n    long prev_term12 = 1;\n    long next_term13\
    \ = 1;\n    long prev_term13 = 1;\n    long next_term14 = 1;\n    long prev_term14\
    \ = 1;\n    long next_term15 = 1;\n    long prev_term15 = 1;\n    long next_term16\
    \ = 1;\n    long prev_term16 = 1;\n    long next_term17 = 1;\n    long prev_term17\
    \ = 1;\n    long next_term18 = 1;\n    long prev_term18 = 1;\n    long next_term19\
    \ = 1;\n    long prev_term19 = 1;\n    long next_term20 = 1;\n    long prev_term20\
    \ = 1;\n    long next_term21 = 1;\n    long prev_term21 = 1;\n    long next_term22\
    \ = 1;\n    long prev_term22 = 1;\n    long next_term23 = 1;\n    long prev_term23\
    \ = 1;\n    long next_term24 = 1;\n    long prev_term24 = 1;\n    long next_term25\
    \ = 1;\n    long prev_term25 = 1;\n    long next_term26 = 1;\n    long prev_term26\
    \ = 1;\n    long next_term27 = 1;\n    long prev_term27 = 1;\n    long next_term28\
    \ = 1;\n    long prev_term28 = 1;\n    long next_term29 = 1;\n    long prev_term29\
    \ = 1;\n    long next_term30 = 1;\n    long prev_term30 = 1;\n    long next_term31\
    \ = 1;\n    long prev_term31 = 1;\n    long next_term32 = 1;\n    long prev_term32\
    \ = 1;\n    long next_term33 = 1;\n    long prev_term33 = 1;\n    long next_term34\
    \ = 1;\n    long prev_term34 = 1;\n    long next_term35 = 1;\n    long prev_term35\
    \ = 1;\n    long next_term36 = 1;\n    long ", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_term = 1;\n    long\
    \ odd_collatz_term_prev = 1;\n    long odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 0;\n\
    \    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long counter = 1;\n    long odd_counter = 1;\n    long odd_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_next_term = 1;\n    long odd_counter1\
    \ = 1;\n    long odd_term1 = 1;\n    long odd_prev_term1 = 1;\n    long odd_next_term1\
    \ = 1;\n    long odd_counter11 = 1;\n    long odd_term11 = 1;\n    long odd_prev_term11\
    \ = 1;\n    long odd_next_term11 = 1;\n    long odd_counter111 = 1;\n    long\
    \ odd_term111 = 1;\n    long odd_prev_term111 = 1;\n    long odd_next_term111\
    \ = 1;\n    long odd_counter1111 = 1;\n    long odd_term1111 = 1;\n    long odd_prev_term1111\
    \ = 1;\n    long odd_next_term1111 = 1;\n    long odd_counter11111 = 1;\n    long\
    \ odd_term11111 = 1;\n    long odd_prev_term11111 = 1;\n    long odd_next_term11111\
    \ = 1;\n    long odd_counter111111 = 1;\n    long odd_term111111 = 1;\n    long\
    \ odd_prev_term111111 = 1;\n    long odd_next_term111111 = 1;\n    long odd_counter1111111\
    \ = 1;\n    long odd_term1111111 = 1;\n    long odd_prev_term1111111 = 1;\n  \
    \  long odd_next_term1111111 = 1;\n    long odd_counter11111111 = 1;\n    long\
    \ odd_term11111111 = 1;\n    long odd_prev_term11111111 = 1;\n    long odd_next_term11111111\
    \ = 1;\n    long odd_counter111111111 = 1;\n    long odd_term111111111 = 1;\n\
    \    long odd_prev_term111111111 = 1;\n    long odd_next_term111111111 = 1;\n\
    \    long odd_counter1111111111 = 1;\n    long odd_term1111111111 = 1;\n    long\
    \ odd_prev_term1111111111 = 1;\n    long odd_next_term1111111111 = 1;\n    long\
    \ odd_counter11111111111 = 1;\n    long odd_term11111111111 = 1;\n    long odd_prev_term11111111111\
    \ = 1;\n    long odd_next_term11111111111 = 1;\n    long odd_counter111111111111\
    \ = 1;\n    long odd_term111111111111 = 1;\n    long odd_prev_term111111111111\
    \ = 1;\n    long odd_next_term11111111", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(prev\
    \ != 1) {\n        next_odd = prev % 2 == 0 ? prev / 2 : 3 * prev + 1;\n     \
    \   odd_collatz.push_back(next_odd);\n        prev = next_odd;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long odd_collatz_prev = n;\n    long odd_collatz_next\
    \ = 1;\n    long odd_collatz_next_prev = 1;\n    long odd_collatz_next_next =\
    \ 1;\n    long odd_collatz_next_next_prev = 1;\n    long odd_collatz_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_term = 1;\n    long\
    \ odd_collatz_term_prev = 1;\n    long odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd;\n \
    \   long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_odd;\n    long next_term_even;\n\
    \    long next_term_odd;\n    long next_term_even;\n    long next_term_odd;\n\
    \    long next_term_even;\n    long next_term_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_2 = 1;\n    long next_term_3 = 1;\n    long next_term_4\
    \ = 1;\n    long next_term_5 = 1;\n    long next_term_6 = 1;\n    long next_term_7\
    \ = 1;\n    long next_term_8 = 1;\n    long next_term_9 = 1;\n    long next_term_10\
    \ = 1;\n    long next_term_11 = 1;\n    long next_term_12 = 1;\n    long next_term_13\
    \ = 1;\n    long next_term_14 = 1;\n    long next_term_15 = 1;\n    long next_term_16\
    \ = 1;\n    long next_term_17 = 1;\n    long next_term_18 = 1;\n    long next_term_19\
    \ = 1;\n    long next_term_20 = 1;\n    long next_term_21 = 1;\n    long next_term_22\
    \ = 1;\n    long next_term_23 = 1;\n    long next_term_24 = 1;\n    long next_term_25\
    \ = 1;\n    long next_term_26 = 1;\n    long next_term_27 = 1;\n    long next_term_28\
    \ = 1;\n    long next_term_29 = 1;\n    long next_term_30 = 1;\n    long next_term_31\
    \ = 1;\n    long next_term_32 = 1;\n    long next_term_33 = 1;\n    long next_term_34\
    \ = 1;\n    long next_term_35 = 1;\n    long next_term_36 = 1;\n    long next_term_37\
    \ = 1;\n    long next_term_38 = 1;\n    long next_term_39 = 1;\n    long next_term_40\
    \ = 1;\n    long next_term_41 = 1;\n    long next_term_42 = 1;\n    long next_term_43\
    \ = 1;\n    long next_term_44 = 1;\n    long next_term_45 = 1;\n    long next_term_46\
    \ = 1;\n    long next_term_47 = 1;\n    long next_term_48 = 1;\n    long next_term_49\
    \ = 1;\n    long next_term_50 = 1;\n    long next_term_51 = 1;\n    long next_term_52\
    \ = 1;\n    long next_term_53 = 1;\n    long next_term_54 = 1;\n    long next_term_55\
    \ = 1;\n    long next_term_56 = 1;\n    long next_term_57 = 1;\n    long next_term_58\
    \ = 1;\n    long next_term_59 = 1;\n    long next_term_60 = 1;\n    long next_term_61\
    \ = 1;\n    long next_term_62 = 1;\n    long next_term_63 = 1;\n    long next_term_64\
    \ = 1;\n    long next_term_65 = 1;\n    long next_term_66 = 1;\n    long next_term_67\
    \ = 1;\n    long next_term_68 = 1;\n    long next_term_69 = 1;\n", "    std::vector<long>\
    \ odd_collatz_list;\n    odd_collatz_list.push_back(n);\n    long next_term =\
    \ 1;\n    long prev_term = 1;\n    long counter = 1;\n    while (counter != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz_list.push_back(next_term);\n\
    \        counter++;\n    }\n    return odd_collatz_list;", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long next_term = 1;\n    for(long\
    \ i = 1; i < n; i++) {\n        if(next_term % 2 == 0) {\n            odd_collatz[i]\
    \ = next_term / 2;\n            next_term = next_term / 2;\n        } else {\n\
    \            odd_collatz[i] = 3 * next_term + 1;\n            next_term = next_term\
    \ * 3 + 1;\n        }\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz_list;\n    odd_collatz_list.push_back(n);\n    long odd_collatz_term\
    \ = 1;\n    long odd_collatz_term_prev = 1;\n    long odd_collatz_term_next =\
    \ 1;\n    long odd_collatz_term_next_prev = 1;\n    long odd_collatz_term_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz(n + 1);\n   \
    \ odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n    for (long i = 1; i <=\
    \ n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i] = odd_collatz[i\
    \ - 1] / 2;\n            odd_collatz_sum += odd_collatz[i];\n        } else {\n\
    \            odd_collatz[i] = 3 * odd_collatz[i - 1] + 1;\n            odd_collatz_sum\
    \ += odd_collatz[i];\n        }\n    }\n    odd_collatz_sum += odd_collatz[n];\n\
    \    odd_collatz[n] = odd_collatz_sum;\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev_term = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        if (prev_term % 2 == 0) {\n            odd_collatz[i]\
    \ = prev_term / 2;\n        } else {\n            odd_collatz[i] = 3 * prev_term\
    \ + 1;\n        }\n        prev_term = odd_collatz[i];\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while (n != 1) {\n        if (n % 2 == 0) {\n\
    \            next_odd = prev * 2 + 1;\n        } else {\n            next_odd\
    \ = prev * 3;\n        }\n        odd_collatz.push_back(next_odd);\n        prev\
    \ = next_odd;\n        n = prev;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(true) {\n        if(prev % 2 == 0) {\n            next_odd = prev /\
    \ 2;\n        } else {\n            next_odd = prev * 3 + 1;\n        }\n    \
    \    if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n     \
    \   }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    while (true) {\n     \
    \   if (prev % 2 == 0) {\n            odd_collatz.push_back(prev / 2);\n     \
    \   } else {\n            odd_collatz.push_back(3 * prev + 1);\n        }\n  \
    \      prev = odd_collatz.back();\n        if (prev == 1) {\n            break;\n\
    \        }\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev_term = 1;\n    long next_term = 1;\n \
    \   long counter = 1;\n    long odd_counter = 1;\n    long odd_next_term = 1;\n\
    \    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;\n    long odd_prev_term = 1;\n    long odd_counter = 1;\n    long odd_next_term\
    \ = 1;", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long odd_collatz_term = 1;\n    long odd_collatz_term_prev = 1;\n    long\
    \ odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_2 = 1;\n\
    \    long next_term_3 = 1;\n    long next_term_4 = 1;\n    long next_term_5 =\
    \ 1;\n    long next_term_6 = 1;\n    long next_term_7 = 1;\n    long next_term_8\
    \ = 1;\n    long next_term_9 = 1;\n    long next_term_10 = 1;\n    long next_term_11\
    \ = 1;\n    long next_term_12 = 1;\n    long next_term_13 = 1;\n    long next_term_14\
    \ = 1;\n    long next_term_15 = 1;\n    long next_term_16 = 1;\n    long next_term_17\
    \ = 1;\n    long next_term_18 = 1;\n    long next_term_19 = 1;\n    long next_term_20\
    \ = 1;\n    long next_term_21 = 1;\n    long next_term_22 = 1;\n    long next_term_23\
    \ = 1;\n    long next_term_24 = 1;\n    long next_term_25 = 1;\n    long next_term_26\
    \ = 1;\n    long next_term_27 = 1;\n    long next_term_28 = 1;\n    long next_term_29\
    \ = 1;\n    long next_term_30 = 1;\n    long next_term_31 = 1;\n    long next_term_32\
    \ = 1;\n    long next_term_33 = 1;\n    long next_term_34 = 1;\n    long next_term_35\
    \ = 1;\n    long next_term_36 = 1;\n    long next_term_37 = 1;\n    long next_term_38\
    \ = 1;\n    long next_term_39 = 1;\n    long next_term_40 = 1;\n    long next_term_41\
    \ = 1;\n    long next_term_42 = 1;\n    long next_term_43 = 1;\n    long next_term_44\
    \ = 1;\n    long next_term_45 = 1;\n    long next_term_46 = 1;\n    long next_term_47\
    \ = 1;\n    long next_term_48 = 1;\n    long next_term_49 = 1;\n    long next_term_50\
    \ = 1;\n    long next_term_51 = 1;\n    long next_term_52 = 1;\n    long next_term_53\
    \ = 1;\n    long next_term_54 = 1;\n    long next_term_55 = 1;\n    long next_term_56\
    \ = 1;\n    long next_term_57 = 1;\n    long next_term_58 = 1;\n    long next_term_59\
    \ = 1;\n    long next_term_60 = 1;\n    long next_term_61 = 1;\n    long next_term_62\
    \ = 1;\n    long next_term_63 = 1;\n    long next_term_64 = 1;\n    long next_term_65\
    \ = 1;\n    long next_term_66 = 1;\n    long next_term_67 = 1;\n    long next_term_68\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long\
    \ next_odd2 = 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long\
    \ next_even3 = 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long\
    \ next_odd5 = 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long\
    \ next_even6 = 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long\
    \ next_odd8 = 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long\
    \ next_even9 = 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long\
    \ next_odd11 = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long\
    \ next_even12 = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long\
    \ next_odd14 = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long\
    \ next_even15 = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long\
    \ next_odd17 = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long\
    \ next_even18 = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long\
    \ next_odd20 = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long\
    \ next_even21 = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long\
    \ next_odd23 = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long\
    \ next_even24 = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long\
    \ next_odd26 = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long\
    \ next_even27 = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long\
    \ next_odd29 = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long\
    \ next_even30 = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long\
    \ next_odd32 = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long\
    \ next_even33 = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long\
    \ next_odd35 = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_list;\n\
    \    odd_list.push_back(n);\n    long next_term = 1;\n    long prev_term = 1;\n\
    \    long next_term_odd = 1;\n    long prev_term_odd = 1;\n    long odd_count\
    \ = 0;\n    long odd_count_prev = 1;\n    long odd_count_next = 1;\n    long odd_count_prev_odd\
    \ = 1;\n    long odd_count_next_odd = 1;\n    long odd_count_prev_next_odd = 1;\n\
    \    long odd_count_next_next_odd = 1;\n    long odd_count_prev_next_next_odd\
    \ = 1;\n    long odd_count_next_prev_odd = 1;\n    long odd_count_next_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_prev_odd = 1;\n    long odd_count_next_prev_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_next_prev_odd = 1;\n    long odd_count_next_prev_next_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_next_next_prev_odd = 1;\n    long odd_count_next_prev_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_next_next_next_prev_odd = 1;\n    long\
    \ odd_count_next_prev_next_next_next_next_prev_odd = 1;\n    long odd_count_prev_next_next_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_next_prev_next_next_next_next_prev_odd = 1;\n    long\
    \ odd_count_prev_next_next_next_next_next_prev_odd = 1;\n    long odd_count_next_prev_next_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_next_next_next_prev_odd = 1;\n    long\
    \ odd_count_next_prev_next_next_next_next_prev_odd = 1;\n    long odd_count_prev_next_next_next_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_next_prev_next_next_next_next_next_prev_odd = 1;\n\
    \    long odd_count_prev_next_next_next_next_next_next_prev_odd = 1;\n    long\
    \ odd_count_next_prev_next_next_next_next_prev_odd = 1;\n    long odd_count_prev_next_next_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_next_prev_next_next_next_next_prev_odd = 1;\n    long\
    \ odd_count_prev_next_next_next_next_next_prev_odd = 1;\n    long odd_count_next_prev_next_next_next_next_prev_odd\
    \ = 1;\n    long odd_count_prev_next_next_next_next_next_next_prev_odd = 1;\n\
    \    long odd_count_next_prev_next_", "    std::vector<long> odd_collatz;\n  \
    \  odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(n\
    \ > 1) {\n        next_odd = prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n      \
    \  odd_collatz.push_back(next_odd);\n        prev = next_odd;\n        n--;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz.push_back(next_term);\n        prev_term = next_term;\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long odd_n = n;\n\
    \    long odd_n_prev = 1;\n    long odd_n_next = 1;\n    long odd_n_next_prev\
    \ = 1;\n    long odd_n_next_next_prev = 1;\n    long odd_n_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_prev = 1;\n    long odd_n_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_prev = 1;\n    long odd_n_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long odd_n_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_n_next_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_n_next_next_next_next_next_next_next_next_next_next_next_prev = 1;\n   \
    \ long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_n_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long odd_count = 0;\n    long even_count = 0;\n    long odd_count_temp\
    \ = 0;\n    long even_count_temp = 0;\n    long odd_count_temp2 = 0;\n    long\
    \ even_count_temp2 = 0;\n    long odd_count_temp3 = 0;\n    long even_count_temp3\
    \ = 0;\n    long odd_count_temp4 = 0;\n    long even_count_temp4 = 0;\n    long\
    \ odd_count_temp5 = 0;\n    long even_count_temp5 = 0;\n    long odd_count_temp6\
    \ = 0;\n    long even_count_temp6 = 0;\n    long odd_count_temp7 = 0;\n    long\
    \ even_count_temp7 = 0;\n    long odd_count_temp8 = 0;\n    long even_count_temp8\
    \ = 0;\n    long odd_count_temp9 = 0;\n    long even_count_temp9 = 0;\n    long\
    \ odd_count_temp10 = 0;\n    long even_count_temp10 = 0;\n    long odd_count_temp11\
    \ = 0;\n    long even_count_temp11 = 0;\n    long odd_count_temp12 = 0;\n    long\
    \ even_count_temp12 = 0;\n    long odd_count_temp13 = 0;\n    long even_count_temp13\
    \ = 0;\n    long odd_count_temp14 = 0;\n    long even_count_temp14 = 0;\n    long\
    \ odd_count_temp15 = 0;\n    long even_count_temp15 = 0;\n    long odd_count_temp16\
    \ = 0;\n    long even_count_temp16 = 0;\n    long odd_count_temp17 = 0;\n    long\
    \ even_count_temp17 = 0;\n    long odd_count_temp18 = 0;\n    long even_count_temp18\
    \ = 0;\n    long odd_count_temp19 = 0;\n    long even_count_temp19 = 0;\n    long\
    \ odd_count_temp20 = 0;\n    long even_count_temp20 = 0;\n    long odd_count_temp21\
    \ = 0;\n    long even_count_temp21 = 0;\n    long odd_count_temp22 = 0;\n    long\
    \ even_count_temp22 = 0;\n    long odd_count_temp23 = 0;\n    long even_count_temp23\
    \ = 0;\n    long odd_count_temp24 = 0;\n    long even_count_temp24 = 0;\n    long\
    \ odd_count_temp25 = 0;\n    long even_count_temp25 = 0;\n    long odd_count_temp26\
    \ = 0;\n    long even_count_temp26", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long odd_term\
    \ = 1;\n    long even_term = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_even = 1;\n    long even_term_odd = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_od",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long odd_count = 0;\n    while (next_term\
    \ != 1) {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n            odd_count++;\n        } else {\n            next_term = prev_term\
    \ * 3 + 1;\n            odd_count += 3;\n        }\n        prev_term = next_term;\n\
    \        odd_collatz.push_back(next_term);\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n", "    std::vector<long> odd_collatz(n + 1);\n\
    \    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n    for (long i = 1;\
    \ i <= n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i] = odd_collatz[i\
    \ - 1] / 2;\n            odd_collatz_sum += odd_collatz[i];\n        } else {\n\
    \            odd_collatz[i] = 3 * odd_collatz[i - 1] + 1;\n            odd_collatz_sum\
    \ += odd_collatz[i];\n        }\n    }\n    odd_collatz_sum -= odd_collatz[n];\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        if(prev\
    \ % 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n          \
    \  next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.sort();\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long next_term = 1;\n    long prev_term =\
    \ 1;\n    while (next_term != 1) {\n        if (prev_term % 2 == 0) {\n      \
    \      next_term = prev_term / 2;\n            odd_collatz.push_back(next_term);\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n            odd_collatz.push_back(next_term);\n\
    \        }\n        prev_term = next_term;\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    while (next_term != 1) {\n        if (n % 2 == 0) {\n            odd_collatz.push_back(next_term);\n\
    \            next_term = next_term / 2;\n        } else {\n            next_term\
    \ = next_term * 3 + 1;\n        }\n        n = next_term;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_2 = 1;\n    long next_term_3\
    \ = 1;\n    long next_term_4 = 1;\n    long next_term_5 = 1;\n    long next_term_6\
    \ = 1;\n    long next_term_7 = 1;\n    long next_term_8 = 1;\n    long next_term_9\
    \ = 1;\n    long next_term_10 = 1;\n    long next_term_11 = 1;\n    long next_term_12\
    \ = 1;\n    long next_term_13 = 1;\n    long next_term_14 = 1;\n    long next_term_15\
    \ = 1;\n    long next_term_16 = 1;\n    long next_term_17 = 1;\n    long next_term_18\
    \ = 1;\n    long next_term_19 = 1;\n    long next_term_20 = 1;\n    long next_term_21\
    \ = 1;\n    long next_term_22 = 1;\n    long next_term_23 = 1;\n    long next_term_24\
    \ = 1;\n    long next_term_25 = 1;\n    long next_term_26 = 1;\n    long next_term_27\
    \ = 1;\n    long next_term_28 = 1;\n    long next_term_29 = 1;\n    long next_term_30\
    \ = 1;\n    long next_term_31 = 1;\n    long next_term_32 = 1;\n    long next_term_33\
    \ = 1;\n    long next_term_34 = 1;\n    long next_term_35 = 1;\n    long next_term_36\
    \ = 1;\n    long next_term_37 = 1;\n    long next_term_38 = 1;\n    long next_term_39\
    \ = 1;\n    long next_term_40 = 1;\n    long next_term_41 = 1;\n    long next_term_42\
    \ = 1;\n    long next_term_43 = 1;\n    long next_term_44 = 1;\n    long next_term_45\
    \ = 1;\n    long next_term_46 = 1;\n    long next_term_47 = 1;\n    long next_term_48\
    \ = 1;\n    long next_term_49 = 1;\n    long next_term_50 = 1;\n    long next_term_51\
    \ = 1;\n    long next_term_52 = 1;\n    long next_term_53 = 1;\n    long next_term_54\
    \ = 1;\n    long next_term_55 = 1;\n    long next_term_56 = 1;\n    long next_term_57\
    \ = 1;\n    long next_term_58 = 1;\n    long next_term_59 = 1;\n    long next_term_60\
    \ = 1;\n    long next_term_61 = 1;\n    long next_term_62 = 1;\n    long next_term_63\
    \ = 1;\n    long next_term_64 = 1;\n    long next_term_65 = 1;\n    long next_term_66\
    \ = 1;\n    long next_term_67 = 1;\n    long next_term_68 = 1;\n    long next_term_69\
    \ = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long odd_collatz_prev = 1;\n    long odd_collatz_next = 1;\n    long odd_collatz_next_prev\
    \ = 1;\n    long odd_collatz_next_next_prev = 1;\n    long odd_collatz_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n\
    \    long next_term = 1;\n    long prev_term = 1;\n    while (next_term != 1)\
    \ {\n        if (n % 2 == 0) {\n            next_term = prev_term * 2 + 1;\n \
    \       } else {\n            next_term = prev_term * 3;\n        }\n        prev_term\
    \ = next_term;\n        odd_list.push_back(next_term);\n        n = next_term;\n\
    \    }\n    return odd_list;", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long\
    \ prev_term = 1;\n    long next_term = 1;\n    long counter = 1;\n    while (counter\
    \ != 1) {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n       \
    \ }\n        if (next_term != 1) {\n            odd_list.push_back(next_term);\n\
    \        }\n        prev_term = next_term;\n        counter++;\n    }\n    return\
    \ odd_list;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long counter = 1;\n   \
    \ while (counter != 1) {\n        if (prev_term % 2 == 0) {\n            next_term\
    \ = prev_term / 2;\n        } else {\n            next_term = prev_term * 3 +\
    \ 1;\n        }\n        if (next_term != 1) {\n            odd_list.push_back(next_term);\n\
    \        }\n        prev_term = next_term;\n        counter++;\n    }\n    std::sort(odd_list.begin(),\
    \ odd_list.end());\n    return odd_list;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    while (n > 1) {\n    \
    \    if (n % 2 == 0) {\n            odd_collatz.push_back(prev);\n           \
    \ prev *= 2;\n        } else {\n            odd_collatz.push_back(3 * prev + 1);\n\
    \            prev /= 2;\n        }\n        n /= 2;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    while (n != 1) {\n        if (n % 2 == 0) {\n            odd_collatz.push_back(prev);\n\
    \            prev *= 2;\n        } else {\n            odd_collatz.push_back(3\
    \ * prev + 1);\n            prev /= 2;\n        }\n        n /= 2;\n    }\n  \
    \  return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n\
    \    long next_term_next = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next\
    \ = 1;\n    long next_term_next_next_prev = 1;\n    long next_term_next_next_next\
    \ = 1;\n    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long ", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] =\
    \ 1;\n    long next_term = 1;\n    long prev_term = 1;\n    for (long i = 1; i\
    \ < n; i++) {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term\
    \ / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n       \
    \ }\n        odd_collatz[i] = next_term;\n        prev_term = next_term;\n   \
    \ }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (true) {\n        next_odd\
    \ = prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n        if (next_odd != prev) {\n\
    \            odd_collatz.push_back(next_odd);\n        }\n        prev = next_odd;\n\
    \        if (prev == 1) {\n            break;\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long odd_value\
    \ = n;\n    long next_value = 1;\n    long prev_value = 1;\n    while(next_value\
    \ != 1) {\n        if(odd_value % 2 == 0) {\n            odd_value = odd_value\
    \ / 2;\n            next_value = next_value * 2;\n        } else {\n         \
    \   odd_value = odd_value * 3 + 1;\n            next_value = next_value * 2;\n\
    \        }\n        prev_value = odd_value;\n        odd_list.push_back(prev_value);\n\
    \    }\n    return odd_list;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] =\
    \ 1;\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2 = 0;\n    long\
    \ odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long odd_collatz_sum5\
    \ = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7 = 0;\n    long\
    \ odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long odd_collatz_sum10\
    \ = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12 = 0;\n   \
    \ long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15\
    \ = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17 = 0;\n   \
    \ long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20\
    \ = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22 = 0;\n   \
    \ long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25\
    \ = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27 = 0;\n   \
    \ long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30\
    \ = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32 = 0;\n   \
    \ long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35\
    \ = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37 = 0;\n   \
    \ long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40\
    \ = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42 = 0;\n   \
    \ long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45\
    \ = 0;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long next_term_odd = 1;\n    long prev_term_odd\
    \ = 1;\n    long next_term_even = 1;\n    long prev_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long prev_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long prev_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n    long\
    \ prev_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_even = 1;\n    long prev_term_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long prev_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long prev_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long prev_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2\
    \ = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long\
    \ odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7\
    \ = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long\
    \ odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12\
    \ = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n   \
    \ long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17\
    \ = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n   \
    \ long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22\
    \ = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n   \
    \ long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27\
    \ = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n   \
    \ long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32\
    \ = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n   \
    \ long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37\
    \ = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n   \
    \ long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42\
    \ = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n   \
    \ long odd_collatz_sum45 = 0;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long\
    \ next_odd2 = 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long\
    \ next_even3 = 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long\
    \ next_odd5 = 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long\
    \ next_even6 = 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long\
    \ next_odd8 = 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long\
    \ next_even9 = 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long\
    \ next_odd11 = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long\
    \ next_even12 = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long\
    \ next_odd14 = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long\
    \ next_even15 = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long\
    \ next_odd17 = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long\
    \ next_even18 = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long\
    \ next_odd20 = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long\
    \ next_even21 = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long\
    \ next_odd23 = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long\
    \ next_even24 = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long\
    \ next_odd26 = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long\
    \ next_even27 = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long\
    \ next_odd29 = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long\
    \ next_even30 = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long\
    \ next_odd32 = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long\
    \ next_even33 = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long\
    \ next_odd35 = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2\
    \ = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long\
    \ odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7\
    \ = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long\
    \ odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12\
    \ = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n   \
    \ long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17\
    \ = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n   \
    \ long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22\
    \ = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n   \
    \ long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27\
    \ = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n   \
    \ long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32\
    \ = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n   \
    \ long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37\
    \ = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n   \
    \ long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42\
    \ = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n   \
    \ long odd_collatz_sum45 = 0;\n    ", "    std::vector<long> odd_collatz;\n  \
    \  odd_collatz.push_back(n);\n    long odd_collatz_prev = 1;\n    long odd_collatz_next\
    \ = 1;\n    long odd_collatz_next_prev = 1;\n    long odd_collatz_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != prev_term)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz.push_back(next_term);\n        prev_term = next_term;\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    while(prev !=\
    \ 1) {\n        if(prev % 2 == 0) {\n            next_even = prev / 2;\n     \
    \       next_odd = next_even * 3;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n            next_even = next_odd / 2;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        odd_collatz.push_back(next_even);\n        prev = next_even;\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz(n);\n    long prev_term =\
    \ 1;\n    for (long i = 0; i < n; i++) {\n        if (i % 2 == 0) {\n        \
    \    odd_collatz[i] = prev_term;\n        } else {\n            odd_collatz[i]\
    \ = prev_term * 2 + 1;\n        }\n        prev_term = odd_collatz[i];\n    }\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        if (i % 2 == 0) {\n            odd_collatz[i] = prev;\n         \
    \   prev += prev / 2;\n        } else {\n            odd_collatz[i] = 3 * prev\
    \ + 1;\n            prev += prev / 2;\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n    long next_term_next\
    \ = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next = 1;\n\
    \    long next_term_next_next_prev = 1;\n    long next_term_next_next_next = 1;\n\
    \    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next = 1;\n \
    \   long next_term_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_", " \
    \   std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0] = 1;\n    long odd_collatz_sum\
    \ = 0;\n    long odd_collatz_sum2 = 0;\n    long odd_collatz_sum3 = 0;\n    long\
    \ odd_collatz_sum4 = 0;\n    long odd_collatz_sum5 = 0;\n    long odd_collatz_sum6\
    \ = 0;\n    long odd_collatz_sum7 = 0;\n    long odd_collatz_sum8 = 0;\n    long\
    \ odd_collatz_sum9 = 0;\n    long odd_collatz_sum10 = 0;\n    long odd_collatz_sum11\
    \ = 0;\n    long odd_collatz_sum12 = 0;\n    long odd_collatz_sum13 = 0;\n   \
    \ long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16\
    \ = 0;\n    long odd_collatz_sum17 = 0;\n    long odd_collatz_sum18 = 0;\n   \
    \ long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21\
    \ = 0;\n    long odd_collatz_sum22 = 0;\n    long odd_collatz_sum23 = 0;\n   \
    \ long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26\
    \ = 0;\n    long odd_collatz_sum27 = 0;\n    long odd_collatz_sum28 = 0;\n   \
    \ long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31\
    \ = 0;\n    long odd_collatz_sum32 = 0;\n    long odd_collatz_sum33 = 0;\n   \
    \ long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36\
    \ = 0;\n    long odd_collatz_sum37 = 0;\n    long odd_collatz_sum38 = 0;\n   \
    \ long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41\
    \ = 0;\n    long odd_collatz_sum42 = 0;\n    long odd_collatz_sum43 = 0;\n   \
    \ long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45 = 0;\n    ", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_mult = 1;\n    long next_term_add = 1;\n\
    \    long next_term_div = 1;\n    long next_term_mod = 1;\n    long next_term_mult2\
    \ = 1;\n    long next_term_add2 = 1;\n    long next_term_div2 = 1;\n    long next_term_mod2\
    \ = 1;\n    long next_term_mult3 = 1;\n    long next_term_add3 = 1;\n    long\
    \ next_term_div3 = 1;\n    long next_term_mod3 = 1;\n    long next_term_mult4\
    \ = 1;\n    long next_term_add4 = 1;\n    long next_term_div4 = 1;\n    long next_term_mod4\
    \ = 1;\n    long next_term_mult5 = 1;\n    long next_term_add5 = 1;\n    long\
    \ next_term_div5 = 1;\n    long next_term_mod5 = 1;\n    long next_term_mult6\
    \ = 1;\n    long next_term_add6 = 1;\n    long next_term_div6 = 1;\n    long next_term_mod6\
    \ = 1;\n    long next_term_mult7 = 1;\n    long next_term_add7 = 1;\n    long\
    \ next_term_div7 = 1;\n    long next_term_mod7 = 1;\n    long next_term_mult8\
    \ = 1;\n    long next_term_add8 = 1;\n    long next_term_div8 = 1;\n    long next_term_mod8\
    \ = 1;\n    long next_term_mult9 = 1;\n    long next_term_add9 = 1;\n    long\
    \ next_term_div9 = 1;\n    long next_term_mod9 = 1;\n    long next_term_mult10\
    \ = 1;\n    long next_term_add10 = 1;\n    long next_term_div10 = 1;\n    long\
    \ next_term_mod10 = 1;\n    long next_term_mult11 = 1;\n    long next_term_add11\
    \ = 1;\n    long next_term_div11 = 1;\n    long next_term_mod11 = 1;\n    long\
    \ next_term_mult12 = 1;\n    long next_term_add12 = 1;\n    long next_term_div12\
    \ = 1;\n    long next_term_mod12 = 1;\n    long next_term_mult13 = 1;\n    long\
    \ next_term_add13 = 1;\n    long next_term_div13 = 1;\n    long next_term_mod13\
    \ = 1;\n    long next_term_mult14 = 1;\n    long next_term_add14 = 1;\n    long\
    \ next_term_div14 = 1;\n    long next_term_mod14 = 1;\n    long next_term_mult15\
    \ = 1;\n    long next_term_add15 = 1;\n    long next_term_div15 = 1;\n    long\
    \ next_term_mod15 = 1;\n    long next_term_mult16 = 1;\n", "    std::vector<long>\
    \ odd_list;\n    odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    while (next_term != prev_term) {\n        if (next_term % 2 == 0)\
    \ {\n            next_term = next_term / 2;\n        } else {\n            next_term\
    \ = next_term * 3 + 1;\n        }\n        odd_list.push_back(next_term);\n  \
    \      prev_term = next_term;\n    }\n    return odd_list;", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev_term = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        if (prev_term % 2 == 0) {\n            odd_collatz[i]\
    \ = prev_term / 2;\n        } else {\n            odd_collatz[i] = 3 * prev_term\
    \ + 1;\n        }\n        prev_term = odd_collatz[i];\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_prev = 1;\n    long next_term_next\
    \ = 1;\n    long next_term_next_prev = 1;\n    long next_term_next_next = 1;\n\
    \    long next_term_next_next_prev = 1;\n    long next_term_next_next_next = 1;\n\
    \    long next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long ", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] =\
    \ 1;\n    long next_term = 1;\n    for(long i = 1; i < n; i++) {\n        if(next_term\
    \ % 2 == 0) {\n            odd_collatz[i] = next_term / 2;\n            next_term\
    \ = odd_collatz[i] * 2 + 1;\n        } else {\n            odd_collatz[i] = 3\
    \ * next_term + 1;\n            next_term = odd_collatz[i];\n        }\n    }\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    while (next_term != 1) {\n        if (n % 2 == 0)\
    \ {\n            odd_collatz.push_back(next_term);\n            next_term = next_term\
    \ / 2;\n        } else {\n            next_term = 3 * next_term + 1;\n       \
    \ }\n        n = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n\
    \    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long odd_value\
    \ = n;\n    long next_value = 1;\n    long prev_value = 1;\n    while (next_value\
    \ != 1) {\n        if (odd_value % 2 == 0) {\n            odd_value /= 2;\n  \
    \          odd_list.push_back(odd_value);\n        } else {\n            odd_value\
    \ = odd_value * 3 + 1;\n            odd_list.push_back(odd_value);\n        }\n\
    \        if (odd_value == 1) {\n            break;\n        }\n        prev_value\
    \ = next_value;\n        next_value = prev_value + 1;\n    }\n    return odd_list;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(true) {\n        if(prev % 2 == 0) {\n \
    \           next_odd = prev / 2;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n        }\n        if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        if(next_odd > n) {\n            break;\n        }\n      \
    \  prev = next_odd;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n \
    \   long prev_n = 1;\n    long next_n = 1;\n    long next_n_prev = 1;\n    long\
    \ next_n_prev_prev = 1;\n    long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev =\
    \ 1;\n    long next_odd;\n    for (long i = 1; i < n; i++) {\n        if (i %\
    \ 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n            next_odd\
    \ = prev * 3 + 1;\n        }\n        odd_collatz[i] = next_odd;\n        prev\
    \ = next_odd;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev_term = 1;\n    for (long i = 1; i < n;\
    \ i++) {\n        if (prev_term % 2 == 0) {\n            odd_collatz[i] = prev_term\
    \ / 2;\n        } else {\n            odd_collatz[i] = 3 * prev_term + 1;\n  \
    \      }\n        prev_term = odd_collatz[i];\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev =\
    \ 1;\n    long next_odd;\n    for (long i = 1; i < n; i++) {\n        next_odd\
    \ = prev;\n        if (i % 2 == 0) {\n            next_odd += 1;\n        }\n\
    \        prev = next_odd;\n        odd_collatz[i] = prev;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n \
    \   long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_", "    std::vector<long>\
    \ odd_collatz_list;\n    odd_collatz_list.push_back(n);\n    long odd_collatz_term\
    \ = 1;\n    long odd_collatz_term_prev = 1;\n    long odd_collatz_term_next =\
    \ 1;\n    long odd_collatz_term_next_prev = 1;\n    long odd_collatz_term_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long odd_collatz_prev = n;\n    long odd_collatz_next = 1;\n    long odd_collatz_next_prev\
    \ = 1;\n    long odd_collatz_next_next = 1;\n    long odd_collatz_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next = 1;\n    long odd_collatz_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next = 1;\n    long odd_collatz_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next = 1;\n    long odd_collatz_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next = 1;\n    long odd_collatz_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next = 1;\n    long odd_collatz_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long odd_collatz_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long odd_collatz_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_next_next_next_next = 1;\n  \
    \  long odd_collatz_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long odd_col", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long prev = 1;\n    for (long i = 1; i < n; i++) {\n        if (i\
    \ % 2 == 0) {\n            odd_collatz[i] = prev / 2;\n            prev = prev\
    \ * 2 + 1;\n        } else {\n            odd_collatz[i] = 3 * prev + 1;\n   \
    \         prev = prev * 2 + 1;\n        }\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(true) {\n        if(prev % 2 == 0) {\n \
    \           next_odd = prev / 2;\n        } else {\n            next_odd = prev\
    \ * 3 + 1;\n        }\n        if(next_odd != 1) {\n            odd_collatz.push_back(next_odd);\n\
    \        }\n        prev = next_odd;\n        if(prev == 1) {\n            break;\n\
    \        }\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n  \
    \  return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    long prev_term = 1;\n    while(next_term != 1) {\n\
    \        if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n  \
    \      } else {\n            next_term = prev_term * 3 + 1;\n        }\n     \
    \   prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    }\n\
    \    odd_collatz.push_back(1);\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev = 1;\n    for (long\
    \ i = 1; i < n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i]\
    \ = prev;\n            prev = (prev * 3 + 1) / 2;\n        } else {\n        \
    \    odd_collatz[i] = prev;\n            prev = prev * 2 + 1;\n        }\n   \
    \ }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_n = 1;\n    long next_n = 1;\n    long next_n_prev = 1;\n    long\
    \ next_n_prev_prev = 1;\n    long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_n\
    \ = n;\n    long next_n = 1;\n    while (next_n != 1) {\n        if (prev_n %\
    \ 2 == 0) {\n            odd_collatz.push_back(next_n);\n            next_n =\
    \ next_n * 2 + 1;\n        } else {\n            odd_collatz.push_back(3 * prev_n\
    \ + 1);\n            next_n = next_n * 3 + 1;\n        }\n        prev_n = next_n;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long prev_term_odd = true;\n\
    \    long next_term_odd = true;\n    long next_term_even = true;\n    long next_term_odd_even\
    \ = true;\n    long next_term_odd_odd = true;\n    long next_term_odd_even = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_term_odd_odd_odd = true;\n\
    \    long next_term_odd_odd_even = true;\n    long next_", "    std::vector<long>\
    \ odd_collatz_list;\n    odd_collatz_list.push_back(n);\n    long prev_term =\
    \ 1;\n    long next_term = 1;\n    long next_term_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long\
    \ next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n    long next_term_even\
    \ = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd = 0;\n  \
    \  long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long next_term_odd_odd\
    \ = 0;\n    long next_term_even = 0;\n    long next_term_odd_even = 0;\n    long\
    \ next_term_odd_odd = 0;\n    long next_term_even = 0;\n    long next_term_odd_even\
    \ = 0;\n    long next_term_", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_even = 1;\n    long odd_term = 1;\n    long even_term\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_even\
    \ = 1;\n    long even_term_odd = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;\n    long even_term_even\
    \ = 1;\n    long odd_term_odd = 1;\n    long even_term_even = 1;\n    long odd_term_odd\
    \ = 1;\n    long even_term_even = 1;\n    long odd_term_odd = 1;", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long next_term = 1;\n    long\
    \ prev_term = 1;\n    long next_term_odd = 1;\n    long prev_term_odd = 1;\n \
    \   for(long i = 1; i < n; i++) {\n        if(prev_term_odd % 2 == 0) {\n    \
    \        next_term_odd = next_term_odd / 2;\n        } else {\n            next_term_odd\
    \ = next_term_odd * 3 + 1;\n        }\n        if(prev_term_odd % 2 == 0) {\n\
    \            prev_term_odd = prev_term_odd / 2;\n        } else {\n          \
    \  prev_term_odd = prev_term_odd * 3 + 1;\n        }\n        odd_collatz[i] =\
    \ next_term_odd;\n        next_term = next_term * prev_term;\n        prev_term\
    \ = prev_term * prev_term_odd;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd\
    \ = 0;\n    long next_even = 1;\n    long next_odd2 = 1;\n    long next_even2\
    \ = 1;\n    long next_odd3 = 1;\n    long next_even3 = 1;\n    long next_odd4\
    \ = 1;\n    long next_even4 = 1;\n    long next_odd5 = 1;\n    long next_even5\
    \ = 1;\n    long next_odd6 = 1;\n    long next_even6 = 1;\n    long next_odd7\
    \ = 1;\n    long next_even7 = 1;\n    long next_odd8 = 1;\n    long next_even8\
    \ = 1;\n    long next_odd9 = 1;\n    long next_even9 = 1;\n    long next_odd10\
    \ = 1;\n    long next_even10 = 1;\n    long next_odd11 = 1;\n    long next_even11\
    \ = 1;\n    long next_odd12 = 1;\n    long next_even12 = 1;\n    long next_odd13\
    \ = 1;\n    long next_even13 = 1;\n    long next_odd14 = 1;\n    long next_even14\
    \ = 1;\n    long next_odd15 = 1;\n    long next_even15 = 1;\n    long next_odd16\
    \ = 1;\n    long next_even16 = 1;\n    long next_odd17 = 1;\n    long next_even17\
    \ = 1;\n    long next_odd18 = 1;\n    long next_even18 = 1;\n    long next_odd19\
    \ = 1;\n    long next_even19 = 1;\n    long next_odd20 = 1;\n    long next_even20\
    \ = 1;\n    long next_odd21 = 1;\n    long next_even21 = 1;\n    long next_odd22\
    \ = 1;\n    long next_even22 = 1;\n    long next_odd23 = 1;\n    long next_even23\
    \ = 1;\n    long next_odd24 = 1;\n    long next_even24 = 1;\n    long next_odd25\
    \ = 1;\n    long next_even25 = 1;\n    long next_odd26 = 1;\n    long next_even26\
    \ = 1;\n    long next_odd27 = 1;\n    long next_even27 = 1;\n    long next_odd28\
    \ = 1;\n    long next_even28 = 1;\n    long next_odd29 = 1;\n    long next_even29\
    \ = 1;\n    long next_odd30 = 1;\n    long next_even30 = 1;\n    long next_odd31\
    \ = 1;\n    long next_even31 = 1;\n    long next_odd32 = 1;\n    long next_even32\
    \ = 1;\n    long next_odd33 = 1;\n    long next_even33 = 1;\n    long next_odd34\
    \ = 1;\n    long next_even34 = 1;\n    long next_odd35 = 1;\n    long next_even35\
    \ = 1;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2\
    \ = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long\
    \ odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7\
    \ = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long\
    \ odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12\
    \ = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n   \
    \ long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17\
    \ = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n   \
    \ long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22\
    \ = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n   \
    \ long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27\
    \ = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n   \
    \ long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32\
    \ = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n   \
    \ long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37\
    \ = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n   \
    \ long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42\
    \ = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n   \
    \ long odd_collatz_sum45 = 0;\n    long ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_n = n;\n    long next_n = 0;\n    while (next_n != 1) {\n     \
    \   if (prev_n % 2 == 0) {\n            next_n = prev_n / 2;\n        } else {\n\
    \            next_n = 3 * prev_n + 1;\n        }\n        odd_collatz.push_back(next_n);\n\
    \        prev_n = next_n;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term = 1;\n    long\
    \ prev_term = 1;\n    while(next_term != 1) {\n        if(prev_term % 2 == 0)\
    \ {\n            next_term = prev_term / 2;\n        } else {\n            next_term\
    \ = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (n != 1) {\n        if (n %\
    \ 2 == 0) {\n            next_odd = prev / 2;\n        } else {\n            next_odd\
    \ = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n     \
    \   prev = next_odd;\n        n = prev;\n    }\n    return odd_collatz;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long counter = 1;\n    while(counter != 1)\
    \ {\n        if(prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     odd_collatz.push_back(next_term);\n        prev_term = next_term;\n    \
    \    counter++;\n    }\n    std::sort(odd_collatz.begin(), odd_collatz.end());\n\
    \    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd;\n \
    \   while (next_term != 1) {\n        if (prev_term % 2 == 0) {\n            next_term_odd\
    \ = prev_term / 2;\n            next_term = next_term_odd * 2 + 1;\n        }\
    \ else {\n            next_term_odd = prev_term * 3 + 1;\n            next_term\
    \ = next_term_odd / 2;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_n = n;\n    long\
    \ next_n = 0;\n    long next_n_prev = 0;\n    long next_n_prev_prev = 0;\n   \
    \ long next_n_prev_prev_prev = 0;\n    long next_n_prev_prev_prev_prev = 0;\n\
    \    long next_n_prev_prev_prev_prev_prev = 0;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 0;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n \
    \   long prev_term = 1;\n    long next_term = 1;\n    long counter = 1;\n    while\
    \ (counter != 1) {\n        if (prev_term % 2 == 0) {\n            next_term =\
    \ prev_term / 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n\
    \        }\n        prev_term = next_term;\n        counter++;\n        odd_collatz_list.push_back(next_term);\n\
    \    }\n    return odd_collatz_list;", "    std::vector<long> odd_collatz(n +\
    \ 1);\n    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n    for (long i\
    \ = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz_sum\
    \ += odd_collatz[i - 1];\n            odd_collatz[i] = odd_collatz_sum / 2;\n\
    \        } else {\n            odd_collatz_sum += odd_collatz[i - 1] * 3;\n  \
    \          odd_collatz[i] = odd_collatz_sum / 2 + 1;\n        }\n    }\n    return\
    \ odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(prev != 1) {\n        next_odd\
    \ = prev % 2 == 0 ? prev / 2 : 3 * prev + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.sort();\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_n\
    \ = n;\n    long next_n = 1;\n    while (next_n != 1) {\n        if (prev_n %\
    \ 2 == 0) {\n            odd_collatz.push_back(prev_n / 2);\n            next_n\
    \ = prev_n / 2;\n        } else {\n            odd_collatz.push_back(3 * prev_n\
    \ + 1);\n            next_n = 3 * prev_n + 1;\n        }\n        prev_n = next_n;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n   \
    \ long odd_collatz_counter = 1;\n    long odd_collatz_counter2 = 1;\n    long\
    \ odd_collatz_counter3 = 1;\n    long odd_collatz_counter4 = 1;\n    long odd_collatz_counter5\
    \ = 1;\n    long odd_collatz_counter6 = 1;\n    long odd_collatz_counter7 = 1;\n\
    \    long odd_collatz_counter8 = 1;\n    long odd_collatz_counter9 = 1;\n    long\
    \ odd_collatz_counter10 = 1;\n    long odd_collatz_counter11 = 1;\n    long odd_collatz_counter12\
    \ = 1;\n    long odd_collatz_counter13 = 1;\n    long odd_collatz_counter14 =\
    \ 1;\n    long odd_collatz_counter15 = 1;\n    long odd_collatz_counter16 = 1;\n\
    \    long odd_collatz_counter17 = 1;\n    long odd_collatz_counter18 = 1;\n  \
    \  long odd_collatz_counter19 = 1;\n    long odd_collatz_counter20 = 1;\n    long\
    \ odd_collatz_counter21 = 1;\n    long odd_collatz_counter22 = 1;\n    long odd_collatz_counter23\
    \ = 1;\n    long odd_collatz_counter24 = 1;\n    long odd_collatz_counter25 =\
    \ 1;\n    long odd_collatz_counter26 = 1;\n    long odd_collatz_counter27 = 1;\n\
    \    long odd_collatz_counter28 = 1;\n    long odd_collatz_counter29 = 1;\n  \
    \  long odd_collatz_counter30 = 1;\n    long odd_collatz_counter31 = 1;\n    long\
    \ odd_collatz_counter32 = 1;\n    long odd_collatz_counter33 = 1;\n    long odd_collatz_counter34\
    \ = 1;\n    long odd_collatz_counter35 = 1;\n    long odd_collatz_counter36 =\
    \ 1;\n    long odd_collatz_counter37 = 1;\n    long odd_collatz_counter38 = 1;\n\
    \    long odd_collatz_counter39 = 1;\n    long odd_collatz_counter40 = 1;\n  \
    \  long odd_collatz_counter41 = 1;\n    long odd_collatz_counter42 = 1;\n    long\
    \ odd_collatz_counter43 = 1;\n    long odd_collatz_counter44 = 1;\n    long odd_collatz_counter45\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n\
    \    long odd_value = n;\n    long next_value = 1;\n    long prev_value = 1;\n\
    \    long odd_count = 0;\n    while (odd_value != 1) {\n        if (odd_value\
    \ % 2 == 0) {\n            odd_value = odd_value / 2;\n            odd_count++;\n\
    \        } else {\n            odd_value = odd_value * 3 + 1;\n            odd_count++;\n\
    \        }\n        if (odd_value == 1) {\n            odd_list.push_back(odd_count);\n\
    \        }\n    }\n    return odd_list;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_od", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    while (next_term != 1)\
    \ {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term / 2;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n        }\n   \
    \     prev_term = next_term;\n        odd_collatz.push_back(next_term);\n    }\n\
    \    std::sort(odd_collatz.begin(), odd_collatz.end());\n    return odd_collatz;",
  "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long counter = 1;\n    while (counter !=\
    \ 1) {\n        if (prev_term % 2 == 0) {\n            next_term = prev_term /\
    \ 2;\n        } else {\n            next_term = prev_term * 3 + 1;\n        }\n\
    \        if (next_term > n) {\n            break;\n        }\n        prev_term\
    \ = next_term;\n        odd_list.push_back(next_term);\n        counter++;\n \
    \   }\n    return odd_list;", "    std::vector<long> odd_collatz(n + 1);\n   \
    \ odd_collatz[0] = 1;\n    long prev_term = 1;\n    long next_term = 1;\n    for\
    \ (int i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            next_term\
    \ = prev_term / 2;\n        } else {\n            next_term = prev_term * 3 +\
    \ 1;\n        }\n        odd_collatz[i] = next_term;\n        prev_term = next_term;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while(true) {\n        next_odd =\
    \ prev % 2 == 0 ? prev : prev / 2;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        if(next_odd != 1) break;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz(n);\n    long prev = 1;\n    long next_odd;\n\
    \    for(long i = 1; i <= n; i++) {\n        next_odd = prev % 2 == 0 ? prev :\
    \ prev / 2;\n        odd_collatz[i - 1] = next_odd;\n        prev = next_odd;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    while (next_term != 1) {\n        if (n % 2 == 0)\
    \ {\n            odd_collatz.push_back(next_term);\n            next_term = next_term\
    \ / 2;\n        } else {\n            next_term = next_term * 3 + 1;\n       \
    \ }\n        n = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    while (next_term != 1) {\n        if (prev_term % 2 == 0)\
    \ {\n            next_term = prev_term / 2;\n        } else {\n            next_term\
    \ = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_list;\n    odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev = 1;\n    long next_odd = 0;\n    long\
    \ next_even = 0;\n    long next_odd2 = 0;\n    long next_even2 = 0;\n    long\
    \ next_odd3 = 0;\n    long next_even3 = 0;\n    long next_odd4 = 0;\n    long\
    \ next_even4 = 0;\n    long next_odd5 = 0;\n    long next_even5 = 0;\n    long\
    \ next_odd6 = 0;\n    long next_even6 = 0;\n    long next_odd7 = 0;\n    long\
    \ next_even7 = 0;\n    long next_odd8 = 0;\n    long next_even8 = 0;\n    long\
    \ next_odd9 = 0;\n    long next_even9 = 0;\n    long next_odd10 = 0;\n    long\
    \ next_even10 = 0;\n    long next_odd11 = 0;\n    long next_even11 = 0;\n    long\
    \ next_odd12 = 0;\n    long next_even12 = 0;\n    long next_odd13 = 0;\n    long\
    \ next_even13 = 0;\n    long next_odd14 = 0;\n    long next_even14 = 0;\n    long\
    \ next_odd15 = 0;\n    long next_even15 = 0;\n    long next_odd16 = 0;\n    long\
    \ next_even16 = 0;\n    long next_odd17 = 0;\n    long next_even17 = 0;\n    long\
    \ next_odd18 = 0;\n    long next_even18 = 0;\n    long next_odd19 = 0;\n    long\
    \ next_even19 = 0;\n    long next_odd20 = 0;\n    long next_even20 = 0;\n    long\
    \ next_odd21 = 0;\n    long next_even21 = 0;\n    long next_odd22 = 0;\n    long\
    \ next_even22 = 0;\n    long next_odd23 = 0;\n    long next_even23 = 0;\n    long\
    \ next_odd24 = 0;\n    long next_even24 = 0;\n    long next_odd25 = 0;\n    long\
    \ next_even25 = 0;\n    long next_odd26 = 0;\n    long next_even26 = 0;\n    long\
    \ next_odd27 = 0;\n    long next_even27 = 0;\n    long next_odd28 = 0;\n    long\
    \ next_even28 = 0;\n    long next_odd29 = 0;\n    long next_even29 = 0;\n    long\
    \ next_odd30 = 0;\n    long next_even30 = 0;\n    long next_odd31 = 0;\n    long\
    \ next_even31 = 0;\n    long next_odd32 = 0;\n    long next_even32 = 0;\n    long\
    \ next_odd33 = 0;\n    long next_even33 = 0;\n    long next_odd34 = 0;\n    long\
    \ next_even34 = 0;\n    long next_odd35 = 0;\n    long next_even35 = 0;\n    long\
    \ next_odd36 = 0;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long next_term = 1;\n    while (next_term != 1) {\n        if (n % 2 == 0)\
    \ {\n            odd_collatz.push_back(next_term);\n            next_term = next_term\
    \ / 2;\n        } else {\n            next_term = next_term * 3 + 1;\n       \
    \ }\n        n = n;\n    }\n    return odd_collatz;", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_term = 1;\n    long\
    \ odd_collatz_term_prev = 1;\n    long odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long odd_collatz_sum = 1;\n    long odd_collatz_sum2 = 1;\n    long\
    \ odd_collatz_sum3 = 1;\n    long odd_collatz_sum4 = 0;\n    long odd_collatz_sum5\
    \ = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7 = 0;\n    long\
    \ odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long odd_collatz_sum10\
    \ = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12 = 0;\n   \
    \ long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15\
    \ = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17 = 0;\n   \
    \ long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20\
    \ = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22 = 0;\n   \
    \ long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25\
    \ = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27 = 0;\n   \
    \ long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30\
    \ = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32 = 0;\n   \
    \ long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35\
    \ = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37 = 0;\n   \
    \ long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40\
    \ = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42 = 0;\n   \
    \ long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45\
    \ = 0;\n", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long odd_collatz_sum = 1;\n    long odd_collatz_sum2 = 1;\n    long odd_collatz_sum3\
    \ = 1;\n    long odd_collatz_sum4 = 1;\n    long odd_collatz_sum5 = 1;\n    long\
    \ odd_collatz_sum6 = 1;\n    long odd_collatz_sum7 = 1;\n    long odd_collatz_sum8\
    \ = 1;\n    long odd_collatz_sum9 = 1;\n    long odd_collatz_sum10 = 1;\n    long\
    \ odd_collatz_sum11 = 1;\n    long odd_collatz_sum12 = 1;\n    long odd_collatz_sum13\
    \ = 1;\n    long odd_collatz_sum14 = 1;\n    long odd_collatz_sum15 = 1;\n   \
    \ long odd_collatz_sum16 = 1;\n    long odd_collatz_sum17 = 1;\n    long odd_collatz_sum18\
    \ = 1;\n    long odd_collatz_sum19 = 1;\n    long odd_collatz_sum20 = 1;\n   \
    \ long odd_collatz_sum21 = 1;\n    long odd_collatz_sum22 = 1;\n    long odd_collatz_sum23\
    \ = 1;\n    long odd_collatz_sum24 = 1;\n    long odd_collatz_sum25 = 1;\n   \
    \ long odd_collatz_sum26 = 1;\n    long odd_collatz_sum27 = 1;\n    long odd_collatz_sum28\
    \ = 1;\n    long odd_collatz_sum29 = 1;\n    long odd_collatz_sum30 = 1;\n   \
    \ long odd_collatz_sum31 = 1;\n    long odd_collatz_sum32 = 1;\n    long odd_collatz_sum33\
    \ = 1;\n    long odd_collatz_sum34 = 1;\n    long odd_collatz_sum35 = 1;\n   \
    \ long odd_collatz_sum36 = 1;\n    long odd_collatz_sum37 = 1;\n    long odd_collatz_sum38\
    \ = 1;\n    long odd_collatz_sum39 = 1;\n    long odd_collatz_sum40 = 1;\n   \
    \ long odd_collatz_sum41 = 1;\n    long odd_collatz_sum42 = 1;\n    long odd_collatz_sum43\
    \ = 1;\n    long odd_collatz_sum44 = 1;\n    long odd_collatz_sum45", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    while(prev != 1) {\n        if(prev % 2 == 0) {\n            next_odd = prev\
    \ / 2;\n        } else {\n            next_odd = prev * 3 + 1;\n        }\n  \
    \      odd_collatz.push_back(next_odd);\n        prev = next_odd;\n    }\n   \
    \ odd_collatz.sort([](long a, long b){return a<b;});\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_prev = 1;\n    long next_term_next = 1;\n    long next_term_next_prev\
    \ = 1;\n    long next_term_next_next = 1;\n    long next_term_next_next_prev =\
    \ 1;\n    long next_term_next_next_next = 1;\n    long next_term_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next = 1;\n    long next_term_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next\
    \ = 1;\n    long ", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2 = 0;\n    long\
    \ odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long odd_collatz_sum5\
    \ = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7 = 0;\n    long\
    \ odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long odd_collatz_sum10\
    \ = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12 = 0;\n   \
    \ long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15\
    \ = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17 = 0;\n   \
    \ long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20\
    \ = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22 = 0;\n   \
    \ long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25\
    \ = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27 = 0;\n   \
    \ long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30\
    \ = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32 = 0;\n   \
    \ long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35\
    \ = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37 = 0;\n   \
    \ long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40\
    \ = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42 = 0;\n   \
    \ long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45\
    \ = 0;\n    ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_n = 1;\n    long next_n = 1;\n    long next_n_prev = 1;\n    long\
    \ next_n_prev_prev = 1;\n    long next_n_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n  \
    \  long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long\
    \ next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\
    \ = 1;\n    long next_n_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_",
  "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] = 1;\n    long prev_term\
    \ = 1;\n    for (long i = 1; i < n; i++) {\n        if (i % 2 == 0) {\n      \
    \      odd_collatz[i] = prev_term;\n            prev_term = prev_term / 2;\n \
    \       } else {\n            odd_collatz[i] = 3 * prev_term + 1;\n          \
    \  prev_term = odd_collatz[i];\n        }\n    }\n    return odd_collatz;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    while(n > 1) {\n        if(n % 2 == 0) {\n   \
    \         next_odd = prev + n/2;\n        } else {\n            next_odd = prev\
    \ + (3*prev + n)/2;\n        }\n        odd_collatz.push_back(next_odd);\n   \
    \     prev = next_odd;\n        n = next_odd;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long odd_collatz_prev\
    \ = 1;\n    long odd_collatz_next = 1;\n    long odd_collatz_next_prev = 1;\n\
    \    long odd_collatz_next_next_prev = 1;\n    long odd_collatz_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0]\
    \ = 1;\n    long prev = 1;\n    long next_odd;\n    for (long i = 1; i < n; i++)\
    \ {\n        if (i % 2 == 0) {\n            next_odd = prev / 2;\n        } else\
    \ {\n            next_odd = prev * 3 + 1;\n        }\n        odd_collatz[i] =\
    \ next_odd;\n        prev = next_odd;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz(n);\n    odd_collatz[0] = 1;\n    long\
    \ odd_collatz_sum = 0;\n    long odd_collatz_sum2 = 0;\n    long odd_collatz_sum3\
    \ = 0;\n    long odd_collatz_sum4 = 0;\n    long odd_collatz_sum5 = 0;\n    long\
    \ odd_collatz_sum6 = 0;\n    long odd_collatz_sum7 = 0;\n    long odd_collatz_sum8\
    \ = 0;\n    long odd_collatz_sum9 = 0;\n    long odd_collatz_sum10 = 0;\n    long\
    \ odd_collatz_sum11 = 0;\n    long odd_collatz_sum12 = 0;\n    long odd_collatz_sum13\
    \ = 0;\n    long odd_collatz_sum14 = 0;\n    long odd_collatz_sum15 = 0;\n   \
    \ long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17 = 0;\n    long odd_collatz_sum18\
    \ = 0;\n    long odd_collatz_sum19 = 0;\n    long odd_collatz_sum20 = 0;\n   \
    \ long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22 = 0;\n    long odd_collatz_sum23\
    \ = 0;\n    long odd_collatz_sum24 = 0;\n    long odd_collatz_sum25 = 0;\n   \
    \ long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27 = 0;\n    long odd_collatz_sum28\
    \ = 0;\n    long odd_collatz_sum29 = 0;\n    long odd_collatz_sum30 = 0;\n   \
    \ long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32 = 0;\n    long odd_collatz_sum33\
    \ = 0;\n    long odd_collatz_sum34 = 0;\n    long odd_collatz_sum35 = 0;\n   \
    \ long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37 = 0;\n    long odd_collatz_sum38\
    \ = 0;\n    long odd_collatz_sum39 = 0;\n    long odd_collatz_sum40 = 0;\n   \
    \ long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42 = 0;\n    long odd_collatz_sum43\
    \ = 0;\n    long odd_collatz_sum44 = 0;\n    long odd_collatz_sum45 = 0;\n    ",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_2 = 1;\n    long next_term_3 = 1;\n    long next_term_4\
    \ = 1;\n    long next_term_5 = 1;\n    long next_term_6 = 1;\n    long next_term_7\
    \ = 1;\n    long next_term_8 = 1;\n    long next_term_9 = 1;\n    long next_term_10\
    \ = 1;\n    long next_term_11 = 1;\n    long next_term_12 = 1;\n    long next_term_13\
    \ = 1;\n    long next_term_14 = 1;\n    long next_term_15 = 1;\n    long next_term_16\
    \ = 1;\n    long next_term_17 = 1;\n    long next_term_18 = 1;\n    long next_term_19\
    \ = 1;\n    long next_term_20 = 1;\n    long next_term_21 = 1;\n    long next_term_22\
    \ = 1;\n    long next_term_23 = 1;\n    long next_term_24 = 1;\n    long next_term_25\
    \ = 1;\n    long next_term_26 = 1;\n    long next_term_27 = 1;\n    long next_term_28\
    \ = 1;\n    long next_term_29 = 1;\n    long next_term_30 = 1;\n    long next_term_31\
    \ = 1;\n    long next_term_32 = 1;\n    long next_term_33 = 1;\n    long next_term_34\
    \ = 1;\n    long next_term_35 = 1;\n    long next_term_36 = 1;\n    long next_term_37\
    \ = 1;\n    long next_term_38 = 1;\n    long next_term_39 = 1;\n    long next_term_40\
    \ = 1;\n    long next_term_41 = 1;\n    long next_term_42 = 1;\n    long next_term_43\
    \ = 1;\n    long next_term_44 = 1;\n    long next_term_45 = 1;\n    long next_term_46\
    \ = 1;\n    long next_term_47 = 1;\n    long next_term_48 = 1;\n    long next_term_49\
    \ = 1;\n    long next_term_50 = 1;\n    long next_term_51 = 1;\n    long next_term_52\
    \ = 1;\n    long next_term_53 = 1;\n    long next_term_54 = 1;\n    long next_term_55\
    \ = 1;\n    long next_term_56 = 1;\n    long next_term_57 = 1;\n    long next_term_58\
    \ = 1;\n    long next_term_59 = 1;\n    long next_term_60 = 1;\n    long next_term_61\
    \ = 1;\n    long next_term_62 = 1;\n    long next_term_63 = 1;\n    long next_term_64\
    \ = 1;\n    long next_term_65 = 1;\n    long next_term_66 = 1;\n    long next_term_67\
    \ = 1;\n    long next_term_68 = 1;\n    long next_term_69 = 1;\n", "    std::vector<long>\
    \ odd_collatz(n);\n    odd_collatz[0] = 1;\n    long next_term = 1;\n    long\
    \ prev_term = 1;\n    for (long i = 1; i < n; i++) {\n        if (prev_term %\
    \ 2 == 0) {\n            next_term = prev_term / 2;\n        } else {\n      \
    \      next_term = prev_term * 3 + 1;\n        }\n        odd_collatz[i] = next_term;\n\
    \        prev_term = next_term;\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long odd_collatz_prev = 1;\n\
    \    long odd_collatz_next = 1;\n    long odd_collatz_next_prev = 1;\n    long\
    \ odd_collatz_next_next_prev = 1;\n    long odd_collatz_next_next_next_prev =\
    \ 1;\n    long odd_collatz_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_next_next_next_next_next_next_next_prev = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n \
    \   long prev_term = 1;\n    long next_term = 1;\n    long next_term_2 = 1;\n\
    \    long next_term_3 = 1;\n    long next_term_4 = 1;\n    long next_term_5 =\
    \ 1;\n    long next_term_6 = 1;\n    long next_term_7 = 1;\n    long next_term_8\
    \ = 1;\n    long next_term_9 = 1;\n    long next_term_10 = 1;\n    long next_term_11\
    \ = 1;\n    long next_term_12 = 1;\n    long next_term_13 = 1;\n    long next_term_14\
    \ = 1;\n    long next_term_15 = 1;\n    long next_term_16 = 1;\n    long next_term_17\
    \ = 1;\n    long next_term_18 = 1;\n    long next_term_19 = 1;\n    long next_term_20\
    \ = 1;\n    long next_term_21 = 1;\n    long next_term_22 = 1;\n    long next_term_23\
    \ = 1;\n    long next_term_24 = 1;\n    long next_term_25 = 1;\n    long next_term_26\
    \ = 1;\n    long next_term_27 = 1;\n    long next_term_28 = 1;\n    long next_term_29\
    \ = 1;\n    long next_term_30 = 1;\n    long next_term_31 = 1;\n    long next_term_32\
    \ = 1;\n    long next_term_33 = 1;\n    long next_term_34 = 1;\n    long next_term_35\
    \ = 1;\n    long next_term_36 = 1;\n    long next_term_37 = 1;\n    long next_term_38\
    \ = 1;\n    long next_term_39 = 1;\n    long next_term_40 = 1;\n    long next_term_41\
    \ = 1;\n    long next_term_42 = 1;\n    long next_term_43 = 1;\n    long next_term_44\
    \ = 1;\n    long next_term_45 = 1;\n    long next_term_46 = 1;\n    long next_term_47\
    \ = 1;\n    long next_term_48 = 1;\n    long next_term_49 = 1;\n    long next_term_50\
    \ = 1;\n    long next_term_51 = 1;\n    long next_term_52 = 1;\n    long next_term_53\
    \ = 1;\n    long next_term_54 = 1;\n    long next_term_55 = 1;\n    long next_term_56\
    \ = 1;\n    long next_term_57 = 1;\n    long next_term_58 = 1;\n    long next_term_59\
    \ = 1;\n    long next_term_60 = 1;\n    long next_term_61 = 1;\n    long next_term_62\
    \ = 1;\n    long next_term_63 = 1;\n    long next_term_64 = 1;\n    long next_term_65\
    \ = 1;\n    long next_term_66 = 1;\n    long next_term_67 = 1;\n    long next_term_68\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_od", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long prev = 1;\n    for (long i = 1; i < n; i++)\
    \ {\n        if (i % 2 == 0) {\n            odd_collatz[i] = prev;\n         \
    \   prev = prev / 2;\n        } else {\n            odd_collatz[i] = prev * 3\
    \ + 1;\n            prev = prev * 3 + 1;\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n \
    \   long odd_collatz_term = 1;\n    long odd_collatz_term_prev = 1;\n    long\
    \ odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long next_term\
    \ = 1;\n    long prev_term = 1;\n    long odd_term = 1;\n    long odd_count =\
    \ 0;\n    long odd_count_max = 1;\n    long odd_count_min = 1;\n    long odd_count_sum\
    \ = 0;\n    long odd_count_sum2 = 0;\n    long odd_count_sum3 = 0;\n    long odd_count_sum4\
    \ = 0;\n    long odd_count_sum5 = 0;\n    long odd_count_sum6 = 0;\n    long odd_count_sum7\
    \ = 0;\n    long odd_count_sum8 = 0;\n    long odd_count_sum9 = 0;\n    long odd_count_sum10\
    \ = 0;\n    long odd_count_sum11 = 0;\n    long odd_count_sum12 = 0;\n    long\
    \ odd_count_sum13 = 0;\n    long odd_count_sum14 = 0;\n    long odd_count_sum15\
    \ = 0;\n    long odd_count_sum16 = 0;\n    long odd_count_sum17 = 0;\n    long\
    \ odd_count_sum18 = 0;\n    long odd_count_sum19 = 0;\n    long odd_count_sum20\
    \ = 0;\n    long odd_count_sum21 = 0;\n    long odd_count_sum22 = 0;\n    long\
    \ odd_count_sum23 = 0;\n    long odd_count_sum24 = 0;\n    long odd_count_sum25\
    \ = 0;\n    long odd_count_sum26 = 0;\n    long odd_count_sum27 = 0;\n    long\
    \ odd_count_sum28 = 0;\n    long odd_count_sum29 = 0;\n    long odd_count_sum30\
    \ = 0;\n    long odd_count_sum31 = 0;\n    long odd_count_sum32 = 0;\n    long\
    \ odd_count_sum33 = 0;\n    long odd_count_sum34 = 0;\n    long odd_count_sum35\
    \ = 0;\n    long odd_count_sum36 = 0;\n    long odd_count_sum37 = 0;\n    long\
    \ odd_count_sum38 = 0;\n    long odd_count_sum39 = 0;\n    long odd_count_sum40\
    \ = 0;\n    long odd_count_sum41 = 0;\n    long odd_count_sum42 = 0;\n    long\
    \ odd_count_sum43 = 0;\n    long odd_count_sum44 = 0;\n    long odd_count_sum45\
    \ = 0;\n    long odd_count_sum46 = 0;\n    long odd_count_sum47 = 0;\n    long\
    \ odd_count_sum48 = 0;\n    long odd_count_sum49 = 0;\n    long odd_count_sum50\
    \ = 0;\n    long odd_count_sum", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long\
    \ next_odd2 = 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long\
    \ next_even3 = 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long\
    \ next_odd5 = 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long\
    \ next_even6 = 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long\
    \ next_odd8 = 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long\
    \ next_even9 = 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long\
    \ next_odd11 = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long\
    \ next_even12 = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long\
    \ next_odd14 = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long\
    \ next_even15 = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long\
    \ next_odd17 = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long\
    \ next_even18 = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long\
    \ next_odd20 = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long\
    \ next_even21 = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long\
    \ next_odd23 = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long\
    \ next_even24 = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long\
    \ next_odd26 = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long\
    \ next_even27 = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long\
    \ next_odd29 = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long\
    \ next_even30 = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long\
    \ next_odd32 = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long\
    \ next_even33 = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long\
    \ next_odd35 = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long prev_term_odd = 1;\n    long next_term_odd = 1;\n    long odd_term\
    \ = 1;\n    long odd_term_odd = 1;\n    long odd_term_even = 1;\n    long even_term\
    \ = 1;\n    long even_term_odd = 1;\n    long even_term_even = 1;\n    long even_term_odd_even\
    \ = 1;\n    long odd_term_odd_even = 1;\n    long odd_term_odd_odd = 1;\n    long\
    \ odd_term_odd_even = 1;\n    long odd_term_odd_odd = 1;\n    long odd_term_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd = 1;\n    long odd_term_odd_odd_even = 1;\n\
    \    long odd_term_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even = 1;\n\
    \    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even =\
    \ 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_odd_odd = 1;\n    long odd_term_odd_odd_odd_even\
    \ = 1;\n    long odd_term_odd_odd_od", "    std::vector<long> odd_collatz;\n \
    \   odd_collatz.push_back(n);\n    long next_term = 1;\n    long prev_term = 1;\n\
    \    long counter = 1;\n    while(counter != 1) {\n        if(prev_term % 2 ==\
    \ 0) {\n            next_term = prev_term / 2;\n        } else {\n           \
    \ next_term = prev_term * 3 + 1;\n        }\n        prev_term = next_term;\n\
    \        counter++;\n        odd_collatz.push_back(next_term);\n    }\n    odd_collatz.push_back(1);\n\
    \    return odd_collatz;", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n \
    \   long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd =\
    \ 1;\n    long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long counter = 1;\n    while (counter != 1) {\n        if (prev_term\
    \ % 2 == 0) {\n            next_term = prev_term / 2;\n        } else {\n    \
    \        next_term = prev_term * 3 + 1;\n        }\n        odd_collatz.push_back(next_term);\n\
    \        prev_term = next_term;\n        counter++;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long> odd_list;\n\
    \    odd_list.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while\
    \ (n != 1) {\n        if (n % 2 == 0) {\n            next_odd = prev * 2 + 1;\n\
    \        } else {\n            next_odd = prev * 3;\n        }\n        odd_list.push_back(next_odd);\n\
    \        prev = next_odd;\n        n = prev;\n    }\n    return odd_list;", " \
    \   std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_n\
    \ = n;\n    long next_n = 1;\n    while (next_n != 1) {\n        if (prev_n %\
    \ 2 == 0) {\n            odd_collatz.push_back(prev_n / 2);\n            next_n\
    \ = prev_n / 2;\n        } else {\n            odd_collatz.push_back(3 * prev_n\
    \ + 1);\n            next_n = 3 * prev_n + 1;\n        }\n        prev_n = next_n;\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz(n);\n   \
    \ long prev_term = 1;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2\
    \ == 0) {\n            odd_collatz[i] = prev_term;\n            prev_term = prev_term\
    \ / 2;\n        } else {\n            odd_collatz[i] = 3 * prev_term + 1;\n  \
    \          prev_term = odd_collatz[i];\n        }\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term\
    \ = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd = 1;\n\
    \    long next_term_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    ", "    std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0] = 1;\n\
    \    long odd_num = 1;\n    for (long i = 1; i <= n; i++) {\n        if (i % 2\
    \ == 0) {\n            odd_collatz[i] = odd_num;\n            odd_num *= 2;\n\
    \        } else {\n            odd_collatz[i] = 3 * odd_num + 1;\n           \
    \ odd_num += 1;\n        }\n    }\n    return odd_collatz;", "    std::vector<long>\
    \ odd_list;\n    odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term\
    \ = 1;\n    long count = 0;\n    while(next_term != 1) {\n        if(prev_term\
    \ % 2 == 0) {\n            next_term = prev_term / 2;\n            prev_term =\
    \ next_term;\n            odd_list.push_back(next_term);\n            count++;\n\
    \        } else {\n            next_term = prev_term * 3 + 1;\n            prev_term\
    \ = next_term;\n            odd_list.push_back(next_term);\n            count++;\n\
    \        }\n    }\n    return odd_list;", "    std::vector<long> odd_list;\n \
    \   odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_mult = 1;\n    long next_term_add = 1;\n    long next_term_div\
    \ = 1;\n    long next_term_mod = 1;\n    long next_term_mult2 = 1;\n    long next_term_add2\
    \ = 1;\n    long next_term_div2 = 1;\n    long next_term_mod2 = 1;\n    long next_term_mult3\
    \ = 1;\n    long next_term_add3 = 1;\n    long next_term_div3 = 1;\n    long next_term_mod3\
    \ = 1;\n    long next_term_mult4 = 1;\n    long next_term_add4 = 1;\n    long\
    \ next_term_div4 = 1;\n    long next_term_mod4 = 1;\n    long next_term_mult5\
    \ = 1;\n    long next_term_add5 = 1;\n    long next_term_div5 = 1;\n    long next_term_mod5\
    \ = 1;\n    long next_term_mult6 = 1;\n    long next_term_add6 = 1;\n    long\
    \ next_term_div6 = 1;\n    long next_term_mod6 = 1;\n    long next_term_mult7\
    \ = 1;\n    long next_term_add7 = 1;\n    long next_term_div7 = 1;\n    long next_term_mod7\
    \ = 1;\n    long next_term_mult8 = 1;\n    long next_term_add8 = 1;\n    long\
    \ next_term_div8 = 1;\n    long next_term_mod8 = 1;\n    long next_term_mult9\
    \ = 1;\n    long next_term_add9 = 1;\n    long next_term_div9 = 1;\n    long next_term_mod9\
    \ = 1;\n    long next_term_mult10 = 1;\n    long next_term_add10 = 1;\n    long\
    \ next_term_div10 = 1;\n    long next_term_mod10 = 1;\n    long next_term_mult11\
    \ = 1;\n    long next_term_add11 = 1;\n    long next_term_div11 = 1;\n    long\
    \ next_term_mod11 = 1;\n    long next_term_mult12 = 1;\n    long next_term_add12\
    \ = 1;\n    long next_term_div12 = 1;\n    long next_term_mod12 = 1;\n    long\
    \ next_term_mult13 = 1;\n    long next_term_add13 = 1;\n    long next_term_div13\
    \ = 1;\n    long next_term_mod13 = 1;\n    long next_term_mult14 = 1;\n    long\
    \ next_term_add14 = 1;\n    long next_term_div14 = 1;\n    long next_term_mod14\
    \ = 1;\n    long next_term_mult15 = 1;\n    long next_term_add15 = 1;\n    long\
    \ next_term_div15 = 1;\n    long next_term_mod15 = 1;\n    long next_term_mult16\
    \ = 1;\n    long next_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz_list;\n\
    \    odd_collatz_list.push_back(n);\n    long odd_collatz_term = 1;\n    long\
    \ odd_collatz_term_prev = 1;\n    long odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev = 1;\n    long next_odd;\n    while (n != 1) {\n        if (n %\
    \ 2 == 0) {\n            next_odd = prev * 2 + 1;\n        } else {\n        \
    \    next_odd = prev * 3;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        n = prev;\n    }\n    return odd_collatz;",
  "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_list;\n\
    \    odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long counter = 1;\n    while (counter != 1) {\n        if (prev_term % 2\
    \ == 0) {\n            next_term = prev_term / 2;\n        } else {\n        \
    \    next_term = prev_term * 3 + 1;\n        }\n        prev_term = next_term;\n\
    \        odd_list.push_back(next_term);\n        counter++;\n    }\n    return\
    \ odd_list;", "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_2 = 1;\n\
    \    long next_term_3 = 1;\n    long next_term_4 = 1;\n    long next_term_5 =\
    \ 1;\n    long next_term_6 = 1;\n    long next_term_7 = 1;\n    long next_term_8\
    \ = 1;\n    long next_term_9 = 1;\n    long next_term_10 = 1;\n    long next_term_11\
    \ = 1;\n    long next_term_12 = 1;\n    long next_term_13 = 1;\n    long next_term_14\
    \ = 1;\n    long next_term_15 = 1;\n    long next_term_16 = 1;\n    long next_term_17\
    \ = 1;\n    long next_term_18 = 1;\n    long next_term_19 = 1;\n    long next_term_20\
    \ = 1;\n    long next_term_21 = 1;\n    long next_term_22 = 1;\n    long next_term_23\
    \ = 1;\n    long next_term_24 = 1;\n    long next_term_25 = 1;\n    long next_term_26\
    \ = 1;\n    long next_term_27 = 1;\n    long next_term_28 = 1;\n    long next_term_29\
    \ = 1;\n    long next_term_30 = 1;\n    long next_term_31 = 1;\n    long next_term_32\
    \ = 1;\n    long next_term_33 = 1;\n    long next_term_34 = 1;\n    long next_term_35\
    \ = 1;\n    long next_term_36 = 1;\n    long next_term_37 = 1;\n    long next_term_38\
    \ = 1;\n    long next_term_39 = 1;\n    long next_term_40 = 1;\n    long next_term_41\
    \ = 1;\n    long next_term_42 = 1;\n    long next_term_43 = 1;\n    long next_term_44\
    \ = 1;\n    long next_term_45 = 1;\n    long next_term_46 = 1;\n    long next_term_47\
    \ = 1;\n    long next_term_48 = 1;\n    long next_term_49 = 1;\n    long next_term_50\
    \ = 1;\n    long next_term_51 = 1;\n    long next_term_52 = 1;\n    long next_term_53\
    \ = 1;\n    long next_term_54 = 1;\n    long next_term_55 = 1;\n    long next_term_56\
    \ = 1;\n    long next_term_57 = 1;\n    long next_term_58 = 1;\n    long next_term_59\
    \ = 1;\n    long next_term_60 = 1;\n    long next_term_61 = 1;\n    long next_term_62\
    \ = 1;\n    long next_term_63 = 1;\n    long next_term_64 = 1;\n    long next_term_65\
    \ = 1;\n    long next_term_66 = 1;\n    long next_term_67 = 1;\n    long next_term_68\
    \ = 1;\n    long next_term_", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long\
    \ next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_", "    std::vector<long>\
    \ odd_collatz;\n    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long\
    \ next_term = 1;\n    long next_term_prev = 1;\n    long next_term_next = 1;\n\
    \    long next_term_next_prev = 1;\n    long next_term_next_next = 1;\n    long\
    \ next_term_next_next_prev = 1;\n    long next_term_next_next_next = 1;\n    long\
    \ next_term_next_next_next_prev = 1;\n    long next_term_next_next_next_next =\
    \ 1;\n    long next_term_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_prev = 1;\n    long next_term_next_next_next_next_next_next_next_next\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next = 1;\n\
    \    long next_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ next_term_next_next_next_next_next_next_next_next_next = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long next_term_next_next_next_next_next_next_next_next_next_next =\
    \ 1;\n    long ", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_n = n;\n    long next_n = 0;\n    long next_n_prev = 0;\n    while(next_n\
    \ != 1) {\n        if(prev_n % 2 == 0) {\n            next_n = next_n_prev * 2\
    \ + 1;\n        } else {\n            next_n = next_n_prev * 3;\n        }\n \
    \       prev_n = next_n;\n        next_n_prev = next_n;\n        odd_collatz.push_back(next_n);\n\
    \    }\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n\
    \    long prev_term = 1;\n    long next_term = 1;\n    long next_term_odd = 1;\n\
    \    long next_term_even = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_term_even\
    \ = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even = 1;\n    long\
    \ next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd\
    \ = 1;\n    long next_term_even = 1;\n    long next_term_odd = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd\
    \ = 1;\n    long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n  \
    \  long next_term_odd_even = 1;\n    long next_term_odd_odd = 1;\n    long next_",
  "    std::vector<long> odd_collatz_list;\n    odd_collatz_list.push_back(n);\n \
    \   long odd_collatz_term = 1;\n    long odd_collatz_term_prev = 1;\n    long\
    \ odd_collatz_term_next = 1;\n    long odd_collatz_term_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_prev = 1;\n    long odd_collatz_term_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_collatz_term_next_next_next_next_next_next_next_next_next_prev = 1;\n  \
    \  long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collatz_term_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_collat", "    std::vector<long> odd_list;\n    odd_list.push_back(n);\n\
    \    long odd_n = n;\n    long odd_prev = 1;\n    long odd_next = 1;\n    long\
    \ odd_next_prev = 1;\n    long odd_next_next_prev = 1;\n    long odd_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_prev = 1;\n    long odd_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_prev = 1;\n    long odd_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_prev = 1;\n    long\
    \ odd_next_next_next_next_next_next_next_next_next_prev = 1;\n    long odd_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_prev =\
    \ 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long odd_next_next_next_next_next_next_next_next_next_next_next_prev = 1;\n\
    \    long odd_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_prev\
    \ = 1;\n    long odd_next_next_next_next_", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(true)\
    \ {\n        if(prev % 2 == 0) {\n            next_odd = prev / 2;\n        }\
    \ else {\n            next_odd = prev * 3 + 1;\n        }\n        if(next_odd\
    \ != 1) {\n            odd_collatz.push_back(next_odd);\n        }\n        prev\
    \ = next_odd;\n        if(next_odd != 1) {\n            prev = next_odd;\n   \
    \     }\n        if(prev == 1) {\n            break;\n        }\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(prev\
    \ != 1) {\n        if(prev % 2 == 0) {\n            next_odd = prev / 2;\n   \
    \     } else {\n            next_odd = prev * 3 + 1;\n        }\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n    }\n    odd_collatz.push_back(1);\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_list;\n\
    \    odd_list.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_even = 1;\n  \
    \  long next_term_odd_odd_even = 1;\n    long next_term_odd_odd_odd = 1;\n   \
    \ long next_term_odd_even = 1;\n    long next_term_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n    long\
    \ next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n   \
    \ long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_",
  "    std::vector<long> odd_collatz(n + 1);\n    odd_collatz[0] = 1;\n    for (long\
    \ i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            odd_collatz[i]\
    \ = odd_collatz[i - 1] / 2;\n        } else {\n            odd_collatz[i] = 3\
    \ * odd_collatz[i - 1] + 1;\n        }\n    }\n    return odd_collatz;", "   \
    \ std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    long next_odd;\n    long\
    \ next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n  \
    \  long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    long next_even;\n    long next_odd;\n\
    \    long next_even;\n    long next_odd;\n    ", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev = 1;\n    long next_odd;\n    while(true)\
    \ {\n        next_odd = prev % 2 == 0 ? prev + 1 : prev * 3 + 1;\n        odd_collatz.push_back(next_odd);\n\
    \        prev = next_odd;\n        if(next_odd != 1) break;\n    }\n    std::sort(odd_collatz.begin(),\
    \ odd_collatz.end());\n    return odd_collatz;", "    std::vector<long> odd_collatz;\n\
    \    odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term =\
    \ 1;\n    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd = 0;\n    long next_even = 1;\n    long next_odd2 =\
    \ 1;\n    long next_even2 = 1;\n    long next_odd3 = 1;\n    long next_even3 =\
    \ 1;\n    long next_odd4 = 1;\n    long next_even4 = 1;\n    long next_odd5 =\
    \ 1;\n    long next_even5 = 1;\n    long next_odd6 = 1;\n    long next_even6 =\
    \ 1;\n    long next_odd7 = 1;\n    long next_even7 = 1;\n    long next_odd8 =\
    \ 1;\n    long next_even8 = 1;\n    long next_odd9 = 1;\n    long next_even9 =\
    \ 1;\n    long next_odd10 = 1;\n    long next_even10 = 1;\n    long next_odd11\
    \ = 1;\n    long next_even11 = 1;\n    long next_odd12 = 1;\n    long next_even12\
    \ = 1;\n    long next_odd13 = 1;\n    long next_even13 = 1;\n    long next_odd14\
    \ = 1;\n    long next_even14 = 1;\n    long next_odd15 = 1;\n    long next_even15\
    \ = 1;\n    long next_odd16 = 1;\n    long next_even16 = 1;\n    long next_odd17\
    \ = 1;\n    long next_even17 = 1;\n    long next_odd18 = 1;\n    long next_even18\
    \ = 1;\n    long next_odd19 = 1;\n    long next_even19 = 1;\n    long next_odd20\
    \ = 1;\n    long next_even20 = 1;\n    long next_odd21 = 1;\n    long next_even21\
    \ = 1;\n    long next_odd22 = 1;\n    long next_even22 = 1;\n    long next_odd23\
    \ = 1;\n    long next_even23 = 1;\n    long next_odd24 = 1;\n    long next_even24\
    \ = 1;\n    long next_odd25 = 1;\n    long next_even25 = 1;\n    long next_odd26\
    \ = 1;\n    long next_even26 = 1;\n    long next_odd27 = 1;\n    long next_even27\
    \ = 1;\n    long next_odd28 = 1;\n    long next_even28 = 1;\n    long next_odd29\
    \ = 1;\n    long next_even29 = 1;\n    long next_odd30 = 1;\n    long next_even30\
    \ = 1;\n    long next_odd31 = 1;\n    long next_even31 = 1;\n    long next_odd32\
    \ = 1;\n    long next_even32 = 1;\n    long next_odd33 = 1;\n    long next_even33\
    \ = 1;\n    long next_odd34 = 1;\n    long next_even34 = 1;\n    long next_odd35\
    \ = 1;\n    long next_even35 = 1;\n    ", "    std::vector<long> odd_collatz(n);\n\
    \    odd_collatz[0] = 1;\n    long odd_collatz_sum = 0;\n    long odd_collatz_sum2\
    \ = 0;\n    long odd_collatz_sum3 = 0;\n    long odd_collatz_sum4 = 0;\n    long\
    \ odd_collatz_sum5 = 0;\n    long odd_collatz_sum6 = 0;\n    long odd_collatz_sum7\
    \ = 0;\n    long odd_collatz_sum8 = 0;\n    long odd_collatz_sum9 = 0;\n    long\
    \ odd_collatz_sum10 = 0;\n    long odd_collatz_sum11 = 0;\n    long odd_collatz_sum12\
    \ = 0;\n    long odd_collatz_sum13 = 0;\n    long odd_collatz_sum14 = 0;\n   \
    \ long odd_collatz_sum15 = 0;\n    long odd_collatz_sum16 = 0;\n    long odd_collatz_sum17\
    \ = 0;\n    long odd_collatz_sum18 = 0;\n    long odd_collatz_sum19 = 0;\n   \
    \ long odd_collatz_sum20 = 0;\n    long odd_collatz_sum21 = 0;\n    long odd_collatz_sum22\
    \ = 0;\n    long odd_collatz_sum23 = 0;\n    long odd_collatz_sum24 = 0;\n   \
    \ long odd_collatz_sum25 = 0;\n    long odd_collatz_sum26 = 0;\n    long odd_collatz_sum27\
    \ = 0;\n    long odd_collatz_sum28 = 0;\n    long odd_collatz_sum29 = 0;\n   \
    \ long odd_collatz_sum30 = 0;\n    long odd_collatz_sum31 = 0;\n    long odd_collatz_sum32\
    \ = 0;\n    long odd_collatz_sum33 = 0;\n    long odd_collatz_sum34 = 0;\n   \
    \ long odd_collatz_sum35 = 0;\n    long odd_collatz_sum36 = 0;\n    long odd_collatz_sum37\
    \ = 0;\n    long odd_collatz_sum38 = 0;\n    long odd_collatz_sum39 = 0;\n   \
    \ long odd_collatz_sum40 = 0;\n    long odd_collatz_sum41 = 0;\n    long odd_collatz_sum42\
    \ = 0;\n    long odd_collatz_sum43 = 0;\n    long odd_collatz_sum44 = 0;\n   \
    \ long odd_collatz_sum45 = 0;\n    ", "    std::vector<long> odd_collatz;\n  \
    \  odd_collatz.push_back(n);\n    long prev_term = 1;\n    long next_term = 1;\n\
    \    long next_term_odd = 1;\n    long next_term_even = 1;\n    long next_term_odd_even\
    \ = 1;\n    long next_term_odd_odd = 1;\n    long next_term_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long\
    \ next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even = 1;\n\
    \    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd_even\
    \ = 1;\n    long next_term_odd_odd_odd_odd_odd_odd_odd_odd_odd_odd = 1;", "  \
    \  std::vector<long> odd_collatz;\n    odd_collatz.push_back(n);\n    long prev\
    \ = 1;\n    long next_odd;\n    long next_even;\n    while (true) {\n        next_odd\
    \ = prev % 2 == 0 ? prev + 1 : prev;\n        next_even = prev % 2 == 0 ? prev\
    \ + 3 : prev;\n        if (next_odd != next_even) {\n            odd_collatz.push_back(next_odd);\n\
    \            odd_collatz.push_back(next_even);\n        }\n        prev = next_odd;\n\
    \    }\n    return odd_collatz;"]
stop_tokens:
- "\n}"

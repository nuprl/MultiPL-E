language: cpp
name: HumanEval_139_special_factorial
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long i;\n    for (i = 1; i <= n; i++) {\n        fact *= i;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ccbt424.cpp: In function 'int main()':\n/tmp/tmp9ccbt424.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9ccbt424.cpp:2:\n/tmp/tmp9ccbt424.cpp:21:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long fact2 = 1;\n    long fact3 = 1;\n    long fact4 = 1;\n    long\
    \ fact5 = 1;\n    long fact6 = 1;\n    long fact7 = 1;\n    long fact8 = 1;\n\
    \    long fact9 = 1;\n    long fact10 = 1;\n    long fact11 = 1;\n    long fact12\
    \ = 1;\n    long fact13 = 1;\n    long fact14 = 1;\n    long fact15 = 1;\n   \
    \ long fact16 = 1;\n    long fact17 = 1;\n    long fact18 = 1;\n    long fact19\
    \ = 1;\n    long fact20 = 1;\n    long fact21 = 1;\n    long fact22 = 1;\n   \
    \ long fact23 = 1;\n    long fact24 = 1;\n    long fact25 = 1;\n    long fact26\
    \ = 1;\n    long fact27 = 1;\n    long fact28 = 1;\n    long fact29 = 1;\n   \
    \ long fact30 = 1;\n    long fact31 = 1;\n    long fact32 = 1;\n    long fact33\
    \ = 1;\n    long fact34 = 1;\n    long fact35 = 1;\n    long fact36 = 1;\n   \
    \ long fact37 = 1;\n    long fact38 = 1;\n    long fact39 = 1;\n    long fact40\
    \ = 1;\n    long fact41 = 1;\n    long fact42 = 1;\n    long fact43 = 1;\n   \
    \ long fact44 = 1;\n    long fact45 = 1;\n    long fact46 = 1;\n    long fact47\
    \ = 1;\n    long fact48 = 1;\n    long fact49 = 1;\n    long fact50 = 1;\n   \
    \ long fact51 = 1;\n    long fact52 = 1;\n    long fact53 = 1;\n    long fact54\
    \ = 1;\n    long fact55 = 1;\n    long fact56 = 1;\n    long fact57 = 1;\n   \
    \ long fact58 = 1;\n    long fact59 = 1;\n    long fact60 = 1;\n    long fact61\
    \ = 1;\n    long fact62 = 1;\n    long fact63 = 1;\n    long fact64 = 1;\n   \
    \ long fact65 = 1;\n    long fact66 = 1;\n    long fact67 = 1;\n    long fact68\
    \ = 1;\n    long fact69 = 1;\n    long fact70 = 1;\n    long fact71 = 1;\n   \
    \ long fact72 = 1;\n    long fact73 = 1;\n    long fact74 = 1;\n    long fact75\
    \ = 1;\n    long fact76 = 1;\n    long fact77 = 1;\n    long fact78 = 1;\n   \
    \ long fact79 = 1;\n    long fact80 = 1;\n    long fact81 = 1;\n    long fact82\
    \ = 1;\n    long fact83 = 1;\n    long fact84 = 1;\n    long \n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx0m_cs2j.cpp: In function 'long int special_factorial(long int)':\n\
    /tmp/tmpx0m_cs2j.cpp:97:1: error: expected unqualified-id before '}' token\n }\n\
    \ ^\n/tmp/tmpx0m_cs2j.cpp: In function 'int main()':\n/tmp/tmpx0m_cs2j.cpp:99:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx0m_cs2j.cpp:2:\n/tmp/tmpx0m_cs2j.cpp:100:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    if (n == 0)\n\
    \        return 1;\n    long result = 1;\n    for (long i = 1; i <= n; i++)\n\
    \        result *= i;\n    return result;\n}\nint main() {\n    auto candidate\
    \ = special_factorial;\n    assert(candidate((4)) == (288));\n    assert(candidate((5))\
    \ == (34560));\n    assert(candidate((7)) == (125411328000));\n    assert(candidate((1))\
    \ == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvh1vnndl.cpp: In function 'int main()':\n/tmp/tmpvh1vnndl.cpp:20:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvh1vnndl.cpp:2:\n/tmp/tmpvh1vnndl.cpp:21:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptuee5tlw.cpp: In function 'int main()':\n/tmp/tmptuee5tlw.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptuee5tlw.cpp:2:\n/tmp/tmptuee5tlw.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long i = 1;\n    while (i <= n) {\n        fact *= i;\n        i++;\n\
    \    }\n    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp37_opf9y.cpp: In function 'int main()':\n/tmp/tmp37_opf9y.cpp:21:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp37_opf9y.cpp:2:\n/tmp/tmp37_opf9y.cpp:22:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long temp;\n    long i;\n    for (i = 1; i <= n; i++) {\n        temp\
    \ = fact * i;\n        fact = temp;\n    }\n    return fact;\n}\nint main() {\n\
    \    auto candidate = special_factorial;\n    assert(candidate((4)) == (288));\n\
    \    assert(candidate((5)) == (34560));\n    assert(candidate((7)) == (125411328000));\n\
    \    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvi2755sw.cpp: In function 'int main()':\n/tmp/tmpvi2755sw.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvi2755sw.cpp:2:\n/tmp/tmpvi2755sw.cpp:23:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    long temp = 1;\n    while (n) {\n        temp *= n;\n        n--;\n\
    \    }\n    while (temp > 1) {\n        fact *= temp;\n        temp--;\n    }\n\
    \    return fact;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpxyil6czi.cpp: In function 'int main()':\n/tmp/tmpxyil6czi.cpp:25:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpxyil6czi.cpp:2:\n/tmp/tmpxyil6czi.cpp:26:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    if (n == 0\
    \ || n == 1) {\n        return 1;\n    }\n    long result = special_factorial(n\
    \ - 1) * n;\n    return result;\n}\nint main() {\n    auto candidate = special_factorial;\n\
    \    assert(candidate((4)) == (288));\n    assert(candidate((5)) == (34560));\n\
    \    assert(candidate((7)) == (125411328000));\n    assert(candidate((1)) == (1));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpx538ldhi.cpp: In function 'int main()':\n/tmp/tmpx538ldhi.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpx538ldhi.cpp:2:\n/tmp/tmpx538ldhi.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// The Brazilian factorial\
    \ is defined as:\n// brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!\n\
    // where n > 0\n// For example:\n// >>> special_factorial((4))\n// (288)\n// The\
    \ function will receive an integer as input and should return the special\n//\
    \ factorial of this integer.\nlong special_factorial(long n) {\n    long fact\
    \ = 1;\n    for (long i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    return\
    \ fact;\n}\nint main() {\n    auto candidate = special_factorial;\n    assert(candidate((4))\
    \ == (288));\n    assert(candidate((5)) == (34560));\n    assert(candidate((7))\
    \ == (125411328000));\n    assert(candidate((1)) == (1));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjfp0x0we.cpp: In function 'int main()':\n/tmp/tmpjfp0x0we.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = special_factorial;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpjfp0x0we.cpp:2:\n/tmp/tmpjfp0x0we.cpp:20:25: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((4)) == (288));\n\
    \                         ^\n"
  stdout: ''

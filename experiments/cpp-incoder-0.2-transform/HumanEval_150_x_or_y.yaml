name: HumanEval_150_x_or_y
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// A simple program which should\
  \ return the value of x if n is \n// a prime number and should return the value\
  \ of y otherwise.\n// Examples:\n// >>> x_or_y((7), (34), (12))\n// (34)\n// >>>\
  \ x_or_y((15), (8), (5))\n// (5)\nlong x_or_y(long n, long x, long y) {\n"
tests: "}\nint main() {\n    auto candidate = x_or_y;\n    assert(candidate((7), (34),\
  \ (12)) == (34));\n    assert(candidate((15), (8), (5)) == (5));\n    assert(candidate((3),\
  \ (33), (5212)) == (33));\n    assert(candidate((1259), (3), (52)) == (3));\n  \
  \  assert(candidate((7919), (-1), (12)) == (-1));\n    assert(candidate((3609),\
  \ (1245), (583)) == (583));\n    assert(candidate((91), (56), (129)) == (129));\n\
  \    assert(candidate((6), (34), (1234)) == (1234));\n    assert(candidate((1),\
  \ (2), (0)) == (0));\n    assert(candidate((2), (2), (0)) == (2));\n}\n"
completions: ["    assert(n >= 2);\n    if (n == 2) {\n        return x;\n    }\n\
    \    if (n % 2 == 0) {\n        return x_or_y(n - 1, y, x);\n    }\n    return\
    \ x_or_y(n - 1, x, y);", "    if (n == 1) {\n        return y;\n    }\n    if\
    \ (n % 2 == 0) {\n        return x_or_y(n / 2, x, y);\n    }\n    return x_or_y(n\
    \ / 2, y, x);", "    long ans = n;\n    if (n % 2 == 0) {\n        ans = x;\n\
    \    } else {\n        ans = y;\n    }\n    return ans;", "    long ans = x;\n\
    \    if (n % 2 == 0) {\n        ans = y;\n    }\n    return ans;", "    long xor_y\
    \ = x ^ y;\n    long xor_n = n ^ xor_y;\n    long xor_xor_n = xor_n ^ xor_y;\n\
    \    long xor_xor_xor_n = xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_n = xor_xor_xor_n\
    \ ^ xor_y;\n    long xor_xor_xor_xor_xor_n = xor_xor_xor_xor_n ^ xor_y;\n    long\
    \ xor_xor_xor_xor_xor_xor_n = xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n ^ xor_y;\n    long xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_xor_n\
    \ = xor_xor_xor_xor_xor_x", "    long xor_of_y = x ^ y;\n    long xor_of_n = n\
    \ ^ x;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ x;\n    long xor_of_y = y ^ y;\n    long xor_of_n\
    \ = n ^ n;\n    long xor_of_x = x ^ x;\n    long xor_of_y = y ^ y;\n    long xor_of_n\
    \ = n ^ n;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long xor_of_y = y ^ x;\n    long xor_of_n\
    \ = n ^ y;\n    long xor_of_x = x ^ n;\n    long xor_of_y = y ^ n;\n    long xor_of_n\
    \ = n ^ x;\n    long xor_of_x = x ^ y;\n    long ", "    long ans = x;\n    if\
    \ (n == 1) {\n        return y;\n    }\n    if (n % 2 == 0) {\n        ans = x_or_y(n\
    \ / 2, x, y);\n    }\n    else {\n        ans = x_or_y(n / 2, y, x);\n    }\n\
    \    return ans;", "    assert(n >= 0);\n    assert(x >= 0);\n    assert(y >=\
    \ 0);\n    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n      \
    \  return x;\n    }\n    long mid = (x + y) / 2;\n    if (x_or_y(n - 1, x, mid)\
    \ == y) {\n        return mid;\n    }\n    if (x_or_y(n - 1, mid, y) == x) {\n\
    \        return mid;\n    }\n    return y;", "    long m = n;\n    long r = x;\n\
    \    long s = y;\n    long t = m;\n    long u = 0;\n    long v = 0;\n    long\
    \ w = 0;\n    long xx = 1;\n    long yy = 1;\n    long zz = 1;\n    long aa =\
    \ 1;\n    long bb = 1;\n    long cc = 1;\n    long dd = 1;\n    long ee = 1;\n\
    \    long ff = 1;\n    long gg = 1;\n    long hh = 1;\n    long ii = 0;\n    long\
    \ jj = 0;\n    long kk = 0;\n    long ll = 0;\n    long mm = 1;\n    long nn =\
    \ 0;\n    long oo = 1;\n    long pp = 1;\n    long qq = 1;\n    long rr = 0;\n\
    \    long ss = 0;\n    long tt = 0;\n    long uu = 0;\n    long vv = 0;\n    long\
    \ ww = 0;\n    long xxx = 1;\n    long yyy = 1;\n    long zzz = 1;\n    long aaaa\
    \ = 1;\n    long bbbb = 1;\n    long cccc = 1;\n    long dddd = 0;\n    long eeee\
    \ = 1;\n    long ffff = 1;\n    long gggg = 1;\n    long hhhh = 1;\n    long iiii\
    \ = 0;\n    long jjjj = 0;\n    long kkkk = 0;\n    long llll = 1;\n    long mmmm\
    \ = 1;\n    long nnnn = 0;\n    long oooo = 1;\n    long pppp = 1;\n    long qqqq\
    \ = 1;\n    long rrrr = 0;\n    long ssss = 0;\n    long tttt = 0;\n    long uuuu\
    \ = 1;\n    long vvvv = 1;\n    long wwww = 1;\n    long xxxx = 1;\n    long yyyy\
    \ = 0;\n    long zzzz = 1;\n    long aaaaa = 0;\n    long bbbbb = 0;\n    long\
    \ ccccc = 0;\n    long ddddd = 1;\n    long eeeee = 1;\n    long fffff = 1;\n\
    \    long ggggg = 1;\n    long hhhhh = 1;\n    long iiiii = 0;\n    long jjjjj\
    \ = 0;\n    long kkkkk = 0;\n    long lllll = 0;\n    long mmmmm = 1;\n    long\
    \ nnnnn = 0;\n    long ooooo = 1;\n    long ppppp = 0;\n    long qqqqq = 1;\n\
    \    long rrrrr = 0;\n    long sssss = 0;\n    long ttttt = 0;\n    long uuuuu\
    \ = 1;\n    long vvvvv = 1;\n    long wwwww = 0;\n    long xxxxx = 1;\n    long\
    \ yyyyy = 1;\n    long zzzzz = 1;\n    long aaaaaa = 0;\n    ", "    assert(n\
    \ % 2 == 0);\n    if (n == 2) {\n        return y;\n    }\n    if (n == 1) {\n\
    \        return x;\n    }\n    long m = (n + 1) >> 1;\n    long r = x_or_y(m,\
    \ x, y);\n    return r;", "    assert(n >= 0);\n    assert(x >= 0);\n    assert(y\
    \ >= 0);\n    if (n == 1) {\n        return y;\n    }\n    if (n % 2 == 0) {\n\
    \        return x_or_y(n / 2, x, y);\n    }\n    return x_or_y(n / 2, y, x);",
  "    long z = 0;\n    long a = n;\n    long b = x;\n    long c = y;\n    long d\
    \ = 1;\n    long e = 1;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n \
    \   long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m\
    \ = 0;\n    long n = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n \
    \   long r = 0;\n    long s = 0;\n    long t = 0;\n    long u = 0;\n    long v\
    \ = 0;\n    long w = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n \
    \   long a = n;\n    long b = x;\n    long c = y;\n    long d = 1;\n    long e\
    \ = 1;\n    long f = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n \
    \   long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long n\
    \ = 0;\n    long o = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n \
    \   long s = 0;\n    long t = 0;\n    long u = 0;\n    long v = 0;\n    long w\
    \ = 0;\n    long x = 0;\n    long y = 0;\n    long z = 0;\n    long a = n;\n \
    \   long b = x;\n    long c = y;\n    long d = 1;\n    long e = 1;\n    long f\
    \ = 0;\n    long g = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n \
    \   long k = 0;\n    long l = 0;\n    long m = 0;\n    long n = 0;\n    long o\
    \ = 0;\n    long p = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n \
    \   long t = 0;\n    long u = 0;\n    long v = 0;\n    long w = 0;\n    long x\
    \ = 0;\n    long y = 0;\n    long z = 0;\n    long a = n;\n    long b = x;\n \
    \   long c = y;\n    long d = 1;\n    long e = 1;\n    long f = 0;\n    long g\
    \ = 0;\n    long h = 0;\n    long i = 0;\n    long j = 0;\n    long k = 0;\n \
    \   long l = 0;\n    long m = 0;\n    long n = 0;\n    long o = 0;\n    long p\
    \ = 0;\n    long q = 0;\n    long r = 0;\n    long s = 0;\n    long t = 0;\n \
    \   long u = 0;\n    long v = 0;\n    long w = 0;\n    long x = 0;\n    long y\
    \ = 0;\n    long z = 0;", "    long ans = x;\n    long i = 2;\n    while (i <=\
    \ n && ans % i != 0) {\n        ans = ans + y;\n        i++;\n    }\n    return\
    \ ans;", "    if (n == 1) {\n        return y;\n    }\n    if (n == 2) {\n   \
    \     return x;\n    }\n    if (n % 2 == 0) {\n        return x_or_y(n / 2, x,\
    \ y);\n    }\n    return x_or_y(n / 2, y, x);", "    long result = 0;\n    long\
    \ limit = sqrt(n);\n    long mid = (limit + limit) / 2;\n    long count = 0;\n\
    \    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long p = 1;\n    long q = 1;\n    long r = 1;\n\
    \    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n    long\
    \ w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long a = 1;\n\
    \    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n    long\
    \ f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long j = 1;\n\
    \    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n    long\
    \ p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long t = 1;\n\
    \    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n    long\
    \ y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long c = 1;\n\
    \    long d = 1;\n    long e = 1;\n    long f = 1;\n    long g = 1;\n    long\
    \ h = 1;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n    long l = 1;\n\
    \    long m = 1;\n    long n = 1;\n    long p = 1;\n    long q = 1;\n    long\
    \ r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long v = 1;\n\
    \    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n    long\
    \ a = 1;\n    long b = 1;\n    long c = 1;\n    long d = 1;\n    long e = 1;\n\
    \    long f = 1;\n    long g = 1;\n    long h = 1;\n    long i = 1;\n    long\
    \ j = 1;\n    long k = 1;\n    long l = 1;\n    long m = 1;\n    long n = 1;\n\
    \    long p = 1;\n    long q = 1;\n    long r = 1;\n    long s = 1;\n    long\
    \ t = 1;\n    long u = 1;\n    long v = 1;\n    long w = 1;\n    long x = 1;\n\
    \    long y = 1;\n    long z = 1;\n    long a = 1;\n    long b = 1;\n    long\
    \ c = 1;\n    long d = 1;\n    long e = 1;\n    long ", "    assert(n % 2 == 0);\n\
    \    if (n == 2) return x;\n    return y;", "    if (n == 1)\n        return y;\n\
    \    if (n % 2 == 0)\n        return x_or_y(n / 2, x, y);\n    else\n        return\
    \ x_or_y(n / 2, y, x);", "    if (n == 1) {\n        return y;\n    }\n    if\
    \ (n % 2 == 0) {\n        return x_or_y(n / 2, x, y);\n    }\n    return x_or_y(n\
    \ / 2, y, x);", "    assert(n % 2 == 0);\n    long ans = x;\n    for (int i =\
    \ 3; i <= n / 2; i += 2) {\n        if (n % i == 0) {\n            ans = y;\n\
    \            break;\n        }\n    }\n    return ans;", "    long res = n;\n\
    \    long m = n;\n    long a = x;\n    long b = y;\n    long c = 1;\n    long\
    \ d = 1;\n    long e = 1;\n    long f = 0;\n    long g = 1;\n    long h = 1;\n\
    \    long i = 0;\n    long j = 0;\n    long k = 0;\n    long l = 1;\n    long\
    \ m = 1;\n    long n = 1;\n    long o = 1;\n    long p = 1;\n    long q = 1;\n\
    \    long r = 1;\n    long s = 1;\n    long t = 1;\n    long u = 1;\n    long\
    \ v = 1;\n    long w = 1;\n    long x = 1;\n    long y = 1;\n    long z = 1;\n\
    \    long A = 1;\n    long B = 1;\n    long C = 1;\n    long D = 1;\n    long\
    \ E = 1;\n    long F = 1;\n    long G = 1;\n    long H = 1;\n    long I = 1;\n\
    \    long J = 1;\n    long K = 1;\n    long L = 1;\n    long M = 1;\n    long\
    \ N = 1;\n    long O = 1;\n    long P = 1;\n    long Q = 1;\n    long R = 1;\n\
    \    long S = 1;\n    long T = 1;\n    long U = 1;\n    long V = 1;\n    long\
    \ W = 1;\n    long X = 1;\n    long Y = 1;\n    long Z = 1;\n    long aa = 1;\n\
    \    long bb = 1;\n    long cc = 1;\n    long dd = 1;\n    long ee = 1;\n    long\
    \ ff = 1;\n    long gg = 1;\n    long hh = 1;\n    long ii = 0;\n    long jj =\
    \ 0;\n    long kk = 0;\n    long ll = 1;\n    long mm = 1;\n    long nn = 0;\n\
    \    long oo = 1;\n    long pp = 1;\n    long qq = 1;\n    long rr = 0;\n    long\
    \ ss = 0;\n    long tt = 0;\n    long uu = 1;\n    long vv = 1;\n    long ww =\
    \ 1;\n    long xx = 0;\n    long yy = 0;\n    long zz = 0;\n    long Aa = 0;\n\
    \    long Bb = 0;\n    long Cc = 0;\n    long Dd = 0;\n    long Ee = 0;\n    long\
    \ Ff = 0;\n    long Gg = 0;\n    long Hh = 0;\n    long Ii = 0;\n    long Jj =\
    \ 0;\n    long Kk = 0;\n    long Ll = 0;\n    long Mm = 0;\n    long Nn = 0;\n\
    \    long Oo = 0;\n    long Pp = 0;\n    long Qq = 0;\n    long Rr = 0;\n    long\
    \ Ss = 0;\n    "]
stop_tokens:
- "\n}"

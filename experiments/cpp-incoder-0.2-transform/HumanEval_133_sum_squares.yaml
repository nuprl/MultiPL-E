name: HumanEval_133_sum_squares
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// You are given a list of numbers.\n\
  // You need to return the sum of squared numbers in the given list,\n// round each\
  \ element in the list to the upper int(Ceiling) first.\n// Examples:\n// >>> lst((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0})))\n// (14)\n// >>> lst((std::vector<float>({(float)1.0,\
  \ (float)4.0, (float)9.0})))\n// (98)\n// >>> lst((std::vector<float>({(float)1.0,\
  \ (float)3.0, (float)5.0, (float)7.0})))\n// (84)\n// >>> lst((std::vector<float>({(float)1.4,\
  \ (float)4.2, (float)0.0})))\n// (29)\n// >>> lst((std::vector<float>({(float)-2.4,\
  \ (float)1.0, (float)1.0})))\n// (6)\nlong sum_squares(std::vector<float> lst) {\n"
tests: "}\nint main() {\n    auto candidate = sum_squares;\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0}))) == (14));\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)2.0, (float)3.0}))) == (14));\n    assert(candidate((std::vector<float>({(float)1.0,\
  \ (float)3.0, (float)5.0, (float)7.0}))) == (84));\n    assert(candidate((std::vector<float>({(float)1.4,\
  \ (float)4.2, (float)0.0}))) == (29));\n    assert(candidate((std::vector<float>({(float)-2.4,\
  \ (float)1.0, (float)1.0}))) == (6));\n    assert(candidate((std::vector<float>({(float)100.0,\
  \ (float)1.0, (float)15.0, (float)2.0}))) == (10230));\n    assert(candidate((std::vector<float>({(float)10000.0,\
  \ (float)10000.0}))) == (200000000));\n    assert(candidate((std::vector<float>({(float)-1.4,\
  \ (float)4.6, (float)6.3}))) == (75));\n    assert(candidate((std::vector<float>({(float)-1.4,\
  \ (float)17.9, (float)18.9, (float)19.9}))) == (1086));\n    assert(candidate((std::vector<float>({(float)0.0})))\
  \ == (0));\n    assert(candidate((std::vector<float>({(float)-1.0}))) == (1));\n\
  \    assert(candidate((std::vector<float>({(float)-1.0, (float)1.0, (float)0.0})))\
  \ == (2));\n}\n"
completions: ["    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n\
    \    }\n    return sum;", "    long long ans = 0;\n    for(auto i : lst) {\n \
    \       ans += i*i;\n    }\n    return ans;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        sum += std::round(f * f);\n    }\n    return sum;", "  \
    \  long long sum = 0;\n    for(auto &x: lst) {\n        sum += x * x;\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum\
    \ += std::round(f * f);\n    }\n    return sum;", "    long long ans = 0;\n  \
    \  for (auto &i : lst) {\n        ans += i * i;\n    }\n    return ans;", "  \
    \  long long ans = 0;\n    for(auto &x : lst) {\n        ans += x * x;\n    }\n\
    \    return ans;", "    long long ans = 0;\n    for(auto &i : lst) {\n       \
    \ ans += i*i;\n    }\n    return ans;", "    long long ans = 0;\n    for (float\
    \ f : lst) {\n        ans += f*f;\n    }\n    return ans;", "    long sum = 0;\n\
    \    for (auto i : lst) {\n        sum += i * i;\n    }\n    return sum;", " \
    \   // Write your code here.\n    long sum = 0;\n    long n = lst.size();\n  \
    \  long i = 0;\n    long sum_squares = 0;\n    while(i < n) {\n        sum +=\
    \ lst[i];\n        sum_squares += lst[i] * lst[i];\n        i++;\n    }\n    return\
    \ sum_squares/n;", "    long sum = 0;\n    for (float x : lst) {\n        sum\
    \ += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        sum += std::round(f * f);\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float f : lst) {\n        sum += std::round(f * f);\n    }\n\
    \    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    for (long i = 0; i < n; i++) {\n        sum += (long)((double)m\
    \ * m);\n        m += lst.at(i);\n    }\n    return sum;", "    long long ans\
    \ = 0;\n    for (float x : lst) {\n        ans += x * x;\n    }\n    return ans;",
  "    long sum = 0;\n    long n = lst.size();\n    long m = lst.front();\n    for\
    \ (long i = 0; i < n; i++) {\n        sum += (long long)m * m;\n        m += lst[i];\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    sum += std::round(f * f);\n    }\n    return sum;", "    // Your code here\n\
    \    long sum = 0;\n    for (auto i : lst) {\n        sum += i * i;\n    }\n \
    \   return sum;", "    long sum = 0;\n    long n = lst.size();\n    for(long i\
    \ = 0; i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]), 2);\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ sum_squares = 0;\n    long temp;\n    long i;\n    for(i = 0; i < n; i++) {\n\
    \        temp = ceil(lst[i] * lst[i]);\n        sum += temp;\n        sum_squares\
    \ += temp * temp;\n    }\n    return sum_squares;", "    long long ans = 0;\n\
    \    for(auto &x: lst) {\n        ans += x * x;\n    }\n    return ans;", "  \
    \  long long sum = 0;\n    for(auto &x : lst) {\n        sum += x * x;\n    }\n\
    \    return sum;", "    long long ans = 0;\n    for (auto i : lst) {\n       \
    \ ans += i * i;\n    }\n    return ans;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n\
    \    long n = lst.size();\n    long i = 0;\n    long sum_squares = 0;\n    while\
    \ (i < n) {\n        sum += lst[i];\n        sum_squares += lst[i] * lst[i];\n\
    \        i++;\n    }\n    return sum_squares/n;", "    long sum = 0;\n    for\
    \ (float f : lst) {\n        sum += std::round(std::ceil(f*f));\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n\
    \    }\n    return sum;", "    long long ans = 0;\n    for (float f : lst) {\n\
    \        ans += std::round(f * f);\n    }\n    return ans;", "    long long sum\
    \ = 0;\n    long long n = lst.size();\n    for(long long i = 0; i < n; i++) {\n\
    \        sum += std::pow(static_cast<double>(lst[i]), 2);\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    for\
    \ (long i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n        sum_squares\
    \ += lst[i] * lst[i];\n    }\n    return sum_squares/n;", "    long long ans =\
    \ 0;\n    for(auto &x : lst) {\n        ans += x * x;\n    }\n    return ans;",
  "    // Your code here\n    long sum = 0;\n    for (float i : lst) {\n        sum\
    \ += i * i;\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "  \
    \  long sum = 0;\n    for (float f : lst) {\n        sum += std::round(f * f);\n\
    \    }\n    return sum;", "    long long sum = 0;\n    for (auto i : lst) {\n\
    \        sum += i * i;\n    }\n    return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    for(long i = 0; i < n; i++) {\n        sum += lst[i] *\
    \ lst[i];\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst)\
    \ {\n        sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for\
    \ (float f : lst) {\n        sum += std::round(std::pow(f, 2));\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto &x : lst) {\n        sum += std::round(std::ceil(x\
    \ * x));\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n    }\n    return\
    \ sum;", "    long long ans = 0;\n    for(auto &i : lst) {\n        ans += i *\
    \ i;\n    }\n    return ans;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        sum += x * x;\n    }\n    return sum;", "    long long sum = 0;\n   \
    \ for (auto i : lst) {\n        sum += i * i;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float x : lst) {\n        sum += std::round(std::pow(x, 2));\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ m = lst.front();\n    for (long i = 0; i < n; i++) {\n        sum += std::pow(m,\
    \ 2);\n        m += lst[i];\n    }\n    return sum;", "    long sum = 0;\n   \
    \ for (float f : lst) {\n        sum += std::round(std::pow(f, 2));\n    }\n \
    \   return sum;", "    long long ans = 0;\n    for (float f : lst) {\n       \
    \ ans += std::round(f * f);\n    }\n    return ans;", "    long sum = 0;\n   \
    \ long n = lst.size();\n    long m = lst.front();\n    long sq = 0;\n    for (long\
    \ i = 0; i < n; i++) {\n        sq += lst[i] * lst[i];\n    }\n    sum = round(sq);\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum\
    \ += std::round(std::ceil(f) * std::ceil(f));\n    }\n    return sum;", "    long\
    \ long ans = 0;\n    for (auto i : lst) {\n        ans += i * i;\n    }\n    return\
    \ ans;", "    long sum = 0;\n    for (auto &i : lst) {\n        sum += i * i;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    sum += std::round(std::pow(std::abs(f), 2));\n    }\n    return sum;", " \
    \   long sum = 0;\n    for (auto x : lst) {\n        sum += x * x;\n    }\n  \
    \  return sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum +=\
    \ std::round(f * f);\n    }\n    return sum;", "    long long sum = 0;\n    for\
    \ (float x : lst) {\n        sum += x * x;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    for(long i = 0; i < n; i++) {\n    \
    \    sum += std::pow(static_cast<double>(lst[i]), 2);\n    }\n    return sum;",
  "    long sum = 0;\n    long n = lst.size();\n    long m = lst.front();\n    for\
    \ (long i = 0; i < n; i++) {\n        sum += (long)((double)m * m);\n        m\
    \ += lst[i];\n    }\n    return sum;", "    long long sum = 0;\n    long long\
    \ n = lst.size();\n    for (long long i = 0; i < n; i++) {\n        sum += std::pow(lst[i],\
    \ 2);\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n\
    \        sum += std::round(std::pow(std::abs(f), 2));\n    }\n    return sum;",
  "    long long sum = 0;\n    long long n = lst.size();\n    for(long long i = 0;\
    \ i < n; i++) {\n        sum += std::pow(static_cast<long long>(lst[i]), 2);\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "    long sum\
    \ = 0;\n    long n = lst.size();\n    for(long i = 0; i < n; i++) {\n        sum\
    \ += std::pow(lst[i], 2);\n    }\n    return sum;", "    long sum = 0;\n    long\
    \ n = lst.size();\n    long m = lst.front();\n    long sq = 0;\n    long i;\n\
    \    for(i = 0; i < n; i++) {\n        sq = sq + pow(m, 2);\n        m = lst[i];\n\
    \    }\n    sum = sq;\n    return sum;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float f : lst) {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n\
    \    }\n    return sum;", "    long long ans = 0;\n    for (auto i : lst) {\n\
    \        ans += i * i;\n    }\n    return ans;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        sum += std::round(f * f);\n    }\n    return sum;", "  \
    \  // Your code here\n    long sum = 0;\n    long n = lst.size();\n    long sum_squares\
    \ = 0;\n    for(long i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n \
    \       sum_squares += lst[i] * lst[i];\n    }\n    return sum_squares/n;", " \
    \   long sum = 0;\n    for (float x : lst) {\n        sum += std::round(std::sqrt(x\
    \ * x));\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    for(long i = 0; i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]),\
    \ 2);\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long sum_squares = 0;\n    long sum_squares_temp = 0;\n    long i = 0;\n\
    \    long j = 0;\n    long k = 0;\n    long l = 0;\n    long m = 0;\n    long\
    \ n = 0;\n    long temp = 0;\n    long temp2 = 0;\n    long temp3 = 0;\n    long\
    \ temp4 = 0;\n    long temp5 = 0;\n    long temp6 = 0;\n    long temp7 = 0;\n\
    \    long temp8 = 0;\n    long temp9 = 0;\n    long temp10 = 0;\n    long temp11\
    \ = 0;\n    long temp12 = 0;\n    long temp13 = 0;\n    long temp14 = 0;\n   \
    \ long temp15 = 0;\n    long temp16 = 0;\n    long temp17 = 0;\n    long temp18\
    \ = 0;\n    long temp19 = 0;\n    long temp20 = 0;\n    long temp21 = 0;\n   \
    \ long temp22 = 0;\n    long temp23 = 0;\n    long temp24 = 0;\n    long temp25\
    \ = 0;\n    long temp26 = 0;\n    long temp27 = 0;\n    long temp28 = 0;\n   \
    \ long temp29 = 0;\n    long temp30 = 0;\n    long temp31 = 0;\n    long temp32\
    \ = 0;\n    long temp33 = 0;\n    long temp34 = 0;\n    long temp35 = 0;\n   \
    \ long temp36 = 0;\n    long temp37 = 0;\n    long temp38 = 0;\n    long temp39\
    \ = 0;\n    long temp40 = 0;\n    long temp41 = 0;\n    long temp42 = 0;\n   \
    \ long temp43 = 0;\n    long temp44 = 0;\n    long temp45 = 0;\n    long temp46\
    \ = 0;\n    long temp47 = 0;\n    long temp48 = 0;\n    long temp49 = 0;\n   \
    \ long temp50 = 0;\n    long temp51 = 0;\n    long temp52 = 0;\n    long temp53\
    \ = 0;\n    long temp54 = 0;\n    long temp55 = 0;\n    long temp56 = 0;\n   \
    \ long temp57 = 0;\n    long temp58 = 0;\n    long temp59 = 0;\n    long temp60\
    \ = 0;\n    long temp61 = 0;\n    long temp62 = 0;\n    long temp63 = 0;\n   \
    \ long temp64 = 0;\n    long temp65 = 0;\n    long temp66 = 0;\n    long temp67\
    \ = 0;\n    long temp68 = 0;\n    long temp69 = 0;\n    long temp70 = 0;\n   \
    \ long temp71 = 0;\n    long temp72 = 0;\n    long temp73 = 0;\n    long temp74\
    \ = 0;\n    long temp75 = 0;\n    long temp76 = 0;\n    long temp77 = 0;", " \
    \   long long sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::ceil(f)\
    \ * std::ceil(f));\n    }\n    return sum;", "    long long ans = 0;\n    for\
    \ (auto i : lst) {\n        ans += i * i;\n    }\n    return ans;", "    long\
    \ sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::pow(std::abs(f),\
    \ 2));\n    }\n    return sum;", "    long long sum = 0;\n    long long n = lst.size();\n\
    \    for (long long i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n  \
    \  }\n    return sum;", "    long long ans = 0;\n    for (float x : lst) {\n \
    \       ans += x * x;\n    }\n    return ans;", "    long long sum = 0;\n    for\
    \ (float x : lst) {\n        sum += std::round(std::pow(x, 2));\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    sum += std::round(std::ceil(f*f));\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (float f : lst) {\n        sum += std::round(std::sqrt(f));\n\
    \    }\n    return sum;", "    long long ans = 0;\n    long long n = lst.size();\n\
    \    for(long long i = 0; i < n; i++) {\n        ans += lst[i] * lst[i];\n   \
    \ }\n    return ans;", "    long long ans = 0;\n    for (auto i : lst) {\n   \
    \     ans += i * i;\n    }\n    return ans;", "    // Write your code here\n \
    \   long sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    for(long\
    \ i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n        sum_squares +=\
    \ lst[i] * lst[i];\n    }\n    return sum_squares;", "    long long ans = 0;\n\
    \    for (auto i : lst) {\n        ans += i * i;\n    }\n    return ans;", " \
    \   long long sum = 0;\n    for (auto i : lst) {\n        sum += i * i;\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum\
    \ += x * x;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long m = lst.front();\n    long sum_squares = 0;\n    for (long i = 0; i\
    \ < n; i++) {\n        sum += std::round(m * m);\n        sum_squares += std::round(m\
    \ * m);\n        m += lst[i];\n    }\n    return sum;", "    long sum = 0;\n \
    \   long n = lst.size();\n    long m = lst.front();\n    for (long i = 1; i <\
    \ n; i++) {\n        sum += (lst[i] - m) * (lst[i] - m);\n        m = lst[i];\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n    \
    \    sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        sum += x * x;\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float f : lst) {\n        sum += std::round(std::pow(f, 2));\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   sum += i * i;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long m = lst.front();\n    for (long i = 0; i < n; i++) {\n        sum +=\
    \ pow(m, 2);\n        m += lst[i];\n    }\n    return sum;", "    long long sum\
    \ = 0;\n    for (auto i : lst) {\n        sum += i * i;\n    }\n    return sum;",
  "    long sum = 0;\n    for (auto &i : lst) {\n        sum += std::round(std::ceil(i)\
    \ * std::ceil(i));\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        sum += std::round(f * f);\n    }\n    return sum;", "  \
    \  long long ans = 0;\n    for (auto &x : lst) {\n        ans += x * x;\n    }\n\
    \    return ans;", "    long long ans = 0;\n    for(auto &i : lst) {\n       \
    \ ans += i * i;\n    }\n    return ans;", "    long sum = 0;\n    for (float x\
    \ : lst) {\n        sum += std::round(std::pow(x, 2));\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n    }\n  \
    \  return sum;", "    long sum = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    for (long i = 1; i < n; i++) {\n        sum += std::pow(m, i);\n        m\
    \ = std::ceil(m / 10.0);\n    }\n    return sum;", "    long long sum = 0;\n \
    \   for (auto &x : lst) {\n        sum += x * x;\n    }\n    return sum;", " \
    \   long long sum = 0;\n    for (auto &x : lst) {\n        sum += std::round(std::pow(x,\
    \ 2));\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n\
    \        sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float f : lst) {\n        sum += std::round(f * f);\n   \
    \ }\n    return sum;", "    long long ans = 0;\n    for (auto i : lst) {\n   \
    \     ans += i * i;\n    }\n    return ans;", "    long long sum = 0;\n    for(auto\
    \ &i : lst) {\n        sum += i * i;\n    }\n    return sum;", "    long sum =\
    \ 0;\n    for (float f : lst) {\n        sum += std::round(f * f);\n    }\n  \
    \  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum +=\
    \ std::round(std::pow(std::abs(x), 2.0f));\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    for(long i = 0; i < n; i++) {\n    \
    \    sum += std::pow(static_cast<double>(lst[i]), 2);\n    }\n    return sum;",
  "    long sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::pow(std::abs(f),\
    \ 2));\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    for(long i = 0; i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]),\
    \ 2);\n    }\n    return sum;", "    long long ans = 0;\n    for (auto x : lst)\
    \ {\n        ans += x * x;\n    }\n    return ans;", "    long sum = 0;\n    for\
    \ (float f : lst) {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ m = lst.front();\n    for (long i = 0; i < n; i++) {\n        sum += (long)((double)m\
    \ * m);\n        m += lst[i];\n    }\n    return sum;", "    long sum = 0;\n \
    \   for (float f : lst) {\n        sum += std::round(std::pow(f, 2));\n    }\n\
    \    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long m =\
    \ lst.front();\n    long sum_square = 0;\n    long sum_square_round = 0;\n   \
    \ long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long\
    \ sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up\
    \ = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n\
    \    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long\
    \ sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down\
    \ = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n\
    \    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long\
    \ sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up\
    \ = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n\
    \    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long\
    \ sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down\
    \ = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n\
    \    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long\
    \ sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up\
    \ = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n\
    \    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long\
    \ sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down\
    \ = 0;\n    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n\
    \    long sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long\
    \ sum_square_round_up = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up\
    \ = 0;\n    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n\
    \    long sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n    long\
    \ sum_square_round_down = 0;\n    long sum_square_round_up = 0;\n", "    // Your\
    \ code here\n    long sum = 0;\n    long n = lst.size();\n    for(long i = 0;\
    \ i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]), 2);\n  \
    \  }\n    return sum;", "    long long sum = 0;\n    long long n = lst.size();\n\
    \    for(long long i = 0; i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]),\
    \ 2);\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    long sum_squares = 0;\n    long i;\n    for (i = 0; i < n; i++) {\n     \
    \   sum += lst[i] * lst[i];\n        sum_squares += lst[i] * lst[i];\n    }\n\
    \    return sum_squares/n;", "    long long ans = 0;\n    for(auto i : lst) {\n\
    \        ans += i * i;\n    }\n    return ans;", "    long long sum = 0;\n   \
    \ for (auto i : lst) {\n        sum += i * i;\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::ceil(f)\
    \ * std::ceil(f));\n    }\n    return sum;", "    long sum = 0;\n    long n =\
    \ lst.size();\n    for (long i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n\
    \    }\n    return sum;", "    long long sum = 0;\n    for (float x : lst) {\n\
    \        sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ x : lst) {\n        sum += x * x;\n    }\n    return sum;", "    long long ans\
    \ = 0;\n    for(auto &x : lst) {\n        ans += x * x;\n    }\n    return ans;",
  "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n    }\n  \
    \  return sum;", "    long sum = 0;\n    long n = lst.size();\n    long m = lst.front();\n\
    \    long sum_squares = 0;\n    long i = 1;\n    long j = 1;\n    long k = 1;\n\
    \    long sum_squares_temp = 0;\n    long sum_squares_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp =\
    \ 0;\n    long sum_squares_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp = 0;\n    long\
    \ sum_squares_temp_temp_temp_temp_temp_temp_temp_temp = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_squares_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp_temp\
    \ = 0;\n    long sum_square", "    long long sum = 0;\n    long long n = lst.size();\n\
    \    for(long long i = 0; i < n; i++) {\n        sum += std::pow(static_cast<long\
    \ long>(lst[i]), 2);\n    }\n    return sum;", "    long sum = 0;\n    long n\
    \ = lst.size();\n    long m = lst.front();\n    for (long i = 1; i < n; i++) {\n\
    \        sum += std::pow(m, 2);\n        m += lst[i];\n    }\n    return sum;",
  "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n    }\n  \
    \  return sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum +=\
    \ x * x;\n    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n\
    \    for(long i = 0; i < n; i++) {\n        sum += std::pow(static_cast<double>(lst[i]),\
    \ 2);\n    }\n    return sum;", "    long sum = 0;\n    for (float x : lst) {\n\
    \        sum += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float\
    \ f : lst) {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum\
    \ += std::round(std::sqrt(f));\n    }\n    return sum;", "    long long ans =\
    \ 0;\n    for (float x : lst) {\n        ans += x * x;\n    }\n    return ans;",
  "    long sum = 0;\n    for (float f : lst) {\n        sum += std::round(f * f);\n\
    \    }\n    return sum;", "    long long sum = 0;\n    for (float x : lst) {\n\
    \        sum += x * x;\n    }\n    return sum;", "    long long ans = 0;\n   \
    \ for(auto i : lst) {\n        ans += i*i;\n    }\n    return ans;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long temp;\n\
    \    for (long i = 0; i < n; i++) {\n        temp = std::ceil(lst[i] * lst[i]);\n\
    \        sum += temp;\n        sum_squares += temp * temp;\n    }\n    return\
    \ sum_squares;", "    long long ans = 0;\n    for (float x : lst) {\n        ans\
    \ += x * x;\n    }\n    return ans;", "    long long ans = 0;\n    for (auto i\
    \ : lst) {\n        ans += i * i;\n    }\n    return ans;", "    long sum = 0;\n\
    \    long n = lst.size();\n    for (long i = 0; i < n; i++) {\n        sum +=\
    \ std::pow(static_cast<double>(lst[i]), 2);\n    }\n    return sum;", "    long\
    \ long sum = 0;\n    for (auto i : lst) {\n        sum += std::round(std::ceil(i\
    \ * i));\n    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst)\
    \ {\n        sum += i * i;\n    }\n    return sum;", "    long long sum = 0;\n\
    \    long long n = lst.size();\n    for(long long i = 0; i < n; i++) {\n     \
    \   sum += std::pow(static_cast<double>(lst[i]), 2);\n    }\n    return sum;",
  "    // Your code here\n    long sum = 0;\n    for (float x : lst) {\n        sum\
    \ += x * x;\n    }\n    return sum;", "    long long ans = 0;\n    for (float\
    \ f : lst) {\n        ans += std::round(f * f);\n    }\n    return ans;", "  \
    \  // Write your code here\n    long sum = 0;\n    for (float f : lst) {\n   \
    \     sum += std::round(f * f);\n    }\n    return sum;", "    long sum = 0;\n\
    \    for (float f : lst) {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n    \
    \    sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "    long long\
    \ sum = 0;\n    for (float x : lst) {\n        sum += std::round(std::pow(x, 2));\n\
    \    }\n    return sum;", "    long sum = 0;\n    long n = lst.size();\n    long\
    \ m = lst.front();\n    for (long i = 0; i < n; i++) {\n        sum += (long)((lst[i]\
    \ - m) * (lst[i] - m));\n        m = lst[i];\n    }\n    return sum;", "    long\
    \ sum = 0;\n    for (auto i : lst) {\n        sum += i * i;\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::pow(std::abs(f),\
    \ 2));\n    }\n    return sum;", "    long long ans = 0;\n    for (auto &i : lst)\
    \ {\n        ans += i * i;\n    }\n    return ans;", "    // Write your code here\n\
    \    long long sum = 0;\n    for (float x : lst) {\n        sum += std::round(std::ceil(x\
    \ * x));\n    }\n    return sum;", "    long long sum = 0;\n    for(auto &x :\
    \ lst) {\n        sum += std::round(std::ceil(x * x));\n    }\n    return sum;",
  "    long long ans = 0;\n    for(auto i : lst) {\n        ans += i * i;\n    }\n\
    \    return ans;", "    long long sum = 0;\n    for (auto i : lst) {\n       \
    \ sum += i * i;\n    }\n    return sum;", "    long long ans = 0;\n    for (float\
    \ f : lst) {\n        ans += std::round(f * f);\n    }\n    return ans;", "  \
    \  long long sum = 0;\n    long long n = lst.size();\n    for (long long i = 0;\
    \ i < n; i++) {\n        sum += std::round(lst[i] * lst[i]);\n    }\n    return\
    \ sum;", "    long long sum = 0;\n    for (auto i : lst) {\n        sum += i *\
    \ i;\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst) {\n\
    \        sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "    long\
    \ long ans = 0;\n    for(auto &x : lst) {\n        ans += x * x;\n    }\n    return\
    \ ans;", "    long sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::ceil(f*f));\n\
    \    }\n    return sum;", "    long long sum = 0;\n    for (float f : lst) {\n\
    \        sum += std::round(std::ceil(f));\n    }\n    return sum;", "    long\
    \ long sum = 0;\n    for (auto i : lst) {\n        sum += i * i;\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n\
    \    }\n    return sum;", "    long sum = 0;\n    for (auto i : lst) {\n     \
    \   sum += i * i;\n    }\n    return sum;", "    long long ans = 0;\n    for (auto\
    \ &x : lst) {\n        ans += x * x;\n    }\n    return ans;", "    long sum =\
    \ 0;\n    for (float f : lst) {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n\
    \    }\n    return sum;", "    long long sum = 0;\n    for (auto &x : lst) {\n\
    \        sum += std::round(std::ceil(x * x));\n    }\n    return sum;", "    long\
    \ long ans = 0;\n    for (auto i : lst) {\n        ans += i * i;\n    }\n    return\
    \ ans;", "    long long ans = 0;\n    for(auto &x : lst) {\n        ans += x *\
    \ x;\n    }\n    return ans;", "    long sum = 0;\n    for (float f : lst) {\n\
    \        sum += std::round(std::pow(f, 2));\n    }\n    return sum;", "    long\
    \ sum = 0;\n    long n = lst.size();\n    long sum_squares = 0;\n    long i;\n\
    \    for (i = 0; i < n; i++) {\n        sum += lst[i] * lst[i];\n        sum_squares\
    \ += lst[i] * lst[i];\n    }\n    return sum_squares/n;", "    long sum = 0;\n\
    \    for (float f : lst) {\n        sum += std::round(f * f);\n    }\n    return\
    \ sum;", "    long long ans = 0;\n    for(auto &i : lst) {\n        ans += i*i;\n\
    \    }\n    return ans;", "    long long ans = 0;\n    for (auto i : lst) {\n\
    \        ans += i * i;\n    }\n    return ans;", "    long long ans = 0;\n   \
    \ for(auto &i : lst) {\n        ans += i*i;\n    }\n    return ans;", "    long\
    \ long ans = 0;\n    for (auto i : lst) {\n        ans += i * i;\n    }\n    return\
    \ ans;", "    long long ans = 0;\n    for (float x : lst) {\n        ans += x\
    \ * x;\n    }\n    return ans;", "    long long sum = 0;\n    for (float f : lst)\
    \ {\n        sum += std::round(std::ceil(f) * std::ceil(f));\n    }\n    return\
    \ sum;", "    long sum = 0;\n    for (auto i : lst) {\n        sum += i * i;\n\
    \    }\n    return sum;", "    long long ans = 0;\n    for (auto i : lst) {\n\
    \        ans += i * i;\n    }\n    return ans;", "    // Write your code here\n\
    \    long sum = 0;\n    for (float x : lst) {\n        sum += x * x;\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float x : lst) {\n        sum\
    \ += x * x;\n    }\n    return sum;", "    long sum = 0;\n    for (float f : lst)\
    \ {\n        sum += std::round(f * f);\n    }\n    return sum;", "    long sum\
    \ = 0;\n    for (auto x : lst) {\n        sum += x * x;\n    }\n    return sum;",
  "    long sum = 0;\n    for (float f : lst) {\n        sum += std::round(std::ceil(f*f));\n\
    \    }\n    return sum;", "    long long ans = 0;\n    for (float f : lst) {\n\
    \        ans += std::round(f * f);\n    }\n    return ans;", "    long long sum\
    \ = 0;\n    long long n = lst.size();\n    for (long long i = 0; i < n; i++) {\n\
    \        sum += std::pow(lst[i], 2);\n    }\n    return sum;", "    long long\
    \ ans = 0;\n    for(auto i : lst) {\n        ans += i*i;\n    }\n    return ans;",
  "    // Your code here\n    long sum = 0;\n    long n = lst.size();\n    for(long\
    \ i = 0; i < n; i++) {\n        sum += std::pow(std::ceil(lst[i]), 2);\n    }\n\
    \    return sum;", "    long sum = 0;\n    for (float f : lst) {\n        sum\
    \ += std::round(std::pow(f, 2));\n    }\n    return sum;", "    // Your code here\n\
    \    long sum = 0;\n    for (float i : lst) {\n        sum += i * i;\n    }\n\
    \    return sum;"]
stop_tokens:
- "\n}"

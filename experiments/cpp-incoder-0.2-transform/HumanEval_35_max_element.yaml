name: HumanEval_35_max_element
language: cpp
prompt: "#include<assert.h>\n#include<bits/stdc++.h>\n// Return maximum element in\
  \ the list.\n// >>> max_element((std::vector<long>({(long)1, (long)2, (long)3})))\n\
  // (3)\n// >>> max_element((std::vector<long>({(long)5, (long)3, (long)-5, (long)2,\
  \ (long)-3, (long)3, (long)9, (long)0, (long)123, (long)1, (long)-10})))\n// (123)\n\
  long max_element(std::vector<long> l) {\n"
tests: "}\nint main() {\n    auto candidate = max_element;\n    assert(candidate((std::vector<long>({(long)1,\
  \ (long)2, (long)3}))) == (3));\n    assert(candidate((std::vector<long>({(long)5,\
  \ (long)3, (long)-5, (long)2, (long)-3, (long)3, (long)9, (long)0, (long)124, (long)1,\
  \ (long)-10}))) == (124));\n}\n"
completions: ["    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n \
    \       if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = 0;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max_val = l[0];\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max_val = -long_MAX;\n    for (auto\
    \ it = l.begin(); it != l.end(); ++it) {\n        if (*it > max_val) {\n     \
    \       max_val = *it;\n        }\n    }\n    return max_val;", "    auto it =\
    \ std::max_element(l.begin(), l.end());\n    return *it;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = 0;\n \
    \   for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n       \
    \     max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max_val) {\n            max_val = l[i];\n        }\n    }\n    return max_val;",
  "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val)\n            max_val = l[i];\n    }\n    return max_val;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n   \
    \     }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max_val = l[0];\n    for (long i\
    \ = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_val = -long_MAX;\n    for (long i = 0; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    auto it = std::max_element(l.begin(), l.end());\n\
    \    return *it;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max)\n            max = l[i];\n   \
    \ }\n    return max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n   \
    \     }\n    }\n    return max;", "    long max_val = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max = l[0];\n   \
    \ for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max_val = INT_MIN;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max_val\
    \ = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;", "  \
    \  long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val)\n            max_val = l[i];\n    }\n    return max_val;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n \
    \   }\n    return max_val;", "    long max_val = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] > max_val)\n            max_val = l[i];\n\
    \    }\n    return max_val;", "    long max_val = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n\
    \        }\n    }\n    return max_val;", "    long max_val = l[0];\n    for (long\
    \ i = 0; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = 0;\n    for (auto i : l) {\n        if (i > max) {\n            max =\
    \ i;\n        }\n    }\n    return max;", "    long max_element = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_element) {\n     \
    \       max_element = l[i];\n        }\n    }\n    return max_element;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    assert(l.size() > 0);\n    long max_val = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max = l[0];\n   \
    \ for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max_element = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_element) {\n\
    \            max_element = l[i];\n        }\n    }\n    return max_element;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n \
    \       if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max)\n            max = l[i];\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max)\n            max = l[i];\n    }\n    return max;",
  "    long max_element = l[0];\n    for (long i = 1; i < l.size(); i++) {\n     \
    \   if (l[i] > max_element) {\n            max_element = l[i];\n        }\n  \
    \  }\n    return max_element;", "    long max_ele = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max_ele) {\n            max_ele = l[i];\n\
    \        }\n    }\n    return max_ele;", "    long max_val = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max_val) {\n            max_val = l[i];\n        }\n    }\n    return max_val;",
  "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_ele = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max_ele) {\n            max_ele = l[i];\n        }\n    }\n    return max_ele;",
  "    long max = 0;\n    for (auto i : l) {\n        if (i > max) {\n           \
    \ max = i;\n        }\n    }\n    return max;", "    long max = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max_ele = 0;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_ele) {\n         \
    \   max_ele = l[i];\n        }\n    }\n    return max_ele;", "    long max = 0;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max_ele\
    \ = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_ele)\
    \ {\n            max_ele = l[i];\n        }\n    }\n    return max_ele;", "  \
    \  long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 0; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 0; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max)\n            max = l[i];\n   \
    \ }\n    return max;", "    long max = l[0];\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max = l[0];\n    for (long i = 1;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = l[0];\n    for (long i = 0;\
    \ i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n \
    \       }\n    }\n    return max;", "    long max = 0;\n    for (long i = 0; i\
    \ < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n   \
    \     }\n    }\n    return max;", "    long max_val = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max_val\
    \ = l[0];\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;", "  \
    \  long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n \
    \   }\n    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max)\n            max = l[i];\n    }\n    return\
    \ max;", "    long max = 0;\n    for (long i : l) {\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    return max;", "    long max_val =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;", "  \
    \  long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = 0;\n    for (long i : l) {\n        if (i > max) {\n            max\
    \ = i;\n        }\n    }\n    return max;", "    long max_val = l[0];\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val) {\n         \
    \   max_val = l[i];\n        }\n    }\n    return max_val;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max_ele = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_ele) {\n  \
    \          max_ele = l[i];\n        }\n    }\n    return max_ele;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max_val\
    \ = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;", "  \
    \  long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max_val)\n            max_val = l[i];\n    }\n    return\
    \ max_val;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n \
    \       if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max)\n            max = l[i];\n    }\n    return max;", "    long max_val\
    \ = l[0];\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val)\
    \ {\n            max_val = l[i];\n        }\n    }\n    return max_val;", "  \
    \  long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max = l[0];\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n  \
    \  return max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n       \
    \ }\n    }\n    return max_val;", "    long max_val = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max = l[0];\n   \
    \ for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n         \
    \   max = l[i];\n        }\n    }\n    return max;", "    long max = 0;\n    for\
    \ (long i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n            max\
    \ = l[i];\n        }\n    }\n    return max;", "    long max_val = -long_MAX;\n\
    \    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i] > max) {\n\
    \            max = l[i];\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\n\
    \            max = l[i];\n    }\n    return max;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max_val) {\n            max_val = l[i];\n        }\n    }\n    return max_val;",
  "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max = l[0];\n    for (long i = 0; i < l.size(); i++) {\n        if (l[i]\
    \ > max) {\n            max = l[i];\n        }\n    }\n    return max;", "   \
    \ long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = 0;\n    for (long i : l) {\n        if (i > max) {\n\
    \            max = i;\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_element = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max_element) {\n            max_element = l[i];\n        }\n    }\n    return\
    \ max_element;", "    long max_element = l[0];\n    for (long i = 1; i < l.size();\
    \ i++) {\n        if (l[i] > max_element) {\n            max_element = l[i];\n\
    \        }\n    }\n    return max_element;", "    long max = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = l[0];\n    for (long i =\
    \ 1; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = 0;\n    for (long i : l)\
    \ {\n        if (i > max) {\n            max = i;\n        }\n    }\n    return\
    \ max;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n\
    \        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n\
    \    return max_val;", "    long max = 0;\n    for (long i = 0; i < l.size();\
    \ i++) {\n        if (l[i] > max) {\n            max = l[i];\n        }\n    }\n\
    \    return max;", "    assert(l.size() > 0);\n    long max_val = l[0];\n    for\
    \ (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n         \
    \   max_val = l[i];\n        }\n    }\n    return max_val;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\n        \
    \    max = l[i];\n    }\n    return max;", "    long max = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max)\n            max = l[i];\n\
    \    }\n    return max;", "    long max_val = l[0];\n    for (long i = 1; i <\
    \ l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n\
    \        }\n    }\n    return max_val;", "    long max = 0;\n    for (long i =\
    \ 0; i < l.size(); i++) {\n        if (l[i] > max) {\n            max = l[i];\n\
    \        }\n    }\n    return max;", "    long max = 0;\n    for (long i : l)\
    \ {\n        if (i > max) {\n            max = i;\n        }\n    }\n    return\
    \ max;", "    long max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n  \
    \      if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return\
    \ max;", "    long max = 0;\n    for (long i = 0; i < l.size(); i++) {\n     \
    \   if (l[i] > max) {\n            max = l[i];\n        }\n    }\n    return max;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max = 0;\n    for (long i : l) {\n        if (i > max)\
    \ {\n            max = i;\n        }\n    }\n    return max;", "    long max =\
    \ l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\n\
    \            max = l[i];\n    }\n    return max;", "    auto it = std::max_element(l.begin(),\
    \ l.end());\n    return std::distance(l.begin(), it);", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i]\
    \ > max_val) {\n            max_val = l[i];\n        }\n    }\n    return max_val;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++)\
    \ {\n        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n \
    \   }\n    return max_val;", "    long max = 0;\n    for (long i : l) {\n    \
    \    if (i > max) {\n            max = i;\n        }\n    }\n    return max;",
  "    long max_val = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if\
    \ (l[i] > max_val) {\n            max_val = l[i];\n        }\n    }\n    return\
    \ max_val;", "    long max_val = l[0];\n    for (long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] > max_val) {\n            max_val = l[i];\n        }\n \
    \   }\n    return max_val;", "    long max_val = l[0];\n    for (long i = 1; i\
    \ < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val = l[i];\n\
    \        }\n    }\n    return max_val;", "    long max_val = l[0];\n    for (long\
    \ i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n            max_val\
    \ = l[i];\n        }\n    }\n    return max_val;", "    long max_val = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val) {\n  \
    \          max_val = l[i];\n        }\n    }\n    return max_val;", "    long\
    \ max = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max\
    \ = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max)\
    \ {\n            max = l[i];\n        }\n    }\n    return max;", "    long max_val\
    \ = l[0];\n    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max_val)\n\
    \            max_val = l[i];\n    }\n    return max_val;", "    long max = l[0];\n\
    \    for (long i = 1; i < l.size(); i++) {\n        if (l[i] > max) {\n      \
    \      max = l[i];\n        }\n    }\n    return max;"]
stop_tokens:
- "\n}"

language: cpp
name: HumanEval_5_intersperse
results:
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    long temp = 0;\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        temp = temp + numbers[i];\n\
    \        if (i != numbers.size() - 1) {\n            result.push_back(temp);\n\
    \            temp = 0;\n        }\n    }\n    if (temp != 0) {\n        result.push_back(temp);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpcvt9wjdk.cpp: In function 'int main()':\n/tmp/tmpcvt9wjdk.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpcvt9wjdk.cpp:2:\n/tmp/tmpcvt9wjdk.cpp:25:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpcvt9wjdk.cpp:26:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpcvt9wjdk.cpp:26:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpcvt9wjdk.cpp:26:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpcvt9wjdk.cpp:26:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpcvt9wjdk.cpp:26:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpcvt9wjdk.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (auto &number : numbers)\
    \ {\n        result.push_back(number);\n        result.push_back(delimeter);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp077x4jtt.cpp: In function 'std::vector<long int> intersperse(std::vector<long\
    \ int>, long int)':\n/tmp/tmp077x4jtt.cpp:10:16: error: ISO C++ forbids declaration\
    \ of 'number' with no type [-fpermissive]\n     for (auto &number : numbers) {\n\
    \                ^\n/tmp/tmp077x4jtt.cpp:10:25: error: range-based 'for' loops\
    \ are not allowed in C++98 mode\n     for (auto &number : numbers) {\n       \
    \                  ^\n/tmp/tmp077x4jtt.cpp: In function 'int main()':\n/tmp/tmp077x4jtt.cpp:17:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp077x4jtt.cpp:2:\n/tmp/tmp077x4jtt.cpp:18:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp077x4jtt.cpp:19:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp077x4jtt.cpp:19:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp077x4jtt.cpp:19:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp077x4jtt.cpp:19:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp077x4jtt.cpp:19:77: note: candidates are:\nIn file included from /us"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    for (long i = 0; i < numbers.size();\
    \ i++) {\n        result.push_back(numbers[i]);\n        if (i != numbers.size()\
    \ - 1) {\n            result.push_back(delimeter);\n        }\n    }\n    return\
    \ result;\n}\nint main() {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvam6x_fh.cpp: In function 'int main()':\n/tmp/tmpvam6x_fh.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvam6x_fh.cpp:2:\n/tmp/tmpvam6x_fh.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpvam6x_fh.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpvam6x_fh.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpvam6x_fh.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvam6x_fh.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvam6x_fh.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvam6x_fh.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgp7gg6xy.cpp: In function 'int main()':\n/tmp/tmpgp7gg6xy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgp7gg6xy.cpp:2:\n/tmp/tmpgp7gg6xy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpgp7gg6xy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpgp7gg6xy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpgp7gg6xy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpgp7gg6xy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpgp7gg6xy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpgp7gg6xy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgp7gg6xy.cpp: In function 'int main()':\n/tmp/tmpgp7gg6xy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgp7gg6xy.cpp:2:\n/tmp/tmpgp7gg6xy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpgp7gg6xy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpgp7gg6xy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpgp7gg6xy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpgp7gg6xy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpgp7gg6xy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpgp7gg6xy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1, j = numbers.size(); i <= j; i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpljje99ym.cpp: In function 'int main()':\n/tmp/tmpljje99ym.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpljje99ym.cpp:2:\n/tmp/tmpljje99ym.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpljje99ym.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpljje99ym.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpljje99ym.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpljje99ym.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpljje99ym.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpljje99ym.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    long last = 0;\n    for\
    \ (long i = 0; i < numbers.size(); i++) {\n        if (i != 0) {\n           \
    \ result.push_back(last);\n        }\n        last = numbers[i];\n        result.push_back(last);\n\
    \    }\n    if (result.size() % 2 != 0) {\n        result.push_back(last);\n \
    \   }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmprt6b3918.cpp: In function 'int main()':\n/tmp/tmprt6b3918.cpp:24:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmprt6b3918.cpp:2:\n/tmp/tmprt6b3918.cpp:25:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmprt6b3918.cpp:26:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmprt6b3918.cpp:26:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmprt6b3918.cpp:26:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmprt6b3918.cpp:26:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmprt6b3918.cpp:26:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmprt6b3918.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers[i]);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vnc8lsq.cpp: In function 'int main()':\n/tmp/tmp3vnc8lsq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3vnc8lsq.cpp:2:\n/tmp/tmp3vnc8lsq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp3vnc8lsq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp3vnc8lsq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp3vnc8lsq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3vnc8lsq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3vnc8lsq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp3vnc8lsq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers[i]);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vnc8lsq.cpp: In function 'int main()':\n/tmp/tmp3vnc8lsq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3vnc8lsq.cpp:2:\n/tmp/tmp3vnc8lsq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp3vnc8lsq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp3vnc8lsq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp3vnc8lsq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3vnc8lsq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3vnc8lsq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp3vnc8lsq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers.front());\n\
    \    for (long i = numbers.size(); i > 0; i -= 2) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers.at(i));\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvzjbav5t.cpp: In function 'int main()':\n/tmp/tmpvzjbav5t.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpvzjbav5t.cpp:2:\n/tmp/tmpvzjbav5t.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpvzjbav5t.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpvzjbav5t.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpvzjbav5t.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpvzjbav5t.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpvzjbav5t.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpvzjbav5t.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (size_t i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9ba_8uy.cpp: In function 'int main()':\n/tmp/tmpv9ba_8uy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv9ba_8uy.cpp:2:\n/tmp/tmpv9ba_8uy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpv9ba_8uy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpv9ba_8uy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpv9ba_8uy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpv9ba_8uy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpv9ba_8uy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpv9ba_8uy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgp7gg6xy.cpp: In function 'int main()':\n/tmp/tmpgp7gg6xy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgp7gg6xy.cpp:2:\n/tmp/tmpgp7gg6xy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpgp7gg6xy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpgp7gg6xy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpgp7gg6xy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpgp7gg6xy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpgp7gg6xy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpgp7gg6xy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    long size = numbers.size();\n\
    \    long i = 0;\n    while (i < size) {\n        result.push_back(numbers[i]);\n\
    \        i += 1;\n        if (i < size) {\n            result.push_back(delimeter);\n\
    \        }\n    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp9bkr8228.cpp: In function 'int main()':\n/tmp/tmp9bkr8228.cpp:22:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp9bkr8228.cpp:2:\n/tmp/tmp9bkr8228.cpp:23:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp9bkr8228.cpp:24:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp9bkr8228.cpp:24:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp9bkr8228.cpp:24:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp9bkr8228.cpp:24:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp9bkr8228.cpp:24:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp9bkr8228.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (size_t i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpv9ba_8uy.cpp: In function 'int main()':\n/tmp/tmpv9ba_8uy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpv9ba_8uy.cpp:2:\n/tmp/tmpv9ba_8uy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpv9ba_8uy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpv9ba_8uy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpv9ba_8uy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpv9ba_8uy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpv9ba_8uy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpv9ba_8uy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n        result.push_back(numbers[i]);\n\
    \    }\n    return result;\n}\nint main() {\n    auto candidate = intersperse;\n\
    \    assert(candidate((std::vector<long>()), (7)) == (std::vector<long>()));\n\
    \    assert(candidate((std::vector<long>({(long)5, (long)6, (long)3, (long)2})),\
    \ (8)) == (std::vector<long>({(long)5, (long)8, (long)6, (long)8, (long)3, (long)8,\
    \ (long)2})));\n    assert(candidate((std::vector<long>({(long)2, (long)2, (long)2})),\
    \ (2)) == (std::vector<long>({(long)2, (long)2, (long)2, (long)2, (long)2})));\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmpgp7gg6xy.cpp: In function 'int main()':\n/tmp/tmpgp7gg6xy.cpp:19:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmpgp7gg6xy.cpp:2:\n/tmp/tmpgp7gg6xy.cpp:20:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmpgp7gg6xy.cpp:21:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmpgp7gg6xy.cpp:21:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmpgp7gg6xy.cpp:21:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmpgp7gg6xy.cpp:21:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmpgp7gg6xy.cpp:21:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmpgp7gg6xy.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8xqcc4tq.cpp: In function 'int main()':\n/tmp/tmp8xqcc4tq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8xqcc4tq.cpp:2:\n/tmp/tmp8xqcc4tq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp8xqcc4tq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp8xqcc4tq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp8xqcc4tq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8xqcc4tq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp8xqcc4tq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8xqcc4tq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1, n = numbers.size(); i < n; ++i) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers[i]);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptu8wrgm4.cpp: In function 'int main()':\n/tmp/tmptu8wrgm4.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmptu8wrgm4.cpp:2:\n/tmp/tmptu8wrgm4.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmptu8wrgm4.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmptu8wrgm4.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmptu8wrgm4.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmptu8wrgm4.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmptu8wrgm4.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmptu8wrgm4.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8xqcc4tq.cpp: In function 'int main()':\n/tmp/tmp8xqcc4tq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8xqcc4tq.cpp:2:\n/tmp/tmp8xqcc4tq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp8xqcc4tq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp8xqcc4tq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp8xqcc4tq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8xqcc4tq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp8xqcc4tq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8xqcc4tq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(delimeter);\n\
    \        result.push_back(numbers[i]);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3vnc8lsq.cpp: In function 'int main()':\n/tmp/tmp3vnc8lsq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp3vnc8lsq.cpp:2:\n/tmp/tmp3vnc8lsq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp3vnc8lsq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp3vnc8lsq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp3vnc8lsq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp3vnc8lsq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp3vnc8lsq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp3vnc8lsq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// Insert a number 'delimeter'\
    \ between every two consecutive elements of input list `numbers'\n// >>> intersperse((std::vector<long>()),\
    \ (4))\n// (std::vector<long>())\n// >>> intersperse((std::vector<long>({(long)1,\
    \ (long)2, (long)3})), (4))\n// (std::vector<long>({(long)1, (long)4, (long)2,\
    \ (long)4, (long)3}))\nstd::vector<long> intersperse(std::vector<long> numbers,\
    \ long delimeter) {\n    std::vector<long> result;\n    result.push_back(numbers[0]);\n\
    \    for (long i = 1; i < numbers.size(); i++) {\n        result.push_back(numbers[i]);\n\
    \        result.push_back(delimeter);\n    }\n    return result;\n}\nint main()\
    \ {\n    auto candidate = intersperse;\n    assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n    assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)2, (long)2})), (2)) == (std::vector<long>({(long)2, (long)2, (long)2,\
    \ (long)2, (long)2})));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp8xqcc4tq.cpp: In function 'int main()':\n/tmp/tmp8xqcc4tq.cpp:18:10:\
    \ error: 'candidate' does not name a type\n     auto candidate = intersperse;\n\
    \          ^\nIn file included from /usr/include/c++/4.8.2/cassert:43:0,\n   \
    \              from /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:33,\n\
    \                 from /tmp/tmp8xqcc4tq.cpp:2:\n/tmp/tmp8xqcc4tq.cpp:19:48: error:\
    \ 'candidate' was not declared in this scope\n     assert(candidate((std::vector<long>()),\
    \ (7)) == (std::vector<long>()));\n                                          \
    \      ^\n/tmp/tmp8xqcc4tq.cpp:20:40: warning: extended initializer lists only\
    \ available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \               ^\n/tmp/tmp8xqcc4tq.cpp:20:77: warning: extended initializer lists\
    \ only available with -std=c++11 or -std=gnu++11 [enabled by default]\n     assert(candidate((std::vector<long>({(long)5,\
    \ (long)6, (long)3, (long)2})), (8)) == (std::vector<long>({(long)5, (long)8,\
    \ (long)6, (long)8, (long)3, (long)8, (long)2})));\n                         \
    \                                                    ^\n/tmp/tmp8xqcc4tq.cpp:20:77:\
    \ warning: extended initializer lists only available with -std=c++11 or -std=gnu++11\
    \ [enabled by default]\n/tmp/tmp8xqcc4tq.cpp:20:77: error: no matching function\
    \ for call to 'std::vector<long int>::vector(<brace-enclosed initializer list>)'\n\
    /tmp/tmp8xqcc4tq.cpp:20:77: note: candidates are:\nIn file included from /usr/include/c++/4.8.2/vector:64:0,\n\
    \                 from /usr/include/c++/4.8.2/queue:61,\n                 from\
    \ /usr/include/c++/4.8.2/x86_64-redhat-linux/bits/stdc++.h:85,\n             \
    \    from /tmp/tmp8xqcc4tq.cpp:2:\n/usr/include/c++/4.8.2/bits/stl_vector.h:398:9:\
    \ note: template<class _InputIterator> std::vector<_Tp, _Alloc>::vector(_InputIterator,\
    \ _InputIterator, const allocator_type&)\n         vector(_InputI"
  stdout: ''

language: cpp
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    if (n == 0)\n        return false;\n    long long sum = 0;\n    for (long\
    \ long i = 0; i < n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\n\
    \        return false;\n    long long sum2 = 0;\n    for (long long i = 0; i <\
    \ n; i++) {\n        sum2 += l[i];\n    }\n    if (sum2 == 0)\n        return\
    \ true;\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpixvvo541: /tmp/tmpixvvo541.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 0) {\n        return\
    \ false;\n    }\n    long long int sum2 = 0;\n    for (long long int i : l) {\n\
    \        sum2 += i;\n    }\n    if (sum == sum2) {\n        return true;\n   \
    \ }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpno3p_um4: /tmp/tmpno3p_um4.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 0) {\n        return false;\n\
    \    }\n    long long int max_sum = sum;\n    for (long long int i : l) {\n  \
    \      if (i != 0) {\n            max_sum -= i;\n        }\n    }\n    if (max_sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpiqd0ewbb: /tmp/tmpiqd0ewbb.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (sum == i) {\n \
    \           count++;\n        }\n    }\n    if (count == 2) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpk5652p2b: /tmp/tmpk5652p2b.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        if (sum == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmppc0w4e2g: /tmp/tmppc0w4e2g.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return false;\n    long long int sum2 = 0;\n    for (long long\
    \ int i : l) {\n        sum2 += i;\n        if (sum2 == sum)\n            return\
    \ false;\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7le7fn6u: /tmp/tmp7le7fn6u.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 1) {\n        return\
    \ false;\n    }\n    long long int sum2 = 0;\n    for (long long int i : l) {\n\
    \        sum2 += i;\n    }\n    if (sum == sum2) {\n        return true;\n   \
    \ }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgvxumkgn: /tmp/tmpgvxumkgn.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n\
    \        if (sum == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == l.size()) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa003wpir: /tmp/tmpa003wpir.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmph_hq8pz9: /tmp/tmph_hq8pz9.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Write your code\
    \ here.\n    long long sum = 0;\n    long long count = 0;\n    for (long long\
    \ i = 0; i < l.size(); i++) {\n        sum += l[i];\n        if (sum == 0) {\n\
    \            count++;\n        }\n    }\n    if (count == 2) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp8d7yuy_e: /tmp/tmp8d7yuy_e.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 0) {\n        return false;\n\
    \    }\n    long long int sum2 = 0;\n    for (long long int i : l) {\n       \
    \ sum2 += i;\n    }\n    if (sum == sum2) {\n        return true;\n    }\n   \
    \ return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n  \
    \  assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpiaynyq1h: /tmp/tmpiaynyq1h.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    long long zero = 0;\n    long long temp;\n    for\
    \ (int i = 0; i < n; i++) {\n        temp = l[i];\n        sum += temp;\n    \
    \    if (sum == zero) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpx6wf9u6j: /tmp/tmpx6wf9u6j.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int prev_sum = 0;\n   \
    \ for (long long int i : l) {\n        long long int new_sum = sum - prev_sum;\n\
    \        if (new_sum == 0) {\n            return true;\n        }\n        prev_sum\
    \ = new_sum;\n    }\n    return false;\n}\nint main() {\n    auto candidate =\
    \ pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqymgo44i: /tmp/tmpqymgo44i.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n \
    \       if (ans == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7fvnd7li: /tmp/tmp7fvnd7li.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 0) {\n        return false;\n\
    \    }\n    for (long long int i : l) {\n        if (i != 0) {\n            sum\
    \ += i;\n        }\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpig2am9_0: /tmp/tmpig2am9_0.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (int i = 0; i < n; i++) {\n        ans += l[i];\n        if (ans\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbsxn7lfg: /tmp/tmpbsxn7lfg.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (int i = 0; i < n; i++) {\n        ans += l[i];\n        if (ans\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbsxn7lfg: /tmp/tmpbsxn7lfg.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Write your code\
    \ here\n    long long sum = 0;\n    long long count = 0;\n    for (long long i\
    \ : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count == 1) {\n\
    \        return false;\n    }\n    if (sum == 0) {\n        return true;\n   \
    \ }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpn92q2muu: /tmp/tmpn92q2muu.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 1;\n    for (long long\
    \ i : l) {\n        ans *= i;\n    }\n    ans /= sum;\n    return ans == 0;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd2_6nzdx: /tmp/tmpd2_6nzdx.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpk4_86729: /tmp/tmpk4_86729.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long zero\
    \ = 0;\n    for (long long i : l) {\n        zero += i;\n    }\n    if (sum ==\
    \ zero) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjuiydc1o: /tmp/tmpjuiydc1o.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    int m = n - 1;\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n   \
    \     sum += l[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    for (int i = 0;\
    \ i < m; i++) {\n        sum += l[i];\n        if (sum < 0) {\n            sum\
    \ = 0;\n        }\n    }\n    if (sum == 0) {\n        return true;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0wzjo3ft: /tmp/tmp0wzjo3ft.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpk4_86729: /tmp/tmpk4_86729.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int zero = 0;\n    for (long long int i : l) {\n       \
    \ sum += i;\n        if (sum == zero) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1vjj0_n8: /tmp/tmp1vjj0_n8.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    if (n == 0)\n        return false;\n    int sum = 0;\n    for (int i = 0;\
    \ i < n; i++) {\n        sum += l[i];\n    }\n    if (sum == 0)\n        return\
    \ false;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        sum +=\
    \ l[i];\n        if (sum == 0)\n            count++;\n    }\n    if (count ==\
    \ 0)\n        return false;\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmppwe07f_y: /tmp/tmppwe07f_y.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwfq35b57: /tmp/tmpwfq35b57.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        count += i;\n        if (count == sum) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp27lb2bdu: /tmp/tmp27lb2bdu.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    for (long long i : l) {\n        sum += i;\n\
    \    }\n    if (sum == 0)\n        return true;\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_tfd0uod: /tmp/tmp_tfd0uod.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        count += i;\n        if (sum - count < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjk6ltox_: /tmp/tmpjk6ltox_.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpe44mowr7: /tmp/tmpe44mowr7.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 1;\n    for (long long\
    \ i : l) {\n        ans *= i;\n    }\n    ans /= sum;\n    return ans == 0;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd2_6nzdx: /tmp/tmpd2_6nzdx.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n \
    \       if (ans > 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp83bl7jt4: /tmp/tmp83bl7jt4.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    long long count = 0;\n    for (long long i\
    \ = 0; i < l.size(); i++) {\n        sum += l[i];\n        if (sum == 0) {\n \
    \           count++;\n        }\n    }\n    if (count == 2) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0cixwz14: /tmp/tmp0cixwz14.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        count += i;\n        if (count == sum) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp27lb2bdu: /tmp/tmp27lb2bdu.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (int i = 0; i < n; i++) {\n        ans += l[i];\n        if (ans\
    \ == 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbsxn7lfg: /tmp/tmpbsxn7lfg.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return false;\n    long long int ans = 0;\n    for (long long\
    \ int i : l) {\n        ans += i;\n        if (ans == sum)\n            return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpb_mbade0: /tmp/tmpb_mbade0.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        count += i;\n        if (count == sum) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp27lb2bdu: /tmp/tmp27lb2bdu.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    if (n == 0)\n        return true;\n    int sum = 0;\n    for (int i = 0;\
    \ i < n; i++) {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++)\
    \ {\n        for (int j = i + 1; j < n; j++) {\n            if (l[i] + l[j] ==\
    \ sum)\n                return false;\n        }\n    }\n    return true;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcbzeu82n: /tmp/tmpcbzeu82n.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 0) {\n        return false;\n\
    \    }\n    long long int sum2 = 0;\n    for (long long int i : l) {\n       \
    \ sum2 += i;\n    }\n    if (sum2 == 0) {\n        return true;\n    }\n    if\
    \ (sum > sum2) {\n        return false;\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpi4dvqhgt: /tmp/tmpi4dvqhgt.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n\
    \        if (sum == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == l.size()) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa003wpir: /tmp/tmpa003wpir.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return false;\n   \
    \ }\n    long long count = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n        if (sum == 0) {\n            count++;\n       \
    \ }\n    }\n    if (count == l.size()) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa0mczl2d: /tmp/tmpa0mczl2d.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int zero = 0;\n    for (long long int i : l) {\n       \
    \ sum += i;\n        if (sum == zero) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1vjj0_n8: /tmp/tmp1vjj0_n8.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum2 == 0) {\n \
    \       return true;\n    }\n    if (sum < 0 && sum2 > 0) {\n        return false;\n\
    \    }\n    if (sum > 0 && sum2 < 0) {\n        return false;\n    }\n    if (sum\
    \ == sum2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpw5tq2s_7: /tmp/tmpw5tq2s_7.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int max_sum = 0;\n    for\
    \ (long long int i : l) {\n        max_sum = std::max(max_sum, i);\n    }\n  \
    \  for (long long int i : l) {\n        if (i != 0) {\n            if (max_sum\
    \ - sum != i) {\n                return false;\n            }\n        }\n   \
    \ }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpdo05fvrj: /tmp/tmpdo05fvrj.cpp:42: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long zero = 0;\n    for (long long\
    \ i : l) {\n        zero += i;\n    }\n    if (zero == 0) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpc2ggl3g0: /tmp/tmpc2ggl3g0.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum < 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (int i = 0; i < n; i++) {\n        ans += l[i];\n        if (ans\
    \ > 0) {\n            return false;\n        }\n    }\n    return true;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpci5d0h46: /tmp/tmpci5d0h46.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ false;\n        }\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpk4_86729: /tmp/tmpk4_86729.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\n\
    \        return false;\n    long long count = 0;\n    for (long long i : l) {\n\
    \        count += i;\n        if (sum == count)\n            return true;\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0g74g5ci: /tmp/tmp0g74g5ci.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum == 0) {\n        return false;\n    }\n    long long sum2\
    \ = 0;\n    for (int i = 0; i < n; i++) {\n        sum2 += l[i];\n    }\n    if\
    \ (sum2 == 0) {\n        return true;\n    }\n    if (sum < 0 && sum2 > 0) {\n\
    \        return false;\n    }\n    if (sum > 0 && sum2 < 0) {\n        return\
    \ false;\n    }\n    long long sum3 = 0;\n    for (int i = 0; i < n; i++) {\n\
    \        sum3 += l[i];\n    }\n    if (sum3 == 0) {\n        return true;\n  \
    \  }\n    if (sum < 0 && sum3 > 0) {\n        return false;\n    }\n    if (sum\
    \ > 0 && sum3 < 0) {\n        return false;\n    }\n    long long sum4 = 0;\n\
    \    for (int i = 0; i < n; i++) {\n        sum4 += l[i];\n    }\n    if (sum4\
    \ == 0) {\n        return true;\n    }\n    if (sum < 0 && sum4 > 0) {\n     \
    \   return false;\n    }\n    if (sum > 0 && sum4 < 0) {\n        return false;\n\
    \    }\n    long long sum5 = 0;\n    for (int i = 0; i < n; i++) {\n        sum5\
    \ += l[i];\n    }\n    if (sum5 == 0) {\n        return true;\n    }\n    if (sum\
    \ < 0 && sum5 > 0) {\n        return false;\n    }\n    if (sum > 0 && sum5 <\
    \ 0) {\n        return false;\n    }\n    long long sum6 = 0;\n    for (int i\
    \ = 0; i < n; i++) {\n        sum6 += l[i];\n    }\n    if (sum6 == 0) {\n   \
    \     return true;\n    }\n    if (sum < 0 && sum6 > 0) {\n        return false;\n\
    \    }\n    if (sum > 0 && sum6 < 0) {\n        return false;\n    }\n    long\
    \ long sum7 = 0;\n    for (int i = 0; i < n; i++) {\n        sum7 += l[i];\n \
    \   }\n    if (sum7 == 0) {\n        return true;\n    }\n    if (sum < 0 && sum7\
    \ > 0) {\n        return false;\n    }\n    if (sum > 0 && sum7 < 0) {\n     \
    \   return false;\n    }\n    long long sum8 = 0;\n    for (int i = 0; i < n;\
    \ i++) {\n        sum8 += l[i];\n    }\n    if (sum8 == 0) {\n        return true;\n\
    \    }\n    if (sum < 0 && sum8 > 0) {\n        return false;\n    }\n    if (sum\
    \ > 0 && sum8 < 0) {\n        return false;\n    }\n    long long sum9 = 0;\n\
    \    for (int i = 0; i < n; i++) {\n        sum9 += l[i];\n    }\n    if (sum9\
    \ == 0) {\n        return true;\n    }\n    if (sum < 0 && sum9 > 0) {\n     \
    \   return false;\n    }\n    if (sum > 0 && sum9 < 0) {\n        return false;\n\
    \    }\n    long long sum10 = 0;\n    for (int i = 0; i < n; i++) {\n        sum10\
    \ += l[i];\n    }\n    if (sum10 == 0) {\n        return true;\n    }\n    if\
    \ (sum < 0 && sum10 > 0) {\n        return false;\n    }\n    if (sum > 0 && \n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptsnaj414.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmptsnaj414.cpp:140:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  140 | }\n      | ^\n/tmp/tmptsnaj414.cpp:139:19:\
    \ error: expected \u2018)\u2019 before \u2018}\u2019 token\n  139 |     if (sum\
    \ > 0 &&\n      |        ~          ^\n      |                   )\n  140 | }\n\
    \      | ~                  \n/tmp/tmptsnaj414.cpp:140:1: error: expected primary-expression\
    \ before \u2018}\u2019 token\n  140 | }\n      | ^\n/tmp/tmptsnaj414.cpp:140:1:\
    \ warning: control reaches end of non-void function [-Wreturn-type]\n  140 | }\n\
    \      | ^\n"
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 1;\n    for (long long i = 0; i < l.size(); i++) {\n        ans *= (long long)i;\n\
    \        ans %= sum;\n    }\n    if (ans == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp86tt3d0m: /tmp/tmp86tt3d0m.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long count\
    \ = 0;\n    for (long long i : l) {\n        count += i;\n        if (sum == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpndl2wb9s: /tmp/tmpndl2wb9s.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    long long count = 0;\n    for (long long i = 0; i < l.size(); i++)\
    \ {\n        if (l[i] == 0) {\n            count++;\n        }\n    }\n    if\
    \ (count == 0) {\n        return false;\n    }\n    long long sum2 = 0;\n    for\
    \ (long long i = 0; i < l.size(); i++) {\n        sum2 += l[i];\n    }\n    if\
    \ (sum == sum2) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp_h80rjq5: /tmp/tmp_h80rjq5.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    long long int sum = 0;\n    for(long long int i : l) {\n        sum += i;\n\
    \    }\n    long long int count = 0;\n    for(long long int i : l) {\n       \
    \ if(sum == i) {\n            count++;\n        }\n    }\n    if(count == 2) {\n\
    \        return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp5jvbjhvc: /tmp/tmp5jvbjhvc.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i != 0) {\n   \
    \         count += 1;\n        }\n    }\n    if (count == 0) {\n        return\
    \ false;\n    }\n    long long int max_sum = 0;\n    for (long long int i : l)\
    \ {\n        max_sum = std::max(max_sum, i);\n    }\n    if (max_sum == 0) {\n\
    \        return false;\n    }\n    long long int min_sum = 0;\n    for (long long\
    \ int i : l) {\n        min_sum = std::min(min_sum, i);\n    }\n    if (min_sum\
    \ == 0) {\n        return false;\n    }\n    for (long long int i : l) {\n   \
    \     if (i != 0) {\n            long long int diff = i - sum;\n            if\
    \ (diff == 0) {\n                return true;\n            }\n            if (diff\
    \ > 0) {\n                if (diff > max_sum) {\n                    return false;\n\
    \                }\n            } else {\n                if (diff < min_sum)\
    \ {\n                    return false;\n                }\n            }\n   \
    \     }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpg0f4m7il: /tmp/tmpg0f4m7il.cpp:66: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int count = 0;\n    for\
    \ (long long int i : l) {\n        count += i;\n        if (sum == count) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa8eq1tic: /tmp/tmpa8eq1tic.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int count = 0;\n    for\
    \ (long long int i : l) {\n        count += i;\n        if (count == sum) {\n\
    \            return true;\n        }\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpw0mexipo: /tmp/tmpw0mexipo.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 1) {\n        return false;\n\
    \    }\n    long long int max_sum = sum;\n    for (long long int i : l) {\n  \
    \      if (max_sum - i < 0) {\n            return false;\n        }\n        max_sum\
    \ -= i;\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpt5de43v8: /tmp/tmpt5de43v8.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)2, (long)3, (long)7}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n        if (sum2 == sum) {\n  \
    \          return true;\n        }\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyfckn1b7: /tmp/tmpyfckn1b7.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return true;\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpwfq35b57: /tmp/tmpwfq35b57.cpp:30: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0)\n        return false;\n    int count = 0;\n    for (int\
    \ i = 0; i < n; i++) {\n        sum += l[i];\n        if (sum == 0) {\n      \
    \      count++;\n        }\n    }\n    return count == 2;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpoko9iw_t: /tmp/tmpoko9iw_t.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for(long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        count += i;\n      \
    \  if(sum == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmprni5qk77: /tmp/tmprni5qk77.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         count++;\n        }\n    }\n    if (count == 1) {\n        return false;\n\
    \    }\n    long long int max_sum = sum;\n    for (long long int i : l) {\n  \
    \      max_sum = std::max(max_sum, i);\n    }\n    long long int min_sum = sum;\n\
    \    for (long long int i : l) {\n        min_sum = std::min(min_sum, i);\n  \
    \  }\n    if (max_sum == min_sum) {\n        return false;\n    }\n    long long\
    \ int max_diff = max_sum - min_sum;\n    for (long long int i : l) {\n       \
    \ if (max_diff == 0) {\n            return false;\n        }\n        max_diff\
    \ -= i;\n    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxfi92pgy: /tmp/tmpxfi92pgy.cpp:53: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (i == 0) {\n   \
    \         continue;\n        }\n        long long int temp = sum - i;\n      \
    \  if (temp == 0) {\n            count++;\n        }\n    }\n    if (count ==\
    \ 2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpcuqav0xl: /tmp/tmpcuqav0xl.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 0) {\n        return\
    \ false;\n    }\n    long long int max_sum = sum;\n    for (long long int i :\
    \ l) {\n        max_sum = std::max(max_sum, i);\n    }\n    if (max_sum == 0)\
    \ {\n        return true;\n    }\n    for (long long int i : l) {\n        if\
    \ (i != 0) {\n            long long int j = sum - i;\n            if (j == max_sum)\
    \ {\n                return true;\n            }\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp847q02h4: /tmp/tmp847q02h4.cpp:48: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 1) return false;\n\
    \    long long int max_sum = sum;\n    for (long long int i : l) {\n        max_sum\
    \ = std::max(max_sum, i);\n    }\n    for (long long int i : l) {\n        if\
    \ (max_sum - i == 0) return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpt_vxbrvg: /tmp/tmpt_vxbrvg.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int max_sum = sum;\n  \
    \  for (long long int i : l) {\n        max_sum = std::max(max_sum, i);\n    }\n\
    \    if (max_sum == 0) {\n        return false;\n    }\n    for (long long int\
    \ i : l) {\n        if (i != 0) {\n            if (sum - i == 0) {\n         \
    \       return true;\n            }\n        }\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpv03cdcow: /tmp/tmpv03cdcow.cpp:43: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for(long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        if(i != 0) {\n     \
    \       count += 1;\n        }\n    }\n    return count == 0;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6ma6_ygw: /tmp/tmp6ma6_ygw.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        if (l[i] == 0)\
    \ {\n            count++;\n        }\n    }\n    if (count == l.size()) {\n  \
    \      return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgp8ufcem: /tmp/tmpgp8ufcem.cpp:40: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int sum2 = 0;\n    for (long long int i : l) {\n       \
    \ sum += i;\n        sum2 += i;\n    }\n    if (sum == 0 && sum2 == 0) {\n   \
    \     return true;\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpofp0hw3p: /tmp/tmpofp0hw3p.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long int sum = 0;\n    long long int sum2 = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        sum2 += i;\n    }\n    if (sum\
    \ == sum2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpfhcsnoln: /tmp/tmpfhcsnoln.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long int sum = 0;\n    long long int count = 0;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count\
    \ == 1) {\n        return false;\n    }\n    if (sum == 0) {\n        return true;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbz_9t7ib: /tmp/tmpbz_9t7ib.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return false;\n    long long int ans = 0;\n    for (long long\
    \ int i : l) {\n        ans += i;\n        if (ans == 0)\n            return false;\n\
    \    }\n    return true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpsa58kliv: /tmp/tmpsa58kliv.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: 1
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int n = l.size();\n    long long int max_sum = std::accumulate(l.begin(),\
    \ l.end(), 0);\n    long long int min_sum = std::accumulate(l.begin(), l.end(),\
    \ 0);\n    long long int max_difference = max_sum - min_sum;\n    long long int\
    \ min_difference = min_sum - max_sum;\n    long long int max_difference2 = max_difference\
    \ * max_difference;\n    long long int min_difference2 = min_difference * min_difference;\n\
    \    long long int max_difference3 = max_difference2 * max_difference2;\n    long\
    \ long int min_difference3 = min_difference2 * min_difference2;\n    long long\
    \ int max_difference4 = max_difference3 * max_difference3;\n    long long int\
    \ min_difference4 = min_difference3 * min_difference3;\n    long long int max_difference5\
    \ = max_difference4 * max_difference4;\n    long long int min_difference5 = min_difference4\
    \ * min_difference4;\n    long long int max_difference6 = max_difference5 * max_difference5;\n\
    \    long long int min_difference6 = min_difference5 * min_difference5;\n    long\
    \ long int max_difference7 = max_difference6 * max_difference6;\n    long long\
    \ int min_difference7 = min_difference6 * min_difference6;\n    long long int\
    \ max_difference8 = max_difference7 * max_difference7;\n    long long int min_difference8\
    \ = min_difference7 * min_difference7;\n    long long int max_difference9 = max_difference8\
    \ * max_difference8;\n    long long int min_difference9 = min_difference8 * min_difference8;\n\
    \    long long int max_difference10 = max_difference9 * max_difference9;\n   \
    \ long long int min_difference10 = min_difference9 * min_difference9;\n    long\
    \ long int max_difference11 = max_difference10 * max_difference10;\n    long long\
    \ int min_difference11 = min_difference10 * min_difference10;\n    long long int\
    \ max_difference12 = max_difference11 * max_difference11;\n    long long int min_difference12\
    \ = min_difference11 * min_difference11;\n    long long int max_difference13 =\
    \ max_difference12 * max_difference12;\n    long long int min_difference13 = min_difference12\
    \ * min_difference12;\n    long long int max_difference14 = max_difference13 *\
    \ max_difference13;\n    long long int min_difference14 = min_difference13 * min_difference13;\n\
    \    long long int max_difference15 = max_difference14 * max_difference14;\n \
    \   long long int min_difference15 = min_difference14 * min_difference14;\n  \
    \  long long int max_difference16 = max_difference15 * max_difference15;\n   \
    \ long long int min_difference\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy9y1f5_b.cpp: In function \u2018bool pairs_sum_to_zero(std::vector<long\
    \ int>)\u2019:\n/tmp/tmpy9y1f5_b.cpp:53:1: error: expected initializer before\
    \ \u2018}\u2019 token\n   53 | }\n      | ^\n/tmp/tmpy9y1f5_b.cpp:53:1: warning:\
    \ no return statement in function returning non-void [-Wreturn-type]\n"
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        count += i;\n     \
    \   if (sum == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuja88ja5: /tmp/tmpuja88ja5.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078406
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for (long long int i : l) {\n        if (sum - i == 0) {\n\
    \            count++;\n        }\n    }\n    return count == 2;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpqc6z3xqn: /tmp/tmpqc6z3xqn.cpp:34: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\n\
    \        return false;\n    long long ans = 0;\n    for (long long i : l) {\n\
    \        ans += i;\n        if (ans == 0)\n            return true;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpmohgk2oo: /tmp/tmpmohgk2oo.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n \
    \       if (ans == 0) {\n            return true;\n        }\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp7fvnd7li: /tmp/tmp7fvnd7li.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    long long count = 0;\n    for (long long i\
    \ = 0; i < l.size(); i++) {\n        sum += l[i];\n        if (sum == 0) {\n \
    \           count++;\n        }\n    }\n    if (count == 2) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0cixwz14: /tmp/tmp0cixwz14.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int max_sum = sum;\n  \
    \  for (long long int i : l) {\n        max_sum = std::max(max_sum, i);\n    }\n\
    \    if (max_sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxaegouq9: /tmp/tmpxaegouq9.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum2 == 0) {\n \
    \       return true;\n    }\n    if (sum == sum2) {\n        return true;\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpko0wrp3d: /tmp/tmpko0wrp3d.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        count += i;\n        if (sum - count < 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjk6ltox_: /tmp/tmpjk6ltox_.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    int m = n - 1;\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n   \
    \     sum += l[i];\n        if (sum < 0) {\n            sum = 0;\n        }\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    for (int i = 0;\
    \ i < m; i++) {\n        sum += l[i];\n        if (sum < 0) {\n            sum\
    \ = 0;\n        }\n    }\n    if (sum == 0) {\n        return true;\n    }\n \
    \   return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0wzjo3ft: /tmp/tmp0wzjo3ft.cpp:45: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum2 == 0) {\n \
    \       return true;\n    }\n    if (sum > 0 && sum2 > 0) {\n        return sum\
    \ == sum2;\n    }\n    if (sum < 0 && sum2 < 0) {\n        return sum == sum2;\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxn6qdiy4: /tmp/tmpxn6qdiy4.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long zero\
    \ = 0;\n    for (long long i : l) {\n        zero += i;\n    }\n    if (sum ==\
    \ zero) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjuiydc1o: /tmp/tmpjuiydc1o.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int zero = 0;\n    for (long long int i : l) {\n       \
    \ sum += i;\n        if (sum == zero) {\n            return true;\n        }\n\
    \    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp1vjj0_n8: /tmp/tmp1vjj0_n8.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // write your code\
    \ here\n    long long sum = 0;\n    for (long long i = 0; i < l.size(); i++) {\n\
    \        sum += l[i];\n    }\n    if (sum == 0) {\n        return true;\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpe44mowr7: /tmp/tmpe44mowr7.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078404
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n \
    \       if (ans == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd2y3cq31: /tmp/tmpd2y3cq31.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n}\n\
    int main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyr22fy4y: /tmp/tmpyr22fy4y.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        if (i == 0) {\n            continue;\n        }\n        count\
    \ += i;\n        if (sum == count) {\n            return true;\n        }\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpgchegaqy: /tmp/tmpgchegaqy.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long twoSum = 0;\n    for (long long\
    \ i : l) {\n        twoSum += i;\n    }\n    long long twoSum2 = twoSum;\n   \
    \ for (long long i : l) {\n        twoSum2 -= i;\n    }\n    return twoSum2 ==\
    \ 0;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpps0u49dr: /tmp/tmpps0u49dr.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return false;\n    long long int maxSum = std::numeric_limits<long\
    \ long int>::max();\n    for (long long int i : l) {\n        maxSum = std::max(maxSum,\
    \ i);\n    }\n    if (maxSum == 0)\n        return false;\n    long long int minSum\
    \ = std::numeric_limits<long long int>::min();\n    for (long long int i : l)\
    \ {\n        minSum = std::min(minSum, i);\n    }\n    if (minSum == 0)\n    \
    \    return false;\n    for (long long int i : l) {\n        if (i != 0)\n   \
    \         return false;\n    }\n    return true;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnkr3gef9: /tmp/tmpnkr3gef9.cpp:46: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n    }\n    return ans == 0;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpt0wogrfe: /tmp/tmpt0wogrfe.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long count\
    \ = 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n\
    \        if (sum == 0) {\n            count++;\n        }\n    }\n    if (count\
    \ == l.size()) {\n        return true;\n    }\n    return false;\n}\nint main()\
    \ {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa003wpir: /tmp/tmpa003wpir.cpp:41: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        if (i == 0) {\n            continue;\n        }\n        long\
    \ long j = sum - i;\n        if (j == 0) {\n            count++;\n        }\n\
    \    }\n    if (count == l.size()) {\n        return true;\n    }\n    return\
    \ false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0841xf15: /tmp/tmp0841xf15.cpp:44: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long zero\
    \ = 0;\n    for (long long i : l) {\n        zero += i;\n    }\n    return sum\
    \ == zero;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpnuw7hetv: /tmp/tmpnuw7hetv.cpp:29: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for(long long int i : l) {\n        sum += i;\n    }\n    long long\
    \ int count = 0;\n    for(long long int i : l) {\n        if(i != 0) {\n     \
    \       count += 1;\n        }\n    }\n    if(count == 0) {\n        return false;\n\
    \    }\n    long long int max_sum = sum;\n    for(long long int i : l) {\n   \
    \     if(i != 0) {\n            max_sum = std::max(max_sum, sum - i);\n      \
    \  }\n    }\n    if(max_sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmppvild_00: /tmp/tmppvild_00.cpp:46: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long count = 0;\n    for (long long\
    \ i : l) {\n        if (i == 0) {\n            continue;\n        }\n        count\
    \ += 1;\n        if (sum - i == 0) {\n            return true;\n        }\n  \
    \  }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpurn449re: /tmp/tmpurn449re.cpp:39: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    long long sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += l[i];\n\
    \    }\n    if (sum == 0) {\n        return true;\n    }\n    return false;\n\
    }\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpxhsxgsjp: /tmp/tmpxhsxgsjp.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int sum2 = 0;\n    for\
    \ (long long int i : l) {\n        sum2 += i;\n    }\n    if (sum2 == 0) {\n \
    \       return true;\n    }\n    if (sum < 0 && sum2 < 0) {\n        return false;\n\
    \    }\n    if (sum > 0 && sum2 > 0) {\n        return false;\n    }\n    if (sum\
    \ == sum2) {\n        return true;\n    }\n    return false;\n}\nint main() {\n\
    \    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpo_l8kt0_: /tmp/tmpo_l8kt0_.cpp:47: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long zero\
    \ = 0;\n    for (long long i : l) {\n        zero += i;\n    }\n    if (sum ==\
    \ zero) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjuiydc1o: /tmp/tmpjuiydc1o.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    long long zero\
    \ = 0;\n    for (long long i : l) {\n        zero += i;\n    }\n    if (sum ==\
    \ zero) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpjuiydc1o: /tmp/tmpjuiydc1o.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078403
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return false;\n    }\n    long long int ans = 0;\n    for (long\
    \ long int i : l) {\n        ans += i;\n        if (ans == 0) {\n            return\
    \ true;\n        }\n    }\n    return false;\n}\nint main() {\n    auto candidate\
    \ = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1, (long)3,\
    \ (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpvur1xfw8: /tmp/tmpvur1xfw8.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0)\n        return false;\n    long long int last_sum = sum;\n    for (long\
    \ long int i : l) {\n        sum += i;\n        if (sum != last_sum)\n       \
    \     return false;\n        last_sum = sum;\n    }\n    return true;\n}\nint\
    \ main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp66gp0m3d: /tmp/tmp66gp0m3d.cpp:37: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 1) {\n        return\
    \ true;\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpa5fbdwzx: /tmp/tmpa5fbdwzx.cpp:33: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        sum += l[i];\n \
    \   }\n    if (sum == 0) {\n        return false;\n    }\n    long long ans =\
    \ 0;\n    for (long long i = 0; i < l.size(); i++) {\n        ans += l[i];\n \
    \       if (ans == 0) {\n            return false;\n        }\n    }\n    return\
    \ true;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpd2y3cq31: /tmp/tmpd2y3cq31.cpp:35: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)5, (long)0}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return false;\n    }\n    long long ans = 0;\n    for (long long\
    \ i : l) {\n        ans += i;\n        if (ans == 0) {\n            return true;\n\
    \        }\n    }\n    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp0m5jnt6q: /tmp/tmp0m5jnt6q.cpp:38: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    long long int count = 0;\n    for (long long int i : l) {\n      \
    \  sum += i;\n        count += 1;\n    }\n    if (count == 1) return false;\n\
    \    if (sum == 0) return true;\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpbzkm524_: /tmp/tmpbzkm524_.cpp:32: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long sum =\
    \ 0;\n    for (long long i : l) {\n        sum += i;\n    }\n    if (sum == 0)\
    \ {\n        return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpuy015_3m: /tmp/tmpuy015_3m.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    long long int sum\
    \ = 0;\n    for (long long int i : l) {\n        sum += i;\n    }\n    if (sum\
    \ == 0) {\n        return true;\n    }\n    return false;\n}\nint main() {\n \
    \   auto candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmpyf4y8tbx: /tmp/tmpyf4y8tbx.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078401
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    int n = l.size();\n\
    \    if (n == 0) return false;\n    int sum = 0;\n    for (int i = 0; i < n; i++)\
    \ {\n        sum += l[i];\n    }\n    for (int i = 0; i < n; i++) {\n        if\
    \ (l[i] == sum) return true;\n    }\n    return false;\n}\nint main() {\n    auto\
    \ candidate = pairs_sum_to_zero;\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmp6n3bdlt9: /tmp/tmp6n3bdlt9.cpp:31: int main(): Assertion `candidate((std::vector<long>({(long)1,
    (long)3, (long)-2, (long)1}))) == (false)'' failed.

    '
  stdout: ''
  timestamp: 1660078408
- exit_code: -6
  program: "#include<assert.h>\n#include<bits/stdc++.h>\n// pairs_sum_to_zero takes\
    \ a list of integers as an input.\n// it returns True if there are two distinct\
    \ elements in the list that\n// sum to zero, and False otherwise.\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)5, (long)0})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)3, (long)-2, (long)1})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7})))\n// (false)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7})))\n// (true)\n// >>> pairs_sum_to_zero((std::vector<long>({(long)1})))\n\
    // (false)\nbool pairs_sum_to_zero(std::vector<long> l) {\n    // Your code here\n\
    \    long long int sum = 0;\n    long long int count = 0;\n    for (long long\
    \ int i : l) {\n        sum += i;\n        count += 1;\n    }\n    if (count ==\
    \ 1) {\n        if (sum == 0) {\n            return true;\n        }\n    }\n\
    \    return false;\n}\nint main() {\n    auto candidate = pairs_sum_to_zero;\n\
    \    assert(candidate((std::vector<long>({(long)1, (long)3, (long)5, (long)0})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)1, (long)3, (long)-2,\
    \ (long)1}))) == (false));\n    assert(candidate((std::vector<long>({(long)1,\
    \ (long)2, (long)3, (long)7}))) == (false));\n    assert(candidate((std::vector<long>({(long)2,\
    \ (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true));\n    assert(candidate((std::vector<long>({(long)1})))\
    \ == (false));\n    assert(candidate((std::vector<long>({(long)-3, (long)9, (long)-1,\
    \ (long)3, (long)2, (long)30}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)3, (long)2, (long)31}))) == (true));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)30}))) == (false));\n    assert(candidate((std::vector<long>({(long)-3,\
    \ (long)9, (long)-1, (long)4, (long)2, (long)31}))) == (false));\n}\n"
  status: Exception
  stderr: 'tmplohmza5c: /tmp/tmplohmza5c.cpp:36: int main(): Assertion `candidate((std::vector<long>({(long)2,
    (long)4, (long)-5, (long)3, (long)5, (long)7}))) == (true)'' failed.

    '
  stdout: ''
  timestamp: 1660078408

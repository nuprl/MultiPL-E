name: HumanEval_105_by_length
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of integers, sort the integers that are between\
  \ 1 and 9 inclusive,\n    // reverse the resulting array, and then replace each\
  \ digit by its corresponding name from\n    // \"One\", \"Two\", \"Three\", \"Four\"\
  , \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\".\n    // For example:\n    //\
  \ arr = [2, 1, 1, 4, 5, 8, 2, 3]   \n    // -> sort arr -> [1, 1, 2, 2, 3, 4, 5,\
  \ 8] \n    // -> reverse arr -> [8, 5, 4, 3, 2, 2, 1, 1]\n    // return [\"Eight\"\
  , \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"]\n    // If\
  \ the array is empty, return an empty array:\n    // arr = []\n    // return []\n\
  \    // If the array has any strange number ignore it:\n    // arr = [1, -1 , 55]\
  \ \n    // -> sort arr -> [-1, 1, 55]\n    // -> reverse arr -> [55, 1, -1]\n  \
  \  // return = ['One']\n    public static ArrayList<String> byLength(ArrayList<Long>\
  \ arr) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(byLength((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)1l, (long)4l, (long)5l,\
  \ (long)8l, (long)2l, (long)3l)))).equals((new ArrayList<String>(Arrays.asList((String)\"\
  Eight\", (String)\"Five\", (String)\"Four\", (String)\"Three\", (String)\"Two\"\
  , (String)\"Two\", (String)\"One\", (String)\"One\")))));\n    assert(byLength((new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<String>(Arrays.asList()))));\n\
  \    assert(byLength((new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)55l)))).equals((new\
  \ ArrayList<String>(Arrays.asList((String)\"One\")))));\n    assert(byLength((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)3l, (long)2l)))).equals((new\
  \ ArrayList<String>(Arrays.asList((String)\"Three\", (String)\"Two\", (String)\"\
  One\")))));\n    assert(byLength((new ArrayList<Long>(Arrays.asList((long)9l, (long)4l,\
  \ (long)8l)))).equals((new ArrayList<String>(Arrays.asList((String)\"Nine\", (String)\"\
  Eight\", (String)\"Four\")))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

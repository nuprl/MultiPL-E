name: HumanEval_118_get_closest_vowel
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You are given a word. Your task is to find the closest vowel\
  \ that stands between \n    // two consonants from the right side of the word (case\
  \ sensitive).\n    // Vowels in the beginning and ending doesn't count. Return empty\
  \ string if you didn't\n    // find any vowel met the above condition. \n    //\
  \ You may assume that the given string contains English letter only.\n    // Example:\n\
  \    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"FULL\"\
  ) ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
  ab\") ==> \"\"\n    public static String getClosestVowel(String word) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(getClosestVowel((\"\
  yogurt\")).equals((\"u\")));\n    assert(getClosestVowel((\"full\")).equals((\"\
  u\")));\n    assert(getClosestVowel((\"easy\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  eAsy\")).equals((\"\")));\n    assert(getClosestVowel((\"ali\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"bad\")).equals((\"a\")));\n    assert(getClosestVowel((\"\
  most\")).equals((\"o\")));\n    assert(getClosestVowel((\"ab\")).equals((\"\")));\n\
  \    assert(getClosestVowel((\"ba\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  quick\")).equals((\"\")));\n    assert(getClosestVowel((\"anime\")).equals((\"i\"\
  )));\n    assert(getClosestVowel((\"Asia\")).equals((\"\")));\n    assert(getClosestVowel((\"\
  Above\")).equals((\"o\")));\n    }\n\n}\n"
completions: ["        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = 0;\n                for (int j = i + 1; j\
    \ < word.length(); j++) {\n                    char c2 = word.charAt(j);\n   \
    \                 if (consonants.indexOf(c2) != -1) {\n                      \
    \  distance = j - i;\n                        break;\n                    }\n\
    \                }\n                if (distance < minDistance) {\n          \
    \          minDistance = distance;\n                    result = \"\" + c;\n \
    \               }\n            }\n        }\n        return result;\n", "    \
    \    String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                if (closestVowelIndex == -1) {\n                 \
    \   closestVowelIndex = i;\n                    closestVowel = word.substring(i,\
    \ i + 1);\n                }\n                else {\n                    if (i\
    \ + 1 < closestVowelIndex) {\n                        closestVowelIndex = i;\n\
    \                        closestVowel = word.substring(i, i + 1);\n          \
    \          }\n                }\n            }\n            else if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                if (closestVowelIndex != -1) {\n                 \
    \   return closestVowel;\n                }\n            }\n        }\n      \
    \  return \"\";\n", "        // Your code here\n        return \"\";\n", "   \
    \     return \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (vowels.contains(word.substring(index + 1, index + 2))) {\n  \
    \                  return word.substring(index + 1, index + 2);\n            \
    \    }\n            }\n            index--;\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int lastVowelIndex = -1;\n        int lastConsonantIndex = -1;\n  \
    \      int i = word.length() - 1;\n        while (i >= 0) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n          \
    \      lastVowelIndex = i;\n            } else if (consonants.indexOf(c) != -1)\
    \ {\n                lastConsonantIndex = i;\n                break;\n       \
    \     }\n            i--;\n        }\n        if (lastVowelIndex == -1 || lastConsonantIndex\
    \ == -1) {\n            return \"\";\n        }\n        int minDistance = Integer.MAX_VALUE;\n\
    \        int minDistanceIndex = -1;\n        for (i = lastVowelIndex; i >= 0;\
    \ i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                int distance = lastConsonantIndex - i;\n         \
    \       if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    minDistanceIndex = i;\n                }\n            }\n\
    \        }\n        return word.substring(minDistanceIndex, minDistanceIndex +\
    \ 1);\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       result = word.substring(j, j + 1);\n                        break;\n \
    \                   }\n                }\n                break;\n           \
    \ }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int closest = word.length();\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int j = i;\n                while (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    j++;\n                }\n                if (j\
    \ < word.length() && consonants.indexOf(word.charAt(j)) != -1) {\n           \
    \         int k = j;\n                    while (k < word.length() && consonants.indexOf(word.charAt(k))\
    \ != -1) {\n                        k++;\n                    }\n            \
    \        if (k < word.length() && vowels.indexOf(word.charAt(k)) != -1) {\n  \
    \                      if (k - i < closest) {\n                            closest\
    \ = k - i;\n                            result = String.valueOf(word.charAt(i));\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = 0;\n                for (int j = i + 1; j\
    \ < word.length(); j++) {\n                    char c2 = word.charAt(j);\n   \
    \                 if (consonants.indexOf(c2) != -1) {\n                      \
    \  distance = j - i;\n                        break;\n                    }\n\
    \                }\n                if (distance < minDistance) {\n          \
    \          minDistance = distance;\n                    result = \"\" + c;\n \
    \               }\n            }\n        }\n        return result;\n", "    \
    \    String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     int distance = 0;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (distance > 1) {\n                    result\
    \ = word.substring(index, index + 1);\n                    break;\n          \
    \      }\n                distance = 0;\n            } else if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                distance++;\n            }\n            index--;\n\
    \        }\n        return result;\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                for (int j = i + 1; j < word.length(); j++) {\n  \
    \                  if (vowels.indexOf(word.charAt(j)) != -1) {\n             \
    \           if (j - i < minDistance) {\n                            minDistance\
    \ = j - i;\n                            closestVowel = Character.toString(word.charAt(j));\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return closestVowel;\n", "        String vowels =\
    \ \"aeiou\";\n        String cons = \"bcdfghjklmnpqrstvwxyz\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.indexOf(word.charAt(index))\
    \ != -1) {\n                int i = index - 1;\n                while (i >= 0)\
    \ {\n                    if (cons.indexOf(word.charAt(i)) != -1) {\n         \
    \               return word.substring(index, index + 1);\n                   \
    \ }\n                    i--;\n                }\n            }\n            index--;\n\
    \        }\n        return \"\";\n", "        String vowels = \"AEIOUaeiou\";\n\
    \        String consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\";\n\
    \        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n  \
    \      for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                closestVowel = word.substring(i, i + 1);\n       \
    \         closestVowelIndex = i;\n                break;\n            }\n    \
    \    }\n        if (closestVowelIndex == -1) {\n            return \"\";\n   \
    \     }\n        for (int i = closestVowelIndex - 1; i >= 0; i--) {\n        \
    \    if (consonants.indexOf(word.charAt(i)) != -1) {\n                return closestVowel;\n\
    \            }\n        }\n        return \"\";\n", "        String vowels = \"\
    aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String\
    \ closestVowel = \"\";\n        int closestVowelIndex = -1;\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                if (closestVowelIndex\
    \ != -1) {\n                    return closestVowel;\n                }\n    \
    \        } else if (consonants.indexOf(c) != -1) {\n                closestVowelIndex\
    \ = i;\n            }\n        }\n        return closestVowel;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        String result = \"\";\n        int distance = Integer.MAX_VALUE;\n  \
    \      for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int j = i - 1;\n\
    \                while (j >= 0 && consonants.indexOf(word.charAt(j)) == -1) {\n\
    \                    j--;\n                }\n                if (j >= 0) {\n\
    \                    int k = i + 1;\n                    while (k < word.length()\
    \ && consonants.indexOf(word.charAt(k)) == -1) {\n                        k++;\n\
    \                    }\n                    if (k < word.length()) {\n       \
    \                 if (k - i < distance) {\n                            distance\
    \ = k - i;\n                            result = String.valueOf(c);\n        \
    \                }\n                    }\n                }\n            }\n\
    \        }\n        return result;\n", "        if (word.length() < 3) return\
    \ \"\";\n        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 2;\n        while (index >= 0) {\n    \
    \        if (consonants.contains(word.substring(index, index + 1)) &&\n      \
    \          consonants.contains(word.substring(index + 1, index + 2))) {\n    \
    \            for (int i = 0; i < vowels.length(); i++) {\n                   \
    \ if (word.substring(index + 1, index + 2).equals(vowels.substring(i, i + 1)))\
    \ {\n                        return vowels.substring(i, i + 1);\n            \
    \        }\n                }\n            }\n            index--;\n        }\n\
    \        return \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ result = \"\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index == word.length() - 1) {\n                    index--;\n\
    \                    continue;\n                }\n                if (index ==\
    \ 0) {\n                    break;\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index)) && !vowels.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;\n", "        String vowels = \"aeiou\";\n     \
    \   String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        // Write your code here\n        return \"\";\n", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n       \
    \         if (i == word.length() - 1) {\n                    return \"\";\n  \
    \              }\n                if (vowels.indexOf(word.charAt(i + 1)) == -1)\
    \ {\n                    return word.substring(i, i + 1);\n                }\n\
    \            }\n        }\n        return \"\";\n", "        String vowels = \"\
    aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c) !=\
    \ -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index == word.length() - 1) {\n              \
    \      return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return \"\";\n                }\n \
    \               if (vowels.contains(word.substring(index + 1, index + 2))) {\n\
    \                    return word.substring(index + 1, index + 2);\n          \
    \      }\n            }\n            index--;\n        }\n        return \"\"\
    ;\n", "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n", "        String vowels = \"aeiou\";\n \
    \       String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ != 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = String.valueOf(word.charAt(i));\n              \
    \  }\n            }\n        }\n        return result;\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int closest = word.length();\n        String closestVowel = \"\";\n      \
    \  for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int left = i - 1;\n                int right = i +\
    \ 1;\n                boolean leftConsonant = false;\n                boolean\
    \ rightConsonant = false;\n                while (left >= 0 && !leftConsonant)\
    \ {\n                    if (consonants.indexOf(word.charAt(left)) != -1) {\n\
    \                        leftConsonant = true;\n                    } else {\n\
    \                        left--;\n                    }\n                }\n \
    \               while (right < word.length() && !rightConsonant) {\n         \
    \           if (consonants.indexOf(word.charAt(right)) != -1) {\n            \
    \            rightConsonant = true;\n                    } else {\n          \
    \              right++;\n                    }\n                }\n          \
    \      if (leftConsonant && rightConsonant) {\n                    if (right -\
    \ left < closest) {\n                        closest = right - left;\n       \
    \                 closestVowel = word.substring(i, i + 1);\n                 \
    \   }\n                }\n            }\n        }\n        return closestVowel;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = \"\" + c;\n                }\n            }\n        }\n   \
    \     return result;\n", "        int n = word.length();\n        if (n < 3) return\
    \ \"\";\n        int i = n - 1;\n        while (i >= 0 && !isVowel(word.charAt(i)))\
    \ i--;\n        if (i == 0 || i == n - 1) return \"\";\n        int j = i - 1;\n\
    \        while (j >= 0 && isVowel(word.charAt(j))) j--;\n        if (j == n -\
    \ 2) return \"\";\n        return word.substring(i, i + 1);\n", "        String\
    \ vowels = \"aeiou\";\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && !vowels.contains(word.substring(j, j + 1))) {\n                    j++;\n\
    \                }\n                if (j < word.length()) {\n               \
    \     int distance = j - i;\n                    if (distance < min) {\n     \
    \                   min = distance;\n                        result = word.substring(i,\
    \ i + 1);\n                    }\n                }\n            }\n        }\n\
    \        return result;\n", "        // your code here\n        return \"\";\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return \"\";\n                }\n \
    \               if (vowels.contains(word.substring(index + 1, index + 2))) {\n\
    \                    return word.substring(index + 1, index + 2);\n          \
    \      }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                if (i == word.length() - 1) {\n                    return \"\"\
    ;\n                }\n                for (int j = i + 1; j < word.length(); j++)\
    \ {\n                    if (vowels.contains(word.substring(j, j + 1))) {\n  \
    \                      return word.substring(j, j + 1);\n                    }\n\
    \                }\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && consonants.indexOf(word.charAt(j)) != -1) {\n                    j++;\n \
    \               }\n                if (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    if (j - i < min) {\n                        min\
    \ = j - i;\n                        result = word.substring(i, i + 1);\n     \
    \               }\n                }\n            }\n        }\n        return\
    \ result;\n", "        String vowels = \"aeiou\";\n        String consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int min =\
    \ Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n    \
    \        if (vowels.indexOf(word.charAt(i)) != -1) {\n                int j =\
    \ i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = String.valueOf(word.charAt(i));\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        int closestConsonantIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            String\
    \ letter = word.substring(i, i + 1);\n            if (vowels.contains(letter))\
    \ {\n                if (closestConsonantIndex != -1) {\n                    if\
    \ (closestVowelIndex == -1 || closestConsonantIndex - i < closestVowelIndex -\
    \ i) {\n                        closestVowel = letter;\n                     \
    \   closestVowelIndex = i;\n                    }\n                }\n       \
    \     } else if (consonants.contains(letter)) {\n                closestConsonantIndex\
    \ = i;\n            }\n        }\n        return closestVowel;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        int closest = -1;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (consonants.indexOf(word.charAt(i)) != -1) {\n           \
    \     for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        closest = j;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return closest == -1 ? \"\" : word.substring(closest,\
    \ closest + 1);\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n     \
    \   while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                int vowelIndex = index - 1;\n              \
    \  while (vowelIndex >= 0) {\n                    if (vowels.contains(word.substring(vowelIndex,\
    \ vowelIndex + 1))) {\n                        return word.substring(vowelIndex,\
    \ vowelIndex + 1);\n                    }\n                    vowelIndex--;\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.indexOf(word.charAt(index))\
    \ != -1) {\n                if (index == 0) {\n                    return \"\"\
    ;\n                }\n                if (consonants.indexOf(word.charAt(index\
    \ - 1)) != -1) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int index = 0;\n\
    \        int min = word.length();\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n  \
    \              for (int j = i - 1; j >= 0; j--) {\n                    if (consonants.contains(word.substring(j,\
    \ j + 1))) {\n                        if (i - j < min) {\n                   \
    \         min = i - j;\n                            index = i;\n             \
    \           }\n                        break;\n                    }\n       \
    \         }\n            }\n        }\n        if (index != 0) {\n           \
    \ result = word.substring(index, index + 1);\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        int closest = -1;\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                closest = i;\n                break;\n           \
    \ }\n        }\n        if (closest == -1) {\n            return \"\";\n     \
    \   }\n        for (int i = closest - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ == -1) {\n                return word.substring(closest, closest + 1);\n   \
    \         }\n        }\n        return \"\";\n", "        String vowels = \"aeiou\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && !vowels.contains(word.substring(j, j + 1))) {\n                    j++;\n\
    \                }\n                if (j < word.length()) {\n               \
    \     if (j - i < min) {\n                        min = j - i;\n             \
    \           result = word.substring(i, i + 1);\n                    }\n      \
    \          }\n            }\n        }\n        return result;\n", "        String\
    \ vowels = \"aeiou\";\n        StringBuilder sb = new StringBuilder();\n     \
    \   for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                sb.append(word.substring(i, i + 1));\n         \
    \   } else {\n                if (sb.length() > 0) {\n                    return\
    \ sb.reverse().toString();\n                }\n            }\n        }\n    \
    \    return \"\";\n", "        String vowels = \"aeiou\";\n        String result\
    \ = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) >= 0) {\n           \
    \     int j = i + 1;\n                while (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ >= 0) {\n                    j++;\n                }\n                if (j\
    \ < word.length()) {\n                    int k = j + 1;\n                   \
    \ while (k < word.length() && vowels.indexOf(word.charAt(k)) >= 0) {\n       \
    \                 k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        int dist = k - i;\n                        if (dist\
    \ < min) {\n                            min = dist;\n                        \
    \    result = String.valueOf(word.charAt(i));\n                        }\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ result;\n", "        String vowels = \"aeiou\";\n        String consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = 0;\n                for (int j = i + 1; j\
    \ < word.length(); j++) {\n                    char d = word.charAt(j);\n    \
    \                if (consonants.indexOf(d) != -1) {\n                        distance\
    \ = j - i;\n                        break;\n                    }\n          \
    \      }\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = \"\" + c;\n                }\n   \
    \         }\n        }\n        return result;\n", "        // Write your code\
    \ here\n        return \"\";\n", "        String vowels = \"aeiou\";\n       \
    \ String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index + 1, index\
    \ + 2);\n                }\n                if (index + 2 < word.length() && vowels.contains(word.substring(index\
    \ + 2, index + 3))) {\n                    return word.substring(index + 2, index\
    \ + 3);\n                }\n            }\n            index--;\n        }\n \
    \       return \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ result = \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n   \
    \         if (consonants.contains(word.substring(i, i + 1))) {\n             \
    \   if (i == word.length() - 1) {\n                    return \"\";\n        \
    \        }\n                for (int j = i + 1; j < word.length(); j++) {\n  \
    \                  if (vowels.contains(word.substring(j, j + 1))) {\n        \
    \                return word.substring(j, j + 1);\n                    }\n   \
    \             }\n            }\n        }\n        return result;\n", "      \
    \  String vowels = \"aeiou\";\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            char c =\
    \ word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n              \
    \  sb.append(c);\n            } else {\n                if (sb.length() > 0) {\n\
    \                    return sb.reverse().toString();\n                }\n    \
    \        }\n        }\n        return \"\";\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                return\
    \ \"\" + word.charAt(index);\n            }\n            index--;\n        }\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    if (index < word.length() - 1 && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                        result = word.substring(index,\
    \ index + 1);\n                        break;\n                    }\n       \
    \         }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ minDistance = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int distance = word.length() - i;\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            char c =\
    \ word.charAt(i);\n            if (consonants.indexOf(c) != -1) {\n          \
    \      sb.append(c);\n            } else if (vowels.indexOf(c) != -1) {\n    \
    \            if (sb.length() > 0) {\n                    return Character.toString(c);\n\
    \                }\n            }\n        }\n        return \"\";\n", "     \
    \   String vowels = \"aeiou\";\n        String result = \"\";\n        int min\
    \ = word.length();\n        for (int i = 0; i < word.length(); i++) {\n      \
    \      if (vowels.indexOf(word.charAt(i)) != -1) {\n                if (i > 0\
    \ && i < word.length() - 1) {\n                    if (vowels.indexOf(word.charAt(i\
    \ - 1)) == -1 && vowels.indexOf(word.charAt(i + 1)) == -1) {\n               \
    \         if (i < min) {\n                            min = i;\n             \
    \               result = word.substring(i, i + 1);\n                        }\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n", "        String vowels = \"aeiou\";\n        String result = \"\"\
    ;\n        int minDistance = Integer.MAX_VALUE;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) >= 0) {\n\
    \                int distance = word.length() - i;\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n", "        String vowels = \"aeiou\";\n \
    \       String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n       \
    \     if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n    \
    \            for (int j = i + 1; j < word.length(); j++) {\n                 \
    \   char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = \"\" + c;\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int min\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          if (vowels.indexOf(word.charAt(i)) != -1) {\n                int j\
    \ = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (min > k - j - 1) {\n                        \
    \    min = k - j - 1;\n                            result = word.substring(i,\
    \ i + 1);\n                        }\n                    }\n                }\n\
    \            }\n        }\n        return result;\n", "        String vowels =\
    \ \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n       \
    \ int index = word.length() - 1;\n        while (index >= 0) {\n            if\
    \ (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index == 0)\
    \ {\n                    return \"\";\n                }\n                if (consonants.indexOf(word.charAt(index\
    \ - 1)) != -1) {\n                    return word.substring(index, index + 1);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        int index = word.length() - 1;\n        while (index >= 0) {\n  \
    \          if (vowels.contains(word.substring(index, index + 1))) {\n        \
    \        result = word.substring(index, index + 1);\n                if (index\
    \ + 1 < word.length() && consonants.contains(word.substring(index + 1, index +\
    \ 2))) {\n                    break;\n                }\n            }\n     \
    \       index--;\n        }\n        return result;\n", "        String vowels\
    \ = \"aeiouAEIOU\";\n        StringBuilder sb = new StringBuilder();\n       \
    \ for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                sb.append(word.charAt(i));\n            } else {\n\
    \                if (sb.length() > 0) {\n                    return sb.toString();\n\
    \                }\n            }\n        }\n        return \"\";\n", "     \
    \   String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int len = word.length();\n        int i = len - 1;\n        while (i\
    \ >= 0) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                int j = i - 1;\n                while (j >= 0) {\n          \
    \          if (vowels.contains(word.substring(j, j + 1))) {\n                \
    \        return word.substring(j, j + 1);\n                    }\n           \
    \         if (consonants.contains(word.substring(j, j + 1))) {\n             \
    \           return \"\";\n                    }\n                    j--;\n  \
    \              }\n            }\n            i--;\n        }\n        return \"\
    \";\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        int closestConsonantIndex\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n          \
    \      closestVowel = String.valueOf(c);\n                closestVowelIndex =\
    \ i;\n                break;\n            }\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (consonants.indexOf(c)\
    \ != -1) {\n                closestConsonantIndex = i;\n                break;\n\
    \            }\n        }\n        if (closestVowelIndex == -1 || closestConsonantIndex\
    \ == -1) {\n            return \"\";\n        }\n        return closestVowel;\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n\
    \            if (vowels.indexOf(word.charAt(i)) != -1) {\n                int\
    \ j = i - 1;\n                while (j >= 0 && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && vowels.indexOf(word.charAt(k)) != -1) {\n                 \
    \       k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - i < min) {\n                            min\
    \ = k - i;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n  \
    \          if (vowels.indexOf(c) >= 0) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = \"\" + c;\n                }\n   \
    \         } else if (consonants.indexOf(c) >= 0) {\n                break;\n \
    \           }\n        }\n        return result;\n", "        String vowels =\
    \ \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n       \
    \ String result = \"\";\n        int distance = 0;\n        int minDistance =\
    \ Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.contains(word.substring(i, i + 1))) {\n              \
    \  distance = word.length() - i;\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiou\";\n        String closestVowel\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n       \
    \     if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    closestVowel = Character.toString(c);\n   \
    \             }\n            }\n        }\n        return closestVowel;\n", " \
    \       // TODO: Implement your solution here\n        return \"\";\n", "    \
    \    String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int distance = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (i - j < distance) {\n                            distance = i - j;\n\
    \                            result = word.substring(j, j + 1);\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        return result;\n", "        String vowels = \"aeiou\";\n     \
    \   String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\
    \";\n        int min = Integer.MAX_VALUE;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i)) >= 0) {\n\
    \                int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ >= 0) {\n                    j--;\n                }\n                if (j\
    \ >= 0 && vowels.indexOf(word.charAt(j)) >= 0) {\n                    continue;\n\
    \                }\n                if (i - j < min) {\n                    min\
    \ = i - j;\n                    result = word.substring(i, i + 1);\n         \
    \       }\n            }\n        }\n        return result;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i,\
    \ i + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n           \
    \         if (vowels.contains(word.substring(j, j + 1))) {\n                 \
    \       if (i - j < minDistance) {\n                            minDistance =\
    \ i - j;\n                            result = word.substring(j, j + 1);\n   \
    \                     }\n                    }\n                }\n          \
    \  }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ > 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n", "        // Your code here\n\
    \        return \"\";\n", "        String vowels = \"aeiou\";\n        String\
    \ result = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int i = 0;\
    \ i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i)) !=\
    \ -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && vowels.indexOf(word.charAt(j)) != -1) {\n                    j++;\n     \
    \           }\n                if (j < word.length()) {\n                    int\
    \ k = j + 1;\n                    while (k < word.length() && vowels.indexOf(word.charAt(k))\
    \ != -1) {\n                        k++;\n                    }\n            \
    \        if (k < word.length()) {\n                        if (k - i < min) {\n\
    \                            min = k - i;\n                            result\
    \ = word.substring(i, i + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return result;\n", " \
    \       String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ != 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = word.substring(i, i + 1);\n                }\n \
    \           }\n        }\n        return result;\n", "        String vowels =\
    \ \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n       \
    \ int index = word.length() - 1;\n        while (index >= 0) {\n            if\
    \ (consonants.contains(word.substring(index, index + 1))) {\n                int\
    \ index2 = index - 1;\n                while (index2 >= 0) {\n               \
    \     if (consonants.contains(word.substring(index2, index2 + 1))) {\n       \
    \                 return \"\";\n                    }\n                    if\
    \ (vowels.contains(word.substring(index2, index2 + 1))) {\n                  \
    \      return word.substring(index2, index2 + 1);\n                    }\n   \
    \                 index2--;\n                }\n                return \"\";\n\
    \            }\n            index--;\n        }\n        return \"\";\n", "  \
    \      String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ > 0 && consonants.indexOf(word.charAt(index - 1)) != -1) {\n               \
    \     return word.substring(index, index + 1);\n                }\n          \
    \  }\n            index--;\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (consonants.contains(word.substring(index, index + 1))) {\n        \
    \        index--;\n                break;\n            }\n            index--;\n\
    \        }\n        if (index < 0) {\n            return \"\";\n        }\n  \
    \      int closestIndex = -1;\n        int closestDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < vowels.length(); i++) {\n            int vowelIndex\
    \ = word.indexOf(vowels.substring(i, i + 1), index);\n            if (vowelIndex\
    \ >= 0) {\n                int distance = vowelIndex - index;\n              \
    \  if (distance < closestDistance) {\n                    closestDistance = distance;\n\
    \                    closestIndex = vowelIndex;\n                }\n         \
    \   }\n        }\n        if (closestIndex < 0) {\n            return \"\";\n\
    \        }\n        return word.substring(closestIndex, closestIndex + 1);\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int index = word.lastIndexOf(word.charAt(i));\n  \
    \              if (index != -1 && index != i) {\n                    int j = index\
    \ + 1;\n                    while (j < word.length() && consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        j++;\n                    }\n            \
    \        if (j < word.length() && vowels.indexOf(word.charAt(j)) != -1) {\n  \
    \                      if (j - index < min) {\n                            min\
    \ = j - index;\n                            result = String.valueOf(word.charAt(i));\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int vowelIndex = -1;\n        int consonantIndex = -1;\n  \
    \      for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                vowelIndex = i;\n                break;\n      \
    \      }\n        }\n        for (int i = vowelIndex - 1; i >= 0; i--) {\n   \
    \         if (consonants.contains(word.substring(i, i + 1))) {\n             \
    \   consonantIndex = i;\n                break;\n            }\n        }\n  \
    \      if (vowelIndex != -1 && consonantIndex != -1) {\n            result = word.substring(vowelIndex,\
    \ vowelIndex + 1);\n        }\n        return result;\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String res = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int\
    \ i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) j--;\n                if (j >= 0) {\n                    int k = i +\
    \ 1;\n                    while (k < word.length() && consonants.indexOf(word.charAt(k))\
    \ == -1) k++;\n                    if (k < word.length()) {\n                \
    \        if (k - j < min) {\n                            min = k - j;\n      \
    \                      res = word.substring(i, i + 1);\n                     \
    \   }\n                    }\n                }\n            }\n        }\n  \
    \      return res;\n", "        String vowels = \"aeiou\";\n        int index\
    \ = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            return \"\";\n                }\n                if (index == 0)\
    \ {\n                    return \"\";\n                }\n                if (!vowels.contains(word.substring(index\
    \ - 1, index)) && !vowels.contains(word.substring(index + 1, index + 2))) {\n\
    \                    return word.substring(index, index + 1);\n              \
    \  }\n            }\n            index--;\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int min = Integer.MAX_VALUE;\n        String closest = \"\";\n    \
    \    for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int j = i;\n    \
    \            while (j < word.length() && consonants.indexOf(word.charAt(j)) !=\
    \ -1) {\n                    j++;\n                }\n                if (j <\
    \ word.length() && vowels.indexOf(word.charAt(j)) != -1) {\n                 \
    \   if (j - i < min) {\n                        min = j - i;\n               \
    \         closest = \"\" + c;\n                    }\n                }\n    \
    \        }\n        }\n        return closest;\n", "        String vowels = \"\
    aeiou\";\n        StringBuilder sb = new StringBuilder();\n        for (int i\
    \ = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                sb.append(word.substring(i, i + 1));\n         \
    \   } else {\n                if (sb.length() > 0) {\n                    return\
    \ sb.reverse().toString();\n                }\n            }\n        }\n    \
    \    return \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        int index\
    \ = word.length() - 1;\n        while (index > 0) {\n            if (vowels.indexOf(word.charAt(index))\
    \ >= 0) {\n                if (vowels.indexOf(word.charAt(index - 1)) < 0) {\n\
    \                    return word.substring(index, index + 1);\n              \
    \  }\n            }\n            index--;\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ >= 0) {\n                result = String.valueOf(c);\n                break;\n\
    \            }\n            if (consonants.indexOf(c) >= 0) {\n              \
    \  break;\n            }\n        }\n        return result;\n", "        String\
    \ vowels = \"aeiou\";\n        String[] letters = word.split(\"\");\n        int\
    \ index = -1;\n        for (int i = letters.length - 1; i >= 0; i--) {\n     \
    \       if (vowels.contains(letters[i])) {\n                index = i;\n     \
    \           break;\n            }\n        }\n        if (index == -1) return\
    \ \"\";\n        int closest = -1;\n        for (int i = index - 1; i >= 0; i--)\
    \ {\n            if (!vowels.contains(letters[i])) {\n                closest\
    \ = i;\n                break;\n            }\n        }\n        if (closest\
    \ == -1) return \"\";\n        for (int i = index + 1; i < letters.length; i++)\
    \ {\n            if (!vowels.contains(letters[i])) {\n                if (i -\
    \ index < index - closest) {\n                    return letters[index];\n   \
    \             } else {\n                    return \"\";\n                }\n\
    \            }\n        }\n        return \"\";\n", "        String vowels = \"\
    aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String\
    \ result = \"\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index > 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                    result = word.substring(index, index +\
    \ 1);\n                    break;\n                }\n            }\n        \
    \    index--;\n        }\n        return result;\n", "        String vowels =\
    \ \"aeiou\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n       \
    \     if (vowels.indexOf(word.charAt(i)) != -1) {\n                if (i == word.length()\
    \ - 1) {\n                    return \"\";\n                }\n              \
    \  if (vowels.indexOf(word.charAt(i + 1)) == -1) {\n                    return\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return \"\";\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String[] letters = word.split(\"\");\n\
    \        for (int i = letters.length - 1; i > 0; i--) {\n            if (consonants.contains(letters[i])\
    \ && consonants.contains(letters[i - 1])) {\n                for (int j = i; j\
    \ < letters.length; j++) {\n                    if (vowels.contains(letters[j]))\
    \ {\n                        return letters[j];\n                    }\n     \
    \           }\n            }\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int closestVowelIndex = -1;\n        int closestConsonantIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                closestVowelIndex = i;\n            }\n          \
    \  if (consonants.indexOf(word.charAt(i)) != -1) {\n                closestConsonantIndex\
    \ = i;\n                break;\n            }\n        }\n        if (closestVowelIndex\
    \ != -1 && closestConsonantIndex != -1 && closestVowelIndex > closestConsonantIndex)\
    \ {\n            return word.substring(closestVowelIndex, closestVowelIndex +\
    \ 1);\n        }\n        return \"\";\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n          \
    \  if (consonants.contains(word.substring(i, i + 1))) {\n                for (int\
    \ j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n  \
    \          if (vowels.indexOf(c) >= 0) {\n                int distance = word.length()\
    \ - i;\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = String.valueOf(c);\n             \
    \   }\n            }\n        }\n        return result;\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   int closestVowelIndex = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                if (i + 1 < word.length() && consonants.indexOf(word.charAt(i\
    \ + 1)) != -1) {\n                    if (i - 1 >= 0 && consonants.indexOf(word.charAt(i\
    \ - 1)) != -1) {\n                        if (i < closestVowelDistance) {\n  \
    \                          closestVowelDistance = i;\n                       \
    \     closestVowelIndex = i;\n                        }\n                    }\n\
    \                }\n            }\n        }\n        if (closestVowelIndex ==\
    \ -1) {\n            return \"\";\n        }\n        return word.substring(closestVowelIndex,\
    \ closestVowelIndex + 1);\n", "        String vowels = \"aeiou\";\n        String\
    \ result = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                int j = i - 1;\n                while (j >= 0 && !vowels.contains(word.substring(j,\
    \ j + 1))) {\n                    j--;\n                }\n                if\
    \ (j >= 0) {\n                    int k = i + 1;\n                    while (k\
    \ < word.length() && !vowels.contains(word.substring(k, k + 1))) {\n         \
    \               k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (min > k - j) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int closest\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n          \
    \      closest = i;\n            } else if (consonants.indexOf(c) != -1 && closest\
    \ != -1) {\n                return word.substring(closest, closest + 1);\n   \
    \         }\n        }\n        return \"\";\n", "        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (isVowel(word.charAt(index)))\
    \ {\n                if (index == word.length() - 1) {\n                    return\
    \ \"\";\n                } else if (index == 0) {\n                    return\
    \ \"\";\n                } else if (isConsonant(word.charAt(index + 1)) && isConsonant(word.charAt(index\
    \ - 1))) {\n                    return String.valueOf(word.charAt(index));\n \
    \               }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int index = word.length()\
    \ - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int min\
    \ = Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.indexOf(word.charAt(i)) != -1) {\n                for\
    \ (int j = i - 1; j >= 0; j--) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        if (i - j < min) {\n                     \
    \       min = i - j;\n                            result = word.substring(i, i\
    \ + 1);\n                        }\n                        break;\n         \
    \           }\n                }\n            }\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String result = \"\";\n        int min\
    \ = Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.contains(word.substring(i, i + 1))) {\n              \
    \  int j = i - 1;\n                while (j >= 0 && !vowels.contains(word.substring(j,\
    \ j + 1))) {\n                    j--;\n                }\n                if\
    \ (j >= 0) {\n                    int k = i + 1;\n                    while (k\
    \ < word.length() && !vowels.contains(word.substring(k, k + 1))) {\n         \
    \               k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        int distance = k - j;\n                        if\
    \ (distance < min) {\n                            min = distance;\n          \
    \                  result = word.substring(i, i + 1);\n                      \
    \  }\n                    }\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        int lastConsonant\
    \ = -1;\n        int lastVowel = -1;\n        String result = \"\";\n        for\
    \ (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                lastVowel = i;\n            }\n            if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                lastConsonant = i;\n                break;\n     \
    \       }\n        }\n        if (lastConsonant != -1 && lastVowel != -1 && lastConsonant\
    \ < lastVowel) {\n            result = word.substring(lastConsonant + 1, lastVowel\
    \ + 1);\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c) !=\
    \ -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        if (word.length() < 3) return \"\";\n        char[] vowels\
    \ = {'a', 'e', 'i', 'o', 'u'};\n        char[] wordArray = word.toCharArray();\n\
    \        int closestVowelIndex = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n\
    \        for (int i = wordArray.length - 1; i >= 0; i--) {\n            char c\
    \ = wordArray[i];\n            if (Arrays.binarySearch(vowels, c) >= 0) {\n  \
    \              if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowelDistance = wordArray.length - 1 - i;\n\
    \                } else {\n                    int distance = wordArray.length\
    \ - 1 - i;\n                    if (distance < closestVowelDistance) {\n     \
    \                   closestVowelIndex = i;\n                        closestVowelDistance\
    \ = distance;\n                    }\n                }\n            }\n     \
    \   }\n        if (closestVowelIndex == -1) return \"\";\n        if (closestVowelIndex\
    \ == 0) return \"\";\n        if (closestVowelIndex == wordArray.length - 1) return\
    \ \"\";\n        if (Arrays.binarySearch(vowels, wordArray[closestVowelIndex -\
    \ 1]) >= 0) return \"\";\n        if (Arrays.binarySearch(vowels, wordArray[closestVowelIndex\
    \ + 1]) >= 0) return \"\";\n        return Character.toString(wordArray[closestVowelIndex]);\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) >= 0) {\n                if (index\
    \ == word.length() - 1) {\n                    return \"\";\n                }\n\
    \                if (consonants.indexOf(word.charAt(index + 1)) >= 0) {\n    \
    \                return word.substring(index, index + 1);\n                }\n\
    \            }\n            index--;\n        }\n        return \"\";\n", "  \
    \      String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (consonants.contains(word.substring(index, index + 1))) {\n      \
    \          int index2 = index - 1;\n                while (index2 >= 0) {\n  \
    \                  if (consonants.contains(word.substring(index2, index2 + 1)))\
    \ {\n                        return \"\";\n                    }\n           \
    \         if (vowels.contains(word.substring(index2, index2 + 1))) {\n       \
    \                 return word.substring(index2, index2 + 1);\n               \
    \     }\n                    index2--;\n                }\n                return\
    \ \"\";\n            }\n            index--;\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ distance = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++)\
    \ {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n               \
    \ int j = i + 1;\n                while (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    j++;\n                }\n                if (j\
    \ < word.length()) {\n                    int d = j - i;\n                   \
    \ if (d < distance) {\n                        distance = d;\n               \
    \         result = String.valueOf(word.charAt(i));\n                    }\n  \
    \              }\n            }\n        }\n        return result;\n", "     \
    \   String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        // your code here\n        return \"\";\n", "        String\
    \ vowels = \"aeiou\";\n        int closestVowelIndex = -1;\n        int closestVowelDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.indexOf(word.charAt(i)) != -1) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i;\n                    closestVowelDistance\
    \ = word.length() - i;\n                } else {\n                    int distance\
    \ = word.length() - i;\n                    if (distance < closestVowelDistance)\
    \ {\n                        closestVowelIndex = i;\n                        closestVowelDistance\
    \ = distance;\n                    }\n                }\n            }\n     \
    \   }\n        if (closestVowelIndex == -1) {\n            return \"\";\n    \
    \    }\n        return word.substring(closestVowelIndex, closestVowelIndex + 1);\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            char c =\
    \ word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n              \
    \  int distance = word.length() - i;\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ Character.toString(c);\n                }\n            }\n        }\n      \
    \  return result;\n", "        String vowels = \"aeiouAEIOU\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String\
    \ result = \"\";\n        int index = word.length() - 1;\n        while (index\
    \ >= 0) {\n            if (vowels.contains(word.substring(index, index + 1)))\
    \ {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ minDistance = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int distance = 0;\n                for (int j = i + 1; j < word.length();\
    \ j++) {\n                    if (vowels.indexOf(word.charAt(j)) != -1) {\n  \
    \                      break;\n                    }\n                    distance++;\n\
    \                }\n                if (distance < minDistance) {\n          \
    \          minDistance = distance;\n                    result = word.substring(i,\
    \ i + 1);\n                }\n            }\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char d = word.charAt(j);\n                    if (consonants.indexOf(d)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = Character.toString(c);\n                }\n            }\n \
    \       }\n        return result;\n", "        String vowels = \"aeiou\";\n  \
    \      String closestVowel = \"\";\n        int closestVowelIndex = -1;\n    \
    \    for (int i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) >= 0) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i;\n                    closestVowel\
    \ = String.valueOf(c);\n                } else {\n                    if (i >\
    \ closestVowelIndex) {\n                        closestVowelIndex = i;\n     \
    \                   closestVowel = String.valueOf(c);\n                    }\n\
    \                }\n            }\n        }\n        return closestVowel;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n", "        // Write\
    \ your code here\n        return \"\";\n", "        // TODO: Implement your solution\
    \ here\n        return \"\";\n", "        // TODO: Implement your code here\n\
    \        return \"\";\n", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n   \
    \     int minDistance = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    char c2 = word.charAt(j);\n\
    \                    if (consonants.indexOf(c2) != -1) {\n                   \
    \     distance = j - i;\n                        break;\n                    }\n\
    \                }\n                if (distance < minDistance) {\n          \
    \          minDistance = distance;\n                    result = String.valueOf(c);\n\
    \                }\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = String.valueOf(c);\n                }\n            }\n     \
    \   }\n        return result;\n", "        String vowels = \"aeiou\";\n      \
    \  String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\"\
    ;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ >= 0) {\n                if (i > 0 && vowels.indexOf(word.charAt(i - 1)) < 0)\
    \ {\n                    if (i < min) {\n                        min = i;\n  \
    \                      result = word.substring(i, i + 1);\n                  \
    \  }\n                }\n                if (i < word.length() - 1 && vowels.indexOf(word.charAt(i\
    \ + 1)) < 0) {\n                    if (i < min) {\n                        min\
    \ = i;\n                        result = word.substring(i, i + 1);\n         \
    \           }\n                }\n            }\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ > 0 && distance < minDistance) {\n                    minDistance = distance;\n\
    \                    result = \"\" + c;\n                }\n            }\n  \
    \      }\n        return result;\n", "        String vowels = \"aeiou\";\n   \
    \     String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result =\
    \ \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            char\
    \ c = word.charAt(i);\n            if (vowels.indexOf(c) != -1) {\n          \
    \      result = String.valueOf(c);\n                break;\n            }\n  \
    \          if (consonants.indexOf(c) != -1) {\n                break;\n      \
    \      }\n        }\n        return result;\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = String.valueOf(c);\n                }\n            }\n     \
    \   }\n        return result;\n", "        String vowels = \"aeiou\";\n      \
    \  String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int closestVowelIndex\
    \ = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                if (i + 1 < word.length()\
    \ && consonants.indexOf(word.charAt(i + 1)) != -1) {\n                    int\
    \ distance = word.length() - i;\n                    if (distance < closestVowelDistance)\
    \ {\n                        closestVowelDistance = distance;\n              \
    \          closestVowelIndex = i;\n                    }\n                }\n\
    \            }\n        }\n        if (closestVowelIndex == -1) {\n          \
    \  return \"\";\n        }\n        return word.substring(closestVowelIndex, closestVowelIndex\
    \ + 1);\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = word.length();\n        for (int i = 0; i < word.length(); i++) {\n      \
    \      if (vowels.indexOf(word.charAt(i)) != -1) {\n                int distance\
    \ = word.length() - i;\n                if (distance < minDistance) {\n      \
    \              minDistance = distance;\n                    result = String.valueOf(word.charAt(i));\n\
    \                }\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int i = word.length() - 1;\n        while (i >= 0) {\n            if\
    \ (consonants.contains(word.substring(i, i + 1))) {\n                break;\n\
    \            }\n            i--;\n        }\n        if (i < 0) {\n          \
    \  return \"\";\n        }\n        int j = i - 1;\n        while (j >= 0) {\n\
    \            if (vowels.contains(word.substring(j, j + 1))) {\n              \
    \  break;\n            }\n            j--;\n        }\n        if (j < 0) {\n\
    \            return \"\";\n        }\n        return word.substring(j, j + 1);\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index == word.length() - 1) {\n        \
    \            index--;\n                    continue;\n                }\n    \
    \            if (consonants.contains(word.substring(index + 1, index + 2))) {\n\
    \                    result = word.substring(index, index + 1);\n            \
    \        break;\n                }\n            }\n            index--;\n    \
    \    }\n        return result;\n", "        String vowels = \"aeiouAEIOU\";\n\
    \        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n\
    \        String result = \"\";\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n \
    \               for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int closest = -1;\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (vowels.indexOf(word.charAt(i)) >= 0) {\n           \
    \     closest = i;\n                break;\n            }\n        }\n       \
    \ if (closest == -1) {\n            return \"\";\n        }\n        for (int\
    \ i = closest - 1; i >= 0; i--) {\n            if (consonants.indexOf(word.charAt(i))\
    \ >= 0) {\n                return word.substring(closest, closest + 1);\n    \
    \        }\n        }\n        return \"\";\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result\
    \ = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i =\
    \ 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n", "        String vowels = \"aeiou\";\n \
    \       int minDistance = Integer.MAX_VALUE;\n        String closestVowel = \"\
    \";\n        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = word.length() - i;\n              \
    \  if (distance < minDistance) {\n                    minDistance = distance;\n\
    \                    closestVowel = word.substring(i, i + 1);\n              \
    \  }\n            }\n        }\n        return closestVowel;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (consonants.contains(word.substring(index, index + 1))) {\n        \
    \        index--;\n                break;\n            }\n            index--;\n\
    \        }\n        if (index < 0) {\n            return \"\";\n        }\n  \
    \      int closest = -1;\n        int distance = word.length();\n        for (int\
    \ i = 0; i < vowels.length(); i++) {\n            int vowelIndex = word.indexOf(vowels.substring(i,\
    \ i + 1), index);\n            if (vowelIndex != -1 && vowelIndex - index < distance)\
    \ {\n                distance = vowelIndex - index;\n                closest =\
    \ vowelIndex;\n            }\n        }\n        if (closest == -1) {\n      \
    \      return \"\";\n        }\n        return word.substring(closest, closest\
    \ + 1);\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        String result = \"\
    \";\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (min > k - j) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n  \
    \              if (i == word.length() - 1) {\n                    continue;\n\
    \                }\n                if (consonants.contains(word.substring(i +\
    \ 1, i + 2))) {\n                    result = word.substring(i, i + 1);\n    \
    \                break;\n                }\n            }\n        }\n       \
    \ return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n     \
    \   while (index >= 0) {\n            char c = word.charAt(index);\n         \
    \   if (vowels.indexOf(c) >= 0) {\n                return String.valueOf(c);\n\
    \            }\n            if (consonants.indexOf(c) >= 0) {\n              \
    \  break;\n            }\n            index--;\n        }\n        if (index <\
    \ 0) {\n            return \"\";\n        }\n        int minDistance = Integer.MAX_VALUE;\n\
    \        String closestVowel = \"\";\n        for (int i = 0; i < vowels.length();\
    \ i++) {\n            char vowel = vowels.charAt(i);\n            int distance\
    \ = word.lastIndexOf(vowel) - index;\n            if (distance > 0 && distance\
    \ < minDistance) {\n                minDistance = distance;\n                closestVowel\
    \ = String.valueOf(vowel);\n            }\n        }\n        return closestVowel;\n",
  "        String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String closestVowel = \"\";\n        int closestVowelIndex = -1;\n\
    \        for (int i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (closestVowelIndex == -1) {\n               \
    \     closestVowelIndex = i;\n                    closestVowel = word.substring(i,\
    \ i + 1);\n                }\n                if (i == 0) {\n                \
    \    return closestVowel;\n                }\n                if (consonants.contains(word.substring(i\
    \ - 1, i))) {\n                    return closestVowel;\n                }\n \
    \           }\n        }\n        return \"\";\n", "        String vowels = \"\
    aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int\
    \ index = word.length() - 1;\n        while (index >= 0) {\n            if (consonants.contains(word.substring(index,\
    \ index + 1))) {\n                index--;\n                break;\n         \
    \   }\n            index--;\n        }\n        if (index < 0) {\n           \
    \ return \"\";\n        }\n        int closestIndex = -1;\n        int closestDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < vowels.length(); i++) {\n\
    \            int vowelIndex = word.indexOf(vowels.substring(i, i + 1), index);\n\
    \            if (vowelIndex >= 0) {\n                int distance = vowelIndex\
    \ - index;\n                if (distance < closestDistance) {\n              \
    \      closestDistance = distance;\n                    closestIndex = vowelIndex;\n\
    \                }\n            }\n        }\n        if (closestIndex < 0) {\n\
    \            return \"\";\n        }\n        return word.substring(closestIndex,\
    \ closestIndex + 1);\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String[] wordArray = word.split(\"\");\n\
    \        String closestVowel = \"\";\n        int closestVowelIndex = 0;\n   \
    \     int closestConsonantIndex = 0;\n        for (int i = wordArray.length -\
    \ 1; i > 0; i--) {\n            if (vowels.contains(wordArray[i])) {\n       \
    \         closestVowel = wordArray[i];\n                closestVowelIndex = i;\n\
    \                break;\n            }\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i > 0; i--) {\n            if (consonants.contains(wordArray[i])) {\n \
    \               closestConsonantIndex = i;\n                break;\n         \
    \   }\n        }\n        if (closestVowelIndex - closestConsonantIndex > 1) {\n\
    \            return closestVowel;\n        } else {\n            return \"\";\n\
    \        }\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = 0;\n                for (int j = i + 1; j\
    \ < word.length(); j++) {\n                    char d = word.charAt(j);\n    \
    \                if (consonants.indexOf(d) != -1) {\n                        distance\
    \ = j - i;\n                        break;\n                    }\n          \
    \      }\n                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = \"\" + c;\n                }\n   \
    \         }\n        }\n        return result;\n", "        String vowels = \"\
    aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String\
    \ result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int\
    \ i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                int j = i - 1;\n\
    \                while (j >= 0 && consonants.indexOf(word.charAt(j)) != -1) {\n\
    \                    distance++;\n                    j--;\n                }\n\
    \                if (distance < minDistance) {\n                    minDistance\
    \ = distance;\n                    result = word.substring(i, i + 1);\n      \
    \          }\n            }\n        }\n        return result;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        int index = word.length() - 1;\n        while (index >= 0) {\n      \
    \      if (consonants.contains(word.substring(index, index + 1))) {\n        \
    \        if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index + 1, index\
    \ + 2);\n                }\n                index--;\n            } else {\n \
    \               index--;\n            }\n        }\n        return \"\";\n", " \
    \       String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int closest = -1;\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                closest = i;\n                break;\n           \
    \ }\n        }\n        if (closest == -1) {\n            return \"\";\n     \
    \   }\n        for (int i = closest - 1; i >= 0; i--) {\n            char c =\
    \ word.charAt(i);\n            if (consonants.indexOf(c) != -1) {\n          \
    \      return word.substring(closest, closest + 1);\n            }\n        }\n\
    \        return \"\";\n", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n   \
    \     int min = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiouAEIOU\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i;\n                while (j < word.length()\
    \ && consonants.indexOf(word.charAt(j)) != -1) {\n                    j++;\n \
    \               }\n                if (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    int dist = j - i;\n                    if (dist\
    \ < min) {\n                        min = dist;\n                        result\
    \ = \"\" + word.charAt(i);\n                    }\n                }\n       \
    \     }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.contains(word.substring(index, index + 1))) {\n          \
    \      if (index == 0) {\n                    return \"\";\n                }\n\
    \                if (vowels.contains(word.substring(index - 1, index))) {\n  \
    \                  index--;\n                    continue;\n                }\n\
    \                return word.substring(index, index + 1);\n            }\n   \
    \         index--;\n        }\n        return \"\";\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (vowels.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String closestVowel = \"\";\n     \
    \   int closestVowelIndex = -1;\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1))) {\n  \
    \              if (closestVowelIndex == -1) {\n                    closestVowelIndex\
    \ = i;\n                    closestVowel = word.substring(i, i + 1);\n       \
    \         } else {\n                    if (i < closestVowelIndex) {\n       \
    \                 closestVowelIndex = i;\n                        closestVowel\
    \ = word.substring(i, i + 1);\n                    }\n                }\n    \
    \        }\n        }\n        return closestVowel;\n", "        String vowels\
    \ = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        String result = \"\";\n        int index = word.length() - 1;\n   \
    \     while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                if (index + 1 < word.length() && consonants.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ minDistance = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length();\
    \ i++) {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n          \
    \      int distance = word.length() - i;\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ word.substring(i, i + 1);\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        int closestVowelIndex = -1;\n        for\
    \ (int i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                if (closestVowelIndex\
    \ == -1) {\n                    closestVowelIndex = i;\n                }\n  \
    \          } else if (consonants.indexOf(c) != -1) {\n                if (closestVowelIndex\
    \ != -1) {\n                    return word.substring(closestVowelIndex, closestVowelIndex\
    \ + 1);\n                }\n            }\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i;\
    \ j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = String.valueOf(word.charAt(i));\n                }\n       \
    \     }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else {\n            \
    \    if (sb.length() > 0) {\n                    return sb.toString();\n     \
    \           }\n            }\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ != -1) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.reverse().toString();\n                }\n            }\n        }\n    \
    \    return \"\";\n", "        String vowels = \"aeiou\";\n        int closest\
    \ = -1;\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (vowels.indexOf(word.charAt(i)) != -1) {\n                closest = i;\n   \
    \             break;\n            }\n        }\n        if (closest == -1) {\n\
    \            return \"\";\n        }\n        for (int i = closest - 1; i >= 0;\
    \ i--) {\n            if (vowels.indexOf(word.charAt(i)) == -1) {\n          \
    \      return word.substring(closest, closest + 1);\n            }\n        }\n\
    \        return \"\";\n", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int min = Integer.MAX_VALUE;\n\
    \        String closest = \"\";\n        for (int i = 0; i < word.length(); i++)\
    \ {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n               \
    \ int j = i;\n                while (j < word.length() && consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                    j++;\n                }\n                if (j\
    \ < word.length() && vowels.indexOf(word.charAt(j)) != -1) {\n               \
    \     if (j - i < min) {\n                        min = j - i;\n             \
    \           closest = String.valueOf(word.charAt(i));\n                    }\n\
    \                }\n            }\n        }\n        return closest;\n", "  \
    \      String vowels = \"aeiouAEIOU\";\n        String consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ == 0) {\n                    return \"\";\n                }\n             \
    \   if (consonants.indexOf(word.charAt(index - 1)) != -1) {\n                \
    \    return word.substring(index, index + 1);\n                }\n           \
    \ }\n            index--;\n        }\n        return \"\";\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        StringBuilder result = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     result.append(word.substring(j, j + 1));\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return result.toString();\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int min = Integer.MAX_VALUE;\n        for (int\
    \ i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n   \
    \         if (vowels.indexOf(c) != -1) {\n                int j = i + 1;\n   \
    \             while (j < word.length() && consonants.indexOf(word.charAt(j)) !=\
    \ -1) {\n                    j++;\n                }\n                if (j <\
    \ word.length() && vowels.indexOf(word.charAt(j)) == -1) {\n                 \
    \   int k = j - 1;\n                    while (k > i && consonants.indexOf(word.charAt(k))\
    \ != -1) {\n                        k--;\n                    }\n            \
    \        if (k > i && vowels.indexOf(word.charAt(k)) == -1) {\n              \
    \          if (j - i < min) {\n                            min = j - i;\n    \
    \                        result = String.valueOf(c);\n                       \
    \ }\n                    }\n                }\n            }\n        }\n    \
    \    return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        int lastVowelIndex = -1;\n        int\
    \ lastConsonantIndex = -1;\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c) !=\
    \ -1) {\n                lastVowelIndex = i;\n            } else if (consonants.indexOf(c)\
    \ != -1) {\n                lastConsonantIndex = i;\n                if (lastVowelIndex\
    \ != -1) {\n                    return word.substring(lastVowelIndex, lastVowelIndex\
    \ + 1);\n                }\n            }\n        }\n        return \"\";\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int distance = 0;\n                for (int j = i\
    \ + 1; j < word.length(); j++) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = word.substring(i, i + 1);\n                }\n            }\n\
    \        }\n        return result;\n", "        String vowels = \"aeiou\";\n \
    \       String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            String currentLetter = word.substring(i, i\
    \ + 1);\n            if (vowels.contains(currentLetter)) {\n                if\
    \ (closestVowelIndex == -1) {\n                    closestVowelIndex = i;\n  \
    \                  closestVowel = currentLetter;\n                }\n        \
    \        else {\n                    if (i + 1 < closestVowelIndex && consonants.contains(word.substring(i\
    \ + 1, i + 2))) {\n                        closestVowelIndex = i;\n          \
    \              closestVowel = currentLetter;\n                    }\n        \
    \        }\n            }\n        }\n        return closestVowel;\n", "     \
    \   String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int min = Integer.MAX_VALUE;\n     \
    \   for (int i = 0; i < word.length(); i++) {\n            if (vowels.indexOf(word.charAt(i))\
    \ != -1) {\n                int j = i + 1;\n                while (j < word.length()\
    \ && consonants.indexOf(word.charAt(j)) != -1) {\n                    j++;\n \
    \               }\n                if (j < word.length() && vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                    continue;\n                }\n               \
    \ if (j - i < min) {\n                    min = j - i;\n                    result\
    \ = word.substring(i, i + 1);\n                }\n            }\n        }\n \
    \       return result;\n", "        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int closestVowelIndex = -1;\n\
    \        int closestVowelDistance = Integer.MAX_VALUE;\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (consonants.contains(word.substring(i, i\
    \ + 1))) {\n                for (int j = i - 1; j >= 0; j--) {\n             \
    \       if (vowels.contains(word.substring(j, j + 1))) {\n                   \
    \     if (i - j < closestVowelDistance) {\n                            closestVowelDistance\
    \ = i - j;\n                            closestVowelIndex = j;\n             \
    \           }\n                    }\n                }\n            }\n     \
    \   }\n        if (closestVowelIndex == -1) {\n            return \"\";\n    \
    \    }\n        return word.substring(closestVowelIndex, closestVowelIndex + 1);\n",
  "        String[] vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};\n        String[]\
    \ consonants = {\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"};\n        String[] wordArray = word.split(\"\");\n        int index =\
    \ wordArray.length - 1;\n        while (index > 0) {\n            if (Arrays.asList(consonants).contains(wordArray[index])\
    \ && Arrays.asList(consonants).contains(wordArray[index - 1])) {\n           \
    \     for (int i = index; i >= 0; i--) {\n                    if (Arrays.asList(vowels).contains(wordArray[i]))\
    \ {\n                        return wordArray[i];\n                    }\n   \
    \             }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiouAEIOU\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--)\
    \ {\n            if (vowels.indexOf(word.charAt(i)) != -1) {\n               \
    \ sb.append(word.charAt(i));\n            } else if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                break;\n            }\n        }\n        if (sb.length()\
    \ == 0) {\n            return \"\";\n        }\n        return sb.reverse().toString();\n",
  "        // Write your code here\n        String vowels = \"aeiou\";\n        String\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n   \
    \     int index = word.length() - 1;\n        while (index >= 0) {\n         \
    \   if (vowels.contains(word.substring(index, index + 1))) {\n               \
    \ if (index + 1 < word.length() && consonants.contains(word.substring(index +\
    \ 1, index + 2))) {\n                    if (index - 1 >= 0 && consonants.contains(word.substring(index\
    \ - 1, index))) {\n                        result = word.substring(index, index\
    \ + 1);\n                        break;\n                    }\n             \
    \   }\n            }\n            index--;\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String result = \"\";\n        int\
    \ index = word.length() - 1;\n        while (index >= 0) {\n            if (vowels.contains(word.substring(index,\
    \ index + 1))) {\n                result = word.substring(index, index + 1);\n\
    \                break;\n            }\n            index--;\n        }\n    \
    \    return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int min\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          if (vowels.indexOf(word.charAt(i)) != -1) {\n                int j\
    \ = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ == -1) {\n                    j--;\n                }\n                if (j\
    \ >= 0) {\n                    int k = i + 1;\n                    while (k <\
    \ word.length() && consonants.indexOf(word.charAt(k)) == -1) {\n             \
    \           k++;\n                    }\n                    if (k < word.length())\
    \ {\n                        if (k - j < min) {\n                            min\
    \ = k - j;\n                            result = word.substring(i, i + 1);\n \
    \                       }\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n", "        String vowels = \"aeiou\"\
    ;\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        int closestVowelIndex\
    \ = -1;\n        int closestVowelDistance = Integer.MAX_VALUE;\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = word.length()\
    \ - i;\n                if (distance < closestVowelDistance) {\n             \
    \       closestVowelDistance = distance;\n                    closestVowelIndex\
    \ = i;\n                }\n            }\n        }\n        if (closestVowelIndex\
    \ == -1) {\n            return \"\";\n        }\n        for (int i = closestVowelIndex\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (consonants.indexOf(c)\
    \ != -1) {\n                return word.substring(closestVowelIndex, closestVowelIndex\
    \ + 1);\n            }\n        }\n        return \"\";\n", "        String vowels\
    \ = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n     \
    \   String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n    \
    \    for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char c2 = word.charAt(j);\n                    if (consonants.indexOf(c2)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = \"\" + c;\n                }\n            }\n        }\n   \
    \     return result;\n", "        String vowels = \"aeiou\";\n        String closestVowel\
    \ = \"\";\n        int closestVowelIndex = -1;\n        int closestVowelDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.indexOf(word.charAt(i)) != -1) {\n                int\
    \ vowelIndex = i;\n                int vowelDistance = word.length() - 1 - vowelIndex;\n\
    \                if (vowelDistance < closestVowelDistance) {\n               \
    \     closestVowelDistance = vowelDistance;\n                    closestVowelIndex\
    \ = vowelIndex;\n                }\n            }\n        }\n        if (closestVowelIndex\
    \ != -1) {\n            closestVowel = word.substring(closestVowelIndex, closestVowelIndex\
    \ + 1);\n        }\n        return closestVowel;\n", "        char[] vowels =\
    \ {'a', 'e', 'i', 'o', 'u'};\n        char[] consonants = {'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'};\n        char[] chars = word.toCharArray();\n        int closestVowelIndex\
    \ = -1;\n        int closestConsonantIndex = -1;\n        for (int i = chars.length\
    \ - 1; i >= 0; i--) {\n            char c = chars[i];\n            if (Arrays.binarySearch(vowels,\
    \ c) >= 0) {\n                closestVowelIndex = i;\n            } else if (Arrays.binarySearch(consonants,\
    \ c) >= 0) {\n                closestConsonantIndex = i;\n                break;\n\
    \            }\n        }\n        if (closestVowelIndex == -1 || closestConsonantIndex\
    \ == -1) {\n            return \"\";\n        }\n        return String.valueOf(chars[closestVowelIndex]);\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                for (int j = i + 1; j < word.length(); j++) {\n             \
    \       char d = word.charAt(j);\n                    if (consonants.indexOf(d)\
    \ != -1) {\n                        distance = j - i;\n                      \
    \  break;\n                    }\n                }\n                if (distance\
    \ < minDistance) {\n                    minDistance = distance;\n            \
    \        result = String.valueOf(c);\n                }\n            }\n     \
    \   }\n        return result;\n", "        String vowels = \"aeiou\";\n      \
    \  String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (consonants.contains(word.substring(i, i + 1))) {\n          \
    \      sb.append(word.substring(i, i + 1));\n            } else if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                sb.append(word.substring(i, i + 1));\n         \
    \       break;\n            }\n        }\n        if (sb.length() < 2) {\n   \
    \         return \"\";\n        }\n        return sb.reverse().toString();\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int index = word.length() - 1;\n        while (index >= 0) {\n    \
    \        if (vowels.indexOf(word.charAt(index)) != -1) {\n                if (index\
    \ != 0 && index != word.length() - 1) {\n                    if (consonants.indexOf(word.charAt(index\
    \ - 1)) != -1 &&\n                        consonants.indexOf(word.charAt(index\
    \ + 1)) != -1) {\n                        return word.substring(index, index +\
    \ 1);\n                    }\n                }\n            }\n            index--;\n\
    \        }\n        return \"\";\n", "        String vowels = \"aeiou\";\n   \
    \     String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result =\
    \ \"\";\n        int minDistance = Integer.MAX_VALUE;\n        for (int i = 0;\
    \ i < word.length(); i++) {\n            char c = word.charAt(i);\n          \
    \  if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n       \
    \         for (int j = i + 1; j < word.length(); j++) {\n                    char\
    \ c2 = word.charAt(j);\n                    if (consonants.indexOf(c2) != -1)\
    \ {\n                        distance = j - i;\n                        break;\n\
    \                    }\n                }\n                if (distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ \"\" + c;\n                }\n            }\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        StringBuilder result = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i, i + 1)))\
    \ {\n                result.append(word.substring(i, i + 1));\n              \
    \  break;\n            }\n        }\n        return result.toString();\n", " \
    \       String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int i = word.length() - 1;\n        while (i >= 0) {\n            if\
    \ (consonants.contains(word.substring(i, i + 1))) {\n                int j = i\
    \ - 1;\n                while (j >= 0) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        return word.substring(j, j + 1);\n     \
    \               }\n                    if (consonants.contains(word.substring(j,\
    \ j + 1))) {\n                        return \"\";\n                    }\n  \
    \                  j--;\n                }\n            }\n            i--;\n\
    \        }\n        return \"\";\n", "        String vowels = \"aeiou\";\n   \
    \     String consonants = \"bcdfghjklmnpqrstvwxyz\";\n        String result =\
    \ \"\";\n        for (int i = word.length() - 1; i >= 0; i--) {\n            if\
    \ (consonants.contains(word.substring(i, i + 1))) {\n                for (int\
    \ j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        for (int i = word.length() - 1; i >=\
    \ 0; i--) {\n            if (consonants.contains(word.substring(i, i + 1))) {\n\
    \                for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.contains(word.substring(j,\
    \ j + 1))) {\n                        result = word.substring(j, j + 1);\n   \
    \                     break;\n                    }\n                }\n     \
    \           break;\n            }\n        }\n        return result;\n", "   \
    \     String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int closest = -1;\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.indexOf(word.charAt(i)) != -1) {\n      \
    \          for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        closest = j;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return closest == -1 ? \"\" : word.substring(closest,\
    \ closest + 1);\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        for (int\
    \ i = word.length() - 1; i >= 0; i--) {\n            if (vowels.contains(word.substring(i,\
    \ i + 1))) {\n                if (i == word.length() - 1) {\n                \
    \    continue;\n                }\n                if (consonants.contains(word.substring(i\
    \ + 1, i + 2))) {\n                    result = word.substring(i, i + 1);\n  \
    \                  break;\n                }\n            }\n        }\n     \
    \   return result;\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int minDistance\
    \ = Integer.MAX_VALUE;\n        for (int i = 0; i < word.length(); i++) {\n  \
    \          char c = word.charAt(i);\n            if (vowels.indexOf(c) != -1)\
    \ {\n                int distance = 0;\n                for (int j = i + 1; j\
    \ < word.length(); j++) {\n                    char c2 = word.charAt(j);\n   \
    \                 if (consonants.indexOf(c2) != -1) {\n                      \
    \  distance = j - i;\n                        break;\n                    }\n\
    \                }\n                if (distance > 0 && distance < minDistance)\
    \ {\n                    minDistance = distance;\n                    result =\
    \ String.valueOf(c);\n                }\n            }\n        }\n        return\
    \ result;\n", "        String vowels = \"aeiou\";\n        String consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\";\n        String result = \"\";\n        int min =\
    \ Integer.MAX_VALUE;\n        for (int i = word.length() - 1; i >= 0; i--) {\n\
    \            if (vowels.indexOf(word.charAt(i)) != -1) {\n                for\
    \ (int j = i - 1; j >= 0; j--) {\n                    if (consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                        if (i - j < min) {\n                     \
    \       min = i - j;\n                            result = word.substring(i, i\
    \ + 1);\n                        }\n                        break;\n         \
    \           }\n                }\n            }\n        }\n        return result;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        int closest = -1;\n        for (int i = word.length() - 1; i >= 0;\
    \ i--) {\n            if (consonants.indexOf(word.charAt(i)) != -1) {\n      \
    \          for (int j = i - 1; j >= 0; j--) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        closest = j;\n                        break;\n\
    \                    }\n                }\n                break;\n          \
    \  }\n        }\n        return closest == -1 ? \"\" : word.substring(closest,\
    \ closest + 1);\n", "        String vowels = \"aeiou\";\n        String consonants\
    \ = \"bcdfghjklmnpqrstvwxyz\";\n        int closest = -1;\n        for (int i\
    \ = word.length() - 1; i >= 0; i--) {\n            if (consonants.indexOf(word.charAt(i))\
    \ != -1) {\n                for (int j = i - 1; j >= 0; j--) {\n             \
    \       if (vowels.indexOf(word.charAt(j)) != -1) {\n                        if\
    \ (closest == -1 || i - j < closest) {\n                            closest =\
    \ i - j;\n                        }\n                    }\n                }\n\
    \            }\n        }\n        if (closest == -1) {\n            return \"\
    \";\n        }\n        for (int i = word.length() - 1; i >= 0; i--) {\n     \
    \       if (consonants.indexOf(word.charAt(i)) != -1) {\n                for (int\
    \ j = i - 1; j >= 0; j--) {\n                    if (vowels.indexOf(word.charAt(j))\
    \ != -1) {\n                        if (i - j == closest) {\n                \
    \            return word.substring(j, j + 1);\n                        }\n   \
    \                 }\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                break;\n            }\n            index--;\n    \
    \    }\n        if (index < 0) {\n            return \"\";\n        }\n      \
    \  int index2 = index - 1;\n        while (index2 >= 0) {\n            if (consonants.contains(word.substring(index2,\
    \ index2 + 1))) {\n                break;\n            }\n            index2--;\n\
    \        }\n        if (index2 < 0) {\n            return \"\";\n        }\n \
    \       int min = Integer.MAX_VALUE;\n        String result = \"\";\n        for\
    \ (int i = 0; i < vowels.length(); i++) {\n            if (word.substring(index2,\
    \ index2 + 1).equals(vowels.substring(i, i + 1))) {\n                return vowels.substring(i,\
    \ i + 1);\n            }\n            if (word.substring(index, index + 1).equals(vowels.substring(i,\
    \ i + 1))) {\n                return vowels.substring(i, i + 1);\n           \
    \ }\n            if (Math.abs(index - index2) < min) {\n                min =\
    \ Math.abs(index - index2);\n                result = vowels.substring(i, i +\
    \ 1);\n            }\n        }\n        return result;\n", "        String vowels\
    \ = \"aeiou\";\n        String closestVowel = \"\";\n        int closestVowelIndex\
    \ = word.length();\n        for (int i = word.length() - 1; i >= 0; i--) {\n \
    \           if (vowels.contains(word.substring(i, i + 1))) {\n               \
    \ if (i + 1 < word.length() && !vowels.contains(word.substring(i + 1, i + 2)))\
    \ {\n                    if (i - 1 >= 0 && !vowels.contains(word.substring(i -\
    \ 1, i))) {\n                        if (i < closestVowelIndex) {\n          \
    \                  closestVowelIndex = i;\n                            closestVowel\
    \ = word.substring(i, i + 1);\n                        }\n                   \
    \ }\n                }\n            }\n        }\n        return closestVowel;\n",
  "        String vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\"\
    ;\n        String result = \"\";\n        int minDistance = Integer.MAX_VALUE;\n\
    \        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n\
    \            if (vowels.indexOf(c) != -1) {\n                int distance = 0;\n\
    \                int j = i - 1;\n                while (j >= 0 && consonants.indexOf(word.charAt(j))\
    \ != -1) {\n                    distance++;\n                    j--;\n      \
    \          }\n                if (distance < minDistance) {\n                \
    \    minDistance = distance;\n                    result = \"\" + c;\n       \
    \         }\n            }\n        }\n        return result;\n", "        String\
    \ vowels = \"aeiou\";\n        String consonants = \"bcdfghjklmnpqrstvwxyz\";\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = word.length()\
    \ - 1; i >= 0; i--) {\n            char c = word.charAt(i);\n            if (vowels.indexOf(c)\
    \ >= 0) {\n                sb.append(c);\n            } else if (consonants.indexOf(c)\
    \ >= 0) {\n                if (sb.length() > 0) {\n                    return\
    \ sb.toString();\n                }\n            }\n        }\n        return\
    \ \"\";\n", "        String vowels = \"aeiou\";\n        String consonants = \"\
    bcdfghjklmnpqrstvwxyz\";\n        int index = word.length() - 1;\n        while\
    \ (index >= 0) {\n            if (consonants.contains(word.substring(index, index\
    \ + 1))) {\n                if (index + 1 < word.length() && vowels.contains(word.substring(index\
    \ + 1, index + 2))) {\n                    return word.substring(index + 1, index\
    \ + 2);\n                }\n                if (index - 1 >= 0 && vowels.contains(word.substring(index\
    \ - 1, index))) {\n                    return word.substring(index - 1, index);\n\
    \                }\n            }\n            index--;\n        }\n        return\
    \ \"\";\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_39_prime_fib
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps0h74o8v.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (true) {\n            if (isPrime(c)) {\n      \
    \          if (i == n) {\n                    return c;\n                }\n \
    \               i++;\n            }\n            a = b;\n            b = c;\n\
    \            c = a + b;\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphxfl0ysx.java:26: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe543v2yq.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ylkrb6d.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfesps81l.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpebfkx4uo.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl4vr75ew.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n        }\n        return c;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8te77y0c.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i += 1;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmputtss6c6.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbtyjxls.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphbd1z0a8.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpac0heywv.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 5;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy09zhq_w.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo__53ti0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm1wjykfs.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplwal4arb.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3nibkt5u.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsyyrx62f.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long i = 0;\n        long j = 1;\n        long k = 0;\n      \
    \  long count = 0;\n        while (count < n) {\n            k = i + j;\n    \
    \        i = j;\n            j = k;\n            if (isPrime(k)) {\n         \
    \       count++;\n            }\n        }\n        return k;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpadjmog4e.java:29: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr9co9z2o.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmply8p1wtl.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1hxka1j_.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 2;\n        while (count < n) {\n            a = b;\n        \
    \    b = c;\n            c = a + b;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvspeiw_4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3uhdhvp8.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0ceqh_l.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4qxrntlu.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6d33991w.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpajb6f6d4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw3lltnwj.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptf9e3jl2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5r3wnqw.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ys1znmw.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdtt39ucd.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps81rjnqf.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeu7jv19u.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8ubb_9az.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp94hh782c.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp33fyigkb.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr1s7r0q0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoe8rqkeu.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6igelj1y.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz6tjoe6l.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i += 1;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpffrhxpj5.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkrcm29z2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj_8gf35k.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5g3je7pn.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9ie0rvam.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6581l5xb.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // Your code here.\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ezfnhvg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfsufjec2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 5;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps1eq79hm.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4xrug9zw.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxjjy4jma.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_kr1nhj3.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjr487a_0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvbeibzq3.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long i = 0;\n        long j = 1;\n        long k = 0;\n      \
    \  long count = 0;\n        while (count < n) {\n            k = i + j;\n    \
    \        i = j;\n            j = k;\n            if (isPrime(k)) {\n         \
    \       count++;\n            }\n        }\n        return k;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnw7vx975.java:29: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i = i + 1;\n        }\n        return c;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphwybh7v6.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphp2bcyh1.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6h6nmxux.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long i = 1;\n        long j = 1;\n        long k = 2;\n      \
    \  long count = 1;\n        while (count < n) {\n            if (isPrime(k)) {\n\
    \                count++;\n            }\n            i = j;\n            j =\
    \ k;\n            k = i + j;\n        }\n        return k;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0eph18o9.java:26: error: cannot find symbol\n            if (isPrime(k))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprv876xk0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3cg6nzaa.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpll5n510h.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpif9xuscg.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp56xfirqt.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // Your code here\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2sbsryox.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppxsb87uo.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // TODO: implement this method\n        return 0;\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7guf29tc.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long[] fib = new long[100];\n        fib[0] = 1;\n        fib[1]\
    \ = 1;\n        int i = 2;\n        while (true) {\n            fib[i] = fib[i\
    \ - 1] + fib[i - 2];\n            if (isPrime(fib[i])) {\n                n--;\n\
    \                if (n == 0) {\n                    return fib[i];\n         \
    \       }\n            }\n            i++;\n        }\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsswcxgsz.java:27: error: cannot find symbol\n            if (isPrime(fib[i]))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkccce72q.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ov8yaiq.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp820hrenu.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1qt0i1re.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 2;\n        while (count < n) {\n            c = a + b;\n    \
    \        a = b;\n            b = c;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxwp3m8w.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0cyiee68.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long i = 1;\n        long j = 1;\n        long k = 1;\n      \
    \  while (k < n) {\n            long t = i + j;\n            i = j;\n        \
    \    j = t;\n            if (isPrime(j)) {\n                k++;\n           \
    \ }\n        }\n        return j;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa2t2e7qh.java:28: error: cannot find symbol\n            if (isPrime(j))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxk79fto9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_wd8fdvp.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsghtu61a.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjbd5g0xw.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += 2;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplhoxb7dt.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += 2;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // Your code here\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0zt81zfl.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp68_3net2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpycq7iuf0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu29g932x.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvf15b2m4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxbl47v7f.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0f9_9hp6.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph6qr7ern.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i = i + 1;\n        }\n        return c;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkichx5m1.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long count = 0;\n  \
    \      long c = 0;\n        while (count < n) {\n            c = a + b;\n    \
    \        a = b;\n            b = c;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpinopdxn6.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp9884tl4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppgvqvqln.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88eek733.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpytcmp9vj.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0g3nft61.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i +=\
    \ 1;\n            }\n        }\n        return c;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprfkdm68a.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = a + b;\n  \
    \      long i = 2;\n        while (i < n) {\n            a = b;\n            b\
    \ = c;\n            c = a + b;\n            if (isPrime(c)) {\n              \
    \  i++;\n            }\n        }\n        return c;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_0e0ci8e.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i <= n) {\n            c = a + b;\n           \
    \ a = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprfus8bmx.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjn58dt6j.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2jpaksi.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // BEGIN\n        long a = 2;\n        long b = 3;\n        long\
    \ c = 5;\n        long i = 3;\n        while (i < n) {\n            a = b;\n \
    \           b = c;\n            c = a + b;\n            if (isPrime(c)) {\n  \
    \              i++;\n            }\n        }\n        return c;\n        // END\n\
    \n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph6ui5heh.java:30: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 2;\n        while (count < n) {\n            a = b;\n        \
    \    b = c;\n            c = a + b;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp23ocpp65.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp738s4p6x.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n            while (!isPrime(c)) {\n\
    \                a = b;\n                b = c;\n                c = a + b;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwg8avcs0.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        throw new UnsupportedOperationException(\"Not implemented yet\"\
    );\n\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.primeFib(tmpah9fs2lp.java:21)\n\tat Problem.main(tmpah9fs2lp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnx0xelgi.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long[] fib = new long[(int)n];\n        fib[0] = 2;\n        fib[1]\
    \ = 3;\n        for (int i = 2; i < n; i++) {\n            fib[i] = fib[i - 1]\
    \ + fib[i - 2];\n        }\n        return fib[(int)n - 1];\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.ArrayIndexOutOfBoundsException:\
    \ Index 1 out of bounds for length 1\n\tat Problem.primeFib(tmpd6vsdgct.java:23)\n\
    \tat Problem.main(tmpd6vsdgct.java:31)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) {\n    \
    \            d = a + b;\n                a = b;\n                b = c;\n    \
    \            c = d;\n            }\n        }\n        return c;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ys4n9q0.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n            while (!isPrime(c)) {\n\
    \                a = b;\n                b = c;\n                c = a + b;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnphgteyg.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpybsyw7nc.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1dzdd00v.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 2;\n        while (count < n) {\n            a = b;\n        \
    \    b = c;\n            c = a + b;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpibwy6i_o.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 1;\n        while (count < n) {\n            c = a + b;\n    \
    \        a = b;\n            b = c;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdrb5jfx4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplrqkjzt0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7esb2kha.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp869sn4b4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprx5b2kp9.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 0;\n        while (count < n) {\n            if (isPrime(c)) {\n\
    \                count++;\n            }\n            if (count == n) {\n    \
    \            return c;\n            }\n            a = b;\n            b = c;\n\
    \            c = a + b;\n        }\n        return -1;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph5siqojj.java:26: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp51blehe8.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp85c5etnd.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7od81qa7.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfu8qkuxv.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long i = 2;\n        long j = 3;\n        long k = 5;\n      \
    \  long l = 0;\n        long m = 0;\n        long count = 0;\n        while (count\
    \ < n) {\n            if (isPrime(i) && isPrime(j) && isPrime(k)) {\n        \
    \        l = i + j + k;\n                if (isPrime(l)) {\n                 \
    \   count++;\n                    m = l;\n                }\n            }\n \
    \           i = j;\n            j = k;\n            k = l;\n        }\n      \
    \  return m;\n\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbc45q7z.java:28: error: cannot find symbol\n            if (isPrime(i)\
    \ && isPrime(j) && isPrime(k)) {\n                ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n/tmp/tmppbc45q7z.java:28: error: cannot find symbol\n\
    \            if (isPrime(i) && isPrime(j) && isPrime(k)) {\n                 \
    \             ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    /tmp/tmppbc45q7z.java:28: error: cannot find symbol\n            if (isPrime(i)\
    \ && isPrime(j) && isPrime(k)) {\n                                           \
    \ ^\n  symbol:   method isPrime(long)\n  location: class Problem\n/tmp/tmppbc45q7z.java:30:\
    \ error: cannot find symbol\n                if (isPrime(l)) {\n             \
    \       ^\n  symbol:   method isPrime(long)\n  location: class Problem\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqw5ojzm_.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (true) {\n            c = a + b;\n            if\
    \ (i == n) {\n                return c;\n            }\n            if (isPrime(c))\
    \ {\n                i++;\n            }\n            a = b;\n            b =\
    \ c;\n        }\n\n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr0ktuzyr.java:30: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i <= n) {\n            a = b;\n            b =\
    \ c;\n            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2519xxh9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt6giovls.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i = i + 1;\n        }\n        return c;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmk7o_ol.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i = i + 1;\n        }\n        return c;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyeevpxqd.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt4j_c2k3.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiahn67mn.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long count = 1;\n        while (count < n) {\n            c = a + b;\n    \
    \        a = b;\n            b = c;\n            if (isPrime(c)) {\n         \
    \       count++;\n            }\n        }\n        return c;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw8o8fc9c.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9tglhxk9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj3v7db9a.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long p = 1;\n        long q = 1;\n        long i = 1;\n      \
    \  while (i < n) {\n            long t = p + q;\n            p = q;\n        \
    \    q = t;\n            if (isPrime(q)) {\n                i++;\n           \
    \ }\n        }\n        return q;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfio9oitj.java:28: error: cannot find symbol\n            if (isPrime(q))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += 2;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqmzpffmd.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += 2;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9gj7_pgy.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphfsofh40.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz1uzyqmd.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkiezdu59.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2e8po9d.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgwwmb9k9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoo95bxjj.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvgbiph9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1byc4ouh.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long f1 = 2;\n        long f2 = 3;\n        long fn = 0;\n   \
    \     long count = 2;\n        while (count < n) {\n            fn = f1 + f2;\n\
    \            f1 = f2;\n            f2 = fn;\n            if (isPrime(fn)) {\n\
    \                count++;\n            }\n        }\n        return fn;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp588b2bdv.java:29: error: cannot find symbol\n            if (isPrime(fn))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_k07ywv9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            if (isPrime(c)) {\n     \
    \           i++;\n            }\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n        }\n        return c;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf68jgnu5.java:26: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long f1 = 2;\n        long f2 = 3;\n        long f3 = 5;\n   \
    \     long i = 3;\n        while (i < n) {\n            f1 = f2;\n           \
    \ f2 = f3;\n            f3 = f1 + f2;\n            if (isPrime(f3)) {\n      \
    \          i++;\n            }\n        }\n        return f3;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9ufmrtwq.java:29: error: cannot find symbol\n            if (isPrime(f3))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxu7a7adt.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // Your code here\n        return 0;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpox5hkrzq.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpid6mt9a9.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1f6bu1f0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkab9mi5b.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp641x94op.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn7hyowce.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxlpdwg8v.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i +=\
    \ 1;\n            }\n        }\n        return c;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxo9cmcc9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3lej0mzg.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2z8squ4o.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3o244vuk.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzx080fvv.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkwqayi3b.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7cdnvu0_.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i +=\
    \ 1;\n            }\n        }\n        return c;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfhfh_hwb.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8_mr_rug.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqw_8eu2.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvic3re9w.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2, b = 3, c = 5;\n        if (n == 1) return a;\n   \
    \     if (n == 2) return b;\n        if (n == 3) return c;\n        for (long\
    \ i = 4; i <= n; i++) {\n            long d = a + b;\n            a = b;\n   \
    \         b = c;\n            c = d;\n            while (!isPrime(c)) c += b;\n\
    \        }\n        return c;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpadjeujpb.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) c += b;\n                    ^\n  symbol:   method isPrime(long)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpso2ycfqq.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfwev9bz7.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq97j5w6p.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnrtvxky.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 2;\n        while (true) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \                if (i == n) {\n                    return c;\n              \
    \  }\n            }\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9zlih_a0.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        // TODO: Implement me!\n        return 0;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp49klcj0d.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp52oan91c.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg84pbcm3.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphbsewz09.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjxbp6o2i.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpibsglzfq.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq6rv30pa.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmklt40cd.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            i++;\n            while (!isPrime(c))\
    \ {\n                c = a + b;\n                a = b;\n                b = c;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbemvff_h.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 1;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn65lp2r3.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n            while (!isPrime(c)) {\n\
    \                a = b;\n                b = c;\n                c = a + b;\n\
    \                i++;\n            }\n        }\n        return c;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjfr_6c6c.java:30: error: cannot find symbol\n            while\
    \ (!isPrime(c)) {\n                    ^\n  symbol:   method isPrime(long)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8i7bxsj4.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplqpb607x.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            i++;\n        }\n        return c;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesiekufs.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpia00coh9.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9dn47lj_.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 0;\n      \
    \  long i = 0;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpawe8h2o2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            c = a + b;\n            a\
    \ = b;\n            b = c;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq_tikj4p.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbqcr5pud.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjbyy2w1o.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiaa4hqzv.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 1;\n        long b = 1;\n        long c = 2;\n      \
    \  long i = 2;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw9jkvlmv.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprepa8k4s.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // prime_fib returns n-th number that is a Fibonacci number\
    \ and it's also prime.\n    // >>> prime_fib(1)\n    // 2\n    // >>> prime_fib(2)\n\
    \    // 3\n    // >>> prime_fib(3)\n    // 5\n    // >>> prime_fib(4)\n    //\
    \ 13\n    // >>> prime_fib(5)\n    // 89\n    public static long primeFib(long\
    \ n) {\n        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (isPrime(c)) {\n                i++;\n\
    \            }\n        }\n        return c;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8i47ufe2.java:29: error: cannot find symbol\n            if (isPrime(c))\
    \ {\n                ^\n  symbol:   method isPrime(long)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError

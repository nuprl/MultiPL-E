name: HumanEval_18_how_many_times
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Find how many times a given substring can be found in the\
  \ original string. Count overlaping cases.\n    // >>> how_many_times('', 'a')\n\
  \    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>> how_many_times('aaaa',\
  \ 'aa')\n    // 3\n    public static long howManyTimes(String string, String substring)\
  \ {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
  \"), (\"x\")) == (0l));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4l));\n\
  \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4l));\n    assert(howManyTimes((\"\
  john doe\"), (\"john\")) == (1l));\n    }\n\n}\n"
completions: ["        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                boolean\
    \ found = true;\n                for (int j = 1; j < substring.length(); j++)\
    \ {\n                    if (i + j >= string.length() || string.charAt(i + j)\
    \ != substring.charAt(j)) {\n                        found = false;\n        \
    \                break;\n                    }\n                }\n          \
    \      if (found) {\n                    count++;\n                }\n       \
    \     }\n        }\n        return count;\n", "        long count = 0;\n     \
    \   int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         boolean found = true;\n                for (int j = 1; j < substring.length();\
    \ j++) {\n                    if (i + j >= string.length() || string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                        found = false;\n   \
    \                     break;\n                    }\n                }\n     \
    \           if (found) {\n                    count++;\n                }\n  \
    \          }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        long count = 0;\n       \
    \ for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        return string.chars().mapToObj(c -> (char) c).collect(Collectors.groupingBy(c\
    \ -> c, Collectors.counting())).entrySet().stream().map(e -> e.getValue() / substring.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.groupingBy(c -> c, Collectors.counting())).get(e.getKey())).reduce(1L,\
    \ (a, b) -> a * b);\n", "        long count = 0;\n        int index = 0;\n   \
    \     while (index != -1) {\n            index = string.indexOf(substring, index);\n\
    \            if (index != -1) {\n                count++;\n                index\
    \ += substring.length();\n            }\n        }\n        return count;\n",
  "        if (string.length() == 0 || substring.length() == 0) return 0;\n      \
    \  long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n    \
    \        if (string.charAt(i) == substring.charAt(0)) {\n                if (string.length()\
    \ - i < substring.length()) break;\n                if (string.substring(i, i\
    \ + substring.length()).equals(substring)) count++;\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0;\n        }\n     \
    \   long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      return 0;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        int count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        return string.length()\
    \ - string.replace(substring, \"\").length();\n", "        return 0;\n", "   \
    \     long count = 0;\n        int index = 0;\n        while (index < string.length())\
    \ {\n            index = string.indexOf(substring, index);\n            if (index\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        index++;\n        }\n        return count;\n", "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = 0;\n        while (index < string.length())\
    \ {\n            index = string.indexOf(substring, index);\n            if (index\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        index++;\n        }\n        return count;\n", "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n", "        return 0;\n", " \
    \       long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        return 0;\n", "        return string.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().reduce(0L, (acc, c) -> {\n\
    \            if (c == substring.charAt(0)) {\n                if (string.substring(string.indexOf(c)).startsWith(substring))\
    \ {\n                    return acc + 1;\n                }\n            }\n \
    \           return acc;\n        }, (a, b) -> a + b);\n", "        long count\
    \ = 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          index += substring.length();\n                count++;\n          \
    \  }\n        }\n        return count;\n", "        long count = 0;\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) ==\
    \ substring.charAt(0)) {\n                boolean found = true;\n            \
    \    for (int j = 1; j < substring.length(); j++) {\n                    if (i\
    \ + j >= string.length() || string.charAt(i + j) != substring.charAt(j)) {\n \
    \                       found = false;\n                        break;\n     \
    \               }\n                }\n                if (found) {\n         \
    \           count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        return 0;\n", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        return 0;\n", "        long result = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    result++;\n                }\n            }\n        }\n\
    \        return result;\n", "        long count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;\n", "        long count\
    \ = 0;\n        int index = 0;\n        while (index < string.length()) {\n  \
    \          int indexOf = string.indexOf(substring, index);\n            if (indexOf\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        index = indexOf + 1;\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = 0;\n        while (index != -1) {\n        \
    \    index = string.indexOf(substring, index);\n            if (index != -1) {\n\
    \                count++;\n                index += substring.length();\n    \
    \        }\n        }\n        return count;\n", "        long count = 0;\n  \
    \      int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = 0;\n        while (index < string.length())\
    \ {\n            index = string.indexOf(substring, index);\n            if (index\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        index++;\n        }\n        return count;\n", "        long count =\
    \ 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (true) {\n            index = string.indexOf(substring, index);\n\
    \            if (index == -1) {\n                break;\n            }\n     \
    \       count++;\n            index++;\n        }\n        return count;\n", " \
    \       long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        long count = 0;\n        int index = 0;\n \
    \       while (index != -1) {\n            index = string.indexOf(substring, index);\n\
    \            if (index != -1) {\n                count++;\n                index\
    \ += substring.length();\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", '        return string.chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()).collect(Collectors.joining()).chars().mapToObj(c -> (char) c).collect(Collectors.toList()).stream().map(c
    -> c.toString()', "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        long count = 0;\n        int index = 0;\n \
    \       while (index != -1) {\n            index = string.indexOf(substring, index);\n\
    \            if (index != -1) {\n                count++;\n                index\
    \ += substring.length();\n            }\n        }\n        return count;\n",
  "        int count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index < string.length()) {\n         \
    \   index = string.indexOf(substring, index);\n            if (index == -1) {\n\
    \                break;\n            }\n            count++;\n            index++;\n\
    \        }\n        return count;\n", "        return 0;\n", "        long count\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        found\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (found) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = 0;\n        while (index != -1) {\n        \
    \    index = string.indexOf(substring, index);\n            if (index != -1) {\n\
    \                index += substring.length();\n                count++;\n    \
    \        }\n        }\n        return count;\n", "        long count = 0;\n  \
    \      int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         boolean found = true;\n                for (int j = 1; j < substring.length();\
    \ j++) {\n                    if (i + j >= string.length() || string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                        found = false;\n   \
    \                     break;\n                    }\n                }\n     \
    \           if (found) {\n                    count++;\n                }\n  \
    \          }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index < string.length()) {\n         \
    \   index = string.indexOf(substring, index);\n            if (index == -1) {\n\
    \                break;\n            }\n            count++;\n            index++;\n\
    \        }\n        return count;\n", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean match = true;\n                for (int j = 1; j\
    \ < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        match\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (match) {\n                    count++;\n       \
    \         }\n            }\n        }\n        return count;\n", "        int\
    \ count = 0;\n        int index = 0;\n        while (index != -1) {\n        \
    \    index = string.indexOf(substring, index);\n            if (index != -1) {\n\
    \                count++;\n                index += substring.length();\n    \
    \        }\n        }\n        return count;\n", "        return string.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        return 0;\n", " \
    \       long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.startsWith(substring, i)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        return 0;\n", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        return 0;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      return 0;\n", "        return string.length() - string.replace(substring,\
    \ \"\").length();\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        return 0;\n", "        long count = 0;\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        return 0;\n", "        long count = 0;\n \
    \       for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n", "    \
    \    long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n  \
    \          if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         boolean found = true;\n                for (int j = 1; j < substring.length();\
    \ j++) {\n                    if (i + j >= string.length() || string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                        found = false;\n   \
    \                     break;\n                    }\n                }\n     \
    \           if (found) {\n                    count++;\n                }\n  \
    \          }\n        }\n        return count;\n", "        return 0;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        return\
    \ 0;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.charAt(i) == substring.charAt(0)) {\n                boolean found\
    \ = true;\n                for (int j = 1; j < substring.length(); j++) {\n  \
    \                  if (i + j >= string.length() || string.charAt(i + j) != substring.charAt(j))\
    \ {\n                        found = false;\n                        break;\n\
    \                    }\n                }\n                if (found) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        return 0;\n", "        long count = 0;\n  \
    \      int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        int index = 0;\n        while (index < string.length())\
    \ {\n            int found = string.indexOf(substring, index);\n            if\
    \ (found == -1) {\n                break;\n            }\n            count++;\n\
    \            index = found + 1;\n        }\n        return count;\n", "      \
    \  long count = 0;\n        int index = 0;\n        while ((index = string.indexOf(substring,\
    \ index)) != -1) {\n            count++;\n            index += substring.length();\n\
    \        }\n        return count;\n", "        long count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        int count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;\n", "        return string.length()\
    \ - string.replace(substring, \"\").length();\n", "        long count = 0;\n \
    \       for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                boolean found = true;\n         \
    \       for (int j = 1; j < substring.length(); j++) {\n                    if\
    \ (i + j >= string.length() || string.charAt(i + j) != substring.charAt(j)) {\n\
    \                        found = false;\n                        break;\n    \
    \                }\n                }\n                if (found) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i < substring.length()) {\n       \
    \             break;\n                }\n                if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n", "    \
    \    // your code here\n        return 0;\n", "        long count = 0;\n     \
    \   int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        int count = 0;\n\
    \        int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        if (string.length()\
    \ == 0 || substring.length() == 0) {\n            return 0;\n        }\n     \
    \   long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i).startsWith(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            index += substring.length();\n\
    \            count++;\n        }\n        return count;\n", "        long count\
    \ = 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count++;\n                index += substring.length();\n          \
    \  }\n        }\n        return count;\n", "        long count = 0;\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) ==\
    \ substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        int index = 0;\n        int count = 0;\n \
    \       while (index != -1) {\n            index = string.indexOf(substring, index);\n\
    \            if (index != -1) {\n                count++;\n                index\
    \ += substring.length();\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = 0;\n        while (index != -1) {\n        \
    \    index = string.indexOf(substring, index);\n            if (index != -1) {\n\
    \                count++;\n                index += substring.length();\n    \
    \        }\n        }\n        return count;\n", "        long count = 0;\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n", "    \
    \    long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n", "        long count = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (i + substring.length() <= string.length()) {\n                    if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) {\n     \
    \           count++;\n            }\n        }\n        return count;\n", "  \
    \      long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (string.charAt(i) == substring.charAt(0)) {\n                if (i + substring.length()\
    \ <= string.length()) {\n                    if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n", "        long count =\
    \ 0;\n        int index = 0;\n        while (index != -1) {\n            index\
    \ = string.indexOf(substring, index);\n            if (index != -1) {\n      \
    \          count++;\n                index += substring.length();\n          \
    \  }\n        }\n        return count;\n", "        long count = 0;\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i).startsWith(substring)) {\n              \
    \  count++;\n            }\n        }\n        return count;\n", "        long\
    \ count = 0;\n        int index = string.indexOf(substring);\n        while (index\
    \ != -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n", "        return string.chars().mapToObj(c\
    \ -> (char) c).collect(Collectors.toList()).stream().map(c -> c.toString()).collect(Collectors.joining()).split(substring).length\
    \ - 1;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                index += substring.length();\n        \
    \        count++;\n            }\n        }\n        return count;\n", "     \
    \   long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         if (string.substring(i).startsWith(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n",
  "        long count = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.charAt(i) == substring.charAt(0)) {\n                if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \            count++;\n                }\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while ((index\
    \ = string.indexOf(substring, index)) != -1) {\n            count++;\n       \
    \     index += substring.length();\n        }\n        return count;\n", "   \
    \     long count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        }\n        return count;\n", "        long count = 0;\n\
    \        int index = 0;\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n", "        long count = 0;\n        int index = 0;\n        while (index\
    \ != -1) {\n            index = string.indexOf(substring, index);\n          \
    \  if (index != -1) {\n                count++;\n                index++;\n  \
    \          }\n        }\n        return count;\n", "        return string.length()\
    \ - string.replace(substring, \"\").length();\n", "        long count = 0;\n \
    \       for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(0)) {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

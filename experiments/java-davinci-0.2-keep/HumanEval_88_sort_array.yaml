name: HumanEval_88_sort_array
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given an array of non-negative integers, return a copy of\
  \ the given array after sorting,\n    // you will sort the given array in ascending\
  \ order if the sum( first index value, last index value) is odd,\n    // or sort\
  \ it in descending order if the sum( first index value, last index value) is even.\n\
  \    // Note:\n    // * don't change the given array.\n    // Examples:\n    //\
  \ * sort_array([]) => []\n    // * sort_array([5]) => [5]\n    // * sort_array([2,\
  \ 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    // * sort_array([2, 4, 3, 0, 1, 5,\
  \ 6]) => [6, 5, 4, 3, 2, 1, 0]\n    public static ArrayList<Long> sortArray(ArrayList<Long>\
  \ array) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)5l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)5l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)4l, (long)3l, (long)0l, (long)1l, (long)5l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)1l, (long)2l, (long)3l, (long)4l, (long)5l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)3l, (long)0l, (long)1l,\
  \ (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)6l, (long)5l,\
  \ (long)4l, (long)3l, (long)2l, (long)1l, (long)0l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)2l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l)))));\n    assert(sortArray((new ArrayList<Long>(Arrays.asList((long)15l,\
  \ (long)42l, (long)87l, (long)32l, (long)11l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)11l, (long)15l, (long)32l, (long)42l, (long)87l)))));\n    assert(sortArray((new\
  \ ArrayList<Long>(Arrays.asList((long)21l, (long)14l, (long)23l, (long)11l)))).equals((new\
  \ ArrayList<Long>(Arrays.asList((long)23l, (long)21l, (long)14l, (long)11l)))));\n\
  \    }\n\n}\n"
completions: ["        ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            result.add(array.get(array.size() - 1));\n    \
    \        result.addAll(sortArray(new ArrayList<>(array.subList(1, array.size()\
    \ - 1))));\n            result.add(array.get(0));\n            return result;\n\
    \        } else {\n            result.add(array.get(0));\n            result.addAll(sortArray(new\
    \ ArrayList<>(array.subList(1, array.size() - 1))));\n            result.add(array.get(array.size()\
    \ - 1));\n            return result;\n        }\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n            return result;\n        } else {\n            for (int i = 0;\
    \ i < array.size(); i++) {\n                result.add(array.get(i));\n      \
    \      }\n            return result;\n        }\n", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> sorted = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return sorted;\n        }\n        if\
    \ (array.size() == 1) {\n            sorted.add(array.get(0));\n            return\
    \ sorted;\n        }\n        if (array.size() == 2) {\n            if ((array.get(0)\
    \ + array.get(1)) % 2 == 0) {\n                sorted.add(array.get(1));\n   \
    \             sorted.add(array.get(0));\n            } else {\n              \
    \  sorted.add(array.get(0));\n                sorted.add(array.get(1));\n    \
    \        }\n            return sorted;\n        }\n        if ((array.get(0) +\
    \ array.get(array.size() - 1)) % 2 == 0) {\n            sorted = sortArray(array.subList(1,\
    \ array.size() - 1));\n            sorted.add(0, array.get(array.size() - 1));\n\
    \            sorted.add(array.get(0));\n        } else {\n            sorted =\
    \ sortArray(array.subList(1, array.size() - 1));\n            sorted.add(0, array.get(0));\n\
    \            sorted.add(array.get(array.size() - 1));\n        }\n        return\
    \ sorted;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        long first = array.get(0);\n \
    \       long last = array.get(array.size() - 1);\n        if ((first + last) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n            return result;\n        } else {\n            for (int i = 0;\
    \ i < array.size(); i++) {\n                result.add(array.get(i));\n      \
    \      }\n            return result;\n        }\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for (Long i : array) {\n            if (i\
    \ % 2 == 0) {\n                even.add(i);\n            } else {\n          \
    \      odd.add(i);\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.reverse(even);\n        } else {\n\
    \            Collections.reverse(odd);\n        }\n        result.addAll(odd);\n\
    \        result.addAll(even);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        if (array.size() == 0) {\n\
    \            return array;\n        }\n        if (array.size() == 1) {\n    \
    \        return array;\n        }\n        if (array.size() == 2) {\n        \
    \    if (array.get(0) > array.get(1)) {\n                ArrayList<Long> result\
    \ = new ArrayList<Long>();\n                result.add(array.get(1));\n      \
    \          result.add(array.get(0));\n                return result;\n       \
    \     }\n            return array;\n        }\n        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            result.add(array.get(array.size() - 1));\n  \
    \          array.remove(array.size() - 1);\n            result.addAll(sortArray(array));\n\
    \            return result;\n        }\n        result.add(array.get(0));\n  \
    \      array.remove(0);\n        result.addAll(sortArray(array));\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        long sum = array.get(0) + array.get(array.size() - 1);\n \
    \       if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n            return result;\n        } else {\n            for (int i = 0;\
    \ i < array.size(); i++) {\n                result.add(array.get(i));\n      \
    \      }\n            return result;\n        }\n", "        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.size() == 2) {\n            if ((array.get(0)\
    \ + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n   \
    \             result.add(array.get(0));\n                return result;\n    \
    \        } else {\n                result.add(array.get(0));\n               \
    \ result.add(array.get(1));\n                return result;\n            }\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> odd = new ArrayList<Long>();\n        ArrayList<Long>\
    \ even = new ArrayList<Long>();\n        for (int i = 0; i < array.size(); i++)\
    \ {\n            if (array.get(i) % 2 == 0) {\n                even.add(array.get(i));\n\
    \            } else {\n                odd.add(array.get(i));\n            }\n\
    \        }\n        Collections.sort(odd);\n        Collections.sort(even);\n\
    \        Collections.reverse(even);\n        for (int i = 0; i < odd.size(); i++)\
    \ {\n            result.add(odd.get(i));\n        }\n        for (int i = 0; i\
    \ < even.size(); i++) {\n            result.add(even.get(i));\n        }\n   \
    \     return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        if (array.size() == 0) {\n            return array;\n  \
    \      }\n        if (array.size() == 1) {\n            return array;\n      \
    \  }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                ArrayList<Long> result = new ArrayList<>();\n           \
    \     result.add(array.get(1));\n                result.add(array.get(0));\n \
    \               return result;\n            }\n            return array;\n   \
    \     }\n        ArrayList<Long> result = new ArrayList<>();\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n        } else {\n            for (int i = 0; i < array.size(); i++) {\n\
    \                result.add(array.get(i));\n            }\n        }\n       \
    \ return result;\n", "        if (array.size() == 0) {\n            return array;\n\
    \        }\n        if (array.size() == 1) {\n            return array;\n    \
    \    }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                ArrayList<Long> result = new ArrayList<Long>();\n       \
    \         result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            }\n            return array;\n  \
    \      }\n        ArrayList<Long> result = new ArrayList<Long>();\n        ArrayList<Long>\
    \ left = new ArrayList<Long>();\n        ArrayList<Long> right = new ArrayList<Long>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        int i = 0;\n\
    \        int j = 0;\n        while (i < left.size() && j < right.size()) {\n \
    \           if (left.get(i) < right.get(j)) {\n                result.add(left.get(i));\n\
    \                i++;\n            } else {\n                result.add(right.get(j));\n\
    \                j++;\n            }\n        }\n        while (i < left.size())\
    \ {\n            result.add(left.get(i));\n            i++;\n        }\n     \
    \   while (j < right.size()) {\n            result.add(right.get(j));\n      \
    \      j++;\n        }\n        if ((array.get(0) + array.get(array.size() - 1))\
    \ % 2 == 0) {\n            Collections.reverse(result);\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        ArrayList<Long>\
    \ odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (array.get(i)\
    \ % 2 == 0) {\n                even.add(array.get(i));\n            } else {\n\
    \                odd.add(array.get(i));\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        Collections.reverse(even);\n       \
    \ if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            result.addAll(even);\n\
    \            result.addAll(odd);\n        } else {\n            result.addAll(odd);\n\
    \            result.addAll(even);\n        }\n        return result;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() > 1) {\n            if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n                Collections.sort(array, Collections.reverseOrder());\n\
    \            } else {\n                Collections.sort(array);\n            }\n\
    \            return array;\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        long first = array.get(0);\n       \
    \ long last = array.get(array.size() - 1);\n        if ((first + last) % 2 ==\
    \ 0) {\n            Collections.sort(array, Collections.reverseOrder());\n   \
    \     } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        if (array.size() == 0) return array;\n        if (array.size()\
    \ == 1) return array;\n        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        int first = 0;\n        int last = array.size() - 1;\n        if ((array.get(first)\
    \ + array.get(last)) % 2 == 0) {\n            for (int i = last; i >= first; i--)\
    \ {\n                result.add(array.get(i));\n            }\n        } else\
    \ {\n            for (int i = first; i <= last; i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        long\
    \ first = array.get(0);\n        long last = array.get(array.size() - 1);\n  \
    \      if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        ArrayList<Long> odd = new ArrayList<>();\n \
    \       ArrayList<Long> even = new ArrayList<>();\n        for (int i = 0; i <\
    \ array.size(); i++) {\n            if (array.get(i) % 2 == 0) {\n           \
    \     even.add(array.get(i));\n            } else {\n                odd.add(array.get(i));\n\
    \            }\n        }\n        Collections.sort(odd);\n        Collections.sort(even);\n\
    \        Collections.reverse(even);\n        for (int i = 0; i < odd.size(); i++)\
    \ {\n            result.add(odd.get(i));\n        }\n        for (int i = 0; i\
    \ < even.size(); i++) {\n            result.add(even.get(i));\n        }\n   \
    \     return result;\n", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return sorted;\n        }\n   \
    \     if (array.size() == 1) {\n            sorted.add(array.get(0));\n      \
    \      return sorted;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                sorted.add(array.get(1));\n\
    \                sorted.add(array.get(0));\n            } else {\n           \
    \     sorted.add(array.get(0));\n                sorted.add(array.get(1));\n \
    \           }\n            return sorted;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            result.add(array.get(array.size() - 1));\n            result.addAll(sortArray(new\
    \ ArrayList<>(array.subList(1, array.size() - 1))));\n            result.add(array.get(0));\n\
    \            return result;\n        } else {\n            result.add(array.get(0));\n\
    \            result.addAll(sortArray(new ArrayList<>(array.subList(1, array.size()\
    \ - 1))));\n            result.add(array.get(array.size() - 1));\n           \
    \ return result;\n        }\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> sorted = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return sorted;\n        }\n        if (array.size()\
    \ == 1) {\n            sorted.add(array.get(0));\n            return sorted;\n\
    \        }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n            return result;\n   \
    \     } else {\n            for (int i = 0; i < array.size(); i++) {\n       \
    \         result.add(array.get(i));\n            }\n            return result;\n\
    \        }\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            for (int i = array.size()\
    \ - 1; i >= 0; i--) {\n                result.add(array.get(i));\n           \
    \ }\n            return result;\n        } else {\n            for (int i = 0;\
    \ i < array.size(); i++) {\n                result.add(array.get(i));\n      \
    \      }\n            return result;\n        }\n", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n            return result;\n   \
    \     } else {\n            for (int i = 0; i < array.size(); i++) {\n       \
    \         result.add(array.get(i));\n            }\n            return result;\n\
    \        }\n", "        if (array.size() == 0) {\n            return array;\n\
    \        }\n        if (array.size() == 1) {\n            return array;\n    \
    \    }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                ArrayList<Long> result = new ArrayList<Long>();\n       \
    \         result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            }\n            return array;\n  \
    \      }\n        ArrayList<Long> result = new ArrayList<Long>();\n        Long\
    \ first = array.get(0);\n        Long last = array.get(array.size() - 1);\n  \
    \      if ((first + last) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        ArrayList<Long>\
    \ odd = new ArrayList<>();\n        ArrayList<Long> even = new ArrayList<>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (array.get(i)\
    \ % 2 == 0) {\n                even.add(array.get(i));\n            } else {\n\
    \                odd.add(array.get(i));\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        Collections.reverse(even);\n       \
    \ if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n            result.addAll(even);\n\
    \            result.addAll(odd);\n        } else {\n            result.addAll(odd);\n\
    \            result.addAll(even);\n        }\n        return result;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        long first = array.get(0);\n       \
    \ long last = array.get(array.size() - 1);\n        long sum = first + last;\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        if (array.size() == 0) {\n\
    \            return array;\n        }\n        if (array.size() == 1) {\n    \
    \        return array;\n        }\n        if (array.size() == 2) {\n        \
    \    if (array.get(0) > array.get(1)) {\n                ArrayList<Long> result\
    \ = new ArrayList<Long>();\n                result.add(array.get(1));\n      \
    \          result.add(array.get(0));\n                return result;\n       \
    \     }\n            return array;\n        }\n        ArrayList<Long> result\
    \ = new ArrayList<Long>();\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            for (int i = array.size() - 1; i >= 0; i--) {\n\
    \                result.add(array.get(i));\n            }\n        } else {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n        }\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.size() == 2) {\n            if ((array.get(0) + array.get(1)) % 2 ==\
    \ 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) return result;\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            array.sort(Collections.reverseOrder());\n\
    \        } else {\n            array.sort(null);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        if (array.size() == 0) {\n    \
    \        return array;\n        }\n        if (array.size() == 1) {\n        \
    \    return array;\n        }\n        long first = array.get(0);\n        long\
    \ last = array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for (Long i : array) {\n            if (i\
    \ % 2 == 0) {\n                even.add(i);\n            } else {\n          \
    \      odd.add(i);\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        if ((array.get(0) + array.get(array.size()\
    \ - 1)) % 2 == 0) {\n            Collections.reverse(even);\n        } else {\n\
    \            Collections.reverse(odd);\n        }\n        result.addAll(odd);\n\
    \        result.addAll(even);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> sorted = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return sorted;\n        }\n   \
    \     if (array.size() == 1) {\n            sorted.add(array.get(0));\n      \
    \      return sorted;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                sorted.add(array.get(1));\n\
    \                sorted.add(array.get(0));\n            } else {\n           \
    \     sorted.add(array.get(0));\n                sorted.add(array.get(1));\n \
    \           }\n            return sorted;\n        }\n        int i = 0;\n   \
    \     int j = array.size() - 1;\n        while (i < j) {\n            if ((array.get(i)\
    \ + array.get(j)) % 2 == 0) {\n                sorted.add(array.get(j));\n   \
    \             sorted.add(array.get(i));\n            } else {\n              \
    \  sorted.add(array.get(i));\n                sorted.add(array.get(j));\n    \
    \        }\n            i++;\n            j--;\n        }\n        if (i == j)\
    \ {\n            sorted.add(array.get(i));\n        }\n        return sorted;\n",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Collections.swap(array, 0, 1);\n            }\n            return\
    \ array;\n        }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // Write your code here\n \
    \       return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if (array.get(0) + array.get(1)\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for (Long i : array) {\n            if (i\
    \ % 2 == 0) {\n                even.add(i);\n            } else {\n          \
    \      odd.add(i);\n            }\n        }\n        Collections.sort(odd);\n\
    \        Collections.sort(even);\n        Collections.reverse(even);\n       \
    \ result.addAll(odd);\n        result.addAll(even);\n        return result;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        long sum = first + last;\n        if (sum\
    \ % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        // Write your code here\n        // To print results to the standard output\
    \ you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> copy = new ArrayList<>(array);\n       \
    \ Collections.sort(copy);\n        if (array.get(0) + array.get(array.size() -\
    \ 1) % 2 == 0) {\n            Collections.reverse(copy);\n        }\n        return\
    \ copy;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n       \
    \ if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            result.add(array.get(array.size()\
    \ - 1));\n            result.addAll(sortArray(new ArrayList<>(array.subList(1,\
    \ array.size() - 1))));\n            result.add(array.get(0));\n            return\
    \ result;\n        } else {\n            result.add(array.get(0));\n         \
    \   result.addAll(sortArray(new ArrayList<>(array.subList(1, array.size() - 1))));\n\
    \            result.add(array.get(array.size() - 1));\n            return result;\n\
    \        }\n", "        long sum = array.get(0) + array.get(array.size() - 1);\n\
    \        if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        int i = 0;\n        int j = array.size() - 1;\n        while\
    \ (i < j) {\n            if ((array.get(i) + array.get(j)) % 2 == 0) {\n     \
    \           result.add(array.get(j));\n                result.add(array.get(i));\n\
    \                i++;\n                j--;\n            } else {\n          \
    \      result.add(array.get(i));\n                result.add(array.get(j));\n\
    \                i++;\n                j--;\n            }\n        }\n      \
    \  if (i == j) {\n            result.add(array.get(i));\n        }\n        return\
    \ result;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         result.add(array.get(0));\n            result.add(array.get(1));\n \
    \           return result;\n        }\n        if (array.size() % 2 == 0) {\n\
    \            for (int i = 0; i < array.size(); i++) {\n                result.add(array.get(i));\n\
    \            }\n            Collections.sort(result);\n            Collections.reverse(result);\n\
    \            return result;\n        } else {\n            for (int i = 0; i <\
    \ array.size(); i++) {\n                result.add(array.get(i));\n          \
    \  }\n            Collections.sort(result);\n            return result;\n    \
    \    }\n", "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n            return result;\n   \
    \     } else {\n            for (int i = 0; i < array.size(); i++) {\n       \
    \         result.add(array.get(i));\n            }\n            return result;\n\
    \        }\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        long first = array.get(0);\n \
    \       long last = array.get(array.size() - 1);\n        if ((first + last) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) return result;\n        if (array.size() == 1) return array;\n       \
    \ if (array.size() == 2) {\n            if ((array.get(0) + array.get(1)) % 2\
    \ == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \  } else {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            long tmp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, tmp);\n            }\n            return array;\n\
    \        }\n        long sum = array.get(0) + array.get(array.size() - 1);\n \
    \       if (sum % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        if (array.size() == 0) {\n            return array;\n  \
    \      }\n        if (array.size() == 1) {\n            return array;\n      \
    \  }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                return new ArrayList<Long>(Arrays.asList(array.get(1), array.get(0)));\n\
    \            }\n            return array;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        long first = array.get(0);\n \
    \       long last = array.get(array.size() - 1);\n        if ((first + last) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // Write your code here\n \
    \       // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        if (array.size() == 0) return array;\n        if (array.size() == 1) return\
    \ array;\n        ArrayList<Long> result = new ArrayList<Long>();\n        long\
    \ first = array.get(0);\n        long last = array.get(array.size() - 1);\n  \
    \      long sum = first + last;\n        if (sum % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        // Write your code here\n     \
    \   // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        // Your code here\n        return\
    \ null;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        if (array.size() == 0) {\n            return array;\n        }\n      \
    \  if (array.size() == 1) {\n            return array;\n        }\n        if\
    \ (array.size() == 2) {\n            if (array.get(0) > array.get(1)) {\n    \
    \            Collections.swap(array, 0, 1);\n            }\n            return\
    \ array;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) return result;\n        if (array.size() == 1) return array;\n\
    \        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n            return array;\n        } else {\n\
    \            Collections.sort(array);\n            return array;\n        }\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        if (array.size() == 0) {\n            return array;\n  \
    \      }\n        if (array.size() == 1) {\n            return array;\n      \
    \  }\n        if (array.size() == 2) {\n            if (array.get(0) > array.get(1))\
    \ {\n                Long temp = array.get(0);\n                array.set(0, array.get(1));\n\
    \                array.set(1, temp);\n            }\n            return array;\n\
    \        }\n        Long first = array.get(0);\n        Long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n \
    \       if (array.size() == 0) {\n            return sortedArray;\n        }\n\
    \        if (array.size() == 1) {\n            sortedArray.add(array.get(0));\n\
    \            return sortedArray;\n        }\n        if (array.size() == 2) {\n\
    \            if ((array.get(0) + array.get(1)) % 2 == 0) {\n                sortedArray.add(array.get(1));\n\
    \                sortedArray.add(array.get(0));\n            } else {\n      \
    \          sortedArray.add(array.get(0));\n                sortedArray.add(array.get(1));\n\
    \            }\n            return sortedArray;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.size() == 2) {\n            if ((array.get(0)\
    \ + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n   \
    \             result.add(array.get(0));\n                return result;\n    \
    \        } else {\n                result.add(array.get(0));\n               \
    \ result.add(array.get(1));\n                return result;\n            }\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        if (array.size() == 0) return\
    \ array;\n        if (array.size() == 1) return array;\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        long first = array.get(0);\n      \
    \  long last = array.get(array.size() - 1);\n        long sum = first + last;\n\
    \        if (sum % 2 == 0) {\n            array.sort(Collections.reverseOrder());\n\
    \        } else {\n            array.sort(null);\n        }\n        return array;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \                return result;\n            } else {\n                result.add(array.get(0));\n\
    \                result.add(array.get(1));\n                return result;\n \
    \           }\n        }\n        if ((array.get(0) + array.get(array.size() -\
    \ 1)) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \            return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size() / 2;\
    \ i++) {\n            left.add(array.get(i));\n        }\n        for (int i =\
    \ array.size() / 2; i < array.size(); i++) {\n            right.add(array.get(i));\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        result = merge(left, right);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> left = new ArrayList<Long>();\n        ArrayList<Long>\
    \ right = new ArrayList<Long>();\n        for (int i = 0; i < array.size() / 2;\
    \ i++) {\n            left.add(array.get(i));\n        }\n        for (int i =\
    \ array.size() / 2; i < array.size(); i++) {\n            right.add(array.get(i));\n\
    \        }\n        left = sortArray(left);\n        right = sortArray(right);\n\
    \        result = merge(left, right);\n        return result;\n", "        ArrayList<Long>\
    \ result = new ArrayList<>();\n        if (array.size() == 0) {\n            return\
    \ result;\n        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) return result;\n        if (array.size() == 1) return array;\n\
    \        if (array.size() == 2) {\n            if ((array.get(0) + array.get(1))\
    \ % 2 == 0) {\n                result.add(array.get(1));\n                result.add(array.get(0));\n\
    \            } else {\n                result.add(array.get(0));\n           \
    \     result.add(array.get(1));\n            }\n            return result;\n \
    \       }\n        int head = 0;\n        int tail = array.size() - 1;\n     \
    \   while (head < tail) {\n            if ((array.get(head) + array.get(tail))\
    \ % 2 == 0) {\n                result.add(array.get(tail));\n                result.add(array.get(head));\n\
    \            } else {\n                result.add(array.get(head));\n        \
    \        result.add(array.get(tail));\n            }\n            head++;\n  \
    \          tail--;\n        }\n        if (head == tail) {\n            result.add(array.get(head));\n\
    \        }\n        return result;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        long first = array.get(0);\n \
    \       long last = array.get(array.size() - 1);\n        if ((first + last) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        long first = array.get(0);\n        long last =\
    \ array.get(array.size() - 1);\n        if ((first + last) % 2 == 0) {\n     \
    \       Collections.sort(array, Collections.reverseOrder());\n        } else {\n\
    \            Collections.sort(array);\n        }\n        return array;\n", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        if (array.size()\
    \ == 0) {\n            return result;\n        }\n        if (array.size() ==\
    \ 1) {\n            result.add(array.get(0));\n            return result;\n  \
    \      }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        // write your code here\n \
    \       return array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            for (int i = array.size() - 1; i >= 0; i--) {\n             \
    \   result.add(array.get(i));\n            }\n            return result;\n   \
    \     } else {\n            for (int i = 0; i < array.size(); i++) {\n       \
    \         result.add(array.get(i));\n            }\n            return result;\n\
    \        }\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        if (array.size() == 2) {\n            if ((array.get(0) +\
    \ array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n     \
    \           result.add(array.get(0));\n                return result;\n      \
    \      } else {\n                result.add(array.get(0));\n                result.add(array.get(1));\n\
    \                return result;\n            }\n        }\n        ArrayList<Long>\
    \ left = new ArrayList<>();\n        ArrayList<Long> right = new ArrayList<>();\n\
    \        for (int i = 0; i < array.size(); i++) {\n            if (i < array.size()\
    \ / 2) {\n                left.add(array.get(i));\n            } else {\n    \
    \            right.add(array.get(i));\n            }\n        }\n        left\
    \ = sortArray(left);\n        right = sortArray(right);\n        return merge(left,\
    \ right);\n", "        ArrayList<Long> result = new ArrayList<>();\n        if\
    \ (array.size() == 0) {\n            return result;\n        }\n        if (array.size()\
    \ == 1) {\n            result.add(array.get(0));\n            return result;\n\
    \        }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        ArrayList<Long> odd = new ArrayList<>();\n        ArrayList<Long>\
    \ even = new ArrayList<>();\n        for (int i = 0; i < array.size(); i++) {\n\
    \            if (array.get(i) % 2 == 0) {\n                even.add(array.get(i));\n\
    \            } else {\n                odd.add(array.get(i));\n            }\n\
    \        }\n        Collections.sort(odd);\n        Collections.sort(even);\n\
    \        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0) {\n      \
    \      Collections.reverse(even);\n        }\n        result.addAll(odd);\n  \
    \      result.addAll(even);\n        return result;\n", "        // Write your\
    \ code here\n        // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        if (array.size() == 0) {\n        \
    \    return result;\n        }\n        if (array.size() == 1) {\n           \
    \ result.add(array.get(0));\n            return result;\n        }\n        if\
    \ (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> copy = new\
    \ ArrayList<Long>(array);\n        if (copy.size() == 0) {\n            return\
    \ copy;\n        }\n        if (copy.size() == 1) {\n            return copy;\n\
    \        }\n        if (copy.get(0) + copy.get(copy.size() - 1) % 2 == 0) {\n\
    \            Collections.sort(copy, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(copy);\n        }\n        return copy;\n",
  "        ArrayList<Long> result = new ArrayList<>();\n        if (array.size() ==\
    \ 0) {\n            return result;\n        }\n        if (array.size() == 1)\
    \ {\n            result.add(array.get(0));\n            return result;\n     \
    \   }\n        long first = array.get(0);\n        long last = array.get(array.size()\
    \ - 1);\n        if ((first + last) % 2 == 0) {\n            Collections.sort(array,\
    \ Collections.reverseOrder());\n        } else {\n            Collections.sort(array);\n\
    \        }\n        return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      if (array.size() == 0) {\n            return result;\n        }\n     \
    \   if (array.size() == 1) {\n            result.add(array.get(0));\n        \
    \    return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.size() == 2) {\n            if ((array.get(0)\
    \ + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n   \
    \             result.add(array.get(0));\n                return result;\n    \
    \        } else {\n                result.add(array.get(0));\n               \
    \ result.add(array.get(1));\n                return result;\n            }\n \
    \       }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.size() == 2) {\n   \
    \         if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> sortedArray = new ArrayList<Long>();\n \
    \       if (array.size() == 0) {\n            return sortedArray;\n        }\n\
    \        if (array.size() == 1) {\n            sortedArray.add(array.get(0));\n\
    \            return sortedArray;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) < array.get(1)) {\n                sortedArray.add(array.get(0));\n\
    \                sortedArray.add(array.get(1));\n            } else {\n      \
    \          sortedArray.add(array.get(1));\n                sortedArray.add(array.get(0));\n\
    \            }\n            return sortedArray;\n        }\n        if ((array.get(0)\
    \ + array.get(array.size() - 1)) % 2 == 0) {\n            // descending order\n\
    \            for (int i = array.size() - 1; i >= 0; i--) {\n                sortedArray.add(array.get(i));\n\
    \            }\n        } else {\n            // ascending order\n           \
    \ for (int i = 0; i < array.size(); i++) {\n                sortedArray.add(array.get(i));\n\
    \            }\n        }\n        return sortedArray;\n", "        if (array.size()\
    \ == 0) {\n            return array;\n        }\n        if (array.size() == 1)\
    \ {\n            return array;\n        }\n        if (array.size() == 2) {\n\
    \            if (array.get(0) > array.get(1)) {\n                long temp = array.get(0);\n\
    \                array.set(0, array.get(1));\n                array.set(1, temp);\n\
    \            }\n            return array;\n        }\n        long first = array.get(0);\n\
    \        long last = array.get(array.size() - 1);\n        if ((first + last)\
    \ % 2 == 0) {\n            array.sort(Collections.reverseOrder());\n        }\
    \ else {\n            array.sort(Collections.reverseOrder());\n        }\n   \
    \     return array;\n", "        ArrayList<Long> result = new ArrayList<>();\n\
    \        if (array.size() == 0) {\n            return result;\n        }\n   \
    \     if (array.size() == 1) {\n            result.add(array.get(0));\n      \
    \      return result;\n        }\n        if (array.size() == 2) {\n         \
    \   if ((array.get(0) + array.get(1)) % 2 == 0) {\n                result.add(array.get(1));\n\
    \                result.add(array.get(0));\n                return result;\n \
    \           } else {\n                result.add(array.get(0));\n            \
    \    result.add(array.get(1));\n                return result;\n            }\n\
    \        }\n        if ((array.get(0) + array.get(array.size() - 1)) % 2 == 0)\
    \ {\n            Collections.sort(array, Collections.reverseOrder());\n      \
    \      return array;\n        } else {\n            Collections.sort(array);\n\
    \            return array;\n        }\n", "        ArrayList<Long> result = new\
    \ ArrayList<Long>();\n        if (array.size() == 0) {\n            return result;\n\
    \        }\n        if (array.size() == 1) {\n            result.add(array.get(0));\n\
    \            return result;\n        }\n        if (array.get(0) + array.get(array.size()\
    \ - 1) % 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n      \
    \  if (array.size() == 0) {\n            return result;\n        }\n        if\
    \ (array.size() == 1) {\n            result.add(array.get(0));\n            return\
    \ result;\n        }\n        if (array.get(0) + array.get(array.size() - 1) %\
    \ 2 == 0) {\n            Collections.sort(array, Collections.reverseOrder());\n\
    \        } else {\n            Collections.sort(array);\n        }\n        return\
    \ array;\n", "        // Write your code here\n        // To print results to\
    \ the standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Long> res = new ArrayList<Long>();\n     \
    \   if (array.size() == 0) {\n            return res;\n        }\n        if (array.size()\
    \ == 1) {\n            res.add(array.get(0));\n            return res;\n     \
    \   }\n        if (array.get(0) + array.get(array.size() - 1) % 2 == 0) {\n  \
    \          Collections.sort(array, Collections.reverseOrder());\n        } else\
    \ {\n            Collections.sort(array);\n        }\n        return array;\n",
  "        // Write your code here\n        return null;\n", "        // Your code\
    \ here\n        return array;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

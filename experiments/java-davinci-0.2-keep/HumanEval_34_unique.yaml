name: HumanEval_34_unique
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
  \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Long>\
  \ unique(ArrayList<Long> l) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(unique((new\
  \ ArrayList<Long>(Arrays.asList((long)5l, (long)3l, (long)5l, (long)2l, (long)3l,\
  \ (long)3l, (long)9l, (long)0l, (long)123l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)2l, (long)3l, (long)5l, (long)9l, (long)123l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> res = new ArrayList<>();\n        for (Long\
    \ x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n",
  "        ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!ret.contains(i)) {\n                ret.add(i);\n      \
    \      }\n        }\n        Collections.sort(ret);\n        return ret;\n", " \
    \       ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ l) {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        Collections.sort(l);\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (i == 0 || l.get(i)\
    \ != l.get(i - 1)) {\n                ans.add(l.get(i));\n            }\n    \
    \    }\n        return ans;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!u.contains(i)) {\n             \
    \   u.add(i);\n            }\n        }\n        Collections.sort(u);\n      \
    \  return u;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n       \
    \ for (Long i : l) {\n            if (!u.contains(i)) {\n                u.add(i);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> ans = new ArrayList<>();\n        for (long x : l) {\n  \
    \          if (!ans.contains(x)) {\n                ans.add(x);\n            }\n\
    \        }\n        Collections.sort(ans);\n        return ans;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long x : l) {\n            if (!res.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!r.contains(x)) {\n             \
    \   r.add(x);\n            }\n        }\n        Collections.sort(r);\n      \
    \  return r;\n", "        ArrayList<Long> res = new ArrayList<>();\n        for\
    \ (Long x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long i : l) {\n\
    \            if (!res.contains(i)) {\n                res.add(i);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        for (Long x : l)\
    \ {\n            if (!result.contains(x)) {\n                result.add(x);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long e : l) {\n            if (!res.contains(e)) {\n           \
    \     res.add(e);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (Long x : l) {\n            if (!res.contains(x)) {\n             \
    \   res.add(x);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!res.contains(x)) {\n              \
    \  res.add(x);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n    \
    \    for (long x : l) {\n            if (!ans.contains(x)) {\n               \
    \ ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n    \
    \    return ans;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long i : l) {\n            if (!res.contains(i)) {\n           \
    \     res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long i : l) {\n            if (!res.contains(i)) {\n           \
    \     res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (Long i : l) {\n            if (!res.contains(i)) {\n             \
    \   res.add(i);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!ret.contains(i)) {\n           \
    \     ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!u.contains(i)) {\n             \
    \   u.add(i);\n            }\n        }\n        Collections.sort(u);\n      \
    \  return u;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n       \
    \ for (Long i : l) {\n            if (!u.contains(i)) {\n                u.add(i);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;\n",
  "        ArrayList<Long> u = new ArrayList<Long>();\n        for (Long x : l) {\n\
    \            if (!u.contains(x)) {\n                u.add(x);\n            }\n\
    \        }\n        Collections.sort(u);\n        return u;\n", "        ArrayList<Long>\
    \ ans = new ArrayList<>();\n        for (Long x : l) {\n            if (!ans.contains(x))\
    \ {\n                ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!r.contains(x)) {\n             \
    \   r.add(x);\n            }\n        }\n        Collections.sort(r);\n      \
    \  return r;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : l) {\n            if (!result.contains(i)) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!r.contains(i)) {\n             \
    \   r.add(i);\n            }\n        }\n        Collections.sort(r);\n      \
    \  return r;\n", "        ArrayList<Long> res = new ArrayList<>();\n        for\
    \ (Long x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> sorted = new ArrayList<Long>(l);\n        Collections.sort(sorted);\n\
    \        ArrayList<Long> unique = new ArrayList<Long>();\n        for (int i =\
    \ 0; i < sorted.size(); i++) {\n            if (i == 0 || sorted.get(i) != sorted.get(i\
    \ - 1)) {\n                unique.add(sorted.get(i));\n            }\n       \
    \ }\n        return unique;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> ans = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!r.contains(x)) {\n             \
    \   r.add(x);\n            }\n        }\n        Collections.sort(r);\n      \
    \  return r;\n", "        ArrayList<Long> r = new ArrayList<>();\n        for\
    \ (Long x : l) {\n            if (!r.contains(x)) {\n                r.add(x);\n\
    \            }\n        }\n        Collections.sort(r);\n        return r;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i :\
    \ l) {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : l) {\n            if\
    \ (!result.contains(i)) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        for (long x : l)\
    \ {\n            if (!result.contains(x)) {\n                result.add(x);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long e : l) {\n\
    \            if (!res.contains(e)) {\n                res.add(e);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> u = new ArrayList<Long>();\n        for (Long i : l) {\n\
    \            if (!u.contains(i)) {\n                u.add(i);\n            }\n\
    \        }\n        Collections.sort(u);\n        return u;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long x : l) {\n            if\
    \ (!result.contains(x)) {\n                result.add(x);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n", "     \
    \   ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n   \
    \         if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ r = new ArrayList<Long>();\n        for (Long x : l) {\n            if (!r.contains(x))\
    \ {\n                r.add(x);\n            }\n        }\n        Collections.sort(r);\n\
    \        return r;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!ret.contains(i)) {\n           \
    \     ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!r.contains(i)) {\n             \
    \   r.add(i);\n            }\n        }\n        Collections.sort(r);\n      \
    \  return r;\n", "        ArrayList<Long> ans = new ArrayList<>();\n        for\
    \ (Long x : l) {\n            if (!ans.contains(x)) {\n                ans.add(x);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> u = new ArrayList<Long>();\n        for (Long i : l) {\n\
    \            if (!u.contains(i)) {\n                u.add(i);\n            }\n\
    \        }\n        Collections.sort(u);\n        return u;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (long x : l) {\n            if (!res.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> ret = new ArrayList<>();\n  \
    \      for (long x : l) {\n            if (!ret.contains(x)) {\n             \
    \   ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n  \
    \      return ret;\n", "        ArrayList<Long> ans = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n    \
    \    for (Long i : l) {\n            if (!res.contains(i)) {\n               \
    \ res.add(i);\n            }\n        }\n        Collections.sort(res);\n    \
    \    return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n     \
    \   for (long x : l) {\n            if (!res.contains(x)) {\n                res.add(x);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n",
  "        ArrayList<Long> u = new ArrayList<Long>();\n        for (Long x : l) {\n\
    \            if (!u.contains(x)) {\n                u.add(x);\n            }\n\
    \        }\n        Collections.sort(u);\n        return u;\n", "        ArrayList<Long>\
    \ ret = new ArrayList<>();\n        for (Long x : l) {\n            if (!ret.contains(x))\
    \ {\n                ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (long x : l) {\n            if (!res.contains(x)) {\n             \
    \   res.add(x);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n   \
    \     for (Long i : l) {\n            if (!ans.contains(i)) {\n              \
    \  ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n    \
    \    for (Long i : l) {\n            if (!res.contains(i)) {\n               \
    \ res.add(i);\n            }\n        }\n        Collections.sort(res);\n    \
    \    return res;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n   \
    \     for (Long x : l) {\n            if (!u.contains(x)) {\n                u.add(x);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (Long i : l) {\n\
    \            if (!ans.contains(i)) {\n                ans.add(i);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long i : l) {\n \
    \           if (!res.contains(i)) {\n                res.add(i);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (long i : l) {\n  \
    \          if (!res.contains(i)) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : l) {\n            if\
    \ (!result.contains(i)) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n", "     \
    \   ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long i : l) {\n\
    \            if (!ret.contains(i)) {\n                ret.add(i);\n          \
    \  }\n        }\n        Collections.sort(ret);\n        return ret;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ ret = new ArrayList<>();\n        for (Long i : l) {\n            if (!ret.contains(i))\
    \ {\n                ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!u.contains(i)) {\n             \
    \   u.add(i);\n            }\n        }\n        Collections.sort(u);\n      \
    \  return u;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n  \
    \      for (Long i : l) {\n            if (!result.contains(i)) {\n          \
    \      result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ans = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!ans.contains(x)) {\n           \
    \     ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> ret = new ArrayList<>();\n  \
    \      for (long i : l) {\n            if (!ret.contains(i)) {\n             \
    \   ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n  \
    \      return ret;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n  \
    \      for (long x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;\n", "        ArrayList<Long> ans = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;\n", "        ArrayList<Long> r = new ArrayList<Long>();\n  \
    \      for (long x : l) {\n            if (!r.contains(x)) {\n               \
    \ r.add(x);\n            }\n        }\n        Collections.sort(r);\n        return\
    \ r;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n        for (Long\
    \ i : l) {\n            if (!ret.contains(i)) {\n                ret.add(i);\n\
    \            }\n        }\n        Collections.sort(ret);\n        return ret;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (Long i : l) {\n  \
    \          if (!res.contains(i)) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long x : l) {\n            if (!res.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (long x : l) {\n            if (!res.contains(x)) {\n             \
    \   res.add(x);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!res.contains(x)) {\n              \
    \  res.add(x);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!ret.contains(i)) {\n           \
    \     ret.add(i);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> ans = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n", "        ArrayList<Long> ans = new ArrayList<>();\n  \
    \      for (Long x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;\n", "        ArrayList<Long> ans = new ArrayList<>();\n   \
    \     for (Long x : l) {\n            if (!ans.contains(x)) {\n              \
    \  ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n   \
    \     return ans;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> ret = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!ret.contains(x)) {\n           \
    \     ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n", "        ArrayList<Long> ans = new ArrayList<>();\n \
    \       for (Long x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n", "        ArrayList<Long> u = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!u.contains(i)) {\n             \
    \   u.add(i);\n            }\n        }\n        Collections.sort(u);\n      \
    \  return u;\n", "        ArrayList<Long> ret = new ArrayList<Long>();\n     \
    \   for (Long x : l) {\n            if (!ret.contains(x)) {\n                ret.add(x);\n\
    \            }\n        }\n        Collections.sort(ret);\n        return ret;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long i : l) {\n            if (!res.contains(i))\
    \ {\n                res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n  \
    \      for (long x : l) {\n            if (!ans.contains(x)) {\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;\n", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!res.contains(x)) {\n              \
    \  res.add(x);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long x : l) {\n            if (!result.contains(x)) {\n        \
    \        result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long x : l) {\n            if (!res.contains(x)) {\n           \
    \     res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (Long i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (Long x : l) {\n            if (!res.contains(x)) {\n             \
    \   res.add(x);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> result = new ArrayList<Long>();\n\
    \        for (Long i : l) {\n            if (!result.contains(i)) {\n        \
    \        result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Long i : l) {\n            if (!res.contains(i)) {\n           \
    \     res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n \
    \       for (long x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n  \
    \      for (Long i : l) {\n            if (!res.contains(i)) {\n             \
    \   res.add(i);\n            }\n        }\n        Collections.sort(res);\n  \
    \      return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n   \
    \     for (long x : l) {\n            if (!res.contains(x)) {\n              \
    \  res.add(x);\n            }\n        }\n        Collections.sort(res);\n   \
    \     return res;\n", "        ArrayList<Long> res = new ArrayList<>();\n    \
    \    for (Long x : l) {\n            if (!res.contains(x)) {\n               \
    \ res.add(x);\n            }\n        }\n        Collections.sort(res);\n    \
    \    return res;\n", "        ArrayList<Long> ans = new ArrayList<>();\n     \
    \   for (Long x : l) {\n            if (!ans.contains(x)) {\n                ans.add(x);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n",
  "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i :\
    \ l) {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> ans = new ArrayList<>();\n        for (long x : l) {\n\
    \            if (!ans.contains(x)) {\n                ans.add(x);\n          \
    \  }\n        }\n        Collections.sort(ans);\n        return ans;\n", "   \
    \     ArrayList<Long> ans = new ArrayList<>();\n        for (long x : l) {\n \
    \           if (!ans.contains(x)) {\n                ans.add(x);\n           \
    \ }\n        }\n        Collections.sort(ans);\n        return ans;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ result = new ArrayList<Long>();\n        for (Long i : l) {\n            if\
    \ (!result.contains(i)) {\n                result.add(i);\n            }\n   \
    \     }\n        Collections.sort(result);\n        return result;\n", "     \
    \   ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : l)\
    \ {\n            if (!result.contains(i)) {\n                result.add(i);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n",
  "        ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n\
    \            if (!res.contains(x)) {\n                res.add(x);\n          \
    \  }\n        }\n        Collections.sort(res);\n        return res;\n", "   \
    \     ArrayList<Long> res = new ArrayList<>();\n        for (Long x : l) {\n \
    \           if (!res.contains(x)) {\n                res.add(x);\n           \
    \ }\n        }\n        Collections.sort(res);\n        return res;\n", "    \
    \    ArrayList<Long> res = new ArrayList<>();\n        for (long x : l) {\n  \
    \          if (!res.contains(x)) {\n                res.add(x);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n", "        ArrayList<Long>\
    \ res = new ArrayList<>();\n        for (Long x : l) {\n            if (!res.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

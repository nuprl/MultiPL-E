name: HumanEval_95_check_dict_case
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo86d9t05.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4o46nsjg.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpnfl5kc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ofvgfpb.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdoyene5g.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpactretaq.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzxsnajgt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7ldbfxl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdn2cqy4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_kz62ba.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph2r8hpfl.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgx87u2f.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (!key.equals(key.toLowerCase()))\
    \ {\n                allLower = false;\n            }\n            if (!key.equals(key.toUpperCase()))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgmcyynpv.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzt_4q3e6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfwyuvlg6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0hf63gt.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45isho15.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9s9z8is.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3vhr69yb.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (!key.equals(key.toLowerCase()))\
    \ {\n                allLower = false;\n            }\n            if (!key.equals(key.toUpperCase()))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6kjbfhf.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx15q6uv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpud8ed2ci.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kxtmip6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfpavik5.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8v948sc1.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_j7kwsbo.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) return false;\n        boolean allLower = true;\n\
    \        boolean allUpper = true;\n        for (String key : dict.keySet()) {\n\
    \            if (!key.equals(key.toLowerCase())) allLower = false;\n         \
    \   if (!key.equals(key.toUpperCase())) allUpper = false;\n        }\n       \
    \ return allLower || allUpper;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl58qwsvh.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp385qyekm.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4q3q2st.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0nd1cy_z.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvg2zj7gf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa91bxhnv.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34mvsh0_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkeilyuc.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3i6cvg9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0b455m4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqolk66s4.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfcskj4lt.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwjpw4gu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2o2x6jnz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprh7_ziwt.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkr839wqy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfe7ikrb3.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp772ku0kb.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) return false;\n        boolean isLower = false;\n\
    \        boolean isUpper = false;\n        for (String key : dict.keySet()) {\n\
    \            if (key.equals(key.toLowerCase())) isLower = true;\n            if\
    \ (key.equals(key.toUpperCase())) isUpper = true;\n        }\n        return isLower\
    \ ^ isUpper;\n\n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8s2oil5e.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jnpk017.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqoaqag6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_39fhj80.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes7ii1cm.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean isLower = false;\n        boolean isUpper = false;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                isLower = true;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                isUpper = true;\n            } else {\n                return\
    \ false;\n            }\n        }\n        return isLower ^ isUpper;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpibh0pwf3.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbz2zo49v.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp34tng46a.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5oy2vb_1.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ae975pb.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn_yam6n1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (!key.equals(key.toLowerCase()))\
    \ {\n                allLower = false;\n            }\n            if (!key.equals(key.toUpperCase()))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7wdzfrwi.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9x1x37nm.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvm41jjs.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl68yr6zl.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1a8kbmzj.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        boolean allUpper = true;\n        boolean allLower =\
    \ true;\n        for (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
    \ {\n                allLower = false;\n            } else if (key.equals(key.toLowerCase()))\
    \ {\n                allUpper = false;\n            } else {\n               \
    \ return false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm28wbhmv.java:43)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) return false;\n        boolean allLower = true;\n\
    \        boolean allUpper = true;\n        for (String key : dict.keySet()) {\n\
    \            if (!key.equals(key.toLowerCase())) allLower = false;\n         \
    \   if (!key.equals(key.toUpperCase())) allUpper = false;\n        }\n       \
    \ return allLower || allUpper;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp716y3gtx.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53lgqtka.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4m7l67xv.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymb64db7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0p5zs4c0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb2hyeiqs.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9u9_6c55.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ah4ovkz.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vm530vf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3jbfz647.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesms6aqf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsd87eiaf.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2o1vo_c1.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1davilzx.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this method\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3a5er1k.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9nwny26.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpin4pgnz2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyufd998c.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbq3qw87v.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprb9yt4fe.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphu16k4gg.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptgk1pi5j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprinbxg_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt3h6h9fl.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpld8pamku.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcn_u_hy.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2kml46zh.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gvj_uh7.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1h166c5s.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8a9gc6fz.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // YOUR CODE HERE\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkpst8640.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1c4gvflo.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ph2ko17.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean isLowerCase = false;\n        boolean isUpperCase = false;\n   \
    \     for (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
    \ {\n                isLowerCase = true;\n            } else if (key.equals(key.toUpperCase()))\
    \ {\n                isUpperCase = true;\n            } else {\n             \
    \   return false;\n            }\n        }\n        return isLowerCase ^ isUpperCase;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikcx7vyh.java:39)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp518u88ge.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykb1c6is.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvt6v6dsv.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20slypw9.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjcjabn0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppc5___td.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkdtx88ts.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp436r4vwd.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xa4kwz8.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptghrx71g.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2e9gs3_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5hty3s82.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8sqc0qm3.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp639ecxqb.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph8a06mvx.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp922e6xiw.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0frkgp1.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi0l0ey8d.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa0vupnto.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg7i8l8lc.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp54n57mb5.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl4q9gz5q.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkvl_ab5u.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwvzx30t0.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4fvb9be.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0jp4blc8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4s5gv3bu.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb7dp9w6n.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp85glzr72.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean isLower = dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()));\n\
    \        boolean isUpper = dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\
    \        return isLower || isUpper;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwrbryjzo.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3l7xo94r.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnbadznz_.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzu9hkt58.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpufnvrw8u.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxo7q5l27.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpx39phi.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1rbe6zx.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebhp0k2s.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa76831g4.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp06qtn1ov.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cj5o61y.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmd64hh7b.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8q_vqg7l.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnq96rw5x.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41u_gk21.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9ql2vts.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6msy6zw6.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbrsfy98.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjur2p8lm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7i_rx3z.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3his8mt.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allLower = true;\n        boolean allUpper = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (!key.equals(key.toLowerCase()))\
    \ {\n                allLower = false;\n            }\n            if (!key.equals(key.toUpperCase()))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdbrpxxge.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfkd4sxrn.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()))\
    \ || dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj5_2dw0g.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpayviidz8.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsyz7r89a.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0rcs5x2x.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp96vd6k84.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueyxr0au.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8uw1dk20.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf30ikjtl.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8rf6hjvj.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptbyznvxi.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoofkubfs.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fru5i4c.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ed4vkif.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp46zokkgm.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk_o8jjw2.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7r9zj9d.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwos1xgjb.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        if (dict.isEmpty()) {\n            return false;\n        }\n   \
    \     boolean allUpper = true;\n        boolean allLower = true;\n        for\
    \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
    \ {\n                allLower = false;\n            } else {\n               \
    \ allUpper = false;\n            }\n        }\n        return allUpper || allLower;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1a0gf6r.java:38)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9syib1yo.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwwus31t5.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdi05vq79.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgergufor.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code goes here.\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7a45nx2s.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc1wzuza.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphkrpd85n.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0yevenye.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7mo_bcx.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // TODO: Implement this function.\n        return false;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\"\
    , \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n  \
    \  assert(checkDictCase((new HashMap<String, String>(Map.of(\"STATE\", \"NC\"\
    , \"ZIP\", \"12345\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"fruit\", \"Orange\", \"taste\", \"Sweet\")))) == (true));\n\
    \    assert(checkDictCase((new HashMap<String, String>())) == (false));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplys_4qln.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp941czicl.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqpwe052b.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdncxud19.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7dr1dx7.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        boolean allLower = true;\n        boolean allUpper = true;\n    \
    \    for (String key : dict.keySet()) {\n            if (!key.equals(key.toLowerCase()))\
    \ {\n                allLower = false;\n            }\n            if (!key.equals(key.toUpperCase()))\
    \ {\n                allUpper = false;\n            }\n        }\n        return\
    \ allLower || allUpper;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1z8ux44r.java:35)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp254q12k3.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprjywisus.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4nzr0j45.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here.\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz8dc3oec.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqe85xswt.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqlaxmit.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmply731mtx.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9yg_0q_.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgoji7uqs.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdi2c5wok.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return false;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\"\
    , \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqip23y6l.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgjpz629j.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnequ79b9.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfuybh29e.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"p\", \"pineapple\"\
    , \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new HashMap<String,\
    \ String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\", \"banana\"))))\
    \ == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1i2tqyb0.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpduqm3v5t.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a dictionary, return True if all keys are strings\
    \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
    \    // The function should return False is the given dictionary is empty.\n \
    \   // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"})\
    \ should return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\"\
    , \"B\":\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\"\
    , \"8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
    Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n\
    \    // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return\
    \ True.\n    public static boolean checkDictCase(HashMap<String, String> dict)\
    \ {\n        // Your code here\n        return false;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"p\", \"pineapple\", \"A\", \"banana\", \"B\"\
    , \"banana\")))) == (false));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"\
    p\", \"pineapple\", \"5\", \"banana\", \"a\", \"apple\")))) == (false));\n   \
    \ assert(checkDictCase((new HashMap<String, String>(Map.of(\"Name\", \"John\"\
    , \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
    \ HashMap<String, String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) ==\
    \ (true));\n    assert(checkDictCase((new HashMap<String, String>(Map.of(\"fruit\"\
    , \"Orange\", \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new\
    \ HashMap<String, String>())) == (false));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_drdmwg.java:24)\n"
  exit_code: 1
  status: Exception

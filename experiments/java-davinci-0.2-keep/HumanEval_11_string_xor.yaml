name: HumanEval_11_string_xor
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Input are two strings a and b consisting only of 1s and\
  \ 0s.\n    // Perform binary XOR on these inputs and return result also as a string.\n\
  \    // >>> string_xor('010', '110')\n    // '100'\n    public static String stringXor(String\
  \ a, String b) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(stringXor((\"\
  111000\"), (\"101010\")).equals((\"010010\")));\n    assert(stringXor((\"1\"), (\"\
  1\")).equals((\"0\")));\n    assert(stringXor((\"0101\"), (\"0000\")).equals((\"\
  0101\")));\n    }\n\n}\n"
completions: ["        // TODO: Implement me\n        return null;\n", "        //\
    \ Your code here\n        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();\n",
  "        // Your code here\n        return \"\";\n", "        return \"\";\n", " \
    \       // TODO: Implement this function\n        return \"\";\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        // >>> string_xor('010', '110')\n        // '100'\n        // >>> string_xor('000',\
    \ '111')\n        // '111'\n        // >>> string_xor('010', '111')\n        //\
    \ '101'\n        // >>> string_xor('111', '111')\n        // '000'\n        //\
    \ >>> string_xor('100', '001')\n        // '101'\n        // >>> string_xor('100',\
    \ '000')\n        // '100'\n        // >>> string_xor('001', '111')\n        //\
    \ '110'\n        // >>> string_xor('010', '101')\n        // '111'\n        //\
    \ >>> string_xor('110', '101')\n        // '011'\n        // >>> string_xor('111',\
    \ '100')\n        // '011'\n        // >>> string_xor('000', '011')\n        //\
    \ '011'\n        // >>> string_xor('101', '110')\n        // '011'\n        //\
    \ >>> string_xor('001', '101')\n        // '100'\n        // >>> string_xor('011',\
    \ '110')\n        // '101'\n        // >>> string_xor('000', '100')\n        //\
    \ '100'\n        // >>> string_xor('011', '001')\n        // '010'\n        //\
    \ >>> string_xor('110', '011')\n        // '101'\n        // >>> string_xor('101',\
    \ '011')\n        // '110'\n        // >>> string_xor('011', '000')\n        //\
    \ '011'\n        // >>> string_xor('101', '001')\n        // '100'\n        //\
    \ >>> string_xor('001', '011')\n        // '010'\n        // >>> string_xor('001',\
    \ '000')\n        // '001'\n        // >>> string_xor('011', '101')\n        //\
    \ '110'\n        // >>> string_xor('110', '000')\n        // '110'\n        //\
    \ >>> string_xor('100', '011')\n        // '111'\n        // >>> string_xor('000',\
    \ '", "        // TODO: Implement this function\n        return \"\";\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        return\
    \ \"\";\n", "        // TODO: Implement this function\n        return null;\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n     \
    \   return sb.toString();\n", "        // Your code here\n        return null;\n",
  "        // TODO: Implement this function\n        return \"\";\n", "        //\
    \ TODO: Implement me\n        return \"\";\n", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n        return\
    \ sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        return \"\";\n", "       \
    \ // Fill in your code here\n        return \"\";\n", "        // TODO: implement\
    \ this function\n        return \"\";\n", "        // Your code here\n       \
    \ return null;\n", "        // TODO: Implement this function\n        return \"\
    \";\n", "        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n \
    \               sb.append('0');\n            } else {\n                sb.append('1');\n\
    \            }\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        // TODO: Implement this function\n\
    \        return null;\n", "        // TODO: Implement this function\n        return\
    \ \"\";\n", "        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n\
    \        }\n        return sb.toString();\n", "        // Your code here\n   \
    \     return \"\";\n", "        // TODO: Implement this function\n        return\
    \ null;\n", "        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n\
    \                sb.append('0');\n            } else {\n                sb.append('1');\n\
    \            }\n        }\n        return sb.toString();\n", "        return \"\
    \";\n", "        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) == b.charAt(i)\
    \ ? '0' : '1');\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // Your code here\n        return\
    \ \"\";\n", "        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n\
    \        }\n        return sb.toString();\n", "        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n         \
    \   sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n        return\
    \ sb.toString();\n", "        // Your code here\n        return \"\";\n", "  \
    \      return \"\";\n", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       // Your code here\n        return \"\";\n", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n    \
    \    return sb.toString();\n", "        // TODO: Implement this function.\n  \
    \      return null;\n", "        // TODO: Implement this function\n        return\
    \ \"\";\n", "        // Fill in your code here\n        return \"\";\n", "   \
    \     StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        return \"\";\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        // Your code here.\n        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // Fill in your code here\n \
    \       return \"\";\n", "        // Your code here\n        return null;\n",
  "        int[] a_int = new int[a.length()];\n        int[] b_int = new int[b.length()];\n\
    \        int[] c_int = new int[a.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            a_int[i] = Integer.parseInt(a.substring(i, i + 1));\n  \
    \          b_int[i] = Integer.parseInt(b.substring(i, i + 1));\n            c_int[i]\
    \ = a_int[i] ^ b_int[i];\n        }\n        String c = \"\";\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            c += Integer.toString(c_int[i]);\n\
    \        }\n        return c;\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       return \"\";\n", "        // TODO: Implement this function.\n        return\
    \ \"\";\n", "        StringBuilder sb = new StringBuilder();\n        for (int\
    \ i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) == b.charAt(i)\
    \ ? '0' : '1');\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        // Your code here\n        return \"\
    \";\n", "        // TODO: Implement this function\n        return \"\";\n", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        // TODO: Implement me!\n \
    \       return \"\";\n", "        // Your code here\n        return null;\n",
  "        // Your code here\n        return null;\n", "        // TODO: Implement\
    \ this function.\n        return \"\";\n", "        // TODO: Implement\n     \
    \   return \"\";\n", "        // Your code here\n        return \"\";\n", "  \
    \      // TODO: Implement this function\n        return \"\";\n", "        //\
    \ Your code here\n        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            char c = a.charAt(i);\n\
    \            char d = b.charAt(i);\n            if (c == d) {\n              \
    \  sb.append('0');\n            } else {\n                sb.append('1');\n  \
    \          }\n        }\n        return sb.toString();\n", "        String result\
    \ = \"\";\n        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i)\
    \ == b.charAt(i)) {\n                result += \"0\";\n            } else {\n\
    \                result += \"1\";\n            }\n        }\n        return result;\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        int[] aa = new int[a.length()];\n\
    \        int[] bb = new int[b.length()];\n        for (int i = 0; i < a.length();\
    \ i++) {\n            aa[i] = Integer.parseInt(a.substring(i, i + 1));\n     \
    \   }\n        for (int i = 0; i < b.length(); i++) {\n            bb[i] = Integer.parseInt(b.substring(i,\
    \ i + 1));\n        }\n        int[] cc = new int[aa.length];\n        for (int\
    \ i = 0; i < aa.length; i++) {\n            cc[i] = aa[i] ^ bb[i];\n        }\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ cc.length; i++) {\n            sb.append(cc[i]);\n        }\n        return\
    \ sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n     \
    \   return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        int len = Math.max(a.length(), b.length());\n        a = String.format(\"\
    %0\" + len + \"d\", new BigInteger(a));\n        b = String.format(\"%0\" + len\
    \ + \"d\", new BigInteger(b));\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < len; i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? \"0\" : \"1\");\n        }\n        return sb.toString();\n",
  "        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       // TODO: Implement this function.\n        return \"\";\n", "        //\
    \ TODO: Implement this function.\n        return \"\";\n", "        return \"\"\
    ;\n", "        StringBuilder sb = new StringBuilder();\n        for (int i = 0;\
    \ i < a.length(); i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n\
    \        }\n        return sb.toString();\n", "        // TODO: Implement this\
    \ function\n        return null;\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        // TODO:\
    \ Implement this function\n        return \"\";\n", "        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n   \
    \         sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n    \
    \    return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        // TODO: implement this function\n        return \"\";\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        // TODO: Implement this function\n\
    \        return \"\";\n", "        // Fill in your code here\n        return \"\
    \";\n", "        StringBuilder sb = new StringBuilder();\n        for (int i =\
    \ 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) == b.charAt(i)\
    \ ? '0' : '1');\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        // TODO: Implement this function.\n\
    \        return null;\n", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       // Your code here.\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        // Your code here.\n     \
    \   return \"\";\n", "        // Your code here.\n        return \"\";\n", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n     \
    \   return sb.toString();\n", "        // Your code here.\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // >>> string_xor('010', '110')\n\
    \        // '100'\n        // >>> string_xor('111', '111')\n        // '000'\n\
    \        // >>> string_xor('100', '000')\n        // '100'\n        // >>> string_xor('001',\
    \ '101')\n        // '100'\n        // >>> string_xor('101', '011')\n        //\
    \ '110'\n        // >>> string_xor('0', '1')\n        // '1'\n        // >>> string_xor('1',\
    \ '0')\n        // '1'\n        // >>> string_xor('0', '0')\n        // '0'\n\
    \        // >>> string_xor('1', '1')\n        // '0'\n        // >>> string_xor('',\
    \ '')\n        // ''\n        // >>> string_xor('0', '')\n        // '0'\n   \
    \     // >>> string_xor('', '0')\n        // '0'\n        // >>> string_xor('1',\
    \ '')\n        // '1'\n        // >>> string_xor('', '1')\n        // '1'\n  \
    \      // >>> string_xor('01', '10')\n        // '11'\n        // >>> string_xor('01',\
    \ '11')\n        // '10'\n        // >>> string_xor('10', '01')\n        // '11'\n\
    \        // >>> string_xor('10', '11')\n        // '01'\n        // >>> string_xor('11',\
    \ '01')\n        // '10'\n        // >>> string_xor('11', '10')\n        // '01'\n\
    \        // >>> string_xor('0101', '1010')\n        // '1111'\n        // >>>\
    \ string_xor('1010', '0101')\n        // '1111'\n        // >>> string_xor('0101',\
    \ '1111')\n        // '1010'\n        // >>> string_xor('1111', '0101')\n    \
    \    // '1010'\n        // >>> string_xor('1010', '1111')\n        // '0101'\n\
    \        // >>> string_xor('1111", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // Your code here\n        return\
    \ \"\";\n", "        // TODO: Implement this function\n        return \"\";\n",
  "        int len = Math.max(a.length(), b.length());\n        a = String.format(\"\
    %0\" + len + \"d\", new BigInteger(a));\n        b = String.format(\"%0\" + len\
    \ + \"d\", new BigInteger(b));\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < len; i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        return \"\";\n", "       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        // Fill in your code here\n\
    \        return null;\n", "        int n = a.length();\n        int m = b.length();\n\
    \        if (n != m) {\n            throw new IllegalArgumentException(\"Strings\
    \ must be of equal length\");\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < n; i++) {\n            int ai = a.charAt(i) - '0';\n\
    \            int bi = b.charAt(i) - '0';\n            sb.append(ai ^ bi);\n  \
    \      }\n        return sb.toString();\n", "        // >>> string_xor('010',\
    \ '110')\n        // '100'\n        // >>> string_xor('111', '000')\n        //\
    \ '111'\n        // >>> string_xor('10010101010', '010101010101')\n        //\
    \ '111001111111'\n        // >>> string_xor('101', '110')\n        // '011'\n\
    \        // >>> string_xor('0', '0')\n        // '0'\n        // >>> string_xor('1',\
    \ '1')\n        // '0'\n        // >>> string_xor('', '')\n        // ''\n   \
    \     // >>> string_xor('111', '111')\n        // '000'\n        // >>> string_xor('000',\
    \ '111')\n        // '111'\n        // >>> string_xor('111', '000')\n        //\
    \ '111'\n        // >>> string_xor('000', '000')\n        // '000'\n        //\
    \ >>> string_xor('010', '101')\n        // '111'\n        // >>> string_xor('101',\
    \ '010')\n        // '111'\n        // >>> string_xor('101', '101')\n        //\
    \ '000'\n        // >>> string_xor('010', '010')\n        // '000'\n        //\
    \ >>> string_xor('111', '010')\n        // '101'\n        // >>> string_xor('010',\
    \ '111')\n        // '101'\n        // >>> string_xor('101', '111')\n        //\
    \ '010'\n        // >>> string_xor('111', '101')\n        // '010'\n        //\
    \ >>> string_xor('000', '010')\n        // '010'\n        // >>> string_xor('010',\
    \ '000')\n        // '010'\n        // >>> string_xor('000', '101')\n        //\
    \ '101'\n        // >>> string_xor('101', '000')\n        // '101'\n        //\
    \ >>> string_xor('111', '111')\n        // '000'\n        // >>> string_xor('000',\
    \ '111')\n        // '111'\n        // >>> string", "        return \"\";\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        return \"\";\n", "        // Fill in your code here.\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", "  \
    \      // TODO: Implement this function\n        return null;\n", "        //\
    \ >>> string_xor('010', '110')\n        // '100'\n        // >>> string_xor('00',\
    \ '00')\n        // '00'\n        // >>> string_xor('11', '11')\n        // '00'\n\
    \        // >>> string_xor('01', '10')\n        // '11'\n        // >>> string_xor('01',\
    \ '00')\n        // '01'\n        // >>> string_xor('10', '00')\n        // '10'\n\
    \        // >>> string_xor('10', '01')\n        // '11'\n        // >>> string_xor('01',\
    \ '01')\n        // '00'\n        // >>> string_xor('10', '10')\n        // '00'\n\
    \        // >>> string_xor('11', '00')\n        // '11'\n        // >>> string_xor('00',\
    \ '11')\n        // '11'\n        // >>> string_xor('11', '10')\n        // '01'\n\
    \        // >>> string_xor('10', '11')\n        // '01'\n        // >>> string_xor('00',\
    \ '01')\n        // '01'\n        // >>> string_xor('01', '11')\n        // '10'\n\
    \        // >>> string_xor('11', '01')\n        // '10'\n        // >>> string_xor('10',\
    \ '10')\n        // '00'\n        // >>> string_xor('00', '10')\n        // '10'\n\
    \        // >>> string_xor('01', '01')\n        // '00'\n        // >>> string_xor('00',\
    \ '00')\n        // '00'\n        // >>> string_xor('10', '01')\n        // '11'\n\
    \        // >>> string_xor('01', '10')\n        // '11'\n        // >>> string_xor('00',\
    \ '11')\n        // '11'\n        // >>> string_xor('11', '00')\n        // '11'\n\
    \        // >>> string_xor('10', '10')\n        // '00'\n        // >>> string_xor('01',\
    \ '", "        StringBuilder sb = new StringBuilder();\n        for (int i = 0;\
    \ i < a.length(); i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n    \
    \            sb.append('0');\n            } else {\n                sb.append('1');\n\
    \            }\n        }\n        return sb.toString();\n", "        return \"\
    \";\n", "        // TODO: Implement me\n        return \"\";\n", "        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Fill in your code here\n   \
    \     StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"\
    0\");\n            } else {\n                sb.append(\"1\");\n            }\n\
    \        }\n        return sb.toString();\n", "        // TODO: Implement me\n\
    \        return \"\";\n", "        // TODO: Implement this function\n        return\
    \ null;\n", "        // Fill in your code here.\n        return \"\";\n", "  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n   \
    \     }\n        return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       // TODO: Implement this function.\n        return \"\";\n", "        //\
    \ Fill in the code here.\n        StringBuilder sb = new StringBuilder();\n  \
    \      for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       return \"\";\n", "        StringBuilder sb = new StringBuilder();\n  \
    \      for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ == b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", " \
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // Your code here\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\"\
    );\n            } else {\n                sb.append(\"1\");\n            }\n \
    \       }\n        return sb.toString();\n", "        // >>> string_xor('010',\
    \ '110')\n        // '100'\n        // >>> string_xor('0', '0')\n        // '0'\n\
    \        // >>> string_xor('1', '0')\n        // '1'\n        // >>> string_xor('1',\
    \ '1')\n        // '0'\n        // >>> string_xor('10', '10')\n        // '0'\n\
    \        // >>> string_xor('10', '0')\n        // '10'\n        // >>> string_xor('111',\
    \ '111')\n        // '0'\n        // >>> string_xor('110', '101')\n        //\
    \ '011'\n        // >>> string_xor('1010101', '0101010')\n        // '1111111'\n\
    \        // >>> string_xor('100', '111')\n        // '011'\n        // >>> string_xor('11100',\
    \ '01111')\n        // '10011'\n        // >>> string_xor('11100', '01111')\n\
    \        // '10011'\n        // >>> string_xor('11100', '01111')\n        // '10011'\n\
    \        // >>> string_xor('11100', '01111')\n        // '10011'\n        // >>>\
    \ string_xor('11100', '01111')\n        // '10011'\n        // >>> string_xor('11100',\
    \ '01111')\n        // '10011'\n        // >>> string_xor('11100', '01111')\n\
    \        // '10011'\n        // >>> string_xor('11100', '01111')\n        // '10011'\n\
    \        // >>> string_xor('11100', '01111')\n        // '10011'\n        // >>>\
    \ string_xor('11100', '01111')\n        // '10011'\n        // >>> string_xor('11100',\
    \ '01111')\n        // '10011'\n        // >>> string_xor('11100', '01111')\n\
    \        // '10011'\n        // >>> string_xor('11100', '01111')\n        // '10011'\n\
    \        // >>> string_xor", "        // Fill in your code here.\n        return\
    \ \"\";\n", "        // TODO: Implement this function\n        return \"\";\n",
  "        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n   \
    \     for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n \
    \       return sb.toString();\n", "        // TODO: Implement this function\n\
    \        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n \
    \       for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i)\
    \ ^ b.charAt(i));\n        }\n        return sb.toString();\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        return\
    \ sb.toString();\n", "        StringBuilder sb = new StringBuilder();\n      \
    \  for (int i = 0; i < a.length(); i++) {\n            sb.append(a.charAt(i) ==\
    \ b.charAt(i) ? '0' : '1');\n        }\n        return sb.toString();\n", "  \
    \      // Your code here\n        return \"\";\n", "        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n     \
    \       sb.append(a.charAt(i) == b.charAt(i) ? '0' : '1');\n        }\n      \
    \  return sb.toString();\n", "        // TODO: implement this function\n     \
    \   return \"\";\n", "        // Your code here\n        return null;\n", "  \
    \      // Your code here.\n        return \"\";\n", "        // Your code here\n\
    \        return null;\n", "        // TODO: Implement me\n        return null;\n",
  "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n     \
    \   return sb.toString();\n", "        return \"\";\n", "        // TODO: Implement\
    \ this function\n        return \"\";\n", "        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < a.length(); i++) {\n            if (a.charAt(i) ==\
    \ b.charAt(i)) {\n                sb.append('0');\n            } else {\n    \
    \            sb.append('1');\n            }\n        }\n        return sb.toString();\n",
  "        return \"\";\n", "        return \"\";\n", "        // Fill in your code\
    \ here.\n        return null;\n", "        // Fill in your code here\n       \
    \ return \"\";\n", "        // Your code here\n        return \"\";\n", "    \
    \    StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < a.length();\
    \ i++) {\n            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        return \"\";\n", "        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append('0');\n\
    \            } else {\n                sb.append('1');\n            }\n      \
    \  }\n        return sb.toString();\n", "        // Your code here\n        return\
    \ null;\n", "        // TODO: Implement this function.\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < a.length(); i++) {\n\
    \            if (a.charAt(i) == b.charAt(i)) {\n                sb.append(\"0\"\
    );\n            } else {\n                sb.append(\"1\");\n            }\n \
    \       }\n        return sb.toString();\n", "        // TODO: Implement this\
    \ function.\n        return \"\";\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

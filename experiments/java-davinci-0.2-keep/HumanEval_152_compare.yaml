name: HumanEval_152_compare
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // I think we all remember that feeling when the result of\
  \ some long-awaited\n    // event is finally known. The feelings and thoughts you\
  \ have at that moment are\n    // definitely worth noting down and comparing.\n\
  \    // Your task is to determine if a person correctly guessed the results of a\
  \ number of matches.\n    // You are given two arrays of scores and guesses of equal\
  \ length, where each index shows a match. \n    // Return an array of the same length\
  \ denoting how far off each guess was. If they have guessed correctly,\n    // the\
  \ value is 0, and if not, the value is the absolute difference between the guess\
  \ and the score.\n    // example:\n    // compare([1,2,3,4,5,1],[1,2,3,4,2,-2])\
  \ -> [0,0,0,0,3,3]\n    // compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n\
  \    public static ArrayList<Long> compare(ArrayList<Long> game, ArrayList<Long>\
  \ guess) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l,\
  \ (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l,\
  \ (long)4l, (long)2l, (long)-2l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)3l, (long)3l)))));\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l, (long)0l, (long)0l,\
  \ (long)0l))), (new ArrayList<Long>(Arrays.asList((long)0l, (long)0l, (long)0l,\
  \ (long)0l, (long)0l, (long)0l)))).equals((new ArrayList<Long>(Arrays.asList((long)0l,\
  \ (long)0l, (long)0l, (long)0l, (long)0l, (long)0l)))));\n    assert(compare((new\
  \ ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)-2l, (long)-3l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l,\
  \ (long)6l)))));\n    assert(compare((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)-1l,\
  \ (long)2l, (long)3l, (long)4l)))).equals((new ArrayList<Long>(Arrays.asList((long)2l,\
  \ (long)0l, (long)0l, (long)1l)))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_158_find_max
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzjze2xb.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmq0l_sq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return null;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp8ujmcip3.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbpirlija.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String result = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                result\
    \ = word;\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi7805bs_.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1i50efy.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqm8vmil9.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsewcm1zi.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcclnogwa.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewsc5b3j.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmcfzkkch.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxUnique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.lastIndexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > maxUnique) {\n                max = word;\n         \
    \       maxUnique = unique;\n            }\n        }\n        return max;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl2zdmlz0.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdqify9hq.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp69xzl3kz.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5inh0ui.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnkz_0kp.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4cidy_0m.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq7dcvpt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rqglrzt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgnq3j98.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdmx50er7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps2940zjv.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf7dsmuc5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzjpyz_n8.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeed1k1bm.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfjrgq9oo.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function.\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpas45ax_6.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp8w3eqgh4.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpujowoofb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbfd1p98j.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(Problem::countUniqueChars))\n\
    \            .orElse(\"\");\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi0l1s3yx.java:18: error: invalid method reference\n           \
    \ .max(Comparator.comparing(Problem::countUniqueChars))\n                    \
    \                  ^\n  cannot find symbol\n    symbol:   method countUniqueChars()\n\
    \    location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsxdznhr.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmptycxkr7y.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoiwpyoux.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf9x6oqmb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparqxb404.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd49ww2sf.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3a4ile59.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqwa0lhgh.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptmdkoncc.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8320ktqs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65dagtw.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97yf7r8a.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5haapx5y.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv2sdlnr_.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg89u46cu.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxString = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxString = word;\n            }\n        }\n        return maxString;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp42zo80ud.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt2xu8klt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg1ip1gw0.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tnwpx9x.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String result = \"\";\n        for (String\
    \ word : words) {\n            if (word.length() > max) {\n                max\
    \ = word.length();\n                result = word;\n            }\n        }\n\
    \        return result;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf6kiak4q.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94thcv_5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvoma59i0.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kiokbiu.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq3_8tsse.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpommk8hry.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            Set<Character> set = new HashSet<>();\n\
    \            for (char c : word.toCharArray()) {\n                set.add(c);\n\
    \            }\n            if (set.size() > max_count) {\n                max\
    \ = word;\n                max_count = set.size();\n            }\n        }\n\
    \        return max;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\", (String)\"\
    of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiuydw4c7.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            if (word.length() > max) {\n          \
    \      max = word.length();\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65h0ix5r.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(Problem::countUniqueChars)\n\
    \                .thenComparing(String::compareTo))\n            .get();\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpujtj18zq.java:18: error: invalid method reference\n           \
    \ .max(Comparator.comparing(Problem::countUniqueChars)\n                     \
    \                 ^\n  cannot find symbol\n    symbol:   method countUniqueChars()\n\
    \    location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz86j2p4m.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int uniqueChars = 0;\n            for (int\
    \ i = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    uniqueChars++;\n                }\n           \
    \ }\n            if (uniqueChars > max) {\n                max = uniqueChars;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y19sgsz.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(s\
    \ -> s.chars().distinct().count()))\n            .get();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpna0aba4h.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfz1webt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return null;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgx3je_n_.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkyk_buxj.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String result = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                result\
    \ = word;\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnsm1xawl.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5x9qix20.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzf49ea_3.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write - Your - Code\n        return \"\";\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_tmgx__.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeiprkmpn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptyuktijb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4kzfeh5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1v5hjphm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3waolrc.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgmx3zn45.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgsplmh05.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        String max = \"\";\n    \
    \    int max_count = 0;\n        for (String word : words) {\n            int\
    \ count = 0;\n            for (int i = 0; i < word.length(); i++) {\n        \
    \        if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp94_bm_3p.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpecxf4dxk.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                char c = word.charAt(i);\n \
    \               if (word.indexOf(c) == i) {\n                    count++;\n  \
    \              }\n            }\n            if (count > max_count) {\n      \
    \          max = word;\n                max_count = count;\n            }\n  \
    \      }\n        return max;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ys_itan.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String max_word = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                max_word\
    \ = word;\n            }\n        }\n        return max_word;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8q_76t_l.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String result = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                result\
    \ = word;\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0piq2uou.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gn8jxeg.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppnasza65.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8s1692_i.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu6dhweii.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function.\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugewd74r.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpazz8zz5m.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku69834p.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpjkp639qp.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxkktpwjb.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String result = \"\";\n        for (String\
    \ word : words) {\n            int count = 0;\n            for (int i = 0; i <\
    \ word.length(); i++) {\n                if (word.indexOf(word.charAt(i)) == i)\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                result\
    \ = word;\n            }\n        }\n        return result;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqeiewap0.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx325ghmb.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzf_ux8ls.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaygyzfox.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6js_zuzv.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesx23cz7.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1ucujkq.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i4h596p.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqj8r6mrs.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                char c = word.charAt(i);\n \
    \               if (word.indexOf(c) == i) {\n                    count++;\n  \
    \              }\n            }\n            if (count > max_count) {\n      \
    \          max = word;\n                max_count = count;\n            }\n  \
    \      }\n        return max;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s7rc7g9.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        int max = 0;\n        String\
    \ maxWord = \"\";\n        for (String word : words) {\n            int unique\
    \ = 0;\n            for (int i = 0; i < word.length(); i++) {\n              \
    \  if (word.indexOf(word.charAt(i)) == i) {\n                    unique++;\n \
    \               }\n            }\n            if (unique > max) {\n          \
    \      max = unique;\n                maxWord = word;\n            }\n       \
    \ }\n        return maxWord;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnav9zrgp.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6xqxl95.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppymb6551.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: implement the function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppnc9gjzx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8iklclqs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzpyv8bre.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp3m_mf7cz.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwi1mye1m.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpav2nek8z.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp41kksoim.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj7rflp37.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp04ck0936.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0vk_exat.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzo62vojh.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (char c\
    \ : word.toCharArray()) {\n                if (word.indexOf(c) == word.lastIndexOf(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzkf0sjdn.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw2cctxrw.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoc0m9lml.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb0efchqq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            Set<Character> set = new HashSet<>();\n\
    \            for (int i = 0; i < word.length(); i++) {\n                set.add(word.charAt(i));\n\
    \            }\n            if (set.size() > maxCount) {\n                maxCount\
    \ = set.size();\n                max = word;\n            }\n        }\n     \
    \   return max;\n\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gvjnut0.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxString = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxString\
    \ = word;\n            }\n        }\n        return maxString;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpma3k3oog.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1enqns1v.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj6n0824q.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp378oossh.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurwaby56.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpu869wjrs.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxolowdmx.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparingInt(Problem::countUniqueChars))\n\
    \            .orElse(\"\");\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnw26c43l.java:18: error: invalid method reference\n           \
    \ .max(Comparator.comparingInt(Problem::countUniqueChars))\n                 \
    \                        ^\n  cannot find symbol\n    symbol:   method countUniqueChars()\n\
    \    location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5eg6b31.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpni6oezdj.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        String max = \"\";\n   \
    \     int max_count = 0;\n        for (String word : words) {\n            int\
    \ count = 0;\n            for (int i = 0; i < word.length(); i++) {\n        \
    \        if (word.indexOf(word.charAt(i)) == i) {\n                    count++;\n\
    \                }\n            }\n            if (count > max_count) {\n    \
    \            max = word;\n                max_count = count;\n            }\n\
    \        }\n        return max;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdb7ds5ub.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement your solution here\n        return \"\"\
    ;\n\n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm8cyb6jx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                char c = word.charAt(i);\n \
    \               if (word.indexOf(c) == i) {\n                    count++;\n  \
    \              }\n            }\n            if (count > max) {\n            \
    \    max = count;\n                maxWord = word;\n            }\n        }\n\
    \        return maxWord;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1uoc1wp.java:37)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z3nmi99.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwvhk5f4m.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpehmo5nov.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8mj2u05i.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc3pjkai8.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfhqkngl.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            if (word.length() > max) {\n          \
    \      max = word.length();\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbynkw54o.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_2vb_vs.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // YOUR CODE HERE\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjwwek4hq.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp890i0ubu.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp2n06ejqs.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgj4z_t9g.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        // To print results to the\
    \ standard output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7qh_4g9b.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzcseoxf5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int maxCount = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > maxCount) {\n                maxCount = count;\n      \
    \          max = word;\n            }\n        }\n        return max;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgswmx_l7.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8b7gnslg.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnw22bah.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpji5h0nfx.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmu8268_z.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu1um7_7v.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return null;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpq4advhk5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn2m02ana.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8l4aoikl.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ei8mo6_.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y_2k8qa.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function.\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ba_e3oy.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgn14pss.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphjdi8huz.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp56zesqc5.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplf5xv4xj.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpom4obipe.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppih7jb6s.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(s\
    \ -> s.chars().distinct().count()))\n            .get();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ci9c_cu.java:24)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzonzb8a.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp14ww9n2.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgkx6qx7o.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n37dn_y.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(Problem::countUniqueChars)\n\
    \                           .thenComparing(String::compareTo))\n            .get();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpembmpl4q.java:18: error: invalid method reference\n           \
    \ .max(Comparator.comparing(Problem::countUniqueChars)\n                     \
    \                 ^\n  cannot find symbol\n    symbol:   method countUniqueChars()\n\
    \    location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return words.stream()\n            .max(Comparator.comparing(Problem::countUniqueChars))\n\
    \            .orElse(\"\");\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"name\"\
    , (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpph3n4rcp.java:18: error: invalid method reference\n           \
    \ .max(Comparator.comparing(Problem::countUniqueChars))\n                    \
    \                  ^\n  cannot find symbol\n    symbol:   method countUniqueChars()\n\
    \    location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_7nm_akc.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max) {\n                max = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp058b9u9d.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp79jz959l.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5qndbxn.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcjlqao5x.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpui5_8boy.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp61fc0zs6.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvafc0bjl.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_len = 0;\n        for\
    \ (String word : words) {\n            if (word.length() > max_len) {\n      \
    \          max = word;\n                max_len = word.length();\n           \
    \ }\n        }\n        return max;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4jvfsrl0.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21ygz2m7.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return null;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp542ztzmy.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjju1z_ir.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2shw0o40.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here.\n        return \"\";\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6auqr8id.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Your code here\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_mf2xbyt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpumyo6ytz.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Write your code here\n        return \"\";\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppl0xdf6o.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmsk83qh_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpov_3f7et.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        int max = 0;\n        String maxWord = \"\";\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max) {\n                max = unique;\n             \
    \   maxWord = word;\n            }\n        }\n        return maxWord;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsrk2x6yf.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement this function\n        return \"\";\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppgxq2u4u.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        for (String word : words) {\n\
    \            if (word.length() > max.length()) {\n                max = word;\n\
    \            }\n        }\n        return max;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpurp9w16z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // TODO: Implement me\n        return \"\";\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk1z8rvt.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_7o8pob.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return null;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.findMax(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp2gc0pup2.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        return \"\";\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cz60qrq.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_count = 0;\n        for\
    \ (String word : words) {\n            int count = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    count++;\n                }\n            }\n  \
    \          if (count > max_count) {\n                max = word;\n           \
    \     max_count = count;\n            }\n        }\n        return max;\n\n  \
    \  }\n    public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg906hrfc.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        String max = \"\";\n        int max_unique = 0;\n        for\
    \ (String word : words) {\n            int unique = 0;\n            for (int i\
    \ = 0; i < word.length(); i++) {\n                if (word.indexOf(word.charAt(i))\
    \ == i) {\n                    unique++;\n                }\n            }\n \
    \           if (unique > max_unique) {\n                max = word;\n        \
    \        max_unique = unique;\n            }\n        }\n        return max;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"of\", (String)\"\
    string\")))).equals((\"string\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"enam\", (String)\"game\")))).equals((\"enam\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"aaaaaaa\", (String)\"bb\", (String)\"\
    cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    abc\", (String)\"cba\")))).equals((\"abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpht34zqf9.java:36)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"\
    name\", \"enam\", \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\"\
    \ ,\"cc\"]) == \"\"aaaaaaa\"\n    public static String findMax(ArrayList<String>\
    \ words) {\n        // Write your code here\n        return \"\";\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    name\", (String)\"of\", (String)\"string\")))).equals((\"string\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"name\", (String)\"enam\", (String)\"\
    game\")))).equals((\"enam\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    aaaaaaa\", (String)\"bb\", (String)\"cc\")))).equals((\"aaaaaaa\")));\n    assert(findMax((new\
    \ ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"cba\")))).equals((\"\
    abc\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    play\", (String)\"this\", (String)\"game\", (String)\"of\", (String)\"footbott\"\
    )))).equals((\"footbott\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    we\", (String)\"are\", (String)\"gonna\", (String)\"rock\")))).equals((\"gonna\"\
    )));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"we\",\
    \ (String)\"are\", (String)\"a\", (String)\"mad\", (String)\"nation\")))).equals((\"\
    nation\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"\
    this\", (String)\"is\", (String)\"a\", (String)\"prrk\")))).equals((\"this\")));\n\
    \    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"b\")))).equals((\"\
    b\")));\n    assert(findMax((new ArrayList<String>(Arrays.asList((String)\"play\"\
    , (String)\"play\", (String)\"play\")))).equals((\"play\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_gueizhb.java:22)\n"
  exit_code: 1
  status: Exception

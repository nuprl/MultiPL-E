name: HumanEval_103_rounded_avg
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv3usmtn3.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv3usmtn3.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpv3usmtn3.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpv3usmtn3.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpv3usmtn3.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmpv3usmtn3.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv3usmtn3.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv3usmtn3.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv3usmtn3.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxk3oitb4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxk3oitb4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpxk3oitb4.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxk3oitb4.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxk3oitb4.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxk3oitb4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxk3oitb4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxk3oitb4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxk3oitb4.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkes_cbbb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpkes_cbbb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpkes_cbbb.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpkes_cbbb.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkes_cbbb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkes_cbbb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkes_cbbb.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkes_cbbb.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkes_cbbb.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.T_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.T_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp15jtm2ir.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp15jtm2ir.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.T_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp15jtm2ir.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.T_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp15jtm2ir.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.T_String(), \"0b\" + Long.toBinaryString(avg));\n   \
    \                ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmp15jtm2ir.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.T_String(), \"\
    0b\" + Long.toBinaryString(avg));\n                                          \
    \                     ^\n/tmp/tmp15jtm2ir.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp15jtm2ir.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp15jtm2ir.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp15jtm2ir.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(0, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(1,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5z3do05d.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp5z3do05d.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(0, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp5z3do05d.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(1, avg);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5z3do05d.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  loc"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwcz4m3kh.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpwcz4m3kh.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpwcz4m3kh.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpwcz4m3kh.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwcz4m3kh.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwcz4m3kh.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwcz4m3kh.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwcz4m3kh.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwcz4m3kh.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(0, \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9rthwdmn.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp9rthwdmn.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp9rthwdmn.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(0, \"0b\" + binary);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp9rthwdmn.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9rthwdmn.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9rthwdmn.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9rthwdmn.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9rthwdmn.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9rthwdmn.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp42v8x224.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp42v8x224.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp42v8x224.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp42v8x224.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42v8x224.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42v8x224.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42v8x224.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42v8x224.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42v8x224.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx7s2qopw.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpx7s2qopw.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpx7s2qopw.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpx7s2qopw.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx7s2qopw.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx7s2qopw.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx7s2qopw.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx7s2qopw.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx7s2qopw.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjfn23vhq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjfn23vhq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpjfn23vhq.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpjfn23vhq.java:27: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpjfn23vhq.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                                                                            \
    \     ^\n/tmp/tmpjfn23vhq.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpjfn23vhq.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpjfn23vhq.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjfn23vhq.java:34: error: cannot find symbol\n\
    \    assert(r"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"\", -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary, 0);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqvn1htq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppqvn1htq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"\", -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmppqvn1htq.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary, 0);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppqvn1htq.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppqvn1htq.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppqvn1htq.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppqvn1htq.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppqvn1htq.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppqvn1htq.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjt6nrvjn.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjt6nrvjn.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpjt6nrvjn.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpjt6nrvjn.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjt6nrvjn.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjt6nrvjn.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjt6nrvjn.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjt6nrvjn.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjt6nrvjn.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp25_8frtq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp25_8frtq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp25_8frtq.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmp25_8frtq.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp25_8frtq.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmp25_8frtq.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp25_8frtq.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp25_8frtq.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp25_8frtq.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkw5jdfyw.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpkw5jdfyw.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpkw5jdfyw.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpkw5jdfyw.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkw5jdfyw.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkw5jdfyw.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkw5jdfyw.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkw5jdfyw.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkw5jdfyw.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz1rv2w7y.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpz1rv2w7y.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpz1rv2w7y.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpz1rv2w7y.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpz1rv2w7y.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmpz1rv2w7y.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpz1rv2w7y.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpz1rv2w7y.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpz1rv2w7y.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg3jn_but.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpg3jn_but.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpg3jn_but.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmpg3jn_but.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpg3jn_but.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmpg3jn_but.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpg3jn_but.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpg3jn_but.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuxkihzsr.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpuxkihzsr.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpuxkihzsr.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpuxkihzsr.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpuxkihzsr.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpuxkihzsr.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuxkihzsr.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuxkihzsr.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuxkihzsr.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpctxzvyd4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpctxzvyd4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpctxzvyd4.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpctxzvyd4.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpctxzvyd4.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpctxzvyd4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpctxzvyd4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpctxzvyd4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpctxzvyd4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(Union_String_long.Tag.Long, -1);\n      \
    \  }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n       \
    \     sum += i;\n        }\n        long avg = (long) Math.round((double) sum\
    \ / (m - n + 1));\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplue875bd.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmplue875bd.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmplue875bd.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                                                          ^\n/tmp/tmplue875bd.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmplue875bd.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ Long.toBinaryString(avg));\n                                               \
    \       ^\n/tmp/tmplue875bd.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmplue875bd.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmplue875bd.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplue875bd.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  locatio"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpojljziml.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpojljziml.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpojljziml.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpojljziml.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpojljziml.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmpojljziml.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpojljziml.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpojljziml.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpojljziml.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppj3b57pd.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppj3b57pd.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmppj3b57pd.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmppj3b57pd.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppj3b57pd.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppj3b57pd.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppj3b57pd.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppj3b57pd.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppj3b57pd.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe5a45ghv.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpe5a45ghv.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpe5a45ghv.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpe5a45ghv.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpe5a45ghv.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpe5a45ghv.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe5a45ghv.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe5a45ghv.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe5a45ghv.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy9mjukk2.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpy9mjukk2.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpy9mjukk2.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmpy9mjukk2.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpy9mjukk2.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpy9mjukk2.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpy9mjukk2.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpy9mjukk2.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpy9mjukk2.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(false, -1);\n        }\n        long sum\
    \ = 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n     \
    \   }\n        long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(true, binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpue6ulj2x.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpue6ulj2x.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(false, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpue6ulj2x.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(true, binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpue6ulj2x.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpue6ulj2x.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpue6ulj2x.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpue6ulj2x.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpue6ulj2x.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpue6ulj2x.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmponc9ex_k.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmponc9ex_k.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmponc9ex_k.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmponc9ex_k.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmponc9ex_k.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmponc9ex_k.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmponc9ex_k.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmponc9ex_k.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmponc9ex_k.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String bin = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_t6ugzun.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_t6ugzun.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp_t6ugzun.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp_t6ugzun.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_t6ugzun.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n                        \
    \                                       ^\n/tmp/tmp_t6ugzun.java:32: error: cannot\
    \ find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_t6ugzun.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_t6ugzun.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_t6ugzun.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4s97hkjl.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp4s97hkjl.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp4s97hkjl.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmp4s97hkjl.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp4s97hkjl.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                                        ^\n/tmp/tmp4s97hkjl.java:31: error: cannot\
    \ find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4s97hkjl.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4s97hkjl.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpivmcg9n8.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpivmcg9n8.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpivmcg9n8.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpivmcg9n8.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), Long.toBinaryString(avg));\n        \
    \           ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmpivmcg9n8.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \                ^\n/tmp/tmpivmcg9n8.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpivmcg9n8.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpivmcg9n8.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpivmcg9n8.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(new\
    \ long(-1)));\n        }\n        long sum = 0;\n        for (long i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        long avg = sum / (m - n\
    \ + 1);\n        String binary = Long.toBinaryString(avg);\n        return new\
    \ Union_String_long(new Union_String_long.Type.Type_String(new String(\"0b\" +\
    \ binary)));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxk4rgijt.java:20: error: '[' expected\n            return new Union_String_long(new\
    \ Union_String_long.Type.Type_long(new long(-1)));\n                         \
    \                                                             ^\n/tmp/tmpxk4rgijt.java:20:\
    \ error: ']' expected\n            return new Union_String_long(new Union_String_long.Type.Type_long(new\
    \ long(-1)));\n                                                              \
    \                            ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0dhp88yi.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp0dhp88yi.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp0dhp88yi.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp0dhp88yi.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp0dhp88yi.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp0dhp88yi.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0dhp88yi.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0dhp88yi.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0dhp88yi.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(0, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(1, binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0dvvyzn.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpc0dvvyzn.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(0, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpc0dvvyzn.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(1, binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0dvvyzn.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type_String(), Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx1gyg4e0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpx1gyg4e0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpx1gyg4e0.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmpx1gyg4e0.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpx1gyg4e0.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmpx1gyg4e0.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpx1gyg4e0.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpx1gyg4e0.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx1gyg4e0.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqb4aqt9q.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqb4aqt9q.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpqb4aqt9q.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpqb4aqt9q.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpqb4aqt9q.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmpqb4aqt9q.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqb4aqt9q.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqb4aqt9q.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqb4aqt9q.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb2frsacm.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpb2frsacm.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpb2frsacm.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpb2frsacm.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb2frsacm.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb2frsacm.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb2frsacm.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb2frsacm.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb2frsacm.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Case_String(\"0b\" + binary));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmped9_oiiw.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmped9_oiiw.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmped9_oiiw.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmped9_oiiw.java:28: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmped9_oiiw.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmped9_oiiw.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmped9_oiiw.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmped9_oiiw.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmped9_oiiw.java:35: error: cannot "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphn6h486x.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphn6h486x.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmphn6h486x.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmphn6h486x.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmphn6h486x.java:27: error: package Union_String_long does not\
    \ exist\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                                                          ^\n/tmp/tmphn6h486x.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphn6h486x.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphn6h486x.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphn6h486x.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class P"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        String binary = Long.toBinaryString(avg);\n   \
    \     return new Union_String_long(new Union_String_long.Case_String(\"0b\" +\
    \ binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9uvdapyt.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp9uvdapyt.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp9uvdapyt.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmp9uvdapyt.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp9uvdapyt.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmp9uvdapyt.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp9uvdapyt.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp9uvdapyt.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9uvdapyt.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_d675dww.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_d675dww.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp_d675dww.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp_d675dww.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d675dww.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d675dww.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d675dww.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d675dww.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d675dww.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(true, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(false,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmaynewf.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpkmaynewf.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(true, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpkmaynewf.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(false, avg);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpkmaynewf.java:31: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmaynewf.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmaynewf.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmaynewf.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmaynewf.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmaynewf.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpno0e1pr_.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpno0e1pr_.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpno0e1pr_.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmpno0e1pr_.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpno0e1pr_.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpno0e1pr_.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpno0e1pr_.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpno0e1pr_.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpno0e1pr_.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(null, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg),\
    \ 0);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv75k7zb4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv75k7zb4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(null, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpv75k7zb4.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg), 0);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpv75k7zb4.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv75k7zb4.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv75k7zb4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv75k7zb4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv75k7zb4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv75k7zb4.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphzy0vzf_.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphzy0vzf_.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmphzy0vzf_.java:20: error: package Union_String_long does not\
    \ exist\n            return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \                                                              ^\n/tmp/tmphzy0vzf_.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmphzy0vzf_.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmphzy0vzf_.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmphzy0vzf_.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmphzy0vzf_.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphzy0vzf_.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsusbet8h.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpsusbet8h.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpsusbet8h.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpsusbet8h.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpsusbet8h.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmpsusbet8h.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsusbet8h.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsusbet8h.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsusbet8h.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbf6szlns.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbf6szlns.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpbf6szlns.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmpbf6szlns.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpbf6szlns.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                                        ^\n/tmp/tmpbf6szlns.java:31: error: cannot\
    \ find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbf6szlns.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbf6szlns.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                       "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String_long_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Case_String_long_String(\"0b\" + binary));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyhus5p7j.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpyhus5p7j.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String_long_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpyhus5p7j.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String_long_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmpyhus5p7j.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String_long_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpyhus5p7j.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String_long_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmpyhus5p7j.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyhus5p7j.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyhus5p7j.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.String_t(),\
    \ \"0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw_2g4i0o.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpw_2g4i0o.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpw_2g4i0o.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpw_2g4i0o.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + Long.toBinaryString(avg));\n   \
    \                ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmpw_2g4i0o.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.String_t(), \"\
    0b\" + Long.toBinaryString(avg));\n                                          \
    \                     ^\n/tmp/tmpw_2g4i0o.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw_2g4i0o.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw_2g4i0o.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw_2g4i0o.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm6et2797.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpm6et2797.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpm6et2797.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpm6et2797.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpm6et2797.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmpm6et2797.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm6et2797.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm6et2797.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm6et2797.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ -1L);\n        }\n        long sum = 0L;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(\"0b\" + binary), 0L);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9b1owly.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmph9b1owly.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ -1L);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmph9b1owly.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ -1L);\n                                                                   ^\n\
    /tmp/tmph9b1owly.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(\"0b\" + binary), 0L);\n                \
    \   ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmph9b1owly.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(\"0b\" + binary), 0L);\n                \
    \                                               ^\n/tmp/tmph9b1owly.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmph9b1owly.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmph9b1owly.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmph9b1owly.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdolk0810.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpdolk0810.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpdolk0810.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpdolk0810.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpdolk0810.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpdolk0810.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpdolk0810.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpdolk0810.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpdolk0810.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcfxryp67.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcfxryp67.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpcfxryp67.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpcfxryp67.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpcfxryp67.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpcfxryp67.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfxryp67.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfxryp67.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfxryp67.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_d_4aer8.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_d_4aer8.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp_d_4aer8.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_d_4aer8.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d_4aer8.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d_4aer8.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d_4aer8.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d_4aer8.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_d_4aer8.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(0, \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnyyqhecy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnyyqhecy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpnyyqhecy.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(0, \"0b\" + binary);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnyyqhecy.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnyyqhecy.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnyyqhecy.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnyyqhecy.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnyyqhecy.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnyyqhecy.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsefs2mdf.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpsefs2mdf.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpsefs2mdf.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpsefs2mdf.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsefs2mdf.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsefs2mdf.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsefs2mdf.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsefs2mdf.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpsefs2mdf.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        String binary = Long.toBinaryString(avg);\n   \
    \     return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ \"0b\" + binary);\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n  \
    \  assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1hshfwi4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1hshfwi4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp1hshfwi4.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp1hshfwi4.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp1hshfwi4.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp1hshfwi4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1hshfwi4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1hshfwi4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1hshfwi4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2df18vs.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpj2df18vs.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpj2df18vs.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpj2df18vs.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), Long.toBinaryString(avg));\n        \
    \           ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmpj2df18vs.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \                ^\n/tmp/tmpj2df18vs.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpj2df18vs.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpj2df18vs.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj2df18vs.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7x6ezgch.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp7x6ezgch.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp7x6ezgch.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmp7x6ezgch.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp7x6ezgch.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmp7x6ezgch.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp7x6ezgch.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp7x6ezgch.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7x6ezgch.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy8ql6y3c.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpy8ql6y3c.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpy8ql6y3c.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpy8ql6y3c.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), Long.toBinaryString(avg));\n        \
    \           ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmpy8ql6y3c.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \                ^\n/tmp/tmpy8ql6y3c.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpy8ql6y3c.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpy8ql6y3c.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpy8ql6y3c.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long)Math.round((double)sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps9a7ide5.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmps9a7ide5.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmps9a7ide5.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmps9a7ide5.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmps9a7ide5.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmps9a7ide5.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmps9a7ide5.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmps9a7ide5.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmps9a7ide5.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8l0uu5fw.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp8l0uu5fw.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp8l0uu5fw.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp8l0uu5fw.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8l0uu5fw.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8l0uu5fw.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8l0uu5fw.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8l0uu5fw.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8l0uu5fw.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmperc3p0cj.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmperc3p0cj.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmperc3p0cj.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmperc3p0cj.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmperc3p0cj.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmperc3p0cj.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmperc3p0cj.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmperc3p0cj.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmperc3p0cj.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcokteik0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcokteik0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpcokteik0.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpcokteik0.java:27: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpcokteik0.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                                                                            \
    \     ^\n/tmp/tmpcokteik0.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpcokteik0.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpcokteik0.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcokteik0.java:34: error: cannot find symbol\n\
    \    assert(r"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(null, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = (long)Math.round((double)sum / (m - n + 1));\n       \
    \ return new Union_String_long(Long.toBinaryString(avg), 0);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvr2t7wp0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpvr2t7wp0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(null, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpvr2t7wp0.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg), 0);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpvr2t7wp0.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpvr2t7wp0.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpvr2t7wp0.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpvr2t7wp0.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpvr2t7wp0.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpvr2t7wp0.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnc9le3lg.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnc9le3lg.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpnc9le3lg.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpnc9le3lg.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpnc9le3lg.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmpnc9le3lg.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpnc9le3lg.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpnc9le3lg.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnc9le3lg.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String bin = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + bin));\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppuvteil9.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppuvteil9.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmppuvteil9.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmppuvteil9.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + bin));\n                   ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmppuvteil9.java:28: error: package Union_String_long does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + bin));\n                                                          ^\n/tmp/tmppuvteil9.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppuvteil9.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppuvteil9.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppuvteil9.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe74yjwhb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpe74yjwhb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpe74yjwhb.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpe74yjwhb.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe74yjwhb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe74yjwhb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe74yjwhb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe74yjwhb.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpe74yjwhb.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplpu_k4xd.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmplpu_k4xd.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmplpu_k4xd.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmplpu_k4xd.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplpu_k4xd.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplpu_k4xd.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplpu_k4xd.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplpu_k4xd.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplpu_k4xd.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbfbm8hhy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbfbm8hhy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpbfbm8hhy.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmpbfbm8hhy.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpbfbm8hhy.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpbfbm8hhy.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpbfbm8hhy.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpbfbm8hhy.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbfbm8hhy.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp91h_2ebu.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp91h_2ebu.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp91h_2ebu.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmp91h_2ebu.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp91h_2ebu.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmp91h_2ebu.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp91h_2ebu.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp91h_2ebu.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp91h_2ebu.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(0, \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw51xd1v1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpw51xd1v1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpw51xd1v1.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(0, \"0b\" + binary);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpw51xd1v1.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw51xd1v1.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw51xd1v1.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw51xd1v1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw51xd1v1.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpw51xd1v1.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ncx9pi1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2ncx9pi1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp2ncx9pi1.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2ncx9pi1.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ncx9pi1.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ncx9pi1.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ncx9pi1.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ncx9pi1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ncx9pi1.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Variant_String(true,\
    \ Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcstr8k5m.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcstr8k5m.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpcstr8k5m.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n                                                              ^\n/tmp/tmpcstr8k5m.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(true,\
    \ Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpcstr8k5m.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(true,\
    \ Long.toBinaryString(avg)));\n                                              \
    \            ^\n/tmp/tmpcstr8k5m.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpcstr8k5m.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpcstr8k5m.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcstr8k5m.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp42aeajpk.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp42aeajpk.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp42aeajpk.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp42aeajpk.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42aeajpk.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42aeajpk.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42aeajpk.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42aeajpk.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp42aeajpk.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2hubs5tc.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2hubs5tc.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp2hubs5tc.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2hubs5tc.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2hubs5tc.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2hubs5tc.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2hubs5tc.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2hubs5tc.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2hubs5tc.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbp9g4b9m.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbp9g4b9m.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpbp9g4b9m.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbp9g4b9m.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbp9g4b9m.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbp9g4b9m.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbp9g4b9m.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbp9g4b9m.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbp9g4b9m.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        String binary = Long.toBinaryString(avg);\n   \
    \     return new Union_String_long(new Union_String_long.Type.Type_String(), \"\
    0b\" + binary);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphtt8dw9_.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphtt8dw9_.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmphtt8dw9_.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmphtt8dw9_.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmphtt8dw9_.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmphtt8dw9_.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphtt8dw9_.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphtt8dw9_.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphtt8dw9_.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4dhs14v6.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp4dhs14v6.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp4dhs14v6.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp4dhs14v6.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp4dhs14v6.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmp4dhs14v6.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4dhs14v6.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4dhs14v6.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4dhs14v6.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        String binary = Long.toBinaryString(avg);\n   \
    \     return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ \"0b\" + binary);\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n  \
    \  assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5mpz8fk6.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp5mpz8fk6.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp5mpz8fk6.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp5mpz8fk6.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp5mpz8fk6.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp5mpz8fk6.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mpz8fk6.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mpz8fk6.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mpz8fk6.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv29ejtev.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv29ejtev.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpv29ejtev.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv29ejtev.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv29ejtev.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv29ejtev.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv29ejtev.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv29ejtev.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv29ejtev.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfuwnyjjb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpfuwnyjjb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpfuwnyjjb.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpfuwnyjjb.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfuwnyjjb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfuwnyjjb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfuwnyjjb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfuwnyjjb.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfuwnyjjb.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long)Math.round((double)sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmaewse6k.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmaewse6k.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpmaewse6k.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmaewse6k.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmaewse6k.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmaewse6k.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmaewse6k.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmaewse6k.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmaewse6k.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(false, -1);\n        }\n        long sum\
    \ = 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n     \
    \   }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(true,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzegevwjj.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpzegevwjj.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(false, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpzegevwjj.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(true, avg);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzegevwjj.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long)Math.round((double)sum\
    \ / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0gdpgeeg.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp0gdpgeeg.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp0gdpgeeg.java:20: error: package Union_String_long.Type does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                                                                   ^\n/tmp/tmp0gdpgeeg.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp0gdpgeeg.java:27: error: package Union_String_long.Type\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                      ^\n/tmp/tmp0gdpgeeg.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0gdpgeeg.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0gdpgeeg.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0gdpgeeg.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = Math.round((double) sum /\
    \ (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu5549vvn.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpu5549vvn.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpu5549vvn.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpu5549vvn.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpu5549vvn.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmpu5549vvn.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpu5549vvn.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpu5549vvn.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpu5549vvn.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   me"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) return new\
    \ Union_String_long(\"-1\");\n        long sum = 0;\n        for (long i = n;\
    \ i <= m; i++) {\n            sum += i;\n        }\n        long avg = sum / (m\
    \ - n + 1);\n        String binary = Long.toBinaryString(avg);\n        return\
    \ new Union_String_long(\"0b\" + binary);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx52f15jx.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpx52f15jx.java:19:\
    \ error: cannot find symbol\n        if (n > m) return new Union_String_long(\"\
    -1\");\n                              ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:26: error: cannot find symbol\n\
    \        return new Union_String_long(\"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpx52f15jx.java:30:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpx52f15jx.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_Strin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmp8hd7au.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmp8hd7au.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpmp8hd7au.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpmp8hd7au.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmp8hd7au.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmp8hd7au.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmp8hd7au.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmp8hd7au.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmp8hd7au.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpowd4f8un.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpowd4f8un.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpowd4f8un.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpowd4f8un.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpowd4f8un.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpowd4f8un.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpowd4f8un.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpowd4f8un.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpowd4f8un.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4jz2y636.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp4jz2y636.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp4jz2y636.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmp4jz2y636.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp4jz2y636.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmp4jz2y636.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp4jz2y636.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp4jz2y636.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4jz2y636.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk__1hj94.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpk__1hj94.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpk__1hj94.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpk__1hj94.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk__1hj94.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk__1hj94.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk__1hj94.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk__1hj94.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk__1hj94.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_7o7lbg.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpb_7o7lbg.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpb_7o7lbg.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpb_7o7lbg.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb_7o7lbg.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb_7o7lbg.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb_7o7lbg.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb_7o7lbg.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpb_7o7lbg.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpch7li3yt.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpch7li3yt.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpch7li3yt.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpch7li3yt.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpch7li3yt.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmpch7li3yt.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpch7li3yt.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpch7li3yt.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpch7li3yt.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type_String(), \"0b\"\
    \ + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnfs8d6kb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnfs8d6kb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpnfs8d6kb.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmpnfs8d6kb.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpnfs8d6kb.java:27: error:\
    \ package Union_String_long does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(), \"0b\" + Long.toBinaryString(avg));\n     \
    \                                                     ^\n/tmp/tmpnfs8d6kb.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnfs8d6kb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnfs8d6kb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnfs8d6kb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  sy"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0gi_vs1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpq0gi_vs1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpq0gi_vs1.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpq0gi_vs1.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq0gi_vs1.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq0gi_vs1.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq0gi_vs1.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq0gi_vs1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq0gi_vs1.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.TYPE_LONG(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        String binary = Long.toBinaryString(avg);\n   \
    \     return new Union_String_long(new Union_String_long.Type.TYPE_STRING(), \"\
    0b\" + binary);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1sy_wh5j.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1sy_wh5j.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.TYPE_LONG(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp1sy_wh5j.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.TYPE_LONG(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp1sy_wh5j.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.TYPE_STRING(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp1sy_wh5j.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.TYPE_STRING(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmp1sy_wh5j.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1sy_wh5j.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1sy_wh5j.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1sy_wh5j.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(0, \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0o6ufwdq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp0o6ufwdq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp0o6ufwdq.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(0, \"0b\" + binary);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp0o6ufwdq.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0o6ufwdq.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0o6ufwdq.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0o6ufwdq.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0o6ufwdq.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp0o6ufwdq.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9wlhj_zd.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp9wlhj_zd.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp9wlhj_zd.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp9wlhj_zd.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9wlhj_zd.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9wlhj_zd.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9wlhj_zd.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9wlhj_zd.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp9wlhj_zd.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_2ejm9ib.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_2ejm9ib.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp_2ejm9ib.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmp_2ejm9ib.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp_2ejm9ib.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmp_2ejm9ib.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp_2ejm9ib.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp_2ejm9ib.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2ejm9ib.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(true, \"0b\" + binary));\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp16h_w79a.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp16h_w79a.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp16h_w79a.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(false,\
    \ -1));\n                                                              ^\n/tmp/tmp16h_w79a.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(true,\
    \ \"0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp16h_w79a.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(true,\
    \ \"0b\" + binary));\n                                                       \
    \   ^\n/tmp/tmp16h_w79a.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp16h_w79a.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp16h_w79a.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp16h_w79a.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol: "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv7mcj66x.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv7mcj66x.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpv7mcj66x.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpv7mcj66x.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv7mcj66x.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv7mcj66x.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv7mcj66x.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv7mcj66x.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv7mcj66x.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjjd9uli4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjjd9uli4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpjjd9uli4.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpjjd9uli4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjd9uli4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjd9uli4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjd9uli4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjd9uli4.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjd9uli4.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpztz5kkh4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpztz5kkh4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpztz5kkh4.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmpztz5kkh4.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpztz5kkh4.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpztz5kkh4.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpztz5kkh4.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpztz5kkh4.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpztz5kkh4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(0,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuftge0gt.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpuftge0gt.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpuftge0gt.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(0, avg);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuftge0gt.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  loc"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String s = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(0), \"0b\" + s);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu1hsxfhy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpu1hsxfhy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpu1hsxfhy.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpu1hsxfhy.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ \"0b\" + s);\n                   ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpu1hsxfhy.java:28: error: package Union_String_long does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ \"0b\" + s);\n                                                          ^\n\
    /tmp/tmpu1hsxfhy.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpu1hsxfhy.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpu1hsxfhy.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpu1hsxfhy.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyi9qtpc0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpyi9qtpc0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpyi9qtpc0.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpyi9qtpc0.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpyi9qtpc0.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpyi9qtpc0.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyi9qtpc0.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyi9qtpc0.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyi9qtpc0.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphndgg3f9.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphndgg3f9.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmphndgg3f9.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmphndgg3f9.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), Long.toBinaryString(avg));\n        \
    \           ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmphndgg3f9.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \                ^\n/tmp/tmphndgg3f9.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmphndgg3f9.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmphndgg3f9.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphndgg3f9.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String bin = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqp9o6b1i.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqp9o6b1i.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpqp9o6b1i.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpqp9o6b1i.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqp9o6b1i.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + bin);\n                        \
    \                                       ^\n/tmp/tmpqp9o6b1i.java:32: error: cannot\
    \ find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqp9o6b1i.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqp9o6b1i.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqp9o6b1i.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) return new\
    \ Union_String_long(-1);\n        long sum = 0;\n        for (long i = n; i <=\
    \ m; i++) {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphphjuuds.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphphjuuds.java:19:\
    \ error: cannot find symbol\n        if (n > m) return new Union_String_long(-1);\n\
    \                              ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmphphjuuds.java:25: error: cannot find symbol\n       \
    \ return new Union_String_long(Long.toBinaryString(avg));\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmphphjuuds.java:29:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphphjuuds.java:30: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphphjuuds.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphphjuuds.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphphjuuds.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphphjuuds.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Un"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ukdr7lj.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_ukdr7lj.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp_ukdr7lj.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp_ukdr7lj.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp_ukdr7lj.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp_ukdr7lj.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_ukdr7lj.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_ukdr7lj.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_ukdr7lj.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) return new\
    \ Union_String_long(\"-1\");\n        long sum = 0;\n        for (long i = n;\
    \ i <= m; i++) {\n            sum += i;\n        }\n        long avg = sum / (m\
    \ - n + 1);\n        String binary = Long.toBinaryString(avg);\n        return\
    \ new Union_String_long(\"0b\" + binary);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppri8a5dr.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppri8a5dr.java:19:\
    \ error: cannot find symbol\n        if (n > m) return new Union_String_long(\"\
    -1\");\n                              ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:26: error: cannot find symbol\n\
    \        return new Union_String_long(\"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmppri8a5dr.java:30:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppri8a5dr.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_Strin"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmjnrmu6b.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmjnrmu6b.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpmjnrmu6b.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmjnrmu6b.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmjnrmu6b.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmjnrmu6b.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmjnrmu6b.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmjnrmu6b.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmjnrmu6b.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"0b\"\
    \ + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2t5tck4k.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2t5tck4k.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp2t5tck4k.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmp2t5tck4k.java:28: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp2t5tck4k.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmp2t5tck4k.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2t5tck4k.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2t5tck4k.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphb823348.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmphb823348.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmphb823348.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmphb823348.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmphb823348.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmphb823348.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphb823348.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmphb823348.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxwd6pnw1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxwd6pnw1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpxwd6pnw1.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmpxwd6pnw1.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpxwd6pnw1.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpxwd6pnw1.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpxwd6pnw1.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpxwd6pnw1.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxwd6pnw1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Case_String(0), \"0b\"\
    \ + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqe2xu9n2.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqe2xu9n2.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpqe2xu9n2.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpqe2xu9n2.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(0),\
    \ \"0b\" + Long.toBinaryString(avg));\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpqe2xu9n2.java:27: error:\
    \ package Union_String_long does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(0), \"0b\" + Long.toBinaryString(avg));\n    \
    \                                                      ^\n/tmp/tmpqe2xu9n2.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe2xu9n2.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe2xu9n2.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe2xu9n2.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7a7jn4f2.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp7a7jn4f2.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp7a7jn4f2.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp7a7jn4f2.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp7a7jn4f2.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmp7a7jn4f2.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7a7jn4f2.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7a7jn4f2.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7a7jn4f2.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Case_String(0), \"0b\"\
    \ + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjths0xdq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjths0xdq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpjths0xdq.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpjths0xdq.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(0),\
    \ \"0b\" + Long.toBinaryString(avg));\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpjths0xdq.java:27: error:\
    \ package Union_String_long does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(0), \"0b\" + Long.toBinaryString(avg));\n    \
    \                                                      ^\n/tmp/tmpjths0xdq.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjths0xdq.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjths0xdq.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjths0xdq.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1f87et3f.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1f87et3f.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp1f87et3f.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1f87et3f.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1f87et3f.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1f87et3f.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1f87et3f.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1f87et3f.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1f87et3f.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp92m4f9lp.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp92m4f9lp.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp92m4f9lp.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmp92m4f9lp.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp92m4f9lp.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmp92m4f9lp.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp92m4f9lp.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp92m4f9lp.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp92m4f9lp.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgy0fh1np.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpgy0fh1np.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpgy0fh1np.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpgy0fh1np.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgy0fh1np.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgy0fh1np.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgy0fh1np.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgy0fh1np.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgy0fh1np.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgmovufmk.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpgmovufmk.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpgmovufmk.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpgmovufmk.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), Long.toBinaryString(avg));\n        \
    \           ^\n  symbol:   class Union_String_long\n  location: class Problem\n\
    /tmp/tmpgmovufmk.java:27: error: package Union_String_long.Type does not exist\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \                ^\n/tmp/tmpgmovufmk.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpgmovufmk.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpgmovufmk.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgmovufmk.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                      "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpryj628u4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpryj628u4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpryj628u4.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpryj628u4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpryj628u4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpryj628u4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpryj628u4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpryj628u4.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpryj628u4.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3w83onf9.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp3w83onf9.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp3w83onf9.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmp3w83onf9.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp3w83onf9.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmp3w83onf9.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp3w83onf9.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp3w83onf9.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp3w83onf9.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   me"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type_String(), Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplqfu3c57.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmplqfu3c57.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmplqfu3c57.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmplqfu3c57.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmplqfu3c57.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmplqfu3c57.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmplqfu3c57.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmplqfu3c57.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmplqfu3c57.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv_e_h4b8.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpv_e_h4b8.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpv_e_h4b8.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpv_e_h4b8.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpv_e_h4b8.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmpv_e_h4b8.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv_e_h4b8.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv_e_h4b8.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpv_e_h4b8.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     return new Union_String_long(new Union_String_long.Case_long(avg));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmper_irke9.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmper_irke9.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmper_irke9.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmper_irke9.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmper_irke9.java:27: error: package Union_String_long does not\
    \ exist\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                                                          ^\n/tmp/tmper_irke9.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmper_irke9.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmper_irke9.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmper_irke9.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class P"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ 0L);\n        }\n        long sum = 0L;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long)Math.round((double)sum\
    \ / (double)(m - n + 1));\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(new Union_String_long.Type.Type_String(\"\
    0b\" + binary), 0L);\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \   assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpte2bqk1j.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpte2bqk1j.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ 0L);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpte2bqk1j.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0L),\
    \ 0L);\n                                                                   ^\n\
    /tmp/tmpte2bqk1j.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(\"0b\" + binary), 0L);\n                \
    \   ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpte2bqk1j.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(\"0b\" + binary), 0L);\n                \
    \                                               ^\n/tmp/tmpte2bqk1j.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpte2bqk1j.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpte2bqk1j.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpte2bqk1j.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                        "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long avg = (n\
    \ + m) / 2;\n        String binary = Long.toBinaryString(avg);\n        return\
    \ new Union_String_long(\"0b\" + binary);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnqd3x5tv.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnqd3x5tv.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpnqd3x5tv.java:24: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpnqd3x5tv.java:28: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnqd3x5tv.java:29: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnqd3x5tv.java:30: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnqd3x5tv.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnqd3x5tv.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnqd3x5tv.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7h8491ke.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp7h8491ke.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp7h8491ke.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp7h8491ke.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7h8491ke.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7h8491ke.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7h8491ke.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7h8491ke.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp7h8491ke.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(new Long(-1)));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(new String(\"0b\" + binary)));\n\n    }\n \
    \   public static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx5zjlmmv.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpx5zjlmmv.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(new\
    \ Long(-1)));\n                       ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpx5zjlmmv.java:20: error: package Union_String_long\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Variant_long(new\
    \ Long(-1)));\n                                                              ^\n\
    /tmp/tmpx5zjlmmv.java:20: warning: [removal] Long(long) in Long has been deprecated\
    \ and marked for removal\n            return new Union_String_long(new Union_String_long.Variant_long(new\
    \ Long(-1)));\n                                                              \
    \              ^\n/tmp/tmpx5zjlmmv.java:28: error: cannot find symbol\n      \
    \  return new Union_String_long(new Union_String_long.Variant_String(new String(\"\
    0b\" + binary)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpx5zjlmmv.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(new\
    \ String(\"0b\" + binary)));\n                                               \
    \           ^\n/tmp/tmpx5zjlmmv.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpx5zjlmmv.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpx5zjlmmv.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"\", -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = (long) Math.round((double) sum / (m - n + 1));\n     \
    \   return new Union_String_long(Long.toBinaryString(avg), 0);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprq3__x2r.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmprq3__x2r.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"\", -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmprq3__x2r.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg), 0);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmprq3__x2r.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprq3__x2r.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprq3__x2r.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprq3__x2r.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprq3__x2r.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprq3__x2r.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Integer.toBinaryString((int) avg));\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptf1un63.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpptf1un63.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpptf1un63.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Integer.toBinaryString((int) avg));\n                \
    \   ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpptf1un63.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpptf1un63.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpptf1un63.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpptf1un63.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpptf1un63.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpptf1un63.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_S"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpulwgmc5f.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpulwgmc5f.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpulwgmc5f.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpulwgmc5f.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpulwgmc5f.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpulwgmc5f.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpulwgmc5f.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpulwgmc5f.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpulwgmc5f.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppo3c_5qb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppo3c_5qb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmppo3c_5qb.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppo3c_5qb.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppo3c_5qb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppo3c_5qb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppo3c_5qb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppo3c_5qb.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppo3c_5qb.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi16xnuzf.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpi16xnuzf.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpi16xnuzf.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpi16xnuzf.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpi16xnuzf.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpi16xnuzf.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpi16xnuzf.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpi16xnuzf.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpi16xnuzf.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(1), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Variant_String(1), \"\
    0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmpewgsi.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpkmpewgsi.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpkmpewgsi.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Variant_long(1),\
    \ -1);\n                                                              ^\n/tmp/tmpkmpewgsi.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(1),\
    \ \"0b\" + Long.toBinaryString(avg));\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpkmpewgsi.java:27: error:\
    \ package Union_String_long does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Variant_String(1), \"0b\" + Long.toBinaryString(avg));\n \
    \                                                         ^\n/tmp/tmpkmpewgsi.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmpewgsi.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmpewgsi.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpkmpewgsi.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaswu0pmy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpaswu0pmy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpaswu0pmy.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmpaswu0pmy.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpaswu0pmy.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmpaswu0pmy.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpaswu0pmy.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpaswu0pmy.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     return new Union_String_long(new Union_String_long.Case_long(avg));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbh11emtm.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbh11emtm.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpbh11emtm.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpbh11emtm.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpbh11emtm.java:27: error: package Union_String_long does not\
    \ exist\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                                                          ^\n/tmp/tmpbh11emtm.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbh11emtm.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbh11emtm.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbh11emtm.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class P"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6c48xm48.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp6c48xm48.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp6c48xm48.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp6c48xm48.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6c48xm48.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6c48xm48.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6c48xm48.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6c48xm48.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6c48xm48.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(\"0b\" + binary));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxcr1rkfy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxcr1rkfy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpxcr1rkfy.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpxcr1rkfy.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpxcr1rkfy.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(\"\
    0b\" + binary));\n                                                          ^\n\
    /tmp/tmpxcr1rkfy.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpxcr1rkfy.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpxcr1rkfy.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxcr1rkfy.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4upycq_e.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp4upycq_e.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp4upycq_e.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp4upycq_e.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp4upycq_e.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp4upycq_e.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4upycq_e.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4upycq_e.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4upycq_e.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     return new Union_String_long(new Union_String_long.Case_long(avg));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgkb3vwx6.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpgkb3vwx6.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpgkb3vwx6.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpgkb3vwx6.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpgkb3vwx6.java:27: error: package Union_String_long does not\
    \ exist\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                                                          ^\n/tmp/tmpgkb3vwx6.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgkb3vwx6.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgkb3vwx6.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgkb3vwx6.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class P"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(Union_String_long.Tag.Long, -1);\n      \
    \  }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n       \
    \     sum += i;\n        }\n        long avg = sum / (m - n + 1);\n        return\
    \ new Union_String_long(Union_String_long.Tag.String, Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp84dxwq_d.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp84dxwq_d.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp84dxwq_d.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                                                          ^\n/tmp/tmp84dxwq_d.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp84dxwq_d.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ Long.toBinaryString(avg));\n                                               \
    \       ^\n/tmp/tmp84dxwq_d.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp84dxwq_d.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp84dxwq_d.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp84dxwq_d.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  locatio"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6s1bp4fe.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp6s1bp4fe.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp6s1bp4fe.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp6s1bp4fe.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6s1bp4fe.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6s1bp4fe.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6s1bp4fe.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6s1bp4fe.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp6s1bp4fe.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Case_String(0), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeuatoyf5.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpeuatoyf5.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpeuatoyf5.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpeuatoyf5.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_String(0),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpeuatoyf5.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Case_String(0),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpeuatoyf5.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpeuatoyf5.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpeuatoyf5.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeuatoyf5.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd10z4xeq.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpd10z4xeq.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpd10z4xeq.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpd10z4xeq.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpd10z4xeq.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpd10z4xeq.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpd10z4xeq.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpd10z4xeq.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpd10z4xeq.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0ezwjvw.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpc0ezwjvw.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpc0ezwjvw.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpc0ezwjvw.java:27: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpc0ezwjvw.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                                                                            \
    \     ^\n/tmp/tmpc0ezwjvw.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpc0ezwjvw.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpc0ezwjvw.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0ezwjvw.java:34: error: cannot find symbol\n\
    \    assert(r"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgpgcjpk4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpgpgcjpk4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpgpgcjpk4.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_long(-1));\n\
    \                                                                            \
    \         ^\n/tmp/tmpgpgcjpk4.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpgpgcjpk4.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmpgpgcjpk4.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgpgcjpk4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpgpgcjpk4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(Union_String_long.Tag.Long, -1);\n      \
    \  }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n       \
    \     sum += i;\n        }\n        long avg = sum / (m - n + 1);\n        return\
    \ new Union_String_long(Union_String_long.Tag.String, \"0b\" + Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprouw3bxa.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmprouw3bxa.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmprouw3bxa.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(Union_String_long.Tag.Long,\
    \ -1);\n                                                          ^\n/tmp/tmprouw3bxa.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ \"0b\" + Long.toBinaryString(avg));\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmprouw3bxa.java:27: error:\
    \ package Union_String_long does not exist\n        return new Union_String_long(Union_String_long.Tag.String,\
    \ \"0b\" + Long.toBinaryString(avg));\n                                      \
    \                ^\n/tmp/tmprouw3bxa.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmprouw3bxa.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmprouw3bxa.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmprouw3bxa.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpso4pg1d5.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpso4pg1d5.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpso4pg1d5.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpso4pg1d5.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpso4pg1d5.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpso4pg1d5.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpso4pg1d5.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpso4pg1d5.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpso4pg1d5.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ytyosmp.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2ytyosmp.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp2ytyosmp.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(0),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp2ytyosmp.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \  ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp2ytyosmp.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(0), \"0b\" + binary);\n                 \
    \                                              ^\n/tmp/tmp2ytyosmp.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ytyosmp.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ytyosmp.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2ytyosmp.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4p3mt1ma.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp4p3mt1ma.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp4p3mt1ma.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp4p3mt1ma.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4p3mt1ma.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4p3mt1ma.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4p3mt1ma.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4p3mt1ma.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp4p3mt1ma.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(false, -1);\n        }\n        long sum\
    \ = 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n     \
    \   }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(true,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoltabl_7.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpoltabl_7.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(false, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpoltabl_7.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(true, avg);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpoltabl_7.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type.Type_String(), \"\
    0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpymx52cjl.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpymx52cjl.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpymx52cjl.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpymx52cjl.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + Long.toBinaryString(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpymx52cjl.java:27: error: package Union_String_long.Type does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n                                      \
    \                         ^\n/tmp/tmpymx52cjl.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpymx52cjl.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpymx52cjl.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpymx52cjl.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpev23r7uc.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpev23r7uc.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpev23r7uc.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpev23r7uc.java:27: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpev23r7uc.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_long(avg));\n\
    \                                                                            \
    \     ^\n/tmp/tmpev23r7uc.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpev23r7uc.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpev23r7uc.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpev23r7uc.java:34: error: cannot find symbol\n\
    \    assert(r"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_type(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_type(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa_h8o9xc.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpa_h8o9xc.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_type(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpa_h8o9xc.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_type(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpa_h8o9xc.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_type(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpa_h8o9xc.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_type(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmpa_h8o9xc.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa_h8o9xc.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa_h8o9xc.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa_h8o9xc.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(1, -1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(0, \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwlwfqpeo.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpwlwfqpeo.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(1, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpwlwfqpeo.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(0, \"0b\" + binary);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpwlwfqpeo.java:32:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwlwfqpeo.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwlwfqpeo.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwlwfqpeo.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwlwfqpeo.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpwlwfqpeo.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Case_String(\"0b\" + binary));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa5dtvase.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpa5dtvase.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpa5dtvase.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpa5dtvase.java:28: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpa5dtvase.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmpa5dtvase.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa5dtvase.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa5dtvase.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpa5dtvase.java:35: error: cannot "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf8u590sp.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpf8u590sp.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpf8u590sp.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpf8u590sp.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpf8u590sp.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmpf8u590sp.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpf8u590sp.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpf8u590sp.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpf8u590sp.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn7dc01p1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpn7dc01p1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpn7dc01p1.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpn7dc01p1.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpn7dc01p1.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpn7dc01p1.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpn7dc01p1.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpn7dc01p1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpn7dc01p1.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfikk367t.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpfikk367t.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpfikk367t.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpfikk367t.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfikk367t.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfikk367t.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfikk367t.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfikk367t.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpfikk367t.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5mfajcq4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp5mfajcq4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp5mfajcq4.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp5mfajcq4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mfajcq4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mfajcq4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mfajcq4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mfajcq4.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp5mfajcq4.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"0b\"\
    \ + binary));\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppve3bh1j.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmppve3bh1j.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmppve3bh1j.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmppve3bh1j.java:28: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    0b\" + binary));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmppve3bh1j.java:28: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    0b\" + binary));\n                                                           \
    \                      ^\n/tmp/tmppve3bh1j.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppve3bh1j.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmppve3bh1j.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(St"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp0cj_bjh.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpp0cj_bjh.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpp0cj_bjh.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpp0cj_bjh.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + Long.toBinaryString(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpp0cj_bjh.java:27: error: package Union_String_long.Type does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n                                      \
    \                         ^\n/tmp/tmpp0cj_bjh.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpp0cj_bjh.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpp0cj_bjh.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpp0cj_bjh.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk5kabzg3.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpk5kabzg3.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpk5kabzg3.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpk5kabzg3.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk5kabzg3.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk5kabzg3.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk5kabzg3.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk5kabzg3.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpk5kabzg3.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpean695t0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpean695t0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpean695t0.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpean695t0.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpean695t0.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmpean695t0.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpean695t0.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpean695t0.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpean695t0.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxr4ywxls.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxr4ywxls.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpxr4ywxls.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxr4ywxls.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxr4ywxls.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxr4ywxls.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxr4ywxls.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxr4ywxls.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxr4ywxls.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_l"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj4gmxjq1.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpj4gmxjq1.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpj4gmxjq1.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpj4gmxjq1.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj4gmxjq1.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj4gmxjq1.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj4gmxjq1.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj4gmxjq1.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpj4gmxjq1.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        // Your code here\n\
    \        return null;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \   assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxhdro5_h.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpxhdro5_h.java:24:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:25: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:26: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:27: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:28: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:29: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:30: error: cannot find symbol\n\
    \    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpxhdro5_h.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((350l), (902l)).equa"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjrg3tj22.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjrg3tj22.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpjrg3tj22.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpjrg3tj22.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpjrg3tj22.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + binary);\n                      \
    \                                         ^\n/tmp/tmpjrg3tj22.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjrg3tj22.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjrg3tj22.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjrg3tj22.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   meth"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long)Math.round((double)sum\
    \ / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Variant_String(\"\
    0b\" + Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo6dfp1p3.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpo6dfp1p3.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpo6dfp1p3.java:20: error: package Union_String_long does not\
    \ exist\n            return new Union_String_long(new Union_String_long.Variant_long(0));\n\
    \                                                              ^\n/tmp/tmpo6dfp1p3.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Variant_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpo6dfp1p3.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Variant_String(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                 ^\n/tmp/tmpo6dfp1p3.java:31: error: cannot find symbol\n   \
    \ assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n    \
    \                                      ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpo6dfp1p3.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpo6dfp1p3.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpo6dfp1p3.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String avgBin = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + avgBin);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8n2m4cul.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp8n2m4cul.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp8n2m4cul.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp8n2m4cul.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + avgBin);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp8n2m4cul.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + avgBin);\n                     \
    \                                          ^\n/tmp/tmp8n2m4cul.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8n2m4cul.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8n2m4cul.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp8n2m4cul.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpofpard29.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpofpard29.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpofpard29.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpofpard29.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpofpard29.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpofpard29.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpofpard29.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpofpard29.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpofpard29.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqe_s5dj5.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqe_s5dj5.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpqe_s5dj5.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpqe_s5dj5.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe_s5dj5.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe_s5dj5.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe_s5dj5.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe_s5dj5.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpqe_s5dj5.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp__l450k9.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp__l450k9.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp__l450k9.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp__l450k9.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp__l450k9.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp__l450k9.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp__l450k9.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp__l450k9.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp__l450k9.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuh2azsae.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpuh2azsae.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpuh2azsae.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpuh2azsae.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuh2azsae.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuh2azsae.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuh2azsae.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuh2azsae.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpuh2azsae.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp82o0b0fc.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp82o0b0fc.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp82o0b0fc.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(),\
    \ -1);\n                                                              ^\n/tmp/tmp82o0b0fc.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp82o0b0fc.java:27: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(),\
    \ Long.toBinaryString(avg));\n                                               \
    \           ^\n/tmp/tmp82o0b0fc.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmp82o0b0fc.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmp82o0b0fc.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp82o0b0fc.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type.TString(\"0b\" +\
    \ Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpstb7sr1h.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpstb7sr1h.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpstb7sr1h.java:20: error: package Union_String_long.Type does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                                                                   ^\n/tmp/tmpstb7sr1h.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpstb7sr1h.java:27: error: package Union_String_long.Type\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                      ^\n/tmp/tmpstb7sr1h.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpstb7sr1h.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpstb7sr1h.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpstb7sr1h.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = (long) Math.round((double) sum / (m - n + 1));\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcn09_qt_.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcn09_qt_.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpcn09_qt_.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcn09_qt_.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcn09_qt_.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcn09_qt_.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcn09_qt_.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcn09_qt_.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcn09_qt_.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbd7xukyj.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpbd7xukyj.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpbd7xukyj.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpbd7xukyj.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbd7xukyj.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbd7xukyj.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbd7xukyj.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbd7xukyj.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpbd7xukyj.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(true, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(false, binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq8n8gx07.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpq8n8gx07.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(true, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpq8n8gx07.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(false, binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpq8n8gx07.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq8n8gx07.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq8n8gx07.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq8n8gx07.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq8n8gx07.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpq8n8gx07.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(Str"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzvguo565.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpzvguo565.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpzvguo565.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpzvguo565.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzvguo565.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzvguo565.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzvguo565.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzvguo565.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzvguo565.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmvczbz7j.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmvczbz7j.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpmvczbz7j.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpmvczbz7j.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmvczbz7j.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmvczbz7j.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmvczbz7j.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmvczbz7j.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmvczbz7j.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \ "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(false, -1);\n        }\n        long sum\
    \ = 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n     \
    \   }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(true,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc0cox_ts.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpc0cox_ts.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(false, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpc0cox_ts.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(true, avg);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpc0cox_ts.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(true, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(false,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_bk1x6_.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpt_bk1x6_.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(true, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpt_bk1x6_.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(false, avg);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpt_bk1x6_.java:31: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpt_bk1x6_.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpt_bk1x6_.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpt_bk1x6_.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpt_bk1x6_.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpt_bk1x6_.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        // Your code here\n\
    \        return null;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \   assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmoq76lhl.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpmoq76lhl.java:24:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:25: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:26: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:27: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:28: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:29: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:30: error: cannot find symbol\n\
    \    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpmoq76lhl.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((350l), (902l)).equa"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type.Type_String(), \"\
    0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp05efs1qm.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp05efs1qm.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp05efs1qm.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp05efs1qm.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + Long.toBinaryString(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp05efs1qm.java:27: error: package Union_String_long.Type does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n                                      \
    \                         ^\n/tmp/tmp05efs1qm.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp05efs1qm.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp05efs1qm.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp05efs1qm.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(true, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(false,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm3i7ajc8.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpm3i7ajc8.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(true, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpm3i7ajc8.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(false, avg);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpm3i7ajc8.java:31: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm3i7ajc8.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm3i7ajc8.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm3i7ajc8.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm3i7ajc8.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpm3i7ajc8.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String bin = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + bin);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1z100hng.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1z100hng.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp1z100hng.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp1z100hng.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + bin);\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp1z100hng.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_(), \"0b\" + bin);\n                         \
    \                                      ^\n/tmp/tmp1z100hng.java:32: error: cannot\
    \ find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1z100hng.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1z100hng.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp1z100hng.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Uni"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_g5togoy.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_g5togoy.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmp_g5togoy.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmp_g5togoy.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \ ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmp_g5togoy.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + binary);\n                  \
    \                                             ^\n/tmp/tmp_g5togoy.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_g5togoy.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_g5togoy.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_g5togoy.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) return new\
    \ Union_String_long(\"-1\");\n        long sum = 0;\n        for (long i = n;\
    \ i <= m; i++) {\n            sum += i;\n        }\n        long avg = sum / (m\
    \ - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzk02lneb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpzk02lneb.java:19:\
    \ error: cannot find symbol\n        if (n > m) return new Union_String_long(\"\
    -1\");\n                              ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:25: error: cannot find symbol\n\
    \        return new Union_String_long(Long.toBinaryString(avg));\n           \
    \        ^\n  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpzk02lneb.java:29:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:30: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpzk02lneb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type_long(0), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type_String(0), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyiisjv_0.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpyiisjv_0.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpyiisjv_0.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type_long(0),\
    \ -1);\n                                                              ^\n/tmp/tmpyiisjv_0.java:28:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ \"0b\" + binary);\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmpyiisjv_0.java:28: error: package Union_String_long\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type_String(0),\
    \ \"0b\" + binary);\n                                                        \
    \  ^\n/tmp/tmpyiisjv_0.java:32: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpyiisjv_0.java:33: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpyiisjv_0.java:34: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpyiisjv_0.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.long_t(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    String binary = Long.toBinaryString(avg);\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnnje9zu4.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpnnje9zu4.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpnnje9zu4.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.long_t(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpnnje9zu4.java:28: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                   ^\n\
    \  symbol:   class Union_String_long\n  location: class Problem\n/tmp/tmpnnje9zu4.java:28:\
    \ error: package Union_String_long.Type does not exist\n        return new Union_String_long(new\
    \ Union_String_long.Type.String_t(), \"0b\" + binary);\n                     \
    \                                          ^\n/tmp/tmpnnje9zu4.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnnje9zu4.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnnje9zu4.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpnnje9zu4.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeolms9lt.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpeolms9lt.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpeolms9lt.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpeolms9lt.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeolms9lt.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeolms9lt.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeolms9lt.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeolms9lt.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpeolms9lt.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.Type_long(), -1);\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = (long) Math.round((double)\
    \ sum / (m - n + 1));\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"\
    ))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpty1688sk.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpty1688sk.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpty1688sk.java:20: error: package Union_String_long.Type\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Type.Type_long(),\
    \ -1);\n                                                                   ^\n\
    /tmp/tmpty1688sk.java:27: error: cannot find symbol\n        return new Union_String_long(new\
    \ Union_String_long.Type.Type_String(), \"0b\" + Long.toBinaryString(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpty1688sk.java:27: error: package Union_String_long.Type does\
    \ not exist\n        return new Union_String_long(new Union_String_long.Type.Type_String(),\
    \ \"0b\" + Long.toBinaryString(avg));\n                                      \
    \                         ^\n/tmp/tmpty1688sk.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpty1688sk.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpty1688sk.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpty1688sk.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n            "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmply2nz1hb.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmply2nz1hb.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmply2nz1hb.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmply2nz1hb.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmply2nz1hb.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmply2nz1hb.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmply2nz1hb.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmply2nz1hb.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmply2nz1hb.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n \
    \           sum += i;\n        }\n        long avg = sum / (m - n + 1);\n    \
    \    return new Union_String_long(new Union_String_long.Type.TString(\"0b\" +\
    \ Long.toBinaryString(avg)));\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2horv8ta.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp2horv8ta.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp2horv8ta.java:20: error: package Union_String_long.Type does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Type.TLong(-1));\n\
    \                                                                   ^\n/tmp/tmp2horv8ta.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                   ^\n  symbol:   class Union_String_long\n\
    \  location: class Problem\n/tmp/tmp2horv8ta.java:27: error: package Union_String_long.Type\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Type.TString(\"\
    0b\" + Long.toBinaryString(avg)));\n                                         \
    \                      ^\n/tmp/tmp2horv8ta.java:31: error: cannot find symbol\n\
    \    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"0b11\"))));\n \
    \                                         ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2horv8ta.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2horv8ta.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp2horv8ta.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                    "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Case_String(\"-1\"\
    ));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++) {\n\
    \            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n   \
    \     return new Union_String_long(new Union_String_long.Case_long(avg));\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjjqdsvus.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpjjqdsvus.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpjjqdsvus.java:20: error: package Union_String_long does\
    \ not exist\n            return new Union_String_long(new Union_String_long.Case_String(\"\
    -1\"));\n                                                              ^\n/tmp/tmpjjqdsvus.java:27:\
    \ error: cannot find symbol\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpjjqdsvus.java:27: error: package Union_String_long does not\
    \ exist\n        return new Union_String_long(new Union_String_long.Case_long(avg));\n\
    \                                                          ^\n/tmp/tmpjjqdsvus.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjqdsvus.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjqdsvus.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpjjqdsvus.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class P"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(true, -1);\n        }\n        long sum =\
    \ 0;\n        for (long i = n; i <= m; i++) {\n            sum += i;\n       \
    \ }\n        long avg = sum / (m - n + 1);\n        return new Union_String_long(false,\
    \ avg);\n\n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_2sd6k2t.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmp_2sd6k2t.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(true, -1);\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmp_2sd6k2t.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(false, avg);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmp_2sd6k2t.java:31: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2sd6k2t.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2sd6k2t.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2sd6k2t.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2sd6k2t.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmp_2sd6k2t.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(-1);\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        return new Union_String_long(Long.toBinaryString(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcfosdf4r.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcfosdf4r.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(-1);\n \
    \                      ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpcfosdf4r.java:27: error: cannot find symbol\n        return\
    \ new Union_String_long(Long.toBinaryString(avg));\n                   ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpcfosdf4r.java:31:\
    \ error: cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfosdf4r.java:32: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfosdf4r.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfosdf4r.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfosdf4r.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpcfosdf4r.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_lon"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n        }\n        long sum = 0;\n        for (long i = n; i <= m; i++)\
    \ {\n            sum += i;\n        }\n        long avg = sum / (m - n + 1);\n\
    \        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_long(avg));\n\
    \n    }\n    public static void main(String[] args) {\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"\
    0b1010\"))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"\
    0b1111001010\"))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"\
    0b1111100100\"))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"\
    0b1011000010\"))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"\
    0b101101110\"))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"\
    0b110101101\"))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"\
    0b1001110010\"))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"\
    0b11010111\"))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5ual4sp.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpi5ual4sp.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                       ^\n  symbol:   class Union_String_long\n  location:\
    \ class Problem\n/tmp/tmpi5ual4sp.java:20: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n            return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_String(\"\
    -1\"));\n                                                                    \
    \                 ^\n/tmp/tmpi5ual4sp.java:27: error: cannot find symbol\n   \
    \     return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_long(avg));\n\
    \                   ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpi5ual4sp.java:27: error: package Union_String_long.Union_String_long_Case\
    \ does not exist\n        return new Union_String_long(new Union_String_long.Union_String_long_Case.Union_String_long_Case_long(avg));\n\
    \                                                                            \
    \     ^\n/tmp/tmpi5ual4sp.java:31: error: cannot find symbol\n    assert(roundedAvg((1l),\
    \ (5l)).equals((Union_String_long(\"0b11\"))));\n                            \
    \              ^\n  symbol:   method Union_String_long(String)\n  location: class\
    \ Problem\n/tmp/tmpi5ual4sp.java:32: error: cannot find symbol\n    assert(roundedAvg((7l),\
    \ (13l)).equals((Union_String_long(\"0b1010\"))));\n                         \
    \                  ^\n  symbol:   method Union_String_long(String)\n  location:\
    \ class Problem\n/tmp/tmpi5ual4sp.java:33: error: cannot find symbol\n    assert(roundedAvg((964l),\
    \ (977l)).equals((Union_String_long(\"0b1111001010\"))));\n                  \
    \                            ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class "
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given two positive integers n and m, and your\
    \ task is to compute the\n    // average of the integers from n through m (including\
    \ n and m). \n    // Round the answer to the nearest integer and convert that\
    \ to binary.\n    // If n is greater than m, return -1.\n    // Example:\n   \
    \ // rounded_avg(1, 5) => \"0b11\"\n    // rounded_avg(7, 5) => -1\n    // rounded_avg(10,\
    \ 20) => \"0b1111\"\n    // rounded_avg(20, 33) => \"0b11010\"\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n        if (n > m) {\n     \
    \       return new Union_String_long(\"-1\");\n        }\n        long sum = 0;\n\
    \        for (long i = n; i <= m; i++) {\n            sum += i;\n        }\n \
    \       long avg = sum / (m - n + 1);\n        String binary = Long.toBinaryString(avg);\n\
    \        return new Union_String_long(\"0b\" + binary);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"\
    ))));\n    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n    assert(roundedAvg((362l), (496l)).equals((Union_String_long(\"0b110101101\"\
    ))));\n    assert(roundedAvg((350l), (902l)).equals((Union_String_long(\"0b1001110010\"\
    ))));\n    assert(roundedAvg((197l), (233l)).equals((Union_String_long(\"0b11010111\"\
    ))));\n    assert(roundedAvg((7l), (5l)).equals((Union_String_long(-1l))));\n\
    \    assert(roundedAvg((5l), (1l)).equals((Union_String_long(-1l))));\n    assert(roundedAvg((5l),\
    \ (5l)).equals((Union_String_long(\"0b101\"))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpalxfci7d.java:18: error: cannot find symbol\n    public static\
    \ Union_String_long roundedAvg(long n, long m) {\n                  ^\n  symbol:\
    \   class Union_String_long\n  location: class Problem\n/tmp/tmpalxfci7d.java:20:\
    \ error: cannot find symbol\n            return new Union_String_long(\"-1\");\n\
    \                       ^\n  symbol:   class Union_String_long\n  location: class\
    \ Problem\n/tmp/tmpalxfci7d.java:28: error: cannot find symbol\n        return\
    \ new Union_String_long(\"0b\" + binary);\n                   ^\n  symbol:   class\
    \ Union_String_long\n  location: class Problem\n/tmp/tmpalxfci7d.java:32: error:\
    \ cannot find symbol\n    assert(roundedAvg((1l), (5l)).equals((Union_String_long(\"\
    0b11\"))));\n                                          ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpalxfci7d.java:33: error: cannot find symbol\n\
    \    assert(roundedAvg((7l), (13l)).equals((Union_String_long(\"0b1010\"))));\n\
    \                                           ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpalxfci7d.java:34: error: cannot find symbol\n\
    \    assert(roundedAvg((964l), (977l)).equals((Union_String_long(\"0b1111001010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpalxfci7d.java:35: error: cannot find symbol\n\
    \    assert(roundedAvg((996l), (997l)).equals((Union_String_long(\"0b1111100100\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpalxfci7d.java:36: error: cannot find symbol\n\
    \    assert(roundedAvg((560l), (851l)).equals((Union_String_long(\"0b1011000010\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)\n\
    \  location: class Problem\n/tmp/tmpalxfci7d.java:37: error: cannot find symbol\n\
    \    assert(roundedAvg((185l), (546l)).equals((Union_String_long(\"0b101101110\"\
    ))));\n                                              ^\n  symbol:   method Union_String_long(String)"
  exit_code: 1
  status: SyntaxError

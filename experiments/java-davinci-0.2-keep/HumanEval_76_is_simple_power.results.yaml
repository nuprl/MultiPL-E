name: HumanEval_76_is_simple_power
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwx7ovgth.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        if (x % n != 0) {\n           \
    \ return false;\n        }\n        return isSimplePower(x / n, n);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.log(x) / Math.log(n) %\
    \ 1 == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppe01rvcn.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1yxp4ow.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.log(x) / Math.log(n) %\
    \ 1 == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6m9jzh40.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bvt7hvd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        long p = n;\n\
    \        while (p < x) {\n            p *= n;\n        }\n        return p ==\
    \ x;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        long power =\
    \ n;\n        while (power < x) {\n            power *= n;\n        }\n      \
    \  return power == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgknhmtr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd2jtdd6t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxlotv5yz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg3eeeqlq.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwumqy6a.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzi5qmhzh.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz3vfxejc.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.log(x) / Math.log(n) %\
    \ 1 == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppj1jsorf.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        long power = n;\n        while (power < x) {\n           \
    \ power *= n;\n        }\n        return power == x;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n\
    \    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkqmcnx8z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long p = n;\n        while (p < x) {\n            p *= n;\n        }\n  \
    \      return p == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long i = 2;\n        while (i <= x) {\n            if (Math.pow(n, i) ==\
    \ x) {\n                return true;\n            }\n            i++;\n      \
    \  }\n        return false;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        if (x ==\
    \ 1) return true;\n        if (n == 1) return false;\n        if (x == n) return\
    \ true;\n        if (x < n) return false;\n        if (x % n != 0) return false;\n\
    \        return isSimplePower(x / n, n);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rfqo9h2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        long power = n;\n        while (power < x) {\n           \
    \ power *= n;\n        }\n        return power == x;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n\
    \    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        if (x ==\
    \ 1) {\n            return true;\n        }\n        if (n == 1) {\n         \
    \   return false;\n        }\n        if (x == n) {\n            return true;\n\
    \        }\n        if (x < n) {\n            return false;\n        }\n     \
    \   if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpco0oe07t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx4jclsdj.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0i36gox.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkajylulb.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzwc3lygg.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        long power = 1;\n        while (power\
    \ < x) {\n            power *= n;\n        }\n        return power == x;\n\n \
    \   }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x < n) {\n            return false;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcwem0k_s.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        if (x ==\
    \ 1) {\n            return true;\n        }\n        if (n == 1) {\n         \
    \   return false;\n        }\n        if (x == n) {\n            return true;\n\
    \        }\n        if (x < n) {\n            return false;\n        }\n     \
    \   long temp = n;\n        while (temp < x) {\n            temp *= n;\n     \
    \   }\n        return temp == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmperjtn1gz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoaw_s0ny.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.log(x) / Math.log(n) %\
    \ 1 == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj02iui32.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        long power = n;\n        while\
    \ (power < x) {\n            power *= n;\n        }\n        return power == x;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9khqhpgs.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfcdnzfg.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg41avhng.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x < n) {\n            return false;\n        }\n        if (x == n) {\n\
    \            return true;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplx_zigwb.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        int count = 0;\n        while (x % n == 0) {\n           \
    \ x /= n;\n            count++;\n        }\n        return x == 1 && count > 0;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x > n) {\n\
    \            return isSimplePower(x / n, n);\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnsz400q2.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8aq4omzn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return result == (int) result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpib_adgnr.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        long power =\
    \ n;\n        while (power < x) {\n            power *= n;\n        }\n      \
    \  return power == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpko45_zsf.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfqy55bl4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4mg0557j.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbtlblxo.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9gbfn961.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo7uagm6l.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkyv5ufh.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        if (x ==\
    \ 1) {\n            return true;\n        }\n        if (n == 1) {\n         \
    \   return false;\n        }\n        long i = 1;\n        while (true) {\n  \
    \          if (Math.pow(n, i) == x) {\n                return true;\n        \
    \    }\n            if (Math.pow(n, i) > x) {\n                return false;\n\
    \            }\n            i++;\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqghkehbd.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_fe_3rbb.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        long power = n;\n        while\
    \ (power < x) {\n            power *= n;\n        }\n        return power == x;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3im3vxmn.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (n == 0) return false;\n        if (x % n != 0) return\
    \ false;\n        return isSimplePower(x / n, n);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n\
    \    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnziv_ok5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return result == (int) result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0tvx3ytc.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        long power =\
    \ n;\n        while (power < x) {\n            power *= n;\n        }\n      \
    \  return power == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgp7twa6t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfrpv4vo5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        if (x % n != 0) {\n           \
    \ return false;\n        }\n        return isSimplePower(x / n, n);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long pow = n;\n        while (pow < x) {\n            pow *= n;\n       \
    \ }\n        return pow == x;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyy60hgj.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return result == (int) result;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbjt00_zw.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkjyirsh5.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpokz7kiky.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb_s_sq1i.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp610i7iv8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd4weq2zk.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        //\
    \ To print results to the standard output you can use System.out.println()\n \
    \       // Example: System.out.println(\"Hello world!\");\n        if (x == 1)\
    \ {\n            return true;\n        }\n        if (n == 1) {\n            return\
    \ false;\n        }\n        if (x == n) {\n            return true;\n       \
    \ }\n        long power = n;\n        while (power < x) {\n            power *=\
    \ n;\n        }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        if (x % n != 0) {\n           \
    \ return false;\n        }\n        return isSimplePower(x / n, n);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_bb1i2wp.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2bguzev.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        long pow = n;\n        while (pow < x) {\n            pow\
    \ *= n;\n        }\n        return pow == x;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n \
    \   assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpackqkb8t.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjx997bw8.java:33)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvqfcxvj3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1 && n == 1) {\n         \
    \   return true;\n        }\n        if (x == 1 && n != 1) {\n            return\
    \ false;\n        }\n        if (x == n) {\n            return true;\n       \
    \ }\n        if (x < n) {\n            return false;\n        }\n        if (x\
    \ % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcirfzid.java:48)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoh5ocasz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        return isSimplePower(x / n, n);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkepk7sh7.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqi_h5w8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4gp8wxya.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzmw0tvt9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdm1zs82h.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x % n != 0) {\n            return false;\n        }\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.log(x) / Math.log(n) %\
    \ 1 == 0;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpau91oqrj.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        if (x % n != 0) {\n           \
    \ return false;\n        }\n        return isSimplePower(x / n, n);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        if (x % n != 0) {\n           \
    \ return false;\n        }\n        return isSimplePower(x / n, n);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuzo7or9.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0tjv6upw.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7174uwuf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        if (x ==\
    \ 1) {\n            return true;\n        }\n        if (n == 1) {\n         \
    \   return false;\n        }\n        if (x == n) {\n            return true;\n\
    \        }\n        long power = n;\n        while (power < x) {\n           \
    \ power *= n;\n        }\n        return power == x;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n\
    \    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x < n) {\n\
    \            return false;\n        }\n        long power = n;\n        while\
    \ (power < x) {\n            power *= n;\n        }\n        return power == x;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x == n) return true;\n        if (x < n)\
    \ return false;\n        if (x % n != 0) return false;\n        return isSimplePower(x\
    \ / n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        long result =\
    \ n;\n        while (result < x) {\n            result *= n;\n        }\n    \
    \    return result == x;\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxq9pz98p.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpni7zqwt6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0y4_eryn.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (n == 0) {\n            return false;\n        }\n        if (x == 0)\
    \ {\n            return false;\n        }\n        if (x == n) {\n           \
    \ return true;\n        }\n        long power = n;\n        while (power <= x)\
    \ {\n            if (power == x) {\n                return true;\n           \
    \ }\n            power *= n;\n        }\n        return false;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16l), (2l)) ==\
    \ (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        if\
    \ (x == 1) {\n            return true;\n        }\n        if (n == 1) {\n   \
    \         return false;\n        }\n        if (x == n) {\n            return\
    \ true;\n        }\n        if (x % n != 0) {\n            return false;\n   \
    \     }\n        return isSimplePower(x / n, n);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n \
    \   assert(isSimplePower((143214l), (16l)) == (false));\n    assert(isSimplePower((4l),\
    \ (2l)) == (true));\n    assert(isSimplePower((9l), (3l)) == (true));\n    assert(isSimplePower((16l),\
    \ (4l)) == (true));\n    assert(isSimplePower((24l), (2l)) == (false));\n    assert(isSimplePower((128l),\
    \ (4l)) == (false));\n    assert(isSimplePower((12l), (6l)) == (false));\n   \
    \ assert(isSimplePower((1l), (1l)) == (true));\n    assert(isSimplePower((1l),\
    \ (12l)) == (true));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeclfpiyr.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp20zp49yx.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3tpp8tta.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n\n    }\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    long power = n;\n        while (power < x) {\n            power *= n;\n \
    \       }\n        return power == x;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16l), (2l)) == (true));\n    assert(isSimplePower((143214l),\
    \ (16l)) == (false));\n    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpclhzj0iz.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        if (x > n) {\n\
    \            return isSimplePower(x / n, n);\n        }\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnoab276.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Write your code here\n        return\
    \ false;\n\n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkodn0zri.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(long x, long n) {\n        // Your code here\n        return false;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16l),\
    \ (2l)) == (true));\n    assert(isSimplePower((143214l), (16l)) == (false));\n\
    \    assert(isSimplePower((4l), (2l)) == (true));\n    assert(isSimplePower((9l),\
    \ (3l)) == (true));\n    assert(isSimplePower((16l), (4l)) == (true));\n    assert(isSimplePower((24l),\
    \ (2l)) == (false));\n    assert(isSimplePower((128l), (4l)) == (false));\n  \
    \  assert(isSimplePower((12l), (6l)) == (false));\n    assert(isSimplePower((1l),\
    \ (1l)) == (true));\n    assert(isSimplePower((1l), (12l)) == (true));\n    }\n\
    \n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpedmgir47.java:25)\n"
  exit_code: 1
  status: Exception

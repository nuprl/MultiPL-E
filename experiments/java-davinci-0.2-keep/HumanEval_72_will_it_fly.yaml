name: HumanEval_72_will_it_fly
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Write a function that returns True if the object q will\
  \ fly, and False otherwise.\n    // The object q will fly if it's balanced (it is\
  \ a palindromic list) and the sum of its elements is less than or equal the maximum\
  \ possible weight w.\n    // Example:\n    // will_it_fly([1, 2], 5) \u279E False\
  \ \n    // # 1+2 is less than the maximum possible weight, but it's unbalanced.\n\
  \    // will_it_fly([3, 2, 3], 1) \u279E False\n    // # it's balanced, but 3+2+3\
  \ is more than the maximum possible weight.\n    // will_it_fly([3, 2, 3], 9) \u279E\
  \ True\n    // # 3+2+3 is less than the maximum possible weight, and it's balanced.\n\
  \    // will_it_fly([3], 5) \u279E True\n    // # 3 is less than the maximum possible\
  \ weight, and it's balanced.\n    public static boolean willItFly(ArrayList<Long>\
  \ q, long w) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(willItFly((new\
  \ ArrayList<Long>(Arrays.asList((long)3l, (long)2l, (long)3l))), (9l)) == (true));\n\
  \    assert(willItFly((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l))),\
  \ (5l)) == (false));\n    assert(willItFly((new ArrayList<Long>(Arrays.asList((long)3l))),\
  \ (5l)) == (true));\n    assert(willItFly((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)2l, (long)3l))), (1l)) == (false));\n    assert(willItFly((new ArrayList<Long>(Arrays.asList((long)1l,\
  \ (long)2l, (long)3l))), (6l)) == (false));\n    assert(willItFly((new ArrayList<Long>(Arrays.asList((long)5l))),\
  \ (5l)) == (true));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"

name: HumanEval_71_triangle_area
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        // Your code here\n        return -1;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0qbhyfcn.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc1gu7346.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2;\n      \
    \  return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp97h2cv9c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe2q33l24.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyatueowh.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzatv3ytz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq7j7cxdj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv51uj40l.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if(a + b > c && a + c > b && b + c > a) {\n     \
    \       float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykofa4dt.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return (area\
    \ > 0) ? area : -1;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxnxxiia0.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpzkijit.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbq88k8fn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq5aigds1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz0fm2f8v.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80yi84lq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplpfnx09a.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_obgfucw.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbw08ulq6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpipvpwuqg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2s35dz7z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2;\n      \
    \  float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return\
    \ (float)Math.round(area * 100) / 100;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8aga1n7.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzlqjsxcp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfnk1dru3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvhflvq9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwjfdg7sp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8cfiznq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpev_sq66z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area >\
    \ 0 ? area : -1;\n\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyl9scff5.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17ag_t__.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx0bzmhr0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0)\
    \ {\n            return area;\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpziuxwigr.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpow44vqi4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpggslg943.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s1mu52i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjahndvs1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxsez4b1n.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return (area\
    \ > 0) ? area : -1;\n\n    }\n    public static void main(String[] args) {\n \
    \   assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfl0g70a.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp646z5nus.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp13ytrv9i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pg46kt6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbkjkx8xy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8p7qyigj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa73j40xn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8ueozs7.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4g3azz12.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi6vxkvsw.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpom7b51fa.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm2g0wr1b.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmbp36dwl.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp51rhn5i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzz8ebm5u.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkg5_107m.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyiz53t2_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzn1rezc.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_csptnsd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmbyfdjit.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp59pumr_c.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nwl74l4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_o_6s55.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphml6eprz.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxy50v_c9.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzd0k791i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpds0ig58h.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbwkaqaqw.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0) {\n\
    \            return area;\n        } else {\n            return -1;\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88sti_mo.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mwf52pd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10z8eiab.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmt9ne87e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikcsglg3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldhgmdvp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuyb373s2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy0vm851l.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl0b0vih8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        // TODO: Implement me\n        return -1;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsex98g4r.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe3g3domg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0bbwcoq.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsa506da5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl90sjfxf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslo5y5t0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmolx1248.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (a + b > c &&\
    \ a + c > b && b + c > a) {\n            return area;\n        } else {\n    \
    \        return -1;\n        }\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjekygpo9.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0)\
    \ {\n            return area;\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsqrhnahj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6t9ihuhr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwo7_up3d.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area >\
    \ 0 ? area : -1;\n\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdi_uyti.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsxfw0_fa.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9w9b80p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe6o7kyes.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph3zk1u8e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n        float s = (a + b + c) / 2f;\n        return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5dvlkokg.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqldl__3u.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area >\
    \ 0 ? area : -1;\n\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph4na7l72.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk3xvfrgm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu10nvjvv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphy9xhu0k.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9abkg1pg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpykc6ykr_.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgh2rs76.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4o5i2jzu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzp9gn0j5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67zqde7b.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkvfzth1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0)\
    \ {\n            return area;\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3xlzs828.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz1_pwpas.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2;\n      \
    \  float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return\
    \ (float) Math.round(area * 100) / 100;\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps8f86bh5.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpharw0jl1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9lwz20i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpddjbduf5.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp149mw47q.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89rt96t4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp21meplcb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv6msut5y.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpztrq1331.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxlyzpxro.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmr20qbr6.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2;\n      \
    \  return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5fji0ta1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1tp3fl5e.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpivumpsig.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpouk2ta8q.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0) {\n\
    \            return (float) Math.round(area * 100) / 100;\n        }\n       \
    \ return -1;\n\n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbb3fl3bb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt7cdcgzd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        return (float) Math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a\
    \ + b + c)) / 4;\n        }\n        return -1;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpafcs3poa.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp27muthr_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if(a + b > c && a + c > b && b + c > a) {\n     \
    \       double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxm_4fvdh.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvg4m4vd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpepdt3x5j.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe8__1wh0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdhgerqg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1g8pz087.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_9iznf4m.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxbftp_1u.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        // Your code here\n        return -1;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfevf0o8i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdx9kck4s.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyfim5f50.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float) (Math.round(area\
    \ * 100.0) / 100.0);\n        }\n        return -1;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_8wasnoj.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float) Math.round(area\
    \ * 100.0f) / 100.0f;\n        }\n        return -1;\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpofytja17.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbg2brzqt.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa8e41lo_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpudysxuwi.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpywdcukz1.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx8qbs0i_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcltfgr1v.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq9o7bpao.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplsu9r2h3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph__p_cwr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb143m_8j.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n\n\
    \    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqbthvwvf.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplvfs4991.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaljyiw2t.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpude_hmu0.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpasw1n07j.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89gyp8ea.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymycumtr.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7py1tsnj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd9jci2d4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0rz3izmm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2.0f;\n        float area\
    \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;\n\
    \n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3qlcm__r.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4uj_b28r.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnohshxxj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4_fy07a2.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        // Your code here\n        return -1;\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmia80kax.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ddzvpcn.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozbe8g_q.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            float area = (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float) Math.round(area\
    \ * 100) / 100;\n        }\n        return -1;\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n\
    \    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l),\
    \ (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n\
    \    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l),\
    \ (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l),\
    \ (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppdl2fafb.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe4ojx5nm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa7qdnctf.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkly25omy.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl6jbf1e3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8n4ljc8i.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfktdc2p.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnd02vblv.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2;\n            return (float) Math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(triangleArea((3l), (4l), (5l))\
    \ == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n  \
    \  assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0dglc9z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8gam400_.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_t6zx8ao.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1r5odzj3.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptkv4p8wk.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_vk_c1ic.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpef5pvxu4.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyaro71f.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1s89dxic.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sfidmyg.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmc7qts_z.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppubpeabu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1xv05w5d.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphhvdwa96.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) {\n \
    \           return -1;\n        }\n        float s = (a + b + c) / 2.0f;\n   \
    \     return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmporzylycd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc_nwgmee.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoc2d3nnb.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_g8_n726.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp57q__ulj.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzi05xkhm.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b <= c || a + c <= b || b + c <= a) return\
    \ -1;\n        double s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(triangleArea((3l), (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l),\
    \ (2l), (10l)) == (float)-1l);\n    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n\
    \    assert(triangleArea((2l), (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l),\
    \ (2l), (3l)) == (float)-1l);\n    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n\
    \    assert(triangleArea((2l), (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l),\
    \ (1l), (1l)) == (0.43f));\n    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpycr1wfp_.java:26)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        // TODO: Implement me\n        return -1;\n\n   \
    \ }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp899usi75.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwau1gyxp.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        float s = (a + b + c) / 2;\n        float area =\
    \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area > 0) {\n\
    \            return area;\n        } else {\n            return -1;\n        }\n\
    \n    }\n    public static void main(String[] args) {\n    assert(triangleArea((3l),\
    \ (4l), (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4w0bsywf.java:30)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ju0mia8.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        float s = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppivl6y8l.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float) Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpypcfejro.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    //\
    \ triangle_area(1, 2, 10) == -1\n    public static float triangleArea(long a,\
    \ long b, long c) {\n        if (a + b > c && a + c > b && b + c > a) {\n    \
    \        double s = (a + b + c) / 2.0;\n            return (float)Math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(triangleArea((3l), (4l),\
    \ (5l)) == (6.0f));\n    assert(triangleArea((1l), (2l), (10l)) == (float)-1l);\n\
    \    assert(triangleArea((4l), (8l), (5l)) == (8.18f));\n    assert(triangleArea((2l),\
    \ (2l), (2l)) == (1.73f));\n    assert(triangleArea((1l), (2l), (3l)) == (float)-1l);\n\
    \    assert(triangleArea((10l), (5l), (7l)) == (16.25f));\n    assert(triangleArea((2l),\
    \ (6l), (3l)) == (float)-1l);\n    assert(triangleArea((1l), (1l), (1l)) == (0.43f));\n\
    \    assert(triangleArea((2l), (2l), (10l)) == (float)-1l);\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1w12e_2q.java:28)\n"
  exit_code: 1
  status: Exception

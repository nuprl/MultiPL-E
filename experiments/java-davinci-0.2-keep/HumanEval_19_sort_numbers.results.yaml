name: HumanEval_19_sort_numbers
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp02tg5a9f.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp02tg5a9f.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsStr = new String[numsInt.length];\n        for (int i =\
    \ 0; i < numsInt.length; i++) {\n            numsStr[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsStr);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvabxpe9l.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvabxpe9l.java:23: error: cannot find symbol\n\
    \            numsStr[i] = intToNum(numsInt[i]);\n                         ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(nums_int);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp8g5te1fa.java:83: error: not a statement\n                    sb\n\
    \                    ^\n/tmp/tmp8g5te1fa.java:83: error: ';' expected\n      \
    \              sb\n                      ^\n/tmp/tmp8g5te1fa.java:85: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = toInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(toString(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxmpvixpf.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = toInt(nums[i]);\n                         ^\n  symbol:   method toInt(String)\n\
    \  location: class Problem\n/tmp/tmpxmpvixpf.java:23: error: method toString in\
    \ class Object cannot be applied to given types;\n            sb.append(toString(numsInt[i]));\n\
    \                      ^\n  required: no arguments\n  found:    int\n  reason:\
    \ actual and formal argument lists differ in length\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphhl6vqry.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmphhl6vqry.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        nums2[i] = nums[i];\n        }\n        Arrays.sort(nums2);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < nums2.length;\
    \ i++) {\n            sb.append(nums2[i]);\n            if (i != nums2.length\
    \ - 1) {\n                sb.append(\" \");\n            }\n        }\n      \
    \  return sb.toString();\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9xrlop24.java:34)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp60yk1m8v.java:18)\n\tat Problem.main(tmp60yk1m8v.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.compare(getNum(a), getNum(b));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqjzd8pc7.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmpqjzd8pc7.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpok3_8hs6.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(numeralToInt(s1), numeralToInt(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoxg5ig38.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(numeralToInt(s1), numeralToInt(s2));\n                     \
    \                  ^\n  symbol: method numeralToInt(String)\n/tmp/tmpoxg5ig38.java:19:\
    \ error: cannot find symbol\n                return Integer.compare(numeralToInt(s1),\
    \ numeralToInt(s2));\n                                                       \
    \  ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6oclnow_.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxa2_4hm.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpggl8nsvr.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpggl8nsvr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpipt6_4r7.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphvaerpxi.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmphvaerpxi.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpksm2dxj3.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpksm2dxj3.java:16)\n\tat Problem.main(tmpksm2dxj3.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i < nums_int.length - 1) {\n                sb.append(\" \");\n \
    \           }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_4cooonz.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp_4cooonz.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(nums2[i]);\n            if (i !=\
    \ nums2.length - 1) {\n                sb.append(\" \");\n            }\n    \
    \    }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpy5skzpu3.java:18)\n\tat Problem.main(tmpy5skzpu3.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsel_ed9x.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convertToString(nums_int[i]));\n\
    \            if (i != nums_int.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpms6z1wlv.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convertToInt(nums[i]);\n                          ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpms6z1wlv.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(nums_int[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjeyygrhy.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpjeyygrhy.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmpsblllbkd.java:19)\n\tat Problem$1.compare(tmpsblllbkd.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpsblllbkd.java:16)\n\tat Problem.main(tmpsblllbkd.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkxyiukjq.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpkxyiukjq.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj7ng0v1t.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpj7ng0v1t.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(nums_int);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmph7ndd9o7.java:83: error: not a statement\n                    sb\n\
    \                    ^\n/tmp/tmph7ndd9o7.java:83: error: ';' expected\n      \
    \              sb\n                      ^\n/tmp/tmph7ndd9o7.java:85: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                int i1 = getNum(s1);\n                int\
    \ i2 = getNum(s2);\n                return i1 - i2;\n            }\n        });\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdy5xq0ng.java:19: error: cannot find symbol\n                int\
    \ i1 = getNum(s1);\n                         ^\n  symbol: method getNum(String)\n\
    /tmp/tmpdy5xq0ng.java:20: error: cannot find symbol\n                int i2 =\
    \ getNum(s2);\n                         ^\n  symbol: method getNum(String)\n2\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeqr2msw8.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpeqr2msw8.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwcxurcth.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpwcxurcth.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.compare(getNum(a), getNum(b));\n   \
    \     });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpncs3_hta.java:17: error: cannot find symbol\n            return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   ^\n\
    \  symbol:   method getNum(String)\n  location: class Problem\n/tmp/tmpncs3_hta.java:17:\
    \ error: cannot find symbol\n            return Integer.compare(getNum(a), getNum(b));\n\
    \                                              ^\n  symbol:   method getNum(String)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convertToString(nums_int[i]));\n\
    \            if (i != nums_int.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd8low5pb.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convertToInt(nums[i]);\n                          ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpd8low5pb.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(nums_int[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu6veqhpn.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpu6veqhpn.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String[] nums_sorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            nums_sorted[i] = intToNum(nums_int[i]);\n\
    \        }\n        return String.join(\" \", nums_sorted);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplzkttpbc.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmplzkttpbc.java:23: error: cannot find symbol\n\
    \            nums_sorted[i] = intToNum(nums_int[i]);\n                       \
    \      ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1_dy5_g.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpf1_dy5_g.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ o1, String o2) {\n                return Integer.compare(getNum(o1), getNum(o2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88prdgpv.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(o1), getNum(o2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmp88prdgpv.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(o1), getNum(o2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpwvohudd0.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpwvohudd0.java:16)\n\tat Problem.main(tmpwvohudd0.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(nums_int);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpcowxml02.java:83: error: not a statement\n                    sb\n\
    \                    ^\n/tmp/tmpcowxml02.java:83: error: ';' expected\n      \
    \              sb\n                      ^\n/tmp/tmpcowxml02.java:85: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(nums_int);\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            switch (nums_int[i]) {\n                case 0:\n           \
    \         sb.append(\"zero\");\n                    break;\n                case\
    \ 1:\n                    sb.append(\"one\");\n                    break;\n  \
    \              case 2:\n                    sb.append(\"two\");\n            \
    \        break;\n                case 3:\n                    sb.append(\"three\"\
    );\n                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpmp6_g017.java:83: error: not a statement\n                    sb\n\
    \                    ^\n/tmp/tmpmp6_g017.java:83: error: ';' expected\n      \
    \              sb\n                      ^\n/tmp/tmpmp6_g017.java:85: error: illegal\
    \ start of expression\n    public static void main(String[] args) {\n    ^\n3\
    \ errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5j0ph4ai.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp5j0ph4ai.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            int ai = Integer.parseInt(a);\n            int bi =\
    \ Integer.parseInt(b);\n            return ai - bi;\n        });\n        return\
    \ String.join(\" \", nums);\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpfgnyohx4.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpfgnyohx4.java:16)\n\tat Problem.main(tmpfgnyohx4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpfu6ihhxi.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpfu6ihhxi.java:16)\n\tat Problem.main(tmpfu6ihhxi.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdg0n99qz.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpdg0n99qz.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2n84sej2.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp2n84sej2.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmpx4z631me.java:19)\n\tat Problem$1.compare(tmpx4z631me.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpx4z631me.java:16)\n\tat Problem.main(tmpx4z631me.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.compare(toInt(a), toInt(b));\n     \
    \   });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9qmerjkn.java:17: error: cannot find symbol\n            return\
    \ Integer.compare(toInt(a), toInt(b));\n                                   ^\n\
    \  symbol:   method toInt(String)\n  location: class Problem\n/tmp/tmp9qmerjkn.java:17:\
    \ error: cannot find symbol\n            return Integer.compare(toInt(a), toInt(b));\n\
    \                                             ^\n  symbol:   method toInt(String)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8iovxec1.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmp8iovxec1.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg8rm98r7.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpg8rm98r7.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp739to1bq.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp739to1bq.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcl20lg9w.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpcl20lg9w.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] num = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    num[i] = 0;\n       \
    \             break;\n                case \"one\":\n                    num[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          num[i] = 2;\n                    break;\n                case \"three\"\
    :\n                    num[i] = 3;\n                    break;\n             \
    \   case \"four\":\n                    num[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    num[i] = 5;\n           \
    \         break;\n                case \"six\":\n                    num[i] =\
    \ 6;\n                    break;\n                case \"seven\":\n          \
    \          num[i] = 7;\n                    break;\n                case \"eight\"\
    :\n                    num[i] = 8;\n                    break;\n             \
    \   case \"nine\":\n                    num[i] = 9;\n                    break;\n\
    \            }\n        }\n        Arrays.sort(num);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < num.length; i++) {\n   \
    \         switch (num[i]) {\n                case 0:\n                    sb.append(\"\
    zero \");\n                    break;\n                case 1:\n             \
    \       sb.append(\"one \");\n                    break;\n                case\
    \ 2:\n                    sb.append(\"two \");\n                    break;\n \
    \               case 3:\n                    sb.append(\"three \");\n        \
    \            break;\n                case 4:\n                    sb.append(\"\
    four \");\n                    break;\n                case 5:\n             \
    \       sb.append(\"five \");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six \");\n                    break;\n \
    \               case 7:\n                    sb.append(\"seven \");\n        \
    \            break;\n                case 8:\n                    sb.append(\"\
    eight \");\n                    break;\n                case 9:\n            \
    \        sb.append(\"nine \");\n                    break;\n            }\n  \
    \      }\n        return sb.toString().trim();\n    }\n   \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_r6d79g3.java:91: error: class, interface, enum, or record expected\n\
    \    public static void main(String[] args) {\n                  ^\n/tmp/tmp_r6d79g3.java:93:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    ^\n/tmp/tmp_r6d79g3.java:94:\
    \ error: as of release 1.4, 'assert' is a keyword, and may not be used as an identifier\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    ^\n/tmp/tmp_r6d79g3.java:95: error: as of release 1.4, 'assert' is a keyword,\
    \ and may not be used as an identifier\n    assert(sortNumbers((\"five zero four\
    \ seven nine eight\")).equals((\"zero four five seven eight nine\")));\n    ^\n\
    /tmp/tmp_r6d79g3.java:96: error: as of release 1.4, 'assert' is a keyword, and\
    \ may not be used as an identifier\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    ^\n/tmp/tmp_r6d79g3.java:97:\
    \ error: class, interface, enum, or record expected\n    }\n    ^\n6 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt949lile.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmpt949lile.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_m11n63i.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp_m11n63i.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp166f0dd4.java:18)\n\tat Problem$1.compare(tmp166f0dd4.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp166f0dd4.java:16)\n\tat Problem.main(tmp166f0dd4.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i != nums2.length - 1) {\n                sb.append(\" \");\n        \
    \    }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkhwp0ykz.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpkhwp0ykz.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbztms0ex.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk24thij3.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i < numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvbdfwysa.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpvbdfwysa.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3kgv033d.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpifb7erlf.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpifb7erlf.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc4j03_5w.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpc4j03_5w.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoj7h5rza.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpoj7h5rza.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmp_z0kntn6.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp_z0kntn6.java:16)\n\tat Problem.main(tmp_z0kntn6.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ejj_s6k.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp6ejj_s6k.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplvsa26kk.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpchgzyasn.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpchgzyasn.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        switch (nums[i]) {\n                case \"zero\":\n                \
    \    nums2[i] = \"0\";\n                    break;\n                case \"one\"\
    :\n                    nums2[i] = \"1\";\n                    break;\n       \
    \         case \"two\":\n                    nums2[i] = \"2\";\n             \
    \       break;\n                case \"three\":\n                    nums2[i]\
    \ = \"3\";\n                    break;\n                case \"four\":\n     \
    \               nums2[i] = \"4\";\n                    break;\n              \
    \  case \"five\":\n                    nums2[i] = \"5\";\n                   \
    \ break;\n                case \"six\":\n                    nums2[i] = \"6\"\
    ;\n                    break;\n                case \"seven\":\n             \
    \       nums2[i] = \"7\";\n                    break;\n                case \"\
    eight\":\n                    nums2[i] = \"8\";\n                    break;\n\
    \                case \"nine\":\n                    nums2[i] = \"9\";\n     \
    \               break;\n            }\n        }\n        Arrays.sort(nums2);\n\
    \        for (int i = 0; i < nums.length; i++) {\n            switch (nums2[i])\
    \ {\n                case \"0\":\n                    nums2[i] = \"zero\";\n \
    \                   break;\n                case \"1\":\n                    nums2[i]\
    \ = \"one\";\n                    break;\n                case \"2\":\n      \
    \              nums2[i] = \"two\";\n                    break;\n             \
    \   case \"3\":\n                    nums2[i] = \"three\";\n                 \
    \   break;\n                case \"4\":\n                    nums2[i] = \"four\"\
    ;\n                    break;\n                case \"5\":\n                 \
    \   nums2[i] = \"five\";\n                    break;\n                case \"\
    6\":\n                    nums2[i] = \"six\";\n                    break;\n  \
    \              case \"7\":\n                    nums2[i] = \"seven\";\n      \
    \              break;\n                case \"8\":\n                    nums2\n\
    \    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp1p4x2zz8.java:79: error: not a statement\n                    nums2\n\
    \                    ^\n/tmp/tmp1p4x2zz8.java:79: error: ';' expected\n      \
    \              nums2\n                         ^\n/tmp/tmp1p4x2zz8.java:81: error:\
    \ illegal start of expression\n    public static void main(String[] args) {\n\
    \    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] sorted =\
    \ new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            int min = Integer.MAX_VALUE;\n            int minIndex = -1;\n  \
    \          for (int j = 0; j < nums.length; j++) {\n                if (nums[j]\
    \ != null) {\n                    int num = numeralToInt(nums[j]);\n         \
    \           if (num < min) {\n                        min = num;\n           \
    \             minIndex = j;\n                    }\n                }\n      \
    \      }\n            sorted[i] = nums[minIndex];\n            nums[minIndex]\
    \ = null;\n        }\n        return String.join(\" \", sorted);\n\n    }\n  \
    \  public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpttdw94kq.java:22: error: cannot find symbol\n                 \
    \   int num = numeralToInt(nums[j]);\n                              ^\n  symbol:\
    \   method numeralToInt(String)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9k09nn0g.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppltag2fi.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmppltag2fi.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt23xr6ni.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpt23xr6ni.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjbx3lm1h.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpjbx3lm1h.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpchfsk9wu.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpchfsk9wu.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcsspjpmy.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmpcsspjpmy.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp5d9gv3qc.java:18)\n\tat Problem.main(tmp5d9gv3qc.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprsbzd_it.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmprsbzd_it.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i != nums2.length - 1) {\n                sb.append(\" \");\n        \
    \    }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxri0v13g.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpxri0v13g.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1aj9n5bh.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmp1aj9n5bh.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp68swh4u2.java:18)\n\tat Problem$1.compare(tmp68swh4u2.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp68swh4u2.java:16)\n\tat Problem.main(tmp68swh4u2.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i != nums2.length - 1) {\n                sb.append(\" \");\n        \
    \    }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpruwrknme.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpruwrknme.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(getNum(a), getNum(b));\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx0v9eho6.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmpx0v9eho6.java:18: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplfw4smtc.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmplfw4smtc.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpptwd1ftf.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpptwd1ftf.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp762zub0i.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmp762zub0i.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxbyjp7xk.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpxbyjp7xk.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpknbobzzp.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpknbobzzp.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(getNum(a), getNum(b));\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ymfry1w.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmp6ymfry1w.java:18: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpcnftjlli.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpcnftjlli.java:16)\n\tat Problem.main(tmpcnftjlli.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(numeralToInt(s1), numeralToInt(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp79llgr22.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(numeralToInt(s1), numeralToInt(s2));\n                     \
    \                  ^\n  symbol: method numeralToInt(String)\n/tmp/tmp79llgr22.java:19:\
    \ error: cannot find symbol\n                return Integer.compare(numeralToInt(s1),\
    \ numeralToInt(s2));\n                                                       \
    \  ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsSorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            numsSorted[i] = intToNum(numsInt[i]);\n\
    \        }\n        return String.join(\" \", numsSorted);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2hyse5jj.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp2hyse5jj.java:23: error: cannot find symbol\n\
    \            numsSorted[i] = intToNum(numsInt[i]);\n                         \
    \   ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return map(a) - map(b);\n            }\n        });\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvi1hba1b.java:18: error: cannot find symbol\n                return\
    \ map(a) - map(b);\n                       ^\n  symbol: method map(String)\n/tmp/tmpvi1hba1b.java:18:\
    \ error: cannot find symbol\n                return map(a) - map(b);\n       \
    \                         ^\n  symbol: method map(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums_sorted\
    \ = new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            nums_sorted[i] = nums[i];\n        }\n        Arrays.sort(nums_sorted,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < nums_sorted.length; i++) {\n            sb.append(nums_sorted[i]);\n\
    \            if (i != nums_sorted.length - 1) {\n                sb.append(\"\
    \ \");\n            }\n        }\n        return sb.toString();\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn97bb4py.java:22: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpn97bb4py.java:22: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return null;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.sortNumbers(String)\"\
    \ is null\n\tat Problem.main(tmpxnr053h2.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp99m1113e.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp99m1113e.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // >>> sort_numbers('three one five')\n        // 'one three five'\n\
    \        String[] nums = numbers.split(\" \");\n        int[] numsInt = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            numsInt[i] = numToInt(nums[i]);\n\
    \        }\n        Arrays.sort(numsInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsp8nttk3.java:20: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpsp8nttk3.java:25: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe9yvvg9x.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpe9yvvg9x.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqvf0u6xn.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Map<String, Integer>\
    \ map = new HashMap<>();\n        map.put(\"zero\", 0);\n        map.put(\"one\"\
    , 1);\n        map.put(\"two\", 2);\n        map.put(\"three\", 3);\n        map.put(\"\
    four\", 4);\n        map.put(\"five\", 5);\n        map.put(\"six\", 6);\n   \
    \     map.put(\"seven\", 7);\n        map.put(\"eight\", 8);\n        map.put(\"\
    nine\", 9);\n        Arrays.sort(nums, (a, b) -> map.get(a) - map.get(b));\n \
    \       return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_nhj7k3b.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjujc3zwd.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpcloazvk8.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpcloazvk8.java:16)\n\tat Problem.main(tmpcloazvk8.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp76k1325a.java:19)\n\tat Problem$1.compare(tmp76k1325a.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp76k1325a.java:16)\n\tat Problem.main(tmp76k1325a.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums2.length; i++)\
    \ {\n            result += nums2[i] + \" \";\n        }\n        return result.trim();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpgvswsq4m.java:18)\n\tat Problem.main(tmpgvswsq4m.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsbnx2084.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_6pwa2pf.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmp_6pwa2pf.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp111nz2sv.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp111nz2sv.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_1y4ayoe.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp_1y4ayoe.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] num_ints = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     num_ints[i] = numeralToInt(nums[i]);\n        }\n        Arrays.sort(num_ints);\n\
    \        String[] num_strings = new String[num_ints.length];\n        for (int\
    \ i = 0; i < num_ints.length; i++) {\n            num_strings[i] = intToNumeral(num_ints[i]);\n\
    \        }\n        return String.join(\" \", num_strings);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmw0fpbhd.java:18: error: cannot find symbol\n            num_ints[i]\
    \ = numeralToInt(nums[i]);\n                          ^\n  symbol:   method numeralToInt(String)\n\
    \  location: class Problem\n/tmp/tmpmw0fpbhd.java:23: error: cannot find symbol\n\
    \            num_strings[i] = intToNumeral(num_ints[i]);\n                   \
    \          ^\n  symbol:   method intToNumeral(int)\n  location: class Problem\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.compare(getNumber(a), getNumber(b));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg46d_qvr.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNumber(a), getNumber(b));\n                             \
    \          ^\n  symbol: method getNumber(String)\n/tmp/tmpg46d_qvr.java:19: error:\
    \ cannot find symbol\n                return Integer.compare(getNumber(a), getNumber(b));\n\
    \                                                     ^\n  symbol: method getNumber(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String[] nums_sorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            nums_sorted[i] = intToNum(nums_int[i]);\n\
    \        }\n        return String.join(\" \", nums_sorted);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8rtm7nj2.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp8rtm7nj2.java:23: error: cannot find symbol\n\
    \            nums_sorted[i] = intToNum(nums_int[i]);\n                       \
    \      ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums2.length; i++) {\n            sb.append(intToNum(nums2[i]));\n         \
    \   if (i != nums2.length - 1) {\n                sb.append(\" \");\n        \
    \    }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp57oxs_dy.java:18: error: cannot find symbol\n            nums2[i]\
    \ = numToInt(nums[i]);\n                       ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp57oxs_dy.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums2[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8wbopxf2.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp8wbopxf2.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(getNum(a), getNum(b));\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp7fsb93i.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmpp7fsb93i.java:18: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ o1, String o2) {\n                return Integer.compare(getNum(o1), getNum(o2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprkokthmi.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(o1), getNum(o2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmprkokthmi.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(o1), getNum(o2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            result += convert(nums_int[i]);\n            if (i != nums_int.length\
    \ - 1) {\n                result += \" \";\n            }\n        }\n       \
    \ return result;\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp727pp7wu.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp727pp7wu.java:23: error: cannot find symbol\n\
    \            result += convert(nums_int[i]);\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw7admh2k.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpky4ghupw.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpky4ghupw.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        return \"\";\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5a8l1hjy.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return getNum(a) - getNum(b);\n            }\n       \
    \ });\n        return String.join(\" \", nums);\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpofqge96n.java:18: error: cannot find symbol\n                return\
    \ getNum(a) - getNum(b);\n                       ^\n  symbol: method getNum(String)\n\
    /tmp/tmpofqge96n.java:18: error: cannot find symbol\n                return getNum(a)\
    \ - getNum(b);\n                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpae9iu4b2.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpae9iu4b2.java:16)\n\tat Problem.main(tmpae9iu4b2.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp8pv0oo_a.java:18)\n\tat Problem$1.compare(tmp8pv0oo_a.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp8pv0oo_a.java:16)\n\tat Problem.main(tmp8pv0oo_a.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4irlu0bz.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp4irlu0bz.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppnju8mlc.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmppnju8mlc.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp30tm7o61.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmp30tm7o61.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsvwzujxn.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums2 = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums2[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums2);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums2.length; i++)\
    \ {\n            result += nums2[i] + \" \";\n        }\n        return result.trim();\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp5gexxksa.java:18)\n\tat Problem.main(tmp5gexxksa.java:29)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm3kvxs_c.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmpm3kvxs_c.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> Integer.parseInt(a) - Integer.parseInt(b));\n        return String.join(\"\
    \ \", nums);\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmptbqbuu6i.java:16)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmptbqbuu6i.java:16)\n\tat Problem.main(tmptbqbuu6i.java:23)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7j24xem1.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmpx8x6noa8.java:18)\n\tat Problem$1.compare(tmpx8x6noa8.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpx8x6noa8.java:16)\n\tat Problem.main(tmpx8x6noa8.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                sb.append(\" \");\n          \
    \  }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpkylfbwdz.java:18)\n\tat Problem.main(tmpkylfbwdz.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb44s6nqk.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpe_9vy_4z.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpe_9vy_4z.java:16)\n\tat Problem.main(tmpe_9vy_4z.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpau3av0iv.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpau3av0iv.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return getNum(a) - getNum(b);\n            }\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcrgnh09s.java:19: error: cannot find symbol\n                return\
    \ getNum(a) - getNum(b);\n                       ^\n  symbol: method getNum(String)\n\
    /tmp/tmpcrgnh09s.java:19: error: cannot find symbol\n                return getNum(a)\
    \ - getNum(b);\n                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwsi_y7fn.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return numeralToInt(a) - numeralToInt(b);\n          \
    \  }\n        });\n        return String.join(\" \", nums);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqxuswqpk.java:18: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpqxuswqpk.java:18: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return getNumber(a) - getNumber(b);\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwjgnyocm.java:19: error: cannot find symbol\n                return\
    \ getNumber(a) - getNumber(b);\n                       ^\n  symbol: method getNumber(String)\n\
    /tmp/tmpwjgnyocm.java:19: error: cannot find symbol\n                return getNumber(a)\
    \ - getNumber(b);\n                                      ^\n  symbol: method getNumber(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i < nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps6i6j26r.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmps6i6j26r.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8mq_64aa.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp8mq_64aa.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            int ai = Integer.parseInt(a);\n            int bi =\
    \ Integer.parseInt(b);\n            return ai - bi;\n        });\n        return\
    \ String.join(\" \", nums);\n\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpr8c6qyxi.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpr8c6qyxi.java:16)\n\tat Problem.main(tmpr8c6qyxi.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String[] numsStr = new String[nums.length];\n        for (int i = 0;\
    \ i < nums.length; i++) {\n            numsStr[i] = convert(numsInt[i]);\n   \
    \     }\n        return String.join(\" \", numsStr);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6preaf86.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmp6preaf86.java:23: error: cannot find symbol\n\
    \            numsStr[i] = convert(numsInt[i]);\n                         ^\n \
    \ symbol:   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc_owj1t9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpc_owj1t9.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(numeralToInt(a), numeralToInt(b));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5dda9n_0.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(numeralToInt(a), numeralToInt(b));\n                       \
    \                ^\n  symbol: method numeralToInt(String)\n/tmp/tmp5dda9n_0.java:18:\
    \ error: cannot find symbol\n                return Integer.compare(numeralToInt(a),\
    \ numeralToInt(b));\n                                                        ^\n\
    \  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc3n6zd0e.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpc3n6zd0e.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] sorted =\
    \ new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            sorted[i] = nums[i];\n        }\n        Arrays.sort(sorted, new\
    \ Comparator<String>() {\n            public int compare(String a, String b) {\n\
    \                return numeralToInt(a) - numeralToInt(b);\n            }\n  \
    \      });\n        return String.join(\" \", sorted);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vv3667a.java:22: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmp4vv3667a.java:22: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpld5uxfgq.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmpld5uxfgq.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert_to_int(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String result = \"\";\n        for (int i = 0; i < nums_int.length; i++)\
    \ {\n            result += convert_to_string(nums_int[i]) + \" \";\n        }\n\
    \        return result.trim();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4fxdvlag.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert_to_int(nums[i]);\n                          ^\n  symbol:   method\
    \ convert_to_int(String)\n  location: class Problem\n/tmp/tmp4fxdvlag.java:23:\
    \ error: cannot find symbol\n            result += convert_to_string(nums_int[i])\
    \ + \" \";\n                      ^\n  symbol:   method convert_to_string(int)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] num = new int[nums.length];\n\
    \        for (int i = 0; i < nums.length; i++) {\n            num[i] = Integer.parseInt(nums[i]);\n\
    \        }\n        Arrays.sort(num);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < num.length; i++) {\n            sb.append(num[i]);\n\
    \            if (i != num.length - 1) {\n                sb.append(\" \");\n \
    \           }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp6r9v6w0c.java:18)\n\tat Problem.main(tmp6r9v6w0c.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp7li8fygi.java:18)\n\tat Problem.main(tmp7li8fygi.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return convert(a) - convert(b);\n            }\n     \
    \   });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps_74dr_m.java:18: error: cannot find symbol\n                return\
    \ convert(a) - convert(b);\n                       ^\n  symbol: method convert(String)\n\
    /tmp/tmps_74dr_m.java:18: error: cannot find symbol\n                return convert(a)\
    \ - convert(b);\n                                    ^\n  symbol: method convert(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder res = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            res.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                res.append(\" \");\n         \
    \   }\n        }\n        return res.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpn2vn2s9i.java:18)\n\tat Problem.main(tmpn2vn2s9i.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2fasvzrr.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp2fasvzrr.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return null;\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.sortNumbers(String)\"\
    \ is null\n\tat Problem.main(tmpz6bui3rj.java:20)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String result = \"\";\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            result += intToNum(numsInt[i]) + \" \";\n        }\n        return\
    \ result.trim();\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmpj1_pk1du.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpj1_pk1du.java:23: error: cannot find symbol\n\
    \            result += intToNum(numsInt[i]) + \" \";\n                      ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums_sorted\
    \ = new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            nums_sorted[i] = nums[i];\n        }\n        Arrays.sort(nums_sorted,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(numeralToInt(a), numeralToInt(b));\n\
    \            }\n        });\n        return String.join(\" \", nums_sorted);\n\
    \n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmptsqjdfr4.java:22: error: cannot find symbol\n                return\
    \ Integer.compare(numeralToInt(a), numeralToInt(b));\n                       \
    \                ^\n  symbol: method numeralToInt(String)\n/tmp/tmptsqjdfr4.java:22:\
    \ error: cannot find symbol\n                return Integer.compare(numeralToInt(a),\
    \ numeralToInt(b));\n                                                        ^\n\
    \  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convert(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convert(numsInt[i]));\n      \
    \      if (i != numsInt.length - 1) {\n                sb.append(\" \");\n   \
    \         }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgvtj1rcw.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convert(nums[i]);\n                         ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmpgvtj1rcw.java:23: error: cannot find symbol\n\
    \            sb.append(convert(numsInt[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmpt9_8f96e.java:18)\n\tat Problem$1.compare(tmpt9_8f96e.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpt9_8f96e.java:16)\n\tat Problem.main(tmpt9_8f96e.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprh61g7fj.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmprh61g7fj.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(getNum(a), getNum(b));\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4nx4jfgf.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmp4nx4jfgf.java:18: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // Your code here\n        return \"\";\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf_ptn3pb.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$sortNumbers$0(tmpnsju703h.java:17)\n\tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\
    \tat java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpnsju703h.java:16)\n\tat Problem.main(tmpnsju703h.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp050j1olu.java:19)\n\tat Problem$1.compare(tmp050j1olu.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp050j1olu.java:16)\n\tat Problem.main(tmp050j1olu.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums2 = new\
    \ String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n    \
    \        if (nums[i].equals(\"zero\")) {\n                nums2[i] = \"0\";\n\
    \            } else if (nums[i].equals(\"one\")) {\n                nums2[i] =\
    \ \"1\";\n            } else if (nums[i].equals(\"two\")) {\n                nums2[i]\
    \ = \"2\";\n            } else if (nums[i].equals(\"three\")) {\n            \
    \    nums2[i] = \"3\";\n            } else if (nums[i].equals(\"four\")) {\n \
    \               nums2[i] = \"4\";\n            } else if (nums[i].equals(\"five\"\
    )) {\n                nums2[i] = \"5\";\n            } else if (nums[i].equals(\"\
    six\")) {\n                nums2[i] = \"6\";\n            } else if (nums[i].equals(\"\
    seven\")) {\n                nums2[i] = \"7\";\n            } else if (nums[i].equals(\"\
    eight\")) {\n                nums2[i] = \"8\";\n            } else if (nums[i].equals(\"\
    nine\")) {\n                nums2[i] = \"9\";\n            }\n        }\n    \
    \    Arrays.sort(nums2);\n        for (int i = 0; i < nums2.length; i++) {\n \
    \           if (nums2[i].equals(\"0\")) {\n                nums2[i] = \"zero\"\
    ;\n            } else if (nums2[i].equals(\"1\")) {\n                nums2[i]\
    \ = \"one\";\n            } else if (nums2[i].equals(\"2\")) {\n             \
    \   nums2[i] = \"two\";\n            } else if (nums2[i].equals(\"3\")) {\n  \
    \              nums2[i] = \"three\";\n            } else if (nums2[i].equals(\"\
    4\")) {\n                num\n    }\n    public static void main(String[] args)\
    \ {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpki9sapou.java:51: error: not a statement\n                num\n\
    \                ^\n/tmp/tmpki9sapou.java:51: error: ';' expected\n          \
    \      num\n                   ^\n/tmp/tmpki9sapou.java:53: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5aoi_kos.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp5aoi_kos.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp83wx4azi.java:18)\n\tat Problem.main(tmp83wx4azi.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convert(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convert(nums_int[i]));\n    \
    \        if (i < nums_int.length - 1) {\n                sb.append(\" \");\n \
    \           }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjx_fpo2.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convert(nums[i]);\n                          ^\n  symbol:   method convert(String)\n\
    \  location: class Problem\n/tmp/tmphjx_fpo2.java:23: error: cannot find symbol\n\
    \            sb.append(convert(nums_int[i]));\n                      ^\n  symbol:\
    \   method convert(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(nums_int[i]);\n            if\
    \ (i != nums_int.length - 1) {\n                sb.append(\" \");\n          \
    \  }\n        }\n        return sb.toString();\n\n    }\n    public static void\
    \ main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n   \
    \ assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpbivifx9u.java:18)\n\tat Problem.main(tmpbivifx9u.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String[] nums_sorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            nums_sorted[i] = intToNum(nums_int[i]);\n\
    \        }\n        return String.join(\" \", nums_sorted);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3pl54unu.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp3pl54unu.java:23: error: cannot find symbol\n\
    \            nums_sorted[i] = intToNum(nums_int[i]);\n                       \
    \      ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = convertNumeralToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(convertIntToNumeral(nums_int[i]));\n\
    \            if (i != nums_int.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpju15c84e.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = convertNumeralToInt(nums[i]);\n                          ^\n  symbol:   method\
    \ convertNumeralToInt(String)\n  location: class Problem\n/tmp/tmpju15c84e.java:23:\
    \ error: cannot find symbol\n            sb.append(convertIntToNumeral(nums_int[i]));\n\
    \                      ^\n  symbol:   method convertIntToNumeral(int)\n  location:\
    \ class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        String[] nums_sorted\
    \ = new String[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n\
    \            int num = 0;\n            switch (nums[i]) {\n                case\
    \ \"zero\":\n                    num = 0;\n                    break;\n      \
    \          case \"one\":\n                    num = 1;\n                    break;\n\
    \                case \"two\":\n                    num = 2;\n               \
    \     break;\n                case \"three\":\n                    num = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    num = 4;\n                    break;\n                case \"five\":\n  \
    \                  num = 5;\n                    break;\n                case\
    \ \"six\":\n                    num = 6;\n                    break;\n       \
    \         case \"seven\":\n                    num = 7;\n                    break;\n\
    \                case \"eight\":\n                    num = 8;\n             \
    \       break;\n                case \"nine\":\n                    num = 9;\n\
    \                    break;\n            }\n            nums_sorted[i] = nums[i];\n\
    \            for (int j = 0; j < i; j++) {\n                int num_sorted = 0;\n\
    \                switch (nums_sorted[j]) {\n                    case \"zero\"\
    :\n                        num_sorted = 0;\n                        break;\n \
    \                   case \"one\":\n                        num_sorted = 1;\n \
    \                       break;\n                    case \"two\":\n          \
    \              num_sorted = 2;\n                        break;\n             \
    \       case \"three\":\n                        num_sorted = 3;\n           \
    \             break;\n                    case \"four\":\n                   \
    \     num_sorted = 4;\n                        break;\n                    case\
    \ \"five\":\n                        num_sorted = 5;\n                       \
    \ break;\n                    case \"six\":\n                        num_sorted\
    \ = 6;\n                        break;\n                    case \"seven\":\n\
    \                        num_sorted = 7;\n                        break;\n   \
    \                 case \"eight\":\n                        num_sorted = 8;\n \
    \                       break;\n                    case \"nine\":\n         \
    \               num_sorted = 9;\n                        break;\n            \
    \    }\n                if (num < num_sorted) {\n                    String temp\
    \ = nums_sorted[j];\n                    nums_sorted[j\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1h3u1ubd.java:88: error: ']' expected\n                    nums_sorted[j\n\
    \                                 ^\n/tmp/tmp1h3u1ubd.java:88: error: not a statement\n\
    \                    nums_sorted[j\n                               ^\n/tmp/tmp1h3u1ubd.java:90:\
    \ error: illegal start of expression\n    public static void main(String[] args)\
    \ {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpagor3e0n.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpagor3e0n.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgizoo3l9.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpgizoo3l9.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        String[] numsStr\
    \ = new String[numsInt.length];\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            switch (numsInt[i]) {\n                case 0:\n            \
    \        numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[\n    }\n    public static void main(String[] args) {\n   \
    \ assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"three\"\
    )).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkamkauj0.java:81: error: illegal start of expression\n    }\n \
    \   ^\n/tmp/tmpkamkauj0.java:80: error: not a statement\n                    numsStr[\n\
    \                           ^\n/tmp/tmpkamkauj0.java:82: error: illegal start\
    \ of expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        String[] nums_sorted = new String[nums.length];\n        for (int i =\
    \ 0; i < nums.length; i++) {\n            nums_sorted[i] = intToNum(nums_int[i]);\n\
    \        }\n        return String.join(\" \", nums_sorted);\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptiyqbs6t.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmptiyqbs6t.java:23: error: cannot find symbol\n\
    \            nums_sorted[i] = intToNum(nums_int[i]);\n                       \
    \      ^\n  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxt1ksyrb.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpxt1ksyrb.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcuzqsxoz.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpcuzqsxoz.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeq_rjum2.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpeq_rjum2.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] nums_int = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     nums_int[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(nums_int);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ nums_int.length; i++) {\n            sb.append(intToNum(nums_int[i]));\n   \
    \         if (i != nums_int.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpryi86kda.java:18: error: cannot find symbol\n            nums_int[i]\
    \ = numToInt(nums[i]);\n                          ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpryi86kda.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(nums_int[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcyhw6l4v.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmpcyhw6l4v.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ s1, String s2) {\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwhnxbv5m.java:19: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(s1), getNum(s2));\n                                 \
    \      ^\n  symbol: method getNum(String)\n/tmp/tmpwhnxbv5m.java:19: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(s1), getNum(s2));\n\
    \                                                   ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcursrx_y.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpcursrx_y.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        String result = \"\";\n        for (int i = 0; i < numsInt.length; i++)\
    \ {\n            result += intToNum(numsInt[i]) + \" \";\n        }\n        return\
    \ result.trim();\n\n    }\n    public static void main(String[] args) {\n    assert(sortNumbers((\"\
    \")).equals((\"\")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n\
    \    assert(sortNumbers((\"three five nine\")).equals((\"three five nine\")));\n\
    \    assert(sortNumbers((\"five zero four seven nine eight\")).equals((\"zero\
    \ four five seven eight nine\")));\n    assert(sortNumbers((\"six five four three\
    \ two one zero\")).equals((\"zero one two three four five six\")));\n    }\n\n\
    }\n"
  stdout: ''
  stderr: "/tmp/tmp71q0whzk.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp71q0whzk.java:23: error: cannot find symbol\n\
    \            result += intToNum(numsInt[i]) + \" \";\n                      ^\n\
    \  symbol:   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpot1pjljq.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpot1pjljq.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmp8hxnnkvq.java:18)\n\tat Problem.main(tmp8hxnnkvq.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptlvq58qy.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.compare(getNum(a), getNum(b));\n      \
    \      }\n        });\n        return String.join(\" \", nums);\n\n    }\n   \
    \ public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_jewubxc.java:18: error: cannot find symbol\n                return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   \
    \    ^\n  symbol: method getNum(String)\n/tmp/tmp_jewubxc.java:18: error: cannot\
    \ find symbol\n                return Integer.compare(getNum(a), getNum(b));\n\
    \                                                  ^\n  symbol: method getNum(String)\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp67df2r_o.java:19)\n\tat Problem$1.compare(tmp67df2r_o.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp67df2r_o.java:16)\n\tat Problem.main(tmp67df2r_o.java:28)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.compare(getNum(a), getNum(b));\n   \
    \     });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqry59ino.java:17: error: cannot find symbol\n            return\
    \ Integer.compare(getNum(a), getNum(b));\n                                   ^\n\
    \  symbol:   method getNum(String)\n  location: class Problem\n/tmp/tmpqry59ino.java:17:\
    \ error: cannot find symbol\n            return Integer.compare(getNum(a), getNum(b));\n\
    \                                              ^\n  symbol:   method getNum(String)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmpnnxbu29_.java:18)\n\tat Problem$1.compare(tmpnnxbu29_.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmpnnxbu29_.java:16)\n\tat Problem.main(tmpnnxbu29_.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = Integer.parseInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(numsInt[i]);\n            if (i\
    \ != numsInt.length - 1) {\n                sb.append(\" \");\n            }\n\
    \        }\n        return sb.toString();\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:678)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.sortNumbers(tmpgsbxa13w.java:18)\n\tat Problem.main(tmpgsbxa13w.java:32)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Arrays.sort(numsInt);\n        StringBuilder sb\
    \ = new StringBuilder();\n        for (int i = 0; i < numsInt.length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    sb.append(\"zero\");\n                    break;\n                case 1:\n\
    \                    sb.append(\"one\");\n                    break;\n       \
    \         case 2:\n                    sb.append(\"two\");\n                 \
    \   break;\n                case 3:\n                    sb.append(\"three\");\n\
    \                    break;\n                case 4:\n                    sb.append(\"\
    four\");\n                    break;\n                case 5:\n              \
    \      sb.append(\"five\");\n                    break;\n                case\
    \ 6:\n                    sb.append(\"six\");\n                    break;\n  \
    \              case 7:\n                    sb.append(\"seven\");\n          \
    \          break;\n                case 8:\n                    sb.append(\"eight\"\
    );\n                    break;\n                case 9:\n                    sb.append(\"\
    nine\");\n                    break;\n            }\n           \n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvhj5a8x0.java:88: error: illegal start of expression\n    public\
    \ static void main(String[] args) {\n    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.compare(numeralToInt(a), numeralToInt(b));\n\
    \        });\n        return String.join(\" \", nums);\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg2e0laou.java:17: error: cannot find symbol\n            return\
    \ Integer.compare(numeralToInt(a), numeralToInt(b));\n                       \
    \            ^\n  symbol:   method numeralToInt(String)\n  location: class Problem\n\
    /tmp/tmpg2e0laou.java:17: error: cannot find symbol\n            return Integer.compare(numeralToInt(a),\
    \ numeralToInt(b));\n                                                    ^\n \
    \ symbol:   method numeralToInt(String)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] numbersArray = numbers.split(\" \");\n        int[] numbersInt\
    \ = new int[numbersArray.length];\n        for (int i = 0; i < numbersArray.length;\
    \ i++) {\n            numbersInt[i] = numberToInt(numbersArray[i]);\n        }\n\
    \        Arrays.sort(numbersInt);\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < numbersInt.length; i++) {\n            sb.append(intToNumber(numbersInt[i]));\n\
    \            if (i != numbersInt.length - 1) {\n                sb.append(\" \"\
    );\n            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm6qjxbud.java:18: error: cannot find symbol\n            numbersInt[i]\
    \ = numberToInt(numbersArray[i]);\n                            ^\n  symbol:  \
    \ method numberToInt(String)\n  location: class Problem\n/tmp/tmpm6qjxbud.java:23:\
    \ error: cannot find symbol\n            sb.append(intToNumber(numbersInt[i]));\n\
    \                      ^\n  symbol:   method intToNumber(int)\n  location: class\
    \ Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            public int compare(String a, String\
    \ b) {\n                return Integer.parseInt(a) - Integer.parseInt(b);\n  \
    \          }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"five\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:668)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem$1.compare(tmp8memul_c.java:18)\n\tat Problem$1.compare(tmp8memul_c.java:16)\n\
    \tat java.base/java.util.TimSort.countRunAndMakeAscending(TimSort.java:355)\n\t\
    at java.base/java.util.TimSort.sort(TimSort.java:220)\n\tat java.base/java.util.Arrays.sort(Arrays.java:1233)\n\
    \tat Problem.sortNumbers(tmp8memul_c.java:16)\n\tat Problem.main(tmp8memul_c.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ new Comparator<String>() {\n            @Override\n            public int compare(String\
    \ a, String b) {\n                return numeralToInt(a) - numeralToInt(b);\n\
    \            }\n        });\n        return String.join(\" \", nums);\n\n    }\n\
    \    public static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqw1aflgm.java:19: error: cannot find symbol\n                return\
    \ numeralToInt(a) - numeralToInt(b);\n                       ^\n  symbol: method\
    \ numeralToInt(String)\n/tmp/tmpqw1aflgm.java:19: error: cannot find symbol\n\
    \                return numeralToInt(a) - numeralToInt(b);\n                 \
    \                        ^\n  symbol: method numeralToInt(String)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp81dty2_b.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmp81dty2_b.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagvd75hn.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7h5dqlj5.java:21)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = convertToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(convertToString(numsInt[i]));\n\
    \            if (i != numsInt.length - 1) {\n                sb.append(\" \");\n\
    \            }\n        }\n        return sb.toString();\n\n    }\n    public\
    \ static void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\
    \")));\n    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3qnibwnh.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = convertToInt(nums[i]);\n                         ^\n  symbol:   method convertToInt(String)\n\
    \  location: class Problem\n/tmp/tmp3qnibwnh.java:23: error: cannot find symbol\n\
    \            sb.append(convertToString(numsInt[i]));\n                      ^\n\
    \  symbol:   method convertToString(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        Arrays.sort(nums,\
    \ (a, b) -> {\n            return Integer.compare(map(a), map(b));\n        });\n\
    \        return String.join(\" \", nums);\n\n    }\n    public static void main(String[]\
    \ args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n    assert(sortNumbers((\"\
    three\")).equals((\"three\")));\n    assert(sortNumbers((\"three five nine\")).equals((\"\
    three five nine\")));\n    assert(sortNumbers((\"five zero four seven nine eight\"\
    )).equals((\"zero four five seven eight nine\")));\n    assert(sortNumbers((\"\
    six five four three two one zero\")).equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbo1325jx.java:17: error: cannot find symbol\n            return\
    \ Integer.compare(map(a), map(b));\n                                   ^\n  symbol:\
    \   method map(String)\n  location: class Problem\n/tmp/tmpbo1325jx.java:17: error:\
    \ cannot find symbol\n            return Integer.compare(map(a), map(b));\n  \
    \                                         ^\n  symbol:   method map(String)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> sort_numbers('three one five')\n\
    \    // 'one three five'\n    public static String sortNumbers(String numbers)\
    \ {\n        String[] nums = numbers.split(\" \");\n        int[] numsInt = new\
    \ int[nums.length];\n        for (int i = 0; i < nums.length; i++) {\n       \
    \     numsInt[i] = numToInt(nums[i]);\n        }\n        Arrays.sort(numsInt);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ numsInt.length; i++) {\n            sb.append(intToNum(numsInt[i]));\n     \
    \       if (i != numsInt.length - 1) {\n                sb.append(\" \");\n  \
    \          }\n        }\n        return sb.toString();\n\n    }\n    public static\
    \ void main(String[] args) {\n    assert(sortNumbers((\"\")).equals((\"\")));\n\
    \    assert(sortNumbers((\"three\")).equals((\"three\")));\n    assert(sortNumbers((\"\
    three five nine\")).equals((\"three five nine\")));\n    assert(sortNumbers((\"\
    five zero four seven nine eight\")).equals((\"zero four five seven eight nine\"\
    )));\n    assert(sortNumbers((\"six five four three two one zero\")).equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqjph13yl.java:18: error: cannot find symbol\n            numsInt[i]\
    \ = numToInt(nums[i]);\n                         ^\n  symbol:   method numToInt(String)\n\
    \  location: class Problem\n/tmp/tmpqjph13yl.java:23: error: cannot find symbol\n\
    \            sb.append(intToNum(numsInt[i]));\n                      ^\n  symbol:\
    \   method intToNum(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError

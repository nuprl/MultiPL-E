name: HumanEval_153_Strongest_Extension
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // You will be given the name of a class (a string) and a list\
  \ of extensions.\n    // The extensions are to be used to load additional classes\
  \ to the class. The\n    // strength of the extension is as follows: Let CAP be\
  \ the number of the uppercase\n    // letters in the extension's name, and let SM\
  \ be the number of lowercase letters \n    // in the extension's name, the strength\
  \ is given by the fraction CAP - SM. \n    // You should find the strongest extension\
  \ and return a string in this \n    // format: ClassName.StrongestExtensionName.\n\
  \    // If there are two or more extensions with the same strength, you should\n\
  \    // choose the one that comes first in the list.\n    // For example, if you\
  \ are given \"Slices\" as the class and a list of the\n    // extensions: ['SErviNGSliCes',\
  \ 'Cheese', 'StuFfed'] then you should\n    // return 'Slices.SErviNGSliCes' since\
  \ 'SErviNGSliCes' is the strongest extension \n    // (its strength is -1).\n  \
  \  // Example:\n    // for Strongest_Extension('my_class', ['AA', 'Be', 'CC']) ==\
  \ 'my_class.AA'\n    public static String StrongestExtension(String class_name,\
  \ ArrayList<String> extensions) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(StrongestExtension((\"\
  Watashi\"), (new ArrayList<String>(Arrays.asList((String)\"tEN\", (String)\"niNE\"\
  , (String)\"eIGHt8OKe\")))).equals((\"Watashi.eIGHt8OKe\")));\n    assert(StrongestExtension((\"\
  Boku123\"), (new ArrayList<String>(Arrays.asList((String)\"nani\", (String)\"NazeDa\"\
  , (String)\"YEs.WeCaNe\", (String)\"32145tggg\")))).equals((\"Boku123.YEs.WeCaNe\"\
  )));\n    assert(StrongestExtension((\"__YESIMHERE\"), (new ArrayList<String>(Arrays.asList((String)\"\
  t\", (String)\"eMptY\", (String)\"nothing\", (String)\"zeR00\", (String)\"NuLl__\"\
  , (String)\"123NoooneB321\")))).equals((\"__YESIMHERE.NuLl__\")));\n    assert(StrongestExtension((\"\
  K\"), (new ArrayList<String>(Arrays.asList((String)\"Ta\", (String)\"TAR\", (String)\"\
  t234An\", (String)\"cosSo\")))).equals((\"K.TAR\")));\n    assert(StrongestExtension((\"\
  __HAHA\"), (new ArrayList<String>(Arrays.asList((String)\"Tab\", (String)\"123\"\
  , (String)\"781345\", (String)\"-_-\")))).equals((\"__HAHA.123\")));\n    assert(StrongestExtension((\"\
  YameRore\"), (new ArrayList<String>(Arrays.asList((String)\"HhAas\", (String)\"\
  okIWILL123\", (String)\"WorkOut\", (String)\"Fails\", (String)\"-_-\")))).equals((\"\
  YameRore.okIWILL123\")));\n    assert(StrongestExtension((\"finNNalLLly\"), (new\
  \ ArrayList<String>(Arrays.asList((String)\"Die\", (String)\"NowW\", (String)\"\
  Wow\", (String)\"WoW\")))).equals((\"finNNalLLly.WoW\")));\n    assert(StrongestExtension((\"\
  _\"), (new ArrayList<String>(Arrays.asList((String)\"Bb\", (String)\"91245\")))).equals((\"\
  _.Bb\")));\n    assert(StrongestExtension((\"Sp\"), (new ArrayList<String>(Arrays.asList((String)\"\
  671235\", (String)\"Bb\")))).equals((\"Sp.671235\")));\n    }\n\n}\n"
completions: ["        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        int max = 0;\n        String max_ext = \"\";\n        for\
    \ (String ext : extensions) {\n            int cap = 0;\n            int sm =\
    \ 0;\n            for (int i = 0; i < ext.length(); i++) {\n                if\
    \ (Character.isUpperCase(ext.charAt(i))) {\n                    cap++;\n     \
    \           } else {\n                    sm++;\n                }\n         \
    \   }\n            int strength = cap - sm;\n            if (strength > max) {\n\
    \                max = strength;\n                max_ext = ext;\n           \
    \ }\n        }\n        return class_name + \".\" + max_ext;\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        String\
    \ strongest_extension = \"\";\n        double strongest_strength = 0;\n      \
    \  for (String extension : extensions) {\n            double strength = 0;\n \
    \           for (char c : extension.toCharArray()) {\n                if (Character.isUpperCase(c))\
    \ {\n                    strength += 1;\n                } else {\n          \
    \          strength -= 1;\n                }\n            }\n            if (strength\
    \ > strongest_strength) {\n                strongest_strength = strength;\n  \
    \              strongest_extension = extension;\n            }\n        }\n  \
    \      return class_name + \".\" + strongest_extension;\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        String strongest_extension = \"\";\n        double strength =\
    \ 0;\n        for (String extension : extensions) {\n            double cap =\
    \ 0;\n            double sm = 0;\n            for (int i = 0; i < extension.length();\
    \ i++) {\n                if (Character.isUpperCase(extension.charAt(i))) {\n\
    \                    cap++;\n                } else {\n                    sm++;\n\
    \                }\n            }\n            double ext_strength = cap - sm;\n\
    \            if (ext_strength > strength) {\n                strength = ext_strength;\n\
    \                strongest_extension = extension;\n            }\n        }\n\
    \        return class_name + \".\" + strongest_extension;\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        String strongest = \"\";\n    \
    \    double max = 0;\n        for (String ext : extensions) {\n            double\
    \ strength = 0;\n            for (int i = 0; i < ext.length(); i++) {\n      \
    \          if (Character.isUpperCase(ext.charAt(i))) {\n                    strength++;\n\
    \                } else {\n                    strength--;\n                }\n\
    \            }\n            if (strength > max) {\n                max = strength;\n\
    \                strongest = ext;\n            }\n        }\n        return class_name\
    \ + \".\" + strongest;\n", "        // Your code here\n        return \"\";\n",
  "        // your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String strongest_extension = \"\";\n      \
    \  double strongest_strength = 0;\n        for (String extension : extensions)\
    \ {\n            double strength = 0;\n            for (int i = 0; i < extension.length();\
    \ i++) {\n                if (Character.isUpperCase(extension.charAt(i))) {\n\
    \                    strength++;\n                } else {\n                 \
    \   strength--;\n                }\n            }\n            if (strength >\
    \ strongest_strength) {\n                strongest_strength = strength;\n    \
    \            strongest_extension = extension;\n            }\n        }\n    \
    \    return class_name + \".\" + strongest_extension;\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        String strongest\
    \ = \"\";\n        double strength = 0;\n        for (String extension : extensions)\
    \ {\n            double cap = extension.chars().filter(Character::isUpperCase).count();\n\
    \            double sm = extension.chars().filter(Character::isLowerCase).count();\n\
    \            double current_strength = cap - sm;\n            if (current_strength\
    \ > strength) {\n                strength = current_strength;\n              \
    \  strongest = extension;\n            }\n        }\n        return class_name\
    \ + \".\" + strongest;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        int max = 0;\n   \
    \     String max_ext = \"\";\n        for (String ext : extensions) {\n      \
    \      int cap = 0;\n            int sm = 0;\n            for (int i = 0; i <\
    \ ext.length(); i++) {\n                if (Character.isUpperCase(ext.charAt(i)))\
    \ {\n                    cap++;\n                } else {\n                  \
    \  sm++;\n                }\n            }\n            if (cap - sm > max) {\n\
    \                max = cap - sm;\n                max_ext = ext;\n           \
    \ }\n        }\n        return class_name + \".\" + max_ext;\n", "        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        String strongest = extensions.get(0);\n\
    \        double strength = 0;\n        for (String ext : extensions) {\n     \
    \       double s = 0;\n            for (int i = 0; i < ext.length(); i++) {\n\
    \                if (Character.isUpperCase(ext.charAt(i))) {\n               \
    \     s++;\n                } else {\n                    s--;\n             \
    \   }\n            }\n            if (s > strength) {\n                strength\
    \ = s;\n                strongest = ext;\n            }\n        }\n        return\
    \ class_name + \".\" + strongest;\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return null;\n", "        // Your\
    \ code here\n        return null;\n", "        // Your code here\n        return\
    \ \"\";\n", "        String strongest_extension = \"\";\n        double strongest_strength\
    \ = 0;\n        for (String extension : extensions) {\n            double strength\
    \ = 0;\n            for (int i = 0; i < extension.length(); i++) {\n         \
    \       if (Character.isUpperCase(extension.charAt(i))) {\n                  \
    \  strength++;\n                } else {\n                    strength--;\n  \
    \              }\n            }\n            if (strength > strongest_strength)\
    \ {\n                strongest_strength = strength;\n                strongest_extension\
    \ = extension;\n            }\n        }\n        return class_name + \".\" +\
    \ strongest_extension;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code goes\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        double max = -1;\n        String max_ext = \"\";\n      \
    \  for (String ext : extensions) {\n            double strength = 0;\n       \
    \     for (int i = 0; i < ext.length(); i++) {\n                if (Character.isUpperCase(ext.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > max) {\n                max = strength;\n                max_ext = ext;\n\
    \            }\n        }\n        return class_name + \".\" + max_ext;\n", " \
    \       // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        String strongest = \"\";\n        double strength = 0;\n        for (String\
    \ ext : extensions) {\n            double curr_strength = 0;\n            for\
    \ (int i = 0; i < ext.length(); i++) {\n                if (Character.isUpperCase(ext.charAt(i)))\
    \ {\n                    curr_strength++;\n                } else {\n        \
    \            curr_strength--;\n                }\n            }\n            if\
    \ (curr_strength > strength) {\n                strength = curr_strength;\n  \
    \              strongest = ext;\n            }\n        }\n        return class_name\
    \ + \".\" + strongest;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // your code here\n        return \"\";\n", "        int max_strength =\
    \ Integer.MIN_VALUE;\n        String strongest_extension = \"\";\n        for\
    \ (String extension : extensions) {\n            int strength = 0;\n         \
    \   for (int i = 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > max_strength) {\n                max_strength = strength;\n              \
    \  strongest_extension = extension;\n            }\n        }\n        return\
    \ class_name + \".\" + strongest_extension;\n", "        // Your code here\n \
    \       return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        int max = 0;\n   \
    \     String strongest = \"\";\n        for (String extension : extensions) {\n\
    \            int strength = 0;\n            for (int i = 0; i < extension.length();\
    \ i++) {\n                if (Character.isUpperCase(extension.charAt(i))) {\n\
    \                    strength++;\n                } else {\n                 \
    \   strength--;\n                }\n            }\n            if (strength >\
    \ max) {\n                max = strength;\n                strongest = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String strongest = \"\";\n        double strength\
    \ = 0;\n        for (String ext : extensions) {\n            double ext_strength\
    \ = getStrength(ext);\n            if (ext_strength > strength) {\n          \
    \      strength = ext_strength;\n                strongest = ext;\n          \
    \  }\n        }\n        return class_name + \".\" + strongest;\n", "        //\
    \ Your code here\n        return \"\";\n", "        String strongest = \"\";\n\
    \        double strength = 0;\n        for (String extension : extensions) {\n\
    \            double cap = extension.chars().filter(Character::isUpperCase).count();\n\
    \            double sm = extension.chars().filter(Character::isLowerCase).count();\n\
    \            double new_strength = cap - sm;\n            if (new_strength > strength)\
    \ {\n                strength = new_strength;\n                strongest = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        String strongest =\
    \ \"\";\n        double strength = 0;\n        for (String ext : extensions) {\n\
    \            double cap = 0;\n            double sm = 0;\n            for (int\
    \ i = 0; i < ext.length(); i++) {\n                if (Character.isUpperCase(ext.charAt(i)))\
    \ {\n                    cap++;\n                } else {\n                  \
    \  sm++;\n                }\n            }\n            double str = cap - sm;\n\
    \            if (str > strength) {\n                strength = str;\n        \
    \        strongest = ext;\n            }\n        }\n        return class_name\
    \ + \".\" + strongest;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return null;\n", "        // Your code here\n\
    \        return \"\";\n", "        double max = -1;\n        String max_ext =\
    \ \"\";\n        for (String ext : extensions) {\n            double strength\
    \ = 0;\n            for (int i = 0; i < ext.length(); i++) {\n               \
    \ if (Character.isUpperCase(ext.charAt(i))) {\n                    strength +=\
    \ 1;\n                } else {\n                    strength -= 1;\n         \
    \       }\n            }\n            if (strength > max) {\n                max\
    \ = strength;\n                max_ext = ext;\n            }\n        }\n    \
    \    return class_name + \".\" + max_ext;\n", "        // Your code here\n   \
    \     return \"\";\n", "        // Your code here\n        return \"\";\n", " \
    \       // your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code goes here\n        return \"\"\
    ;\n", "        // Your code here\n        return \"\";\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        String strongest_extension = \"\";\n        double strongest_strength\
    \ = 0;\n        for (String extension : extensions) {\n            double strength\
    \ = 0;\n            for (int i = 0; i < extension.length(); i++) {\n         \
    \       if (Character.isUpperCase(extension.charAt(i))) {\n                  \
    \  strength++;\n                } else {\n                    strength--;\n  \
    \              }\n            }\n            if (strength > strongest_strength)\
    \ {\n                strongest_strength = strength;\n                strongest_extension\
    \ = extension;\n            }\n        }\n        return class_name + \".\" +\
    \ strongest_extension;\n", "        String strongest = \"\";\n        double strength\
    \ = 0;\n        for (String extension : extensions) {\n            double cap\
    \ = extension.chars().filter(Character::isUpperCase).count();\n            double\
    \ sm = extension.chars().filter(Character::isLowerCase).count();\n           \
    \ double new_strength = cap - sm;\n            if (new_strength > strength) {\n\
    \                strength = new_strength;\n                strongest = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        String strongest_extension\
    \ = \"\";\n        double strongest_strength = 0;\n        for (String extension\
    \ : extensions) {\n            double strength = 0;\n            for (int i =\
    \ 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > strongest_strength) {\n                strongest_strength = strength;\n  \
    \              strongest_extension = extension;\n            }\n        }\n  \
    \      return class_name + \".\" + strongest_extension;\n", "        String strongest_extension\
    \ = \"\";\n        double strongest_strength = 0;\n        for (String extension\
    \ : extensions) {\n            double strength = 0;\n            for (char c :\
    \ extension.toCharArray()) {\n                if (Character.isUpperCase(c)) {\n\
    \                    strength++;\n                } else {\n                 \
    \   strength--;\n                }\n            }\n            if (strength >\
    \ strongest_strength) {\n                strongest_strength = strength;\n    \
    \            strongest_extension = extension;\n            }\n        }\n    \
    \    return class_name + \".\" + strongest_extension;\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        String strongest\
    \ = \"\";\n        double strength = 0;\n        for (String extension : extensions)\
    \ {\n            double cap = extension.chars().filter(Character::isUpperCase).count();\n\
    \            double sm = extension.chars().filter(Character::isLowerCase).count();\n\
    \            double new_strength = cap - sm;\n            if (new_strength > strength)\
    \ {\n                strength = new_strength;\n                strongest = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        int max = 0;\n        String strongest = \"\"\
    ;\n        for (String ext : extensions) {\n            int cap = 0;\n       \
    \     int sm = 0;\n            for (int i = 0; i < ext.length(); i++) {\n    \
    \            if (Character.isUpperCase(ext.charAt(i))) {\n                   \
    \ cap++;\n                } else {\n                    sm++;\n              \
    \  }\n            }\n            int strength = cap - sm;\n            if (strength\
    \ > max) {\n                max = strength;\n                strongest = ext;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        String strongest_extension\
    \ = \"\";\n        double strongest_strength = 0;\n        for (String extension\
    \ : extensions) {\n            double strength = 0;\n            for (int i =\
    \ 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > strongest_strength) {\n                strongest_strength = strength;\n  \
    \              strongest_extension = extension;\n            }\n        }\n  \
    \      return class_name + \".\" + strongest_extension;\n", "        // Your code\
    \ here\n        return \"\";\n", "        String strongest = \"\";\n        double\
    \ strength = 0;\n        for (String extension : extensions) {\n            double\
    \ cap = extension.chars().filter(Character::isUpperCase).count();\n          \
    \  double sm = extension.chars().filter(Character::isLowerCase).count();\n   \
    \         double new_strength = cap - sm;\n            if (new_strength > strength)\
    \ {\n                strength = new_strength;\n                strongest = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest;\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        String strongest = \"\";\n        double strength = 0;\n        for (String\
    \ ext : extensions) {\n            double ext_strength = 0;\n            for (int\
    \ i = 0; i < ext.length(); i++) {\n                if (Character.isUpperCase(ext.charAt(i)))\
    \ {\n                    ext_strength++;\n                } else {\n         \
    \           ext_strength--;\n                }\n            }\n            if\
    \ (ext_strength > strength) {\n                strength = ext_strength;\n    \
    \            strongest = ext;\n            }\n        }\n        return class_name\
    \ + \".\" + strongest;\n", "        // your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        String strongest_extension\
    \ = \"\";\n        double strongest_strength = 0;\n        for (String extension\
    \ : extensions) {\n            int cap = 0;\n            int sm = 0;\n       \
    \     for (int i = 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    cap++;\n                } else {\n                  \
    \  sm++;\n                }\n            }\n            double strength = (double)\
    \ cap - sm;\n            if (strength > strongest_strength) {\n              \
    \  strongest_strength = strength;\n                strongest_extension = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest_extension;\n",
  "        // Your code here\n        return \"\";\n", "        double max_strength\
    \ = -1;\n        String strongest_extension = \"\";\n        for (String extension\
    \ : extensions) {\n            double strength = 0;\n            for (char c :\
    \ extension.toCharArray()) {\n                if (Character.isUpperCase(c)) {\n\
    \                    strength += 1;\n                } else {\n              \
    \      strength -= 1;\n                }\n            }\n            if (strength\
    \ > max_strength) {\n                max_strength = strength;\n              \
    \  strongest_extension = extension;\n            }\n        }\n        return\
    \ class_name + \".\" + strongest_extension;\n", "        // Your code here\n \
    \       return null;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code goes here\n        return \"\";\n", "        // Your code\
    \ here\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        double max_strength = Double.NEGATIVE_INFINITY;\n\
    \        String strongest_extension = \"\";\n        for (String extension : extensions)\
    \ {\n            double strength = 0;\n            for (char c : extension.toCharArray())\
    \ {\n                if (Character.isUpperCase(c)) {\n                    strength\
    \ += 1;\n                } else {\n                    strength -= 1;\n      \
    \          }\n            }\n            if (strength > max_strength) {\n    \
    \            max_strength = strength;\n                strongest_extension = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest_extension;\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        String strongest_extension = \"\";\n      \
    \  double strongest_strength = 0;\n        for (String extension : extensions)\
    \ {\n            int cap = 0;\n            int sm = 0;\n            for (char\
    \ c : extension.toCharArray()) {\n                if (Character.isUpperCase(c))\
    \ {\n                    cap++;\n                } else {\n                  \
    \  sm++;\n                }\n            }\n            double strength = cap\
    \ - sm;\n            if (strength > strongest_strength) {\n                strongest_strength\
    \ = strength;\n                strongest_extension = extension;\n            }\n\
    \        }\n        return class_name + \".\" + strongest_extension;\n", "   \
    \     String strongest_extension = \"\";\n        double strongest_strength =\
    \ 0;\n        for (String extension : extensions) {\n            double strength\
    \ = 0;\n            for (int i = 0; i < extension.length(); i++) {\n         \
    \       if (Character.isUpperCase(extension.charAt(i))) {\n                  \
    \  strength += 1;\n                } else {\n                    strength -= 1;\n\
    \                }\n            }\n            if (strength > strongest_strength)\
    \ {\n                strongest_strength = strength;\n                strongest_extension\
    \ = extension;\n            }\n        }\n        return class_name + \".\" +\
    \ strongest_extension;\n", "        String strongest_extension = \"\";\n     \
    \   double strongest_strength = 0;\n        for (String extension : extensions)\
    \ {\n            int cap = 0;\n            int sm = 0;\n            for (char\
    \ c : extension.toCharArray()) {\n                if (Character.isUpperCase(c))\
    \ {\n                    cap++;\n                } else {\n                  \
    \  sm++;\n                }\n            }\n            double strength = (double)\
    \ cap - sm;\n            if (strength > strongest_strength) {\n              \
    \  strongest_strength = strength;\n                strongest_extension = extension;\n\
    \            }\n        }\n        return class_name + \".\" + strongest_extension;\n",
  "        // Your code here\n        return \"\";\n", "        // Your code here\n\
    \        return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        int max_strength =\
    \ Integer.MIN_VALUE;\n        String strongest_extension = \"\";\n        for\
    \ (String extension : extensions) {\n            int strength = 0;\n         \
    \   for (int i = 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > max_strength) {\n                max_strength = strength;\n              \
    \  strongest_extension = extension;\n            }\n        }\n        return\
    \ class_name + \".\" + strongest_extension;\n", "        // Your code here\n \
    \       return \"\";\n", "        // Your code here\n        return \"\";\n",
  "        String strongest_extension = \"\";\n        double strength = 0;\n    \
    \    for (String extension : extensions) {\n            double current_strength\
    \ = 0;\n            for (int i = 0; i < extension.length(); i++) {\n         \
    \       if (Character.isUpperCase(extension.charAt(i))) {\n                  \
    \  current_strength++;\n                } else {\n                    current_strength--;\n\
    \                }\n            }\n            if (current_strength > strength)\
    \ {\n                strength = current_strength;\n                strongest_extension\
    \ = extension;\n            }\n        }\n        return class_name + \".\" +\
    \ strongest_extension;\n", "        // Your code here\n        return \"\";\n",
  "        // Your code here\n        return \"\";\n", "        // Your code goes\
    \ here.\n        return \"\";\n", "        // Your code here\n        return \"\
    \";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        String strongest_extension = \"\";\n        double strongest_strength\
    \ = 0;\n        for (String extension : extensions) {\n            double strength\
    \ = 0;\n            for (int i = 0; i < extension.length(); i++) {\n         \
    \       if (Character.isUpperCase(extension.charAt(i))) {\n                  \
    \  strength++;\n                } else {\n                    strength--;\n  \
    \              }\n            }\n            if (strength > strongest_strength)\
    \ {\n                strongest_strength = strength;\n                strongest_extension\
    \ = extension;\n            }\n        }\n        return class_name + \".\" +\
    \ strongest_extension;\n", "        // Write your code here\n        return \"\
    \";\n", "        // Your code here\n        return null;\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        String\
    \ strongest_extension = \"\";\n        double strongest_strength = 0;\n      \
    \  for (String extension : extensions) {\n            double strength = 0;\n \
    \           for (char c : extension.toCharArray()) {\n                if (Character.isUpperCase(c))\
    \ {\n                    strength += 1;\n                } else {\n          \
    \          strength -= 1;\n                }\n            }\n            if (strength\
    \ > strongest_strength) {\n                strongest_strength = strength;\n  \
    \              strongest_extension = extension;\n            }\n        }\n  \
    \      return class_name + \".\" + strongest_extension;\n", "        String strongest_extension\
    \ = \"\";\n        double strongest_strength = -1;\n        for (String extension\
    \ : extensions) {\n            double strength = 0;\n            for (int i =\
    \ 0; i < extension.length(); i++) {\n                if (Character.isUpperCase(extension.charAt(i)))\
    \ {\n                    strength++;\n                } else {\n             \
    \       strength--;\n                }\n            }\n            if (strength\
    \ > strongest_strength) {\n                strongest_strength = strength;\n  \
    \              strongest_extension = extension;\n            }\n        }\n  \
    \      return class_name + \".\" + strongest_extension;\n", "        double max\
    \ = 0;\n        String strongest = \"\";\n        for (String ext : extensions)\
    \ {\n            double strength = 0;\n            for (int i = 0; i < ext.length();\
    \ i++) {\n                if (Character.isUpperCase(ext.charAt(i))) {\n      \
    \              strength++;\n                } else {\n                    strength--;\n\
    \                }\n            }\n            if (strength > max) {\n       \
    \         max = strength;\n                strongest = ext;\n            }\n \
    \       }\n        return class_name + \".\" + strongest;\n", "        // Your\
    \ code here\n        return \"\";\n", "        // Your code here\n        return\
    \ \"\";\n", "        // Your code here\n        return \"\";\n", "        String\
    \ strongest = \"\";\n        double strength = 0;\n        for (String ext : extensions)\
    \ {\n            int cap = 0;\n            int sm = 0;\n            for (char\
    \ c : ext.toCharArray()) {\n                if (Character.isUpperCase(c)) cap++;\n\
    \                else sm++;\n            }\n            double s = cap - sm;\n\
    \            if (s > strength) {\n                strength = s;\n            \
    \    strongest = ext;\n            }\n        }\n        return class_name + \"\
    .\" + strongest;\n", "        // Your code here\n        return \"\";\n"]
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "    }\n\n"
